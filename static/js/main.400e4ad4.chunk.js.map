{"version":3,"sources":["Component/FLogin.js","Component/Reception/RegForm.js","Component/Header2.js","Component/Reception/guestForm.js","Component/Footer3.js","Component/Reception/RoomChart.js","Component/Reception/Extenddays.js","Component/Reception/RoomChange.js","Component/Restlogin.js","Component/Restaurant/RestaurantApp.js","Component/Restaurant/LaundryApp.js","Component/Login.js","Component/Restaurant/ComponentToPrintA.js","Component/Header3.js","Component/Restaurant/SalesReport.js","Component/Restaurant/RestReports.js","Component/Bar/BarApp.js","Component/Bar/GuestBarOrder.js","Component/Poollogin.js","Component/Bar/PoolBarSalesReport.js","Component/Bar/BarReports.js","Component/Billinglogin.js","Component/Reception/Billing/OtherSalesReport.js","Component/Bar/PoolBarReports.js","Component/Footer4.js","Component/Housekplogin.js","Component/HouseKeeping/housekeeping.js","Component/HouseKeeping/HousekeepingMenu.js","Component/Reception/Billing/OtherPosts.js","Component/Reception/Billing/Guestbill.js","Component/Reception/Billing/BillingMenu.js","Component/Reception/Reservation.js","Component/Reception/EditReservation.js","Component/Reception/ReceptionReports/RoomOccupancy.js","Component/Reception/ReceptionReports/HouseKeepingPrint.js","Component/Reception/ReceptionReports/RoomChangeReport.js","Component/Reception/ReceptionReports/PoliceReport.js","Component/Reception/ReceptionReports/CheckOutReport.js","Component/Reception/AddGroup.js","Component/Reception/ReceptionReports/CheckInReport.js","Component/Reception/Billing/RetireBar.js","Component/Bar/PoolBar.js","Component/Bar/MobilePoolBar.js","Component/ClubLogin.js","Component/Bar/Club.js","Component/Reception/Billing/CashCollection.js","Component/Reception/Billing/DailyRoomSales.js","Component/Reception/Billing/OwingGuests.js","Component/Reception/Billing/RestaurantReport.js","Component/Reception/Billing/PoolBarDailySales.js","Component/Bar/ClubSalesReport.js","Component/Reception/Billing/EndOfDay.js","Component/Reception/Billing/DiscountedRoomsReport.js","Component/Reception/Billing/GroupBill.js","Component/Reception/ReceptionMenu.js","Component/Reception/Billing/HallHire.js","Component/Reception/Billing/EditHallReservation.js","Component/Storelogin.js","Component/Reception/Billing/FandB.js","Component/Reception/Billing/FandBMenu.js","Component/Reception/Billing/FandBRestMenu.js","Component/Reception/Billing/FandBReport.js","Component/Reception/ReceptionFunctnAcc.js","Component/Reception/Billing/BarSalesReport.js","Component/Store/departments.js","Component/Store/productCategories.js","Component/Store/storeMenu.js","Component/Store/productVendors.js","Component/Store/stockPriceManager.js","Component/Store/stockUnitsManager.js","Component/Store/stockunitsmodal.js","Component/Store/productReg.js","Component/Store/stockIn.js","Component/Store/StoreReport.js","Component/Adlogin.js","Component/Store/Modules.js","Component/Store/stockOut.js","Component/Admin/NewDashboard.js","Component/OldDashboard.js","Component/Admin/RegFormSettings.js","Component/Admin/RoomSettings.js","Component/Admin/Users.js","Component/Admin/Settings.js","Component/Bar/ClubPortal.js","Component/Reception/Billing/ClubDailySales.js","Component/Reception/Billing/LaundryReport.js","Component/Reception/Billing/GymnasiumReport.js","Component/Reception/Billing/SmoothieReport.js","Component/Reception/Billing/MinimartReport.js","Component/Reception/Billing/BarbequeReport.js","Component/Reception/Billing/ShishaReport.js","Component/Reception/Billing/HallHireReport.js","Component/Reception/Billing/SwimmingReport.js","Component/Reception/Billing/GuestBalances.js","Component/Routing.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","_super","call","handleChange","event","setState","defineProperty","target","name","value","console","log","state","login","userInfo","userPassword","authPassword","selectUserName","shift","_this2","fetch","concat","method","then","resp","json","data","myTimer","setTimeout","length","window","location","reload","map","item","localStorage","setItem","_this3","react_default","a","createElement","Fragment","react_responsive_modal_esm","open","onClose","onCloseModallogin","center","className","type","autoComplete","require","placeholder","onChange","list","id","disabled","onClick","_this4","Component","retGuestUrl","getWorkDate","RegForm","handleChangePast","regformSetting","FoundGuest","status","group","discounType","discountAmount","title","fname","lname","middlename","dob","mob","phone","email","ID","passportNum","Gender","Nationality","Address","occupation","NokLname","NokFname","NokMname","NokRelationship","NokPhone","POV","vehicleReg","handleChangeP","_this$setState3","VATAmt","levyData","filter","levy","feesName","includes","reduce","total","parseFloat","feesRate","VAT","VATCal","dailyRate","useVAT","LevyAmt","TourismLevy","LEVCal","useTourismLevy","SChrgAmt","match","ServiceChrg","SVCCal","useServiceChrg","handleChangeS","_this$setState4","handleChangePh","_this$setState5","handleChange2","sessionStorage","roomRate","DscAmt","getItem","DRmRate","rmRate","PDscAmt","PDRmRate","PrmRate","parseInt","FDscAmt","FDRmRate","renderCompany","key","orgName","renderPastGuest","refID","renderCardMessages","newMessage","message","_id","deleteGuestCardInfo","Math","floor","random","roomNumbers","roomtypeName","comingFrom","goingTo","transactionDate","arrivalDate","departureDate","stay","stay2","calculatedstay","postBillStatus","roomStatus","groupDetails","valid1","valid2","valid3","valid4","valid5","loginDetails","Blogin","pastGuestData","existingGuest","BillStatus","Hotelname","Hoteladdress","Hotelphone","cardDate","cardMessages","cardModal","cardData","checkinhandleChange","bind","assertThisInitialized","checkouthandleChange","date","thisDate","endDate","moment","startDt","diff","datecomp","ceil","formatDate","calcstayLenght","react_datepicker_min_default","selected","minDate","Date","maxDate","addDays","dropdownMode","dateFormat","originalDate","formattedDate","format","_callee","rid","roomID","statusUpdate","globalrmchrg","arrvDate","depDater","tranDate","guestdetails","delFirst","regenerator_default","wrap","_context","prev","next","params","reID","description","searchKey","toISOString","sent","result","headers","Accept","Content-type","body","JSON","stringify","result2","result3","t0","stop","_callee2","rsvAmount","rsvID","rsvPost","result1","result1b","_context2","receiptNum","POSAmount","CashAmount","TransferAmount","CompDebit","abs","roomDebit","paymentMethod","department","user","handleSubmit","alert","removeItem","FLogin","print","src","style","width","height","alt","newGuest","readOnly","color","handleGueststatus","react_number_format_es","displayType","thousandSeparator","prefix","rendercheckinDate","rendercheckOutDate","row","react_router_dom","to","applyReservation","onCloseModalCard","_callee3","fomID","rumID","_this5","_context3","res","xyz","Number","HotelName","Phone","loginInfo","nameDetails","some","Header2","guestdata","guID","stID","nwID","withRouter","guestForm","sort","b","_this$setState2","renameBtn","groupDatax","FNID","roomStatusUpdate","updateFirstNite","checkindetails","FirstNite","RmStatus","rmID","ServiceCharge","history","push","Component_Header2","for","chkinID","chkgstID","checkindate","checkoutdate","Footer3","checkinData","vacantData","reservationData","Corporate","Individual","Staff","Complimentary","CheckOut","TrDate","displayevnts","Totdisplayevnts","searchDte","count","output","corpRate","indVi","sta","comp","out","rsvpout","rsvpTotalout","backgroundColor","borderBlockStyle","borderBlockColor","roomchartUrl","checkinguestUrl","RoomChart","renderRoomchart","roomchart","guestrecord","transactionDatex","trDate","Component_Footer3","marginLeft","marginBottom","split","textAlign","logout","response","axios","get","setInterval","Extenddays","newDepartureDate","calcstay","eid","extID","depDate","globalRmChrgUpdate2","extendstaydetails","resultd","ExID","NxID","getroomrates","getroomtypes","RoomChange","renderRooms","index","renderRoomTypes","renderRoomRates","handleChange4","drate3","drate4","drate5","drate6","per","handleChange3","displayroomtypes","displayroomrates","respo","respd","newroomNum","newroomtype","newdailyRate","displayrooms","reason","cid","ind","nwrn","roomChangeReason","globalRmChrgUpdate","oldStatusUpdate","roomchangedetails","resultc","result4","result5","result6","OldRoomNum","NewRoomNum","Reason","handleSubmit2","rcID","Restlogin","postRestBill","getRooms","getGuestID","getPaymentMethods","postToTable","getTable","getStoreData","getBarSalesQty","RestaurantApp","handleCost","totalSale","mealPrice","qty","cost","displayRoomNums","displayPaymentMethods","addqty","del","removeAll","amountPaid","DrinkStore","DrinkSalesQty","stockBal","Newmeal","Newprice","Newid","guestInhouseID","Newqty","edit","credit","editreceipt","compModal","report","printStop","docketFirst","printBTN","blockTable","IDfound","menu","meal","mealQuantity","mealId","menuID","menulist","tables","newTable","shiftcolor","DrinkstoreData","DrinkSalesQtyData","DrinkSalesQtyReportData","useReportName","useReportShift","useReportDate","totalSales","Stockbtn","NewtableNum","creditSales","TotalCredit","creditPaid","payNwMeth","TotalCreditPaid","pass","pword","pword2","onOpenModalreceipt","postQty","onClosePword","todayDate","username","findQty","useData","findUser","find","element","useDt","TotSal","productPrice","Quantity","onOpenModalreport","stockItem","totalStock","stock","productName","piecesOut","totalQty","ST","tableID2","orderItems","billCost","tableNum","NewtableID","_this6","e","_this7","prodName","prodPrice","Qty","salesQty","tranID","_this8","_this9","userCredit","allCredit","totals","creditAmount","allCreditPaid","_callee4","tableID","POSSales","CashSales","transferSales","complimentarySales","CreditSales","_result","result12","_this10","_context4","docketNum","docketDetails","_callee5","creditPay","_context5","_callee6","restaurantSales","result14","_this11","_context6","_this12","NewTable","getTableR","_this13","mealName","mealQt","_this14","selectedMeals","_this15","mealTypeID","onMouseOver","tranID2","handleStock","food","_this16","buttonClick","mealType","_this17","tranDt","add","Component_Restlogin","decreament","fontStyle","fontSize","increament","pushorder","renderOders","renderPayMeth","onOpenPword","onOpenCompModal","handleReport","addToTable","onOpenModaltoprint","renderTables","renderPos","renderMenu","fontWeight","fontFamily","renderOdersPrint","sendtoprinter2","AllowRefund","onCloseModalreceipt","sendtoprinter","onCloseCompModal","handleRoomSubmit","onCloseModalreport","renderSalesReport","onCloseModalCredit","postCredit","_callee7","_this18","_context7","LaundryApp","ComponentToPrintA","RestprintData","Component_Login","renderPrintData","Header3","lib_default","trigger","content","componentRef","Restaurant_ComponentToPrintA","ref","el","SalesReport","salesRecords","totalCost","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Component_Header3","renderSalesData","RestReports","hidden","putToTable","BarApp","handleCredit","Poollogin","PoolBarSalesReport","Component_Poollogin","BarReports","Billinglogin","getRoomSales","OtherSalesReport","handleChange10","renderRoomSales","defaultdate","RoomSales","RoomTotal","depPOS","depCash","depTransfer","depComp","TotalSales","startdate","endhandleChange","placeholderText","start","end","findAllBar","roomSales","allPOS","allCash","allTransfer","allComp","allRoom","deproom","TotalSalesPoints","Component_Billinglogin","renderDate","renderendDate","cleanup","findRoomReport","PoolBarReports","Footer4","Housekplogin","houseKeeping","renderHousekeepingchart","hkid","HousekeepUpdate","Component_Housekplogin","Component_Footer4","HousekeepingMenu","postOtherSalesUrl","dailysalesPost","getCityLedger","RoomUrl","depositUrl","getOrgUrl","getDeptsWitOutPC","postFunctionBill","postTempFunctionBill","OtherPosts","handleroomData","description2","description3","handleDepositData","displayDeposits","handleFunctionData","org","handleroomData2","displayAllRoomNums","handlePayMethData","description1","handleChange99","_this$setState7","rate","rmType","phoneCode","guestfname","guestlname","receiptnumberz","cityLedgerData","finddeptID","founddeptID","depositAmount","Amount","paymentMethod2","handleChange12","orgID","orgEmail","orgPhone","class","handleChange14","paymentMethod3","amountPaid3","roomNumbers3","cost3","functionDeposit","description12","paymentMethod4","displayAllHalls","othersedit","deptwdpc","deptwdpc2","deptwdpc3","deptwdpc4","deptwdpc5","deptwdpc6","deptwdpc7","depositedit","functionedit","Dcktedit","otherDepartments","CashPay","POSPay","TransferPay","CompPay","DeptsWdPC","handleLaundry","handleGymn","handleSmoothie","handleMiniMart","handleBbq","handleShisha","handleHallHires","handleSwimming","handleRoomDockets","handleRoomDeposit","handleFunctionDeposit","billingPOSSales","billingCashSales","billingTransferSales","billingComplSales","groupEmail","groupPhone","LaundryNow","LDSReport","POS","Cash","Room","Transfer","GymnSales","GymnReport","SmoothieSales","PizzaReport","postSalesSS","SwimmingSales","SwimmingReport","HallMatters","HallReport","shisha","ShishaReport","_callee8","Bbq","BbqReport","_context8","_callee9","MiniMartSales","MartReport","_context9","_callee10","billingDockets","_context10","_callee11","POSroomDeposit","CashroomDeposit","result2b","TransferroomDeposit","result3b","ComplroomDeposit","_result3b","_context11","_callee12","_result2","_result3b2","_context12","DeptName","price","hallName","receptDate","renderDepositTypes","renderAllRooms","onOpenDepModal","clearReceipt","renderAllDeptWPC","onOpendeptwoutpcModal","onOpenOthrsModal","onOpenDktModal","depositAmount9","sendtoprinterDkt","sendtoprinterDep","sendtoprinterOthrs","sendtoprinterDeptWP","sendtoprinterFunctn","_callee13","_context13","getBillrefIDsUrl","getRoomRateUrl","postGuestDeposit","TempRoomDepositUrl","Guestbill","todepTrnID","depTrnfAmount","accommodationInfo","TDate","renderDockets","renderDeposits","guestDetails","guestbilldetails","guestDeposits","roomCharging","dailyRateNow","calcAccommodatn","calDockets","calDeposits","TotalRmRate","Balance","CheckOutBtn","checkout","roomNum","roomType","datecalculation","Oths","firstName","lastName","editcityLedger","emailCode","cityLedgerAmount","cityLedgerDescription","cityLedgerID","cityLedgerDate","editdepositTrnfr","toRoom","fromRoom","depTrnDescription","fromdepTrnID","depTrnDate","allRooms","getAllPayMeth","balanceStatus","balanceRoomType","balanceFname","balanceLname","balanceRoomStatus","balanceRefID","chktAddress","chkGender","chkID","chkNationality","chkNokFname","chkNokLname","chkNokMname","chkNokPhone","chkNokRelationship","chkPOV","chkServiceCharge","chkTourismLevy","chkVAT","chkArrivalDate","chkCalculatedstay","chkComingFrom","chkDailyRate","chkdepartureDate","chkdiscounType","chkdiscountAmount","chkdob","chkemail","chkfname","chkgointTo","chkgroup","chklname","chkmiddlename","chkmob","chkoccupation","chkpassportNum","chkphone","chkpostBillStatus","chkrefID","chkroomNumbers","chkroomRate","chkroomStatus","chkroomtypeName","chkstatus","chkstay","chktitle","chktransactionDate","chk_id","checkOut","openCityLedger","onClosePword2","rfID","rmNumber","GuestDeta","dellast","ArrivalDate","Calculatedstay","ComingFrom","DailyRate","gointTo","delChkOutDb","updtRmStat","delChkInDb","delFirstNite","delgrRmChrg","delfrmRmRate","POSroomDepositGR","TransferroomDepositGR","_result3","ComplroomDepositGR","_result4","newBal2","t1","ToRoomPos","FromRoomPos","posdeposit","postransfer","fromPos","ToRoomCash","FromRoomCash","toRoomCash","fromRoomCash","toRoomCash2","fromRoomCash2","ToRoomTrns","FromRoomTrns","toRmTrns","fromRmTrns","toRmTrns2","fromRmTrns2","toRoomCompl","fromRoomCompl","rmTrnCompl1","rmTrnCompl2","rmTrnCompl3","rmTrnCompl4","cityLedgerPost","guestAccount2","result1bc","cityLedgerPost2","guestAccount","_result5","_result1b","_result1bc","CityLedgerCode","calcVAT","calcTourismLev","guestBalance","getrefID","offload","onOpenPword2","onOpenModaltransfer","onCloseModaledit","marginRight","AllowCityLedger","onCloseModaltransfer","loadRooms","handleDepositTransfer","handleCityLedger","closeCityLedger","guestID","allRoomRates","calRoomRate","fmtdepDate","arrDate","checkinDate","allDockets","allDeposits","deposits","obj","bal","DO","newBal","sign","getGlobalChrgesUrl","getFirstNight","BillingMenu","balanceData","guestBal","roomCharge","handleGlobalRoomCharge","GstID","arrivDt","dailyR","Time","Day","pass9","pword9","wdate","activeWorkDate","TodayOccupancy","onOpenwdate","onClosePword9","Spinner","animation","variant","dailyOccupancy","globalRmCharge","onClosewdate","activateWorkDate","delActiv","workdate","workDateGo","exportOccuppancy","OccuppancyDate","OccuppancyData","sendOccuppancy","onOpenPword9","styles","ExecuteWDate","AllowRefund9","localizer","dateFnsLocalizer","parse","startOfWeek","getDay","locales","GetReservation","OccupiedRoomUrl","Reservation","displayOccupiedRoomNums","events","allDay","room","memo","starthandleChange","handleResvSubmit","newtitle","resID","start3","end3","Tdate","defaultValue","renderVacantRooms","renderOccuppiedRooms","renderstartDate","rows","react_big_calendar_esm","startAccessor","endAccessor","margin","selectable","onSelectEvent","handleEventSelection","GetReservationID","getRSVPwrtDt","EditReservation","handleSearchChangeByName","displayeventsedit","filterItemsByName","handleSearchChangeByNumber","filterItemsByPhone","handleSearchChangeByDate","searchByDate","findDt","renderEvents","startfmt","endfmt","Tdatefmt","onOpenModaledit","deletRSV","onOpenModalcheckin","eventsedit","displaysearch","searchByName","searchByNumber","checkIn","start2","end2","endDt","filterItemsByDate","searchItems","searchName","filterN","toLowerCase","searchPhone","resUpdate","delcodersv","renderstartDateSearch","handleResvUpdate","RoomOccupancy","occuppancyData","occuppancySearch","percentOcc","NumOccuppied","NumAllRms","AllRms","percentCalculated","searchDate","arrDt","depDt","findOccuppancySearch","resetOccupancy","renderOccupancyData","occuppied","AllRooms","percOcc","toFixed","HouseKeepingPrint","RoomChangeReport","roomchangereportdata","CountRooms","counted","reportdate","renderRoomChReport","changed","PoliceReport","PoliceRepData","renderpoliceReport","checkoutData","rendercheckout","groupUrl","AddGroup","groupData","orgAddress","grpUpdated","onDoubleClick","deleteOrg","renderGroup","groupUpdate","CheckInReport","users","Fousers","Poolusers","Restusers","Billingusers","FandBusers","Clubusers","RetireBar","bar","staff","barstaff","receptionStaff","poolbarStaff","restaurantStaff","billingStaff","fandbstaff","clubStaff","checkPool","checkDeposit","PoolRemaininPosts","PoolTempSales","ClubRemaininPosts","ClubTempSales","name2","Baredit","PoolBaredit","Clubedit","Restedit","Laundryedit","handleSubmitForBar","handlePoolSubmit","handleClubSubmit","handleRestSubmit","handleLaundrySubmit","handleRoomDepositSubmit","handleOtherSalesSubmit","handleFunctionDepositSubmit","shiftNow","allCash2","dailySales","barSalesWRTUser","BarSales","dailyPost","warePost","delBarD","toConsumableArray","RestSales","LaundSales","PoolSales","ClubSales","poolData","result13","clubData","OtherSales","roomDeposits","result9","_this19","_this20","renderUsers","getSales","getPoolSales","getClubSales","getRestSales","getOtherSales","getDeposits","getLaundrySales","onOpenBarModal","onOpenPoolBarModal","onOpenClubModal","onOpenRestModal","onOpenLaundryModal","sendtoprinterPool","sendtoprinterClub","sendtoprinterRest","sendtoprinterLaundry","_this21","posttoRest","getwaitersCost","delwaitersCost","waitersSales","postsplits","getwaitersData","postRestCredit","PoolBar","handleChangeComp","edit2","waitersTD","RestMenu","printSelection","Restmenulist","waitersFName","waiterLName","LoadWaiters","findWaiter","WaitersData","waitersCost","waiterTableData","totalbicost","splitBal","waiters","selectWaiter","selectWaiterNew","showRestaurant","showPoolBar","showPoolPos","showRestaurantPos","showSalesTable","showWaitersTable","toggle","posting","Resteditreceipt","editsplitreceipt","Resteditreceipt2","RestRmcompModal","allSplitPmnts","Amounts","orderList","thisSales","Orderdata","waiterresult","waiterselection","waiter","handleGetWaitListClose","getWaitersC","getWaitersNow","waiterresult2","handleGetWaitListCloseNew","getWFN","getTWRTWNm","wtabdata","wscdata","getWT","splitPs","ComputeAmtPaid","_this22","Waiters","resultWaiter","_this23","WaiterID","FirstName","LastName","waitersID","getWaitersData","resultdelWaiter","resultdelWaiterSales","_this24","_this25","_this26","handleGetWaitListOpenNew","getTableP","_this27","getTablewrtW","_this28","_this29","_this30","pushToPrinter","printOut","printMeals","_this31","_this32","_this33","RestbuttonClick","_this34","waitersTableNum","showWaitrsTab","getWSC","_this35","_this36","_this37","onOpenSplit","onOpenRestModalreceipt2","onOpenCompRestRoomModal","handleGetWaitListOpen","handleWaitersOpen","handleRemoveWaiters","onOpenModaltoprint2","showAllTab2","renderWaitersTables","renderRestaurant","renderRestaurantPos","renderWaitersData","showRest","showPool","sendtoprinterNew","handleWaitersClose","handleWaiters","renderWaitersList","onOpenModalsplitreceipt","onOpenRestModalreceipt","onCloseSplit","onCloseModalsplitreceipt","handleSplitSubmit","onCloseRestModalreceipt","handleRestSubmit2","onCloseRestModalreceipt2","onCloseCompRestRoomModal","handleRoomSubmit2","_callee14","_this38","_context14","MobilePoolBar","ClubLogin","Club","Component_ClubLogin","getAllbar","getAllRest","getAllOther","getAllPool","getAllClub","getAllLaundry","getAllGym","getAllSmoothie","getAllSwimming","getAllMinimart","getAllBbq","getAllshisha","getAllHHire","getAllDeposits","CashCollection","renderRestSales","renderBarSales","renderOtherSales","renderPoolSales","renderClubSales","renderLaundrySales","renderGymSales","renderSmoothieSales","renderSwimmingSales","renderMartSales","renderBbqSales","rendershiSales","renderhhSales","RoomDeposits","depRoom","BarTotal","barPOS","barCash","barTransfer","barRoom","RestTotal","restPOS","restCash","restTransfer","restRoom","otherSales","othersTotal","otherPOS","otherCash","otherTransfer","otherRoom","POSCal","CashCal","TransferCal","RoomCal","poolPOS","poolCash","poolRoom","poolTransfer","poolSales","PoolTotal","clubPOS","clubCash","clubRoom","clubTransfer","clubSales","clubTotal","laundryPOS","laundryCash","laundryRoom","laundryTransfer","laundrySales","laundryTotal","gymPOS","gymCash","gymRoom","gymTransfer","gymSales","gymTotal","smoothiePOS","smoothieCash","smoothieRoom","smoothieTransfer","smoothieSales","smoothieTotal","swimmingPOS","swimmingCash","swimmingRoom","swimmingTransfer","swimmingSales","swimmingTotal","minimartPOS","minimartCash","minimartRoom","minimartTransfer","minimartSales","minimartTotal","BarbequePOS","BarbequeCash","BarbequeRoom","BarbequeTransfer","BarbequeSales","BarbequeTotal","shishaPOS","shishaCash","shishaRoom","shishaTransfer","shishaSales","shishaTotal","HallHirePOS","HallHireCash","HallHireRoom","HallHireTransfer","HallHireSales","HallHireTotal","lenght","restallPOS","restallCash","restallTransfer","restallRoom","restSales","barallPOS","barallCash","barallTransfer","barallRoom","barSales","othersallPOS","othersallCash","othersallTransfer","othersallRoom","poolallPOS","poolallCash","poolallTransfer","poolallRoom","AlPoolSales","cluballPOS","cluballCash","cluballTransfer","cluballRoom","AlClubSales","laundryllPOS","laundryallCash","laundryallTransfer","laundryallRoom","AlLaundrySales","gymllPOS","gymallCash","gymallTransfer","gymallRoom","AlGymSales","smoothiellPOS","smoothieallCash","smoothieallTransfer","smoothieallRoom","AlSmoothieSales","swimmingllPOS","swimmingallCash","swimmingallTransfer","swimmingallRoom","AlSwimmingSales","martllPOS","martallCash","martallTransfer","martallRoom","AlMartSales","bbqllPOS","bbqallCash","bbqallTransfer","bbqallRoom","AlBbqSales","shillPOS","shiallCash","shiallTransfer","shiallRoom","AlshiSales","hhllPOS","hhallCash","hhallTransfer","hhallRoom","AlhhSales","functionSales","functionTotal","functionRoom","functionTransfer","functionCash","functionPOS","cleanupfirst","findSalesReport","defaultDate","DailyRoomSales","OwingGuests","RestaurantReport","sales","prod","PoolBarDailySales","findAllPool","ClubSalesReport","EndOfDay","DiscountedRoomsReport","renderDiscountRooms","discountedRooms","discountType","TotalDiscount","TotalRoomRate","TotalDailyRate","searchDates","searchdate","AlldiscTotal","rates","getGroupDataUrl","GroupBill","departure","roomtype","dailyRte","TotalAccommodation","TotalRoomService","renderInhouseDockets","renderFandB","amount","POSDeposit","CashDeposit","TransferDeposit","TotalDeposits","groupBillData","functionFandB","totalfuncttionFandB","groupPayments","startDate","totalDockets","totalAcc","TotalStay","guestInHouse","TotalBillsInHouse","Inhousebilldetails","allstay","allFandB","allPOSDeposits","allCashDeposits","allTransferDeposits","renderAllOrgs","findGroup","ReceptionMenu","HallUrl","HallHire","Hall","renderHalls","Storelogin","getGroupUrl","FandB","Component_Storelogin","FandBMenu","menuCategoryUrl","AvailableMenu","FandBRestMenu","handleChange1","menuData","handleChange5","MenuCategoryData","category","restMenuID","comprestMenuID","max","handleChange6","catmealTypeID","catmealType","checkIDType","computeIDType","deleteNow","deleteCatNow","finddeptID22","founddeptID22","restMenuPost22","categoryID","restMenuPost","handleSubmitNew","renderMenuData","handleSubmitCat","renderCatData","FandBReport","docketSearchUrl","FandBsearchUrl","ReceptionFunctnAcc","arrival","searchUrl","BarSalesReport","deptUrl","departments","deptData","departmentName","departmentID","deptIDs","checkID","computeID","deptDatapost","deptUpdated","editDept","deletedept","deptUpdate","renderdeptData","productCategories","categoryCode","catgoryID","checkID2","computeID2","categoryName","storeMenu","productVendor","address","productDescription","dateRegistered","vendorID","vendorName","vendDatapost","venregDate","stockPriceManager","productUnit","productID","stockUnitsManager","unitsID","unit","stockunitsmodal","categoryUrl","unitsUrl","allproductsUrl","barMenuedit","allbarMenuUrl","someproductsUrl","getDrinkCategory","productReg","handleChange12b","productTypeID","productsData","findbarMenu","barMenuData","categoryTypes","productType","binNum","pieces","productTypeData","unitsData","reOrderLevel","entryDate","productSellingPrice","editunit","handleChange111","categoryData","productseditData","UseID","searchproductName","piecesData","quantity","barMenuID","drinkMenu","compbarMenuID","prodID","editID","editProd","renderCategoryTypes","renderProducts","renderProductUnits","renderProductType2","renderPieces","onCloseModaleditunit","Store_stockunitsmodal","uniqueProductsUrl","allCategoryUrl","getStoreTransUrl","getStockOut","getvendorUrl","editproductUrl","stockIn","totProdVal","productValue","grvNum","qtyIn","invoiceDate","invoiceNum","supplyDate","transDate","remark","orderNum","totalQtyIn","totalIn","totalQtyOut","qtyOut","totalOut","totalBalance","totalProductBalance","handleChange8","transactionsData","uniqueProductData","vendorData","opening","renderCategories","renderVendor","renderstockIndata","stockInCategoryUrl","stockOutCategoryUrl","StoreReport","renderStockInData","renderStockOutData","productCostPrice","productIssueValue","issueDept","AllOpeningstock","AllClosingstock","CategoryOpeningstock","CategoryClosingstock","CatStInQty","CatStOutQty","CategoryStockIn","CategoryStockOut","prodctName","productStockInData","productStockOutData","ProdStInQty","ProdStOutQty","productNamesData","deptName","deptStockInData","deptStockOutData","deptStOutQty","deptNamesData","show","prodshow","showcategory","showproductName","showdeptName","showdept","Catstart","Catend","findCatStockIn","findCatStockOut","CatStockInQty","CatStockOutQty","Prodstart","Prodend","findProdStockIn","findProdStockOut","ProdStockInQty","prodStockOut","findDeptStockOut","deptStockOut","showCat","showProd","showNone","renderCategory","findCategory","cleanupAll","renderProductNames","cleanupNow","findProduct","cleanupAllNow","renderdeptNames","cleanupDept","findDept","cleanupAllDept","AllStockinValue","AllStockOutValue","AdLogin","Modules","Adlogin","allRegProds","allRegProdNames","getProductDetails","getLatestPrice","getAllStockOut","getAllDepts","stockOut","handleChangeA","calcu","piecesCalculated","productDetailsData","grvCode","issueProduct","sivNum","stockOutData","issueDeptsData","POSStore","resultI","resultO","resultRe","resultP","_resultP","renderIssueDepts","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","occupancyChart","userName","getRestaurantSales","getBarNow","getPoolBarSales","getclubSales","getbarTable","getPoolbarTable","getClubTable","roomsdataUrl","NewDashboard","allOccupied","allVacant","allCorporate","allIndividual","allStaff","allComplimentary","allCheckout","OtherTotalSales","OtherRoom","OtherComplimentary","OtherTransfer","OtherCash","OtherPOS","ReceptionSales","RestTotalSales","RestRoom","RestComplimentary","RestTransfer","RestCash","RestPOS","BarTotalSales","BarRoom","BarComplimentary","BarTransfer","BarCash","BarPOS","PoolTotalSales","PoolRoom","PoolComplimentary","PoolTransfer","PoolCash","PoolPOS","ClubTotalSales","ClubRoom","ClubComplimentary","ClubTransfer","ClubCash","ClubPOS","Gtotal","labels","showRooms","showOthers","showClub","showInnerBar","resttables","bartables","poolbartables","Clubtables","getTableB","getTableC","RoomReset","datasets","Button","handleRoomShow","handleOthersShow","handleRestShow","handleInnerBarShow","handlePoolShow","handleClubShow","Card","dist","options","responsive","plugins","display","text","deleteRest","aria-hidden","deleteBar","deletePoolBar","deleteClub","Accordion","defaultActiveKey","Item","eventKey","Header","Body","renderRestTables","renderBarTables","renderPoolBarTables","resetRooms","Offcanvas","CloseButton","handleRoomClose","Subtitle","Text","handleOthersClose","handleRestClose","handleInnerBarClose","handlePoolClose","handleClubClose","dailySales2","dailySales3","dailySales4","dailySales5","dailySales6","AllSales","OldDashboard","RegFormSettings","feesData","feeAmount","feesID","getfeesID","toNum","feesDatapost","feesIDs","levyUpdated","feesUpdate","renderfeesData","deptUrlType","RoomSettings","typeID","roomsData","roomTypeID","floorNumber","NewroomDatapost","NewRoomStatusPost","roomtypeID","deletedeptType","deleteRoom","renderRoomTypesData","renderRoomsData","handleSubmitType","renderTypeData","getBarUsers","postBarUsers","delBarUsers","getFrontUsers","delFrontUsers","editFrontUsers","postPoolUsers","delPoolUsers","editPoolUsers","getClubUsers","postClubUsers","delClubUsers","editClubUsers","getAdminUsers","getHousekpUsers","delHousekpUsers","getRestUsers","postRestUsers","delRestUsers","editRestUsers","getBillingUsers","postBillingUsers","delBillingUsers","editBillingUsers","getFandBUsers","delFandBUsers","editFandBUsers","getstoreUsers","delStoreUsers","editStoreUsers","Users","BarUsersData","FrontOffcUsers","BillingUsers","PoolUsers","ClubUsers","AdminUsers","HouseKpUsers","RestUsers","FandBUsers","storeUsers","staffData","staffname","password","hide","StoreStaff","AdminStaff","HousekpStaff","UserUpdate","AdminEdit","ReceptnEdit","PoolEdit","ClubEdit","StoreEdit","BillingEdit","HousekpEdit","RestEdit","FandBEdit","_ReceptnEdit","_BillingEdit","_PoolEdit","_ClubEdit","_StoreEdit","_BillingEdit2","BarEdit","_HousekpEdit","_RestEdit","_FandBEdit","NewUserDatapost","NewUserDatapostAdb","NewUserDatapostAdbr","NewUserDatapostAdrst","NewUserDatapostAdclb","NewUserDatapostAdrcp","NewUserDatapostAdhsk","NewUserDatapostAdplb","NewUserDatapostAdstr","NewUserDatapostAdfnb","Adminresult","FrontOffcresult","poolresult","clubresult","storeresult","billingresult","barresult","hskresult","restresult","fandbresult","Bresult","_result6","_result7","_result8","deleteUser","editUser","handleUpdate","renderStaffData","Settings","ClubPortal","ClubDailySales","LaundryReport","GymnasiumReport","SmoothieReport","MinimartReport","BarbequeReport","ShishReport","HallHireReport","GuestBalances","renderGuestBalances","totalDeposit","totalPosting","totalRoomRate","Routing","react_router","exact","path","component","GuestBarOrder","housekeeping","GuestBill","CheckOutReport","EditHallReservation","ReactDOM","render","Component_Routing","document","getElementById"],"mappings":"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","file":"static/js/main.400e4ad4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport 'react-responsive-modal/styles.css';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport './Bar/BarReport.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst userLogin = \"https://zarvichdemo.localto.net/fofUserInfo?fofcode=\";\r\nconst userName = \"https://zarvichdemo.localto.net/fofUserInfo\";\r\n\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\">>> inside loginConstructor\", props)\r\n       \r\n        this.state = {\r\n            login: false,\r\n            userInfo:'',\r\n            userPassword:'',\r\n            authPassword:'',\r\n            selectUserName:'',\r\n            shift:''\r\n        };\r\n        \r\n    }\r\n\r\n    login(){\r\n        fetch(`${userLogin}${this.state.userPassword}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({userInfo:data})\r\n           \r\n            this.myTimer = setTimeout(() => {\r\n                if(this.state.userInfo.length>0){\r\n                    this.setState({\r\n                        login: false\r\n                        \r\n                    })\r\n                    window.location.reload();\r\n                    data.map((item) =>{\r\n                        localStorage.setItem('userInfo',item.name);\r\n                        localStorage.setItem('shift',this.state.shift);\r\n                        return 'ok'\r\n                    })\r\n                }\r\n            },1000)\r\n           \r\n        })\r\n\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseModallogin(){\r\n        this.setState({\r\n            login: true\r\n        })\r\n        \r\n    }\r\n\r\n    render() {\r\n        console.log (\">>> Inside logindetails\", this.state)\r\n        return (\r\n            <>\r\n                <Modal open={this.state.login} onClose={()=>this.onCloseModallogin()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Login First</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <input type=\"password\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"userPassword\" require placeholder=\"Enter password\" value={this.state.userPassword} onChange={this.handleChange}/>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"shift\" require placeholder=\"Select Shift\" value={this.state.shift} list=\"shift\"  onChange={this.handleChange}/>\r\n                                    <datalist id=\"shift\">\r\n                                        <option value = \"Morning Shift\"></option>\r\n                                        <option value = \"Night Shift\"></option>\r\n                                        <option value = \"All Day\"></option>\r\n                                    </datalist>\r\n                                    <button disabled = {this.state.userPassword==='' || this.state.shift===''} className=\"btn btn-warning formsize91\" onClick={()=>this.login()}>Login</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n        \r\n    componentDidMount() {\r\n        console.log(\">>> Inside loginDidMount\", this.state)\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                selectUserName:data,\r\n                login: true\r\n            \r\n            });\r\n            \r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Login;","import React, {Component} from 'react';\r\nimport './Reception.css';\r\nimport {Link} from 'react-router-dom';\r\nimport NumberFormat from 'react-number-format'; \r\nimport DatePicker from 'react-datepicker';\r\nimport addDays from 'date-fns/addDays';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport FLogin from '../FLogin';\r\nimport moment from 'moment';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Modal} from 'react-responsive-modal';\r\n\r\n\r\n\r\n\r\n\r\nconst regDel = \"https://zarvichdemo.localto.net/delBooking\";\r\nconst regformUrl = \"https://zarvichdemo.localto.net/bookNow\";\r\n// const postGroupGuest = \"/groupGuestDetail\";\r\nconst roomstatusUrl = \"https://zarvichdemo.localto.net/rmstatus2\";\r\nconst roomsUrl = \"https://zarvichdemo.localto.net/rooms?details=\";\r\nconst companyUrl= \"https://zarvichdemo.localto.net/org\";\r\nconst globalrmChrgUrl = \"https://zarvichdemo.localto.net/firstNight\";\r\nconst userName = \"https://zarvichdemo.localto.net/fofUserInfo\";\r\nconst levyUrl= \"https://zarvichdemo.localto.net/feesAndCharges\";\r\nconst retGuestUrl= \"https://zarvichdemo.localto.net/checkedout?findPastGuest=\";\r\n\r\nconst postGuestDeposit = \"https://zarvichdemo.localto.net/rmDeposit\";\r\nconst TempRoomDepositUrl = \"https://zarvichdemo.localto.net/PostTmpRmDep\";\r\nconst delReservation = \"https://zarvichdemo.localto.net/delReservation\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\nconst getWorkDate = \"https://zarvichdemo.localto.net/getActive\";\r\n// const encodeCard = \"/prntCard\";\r\n// // const getCards = \"/getCards\";\r\n// const getErrors = \"/getCardError \";\r\n// const deleteErrors = \"/delError \";\r\n// const deleteCard = \"/delCard \";\r\n\r\n\r\n\r\nclass RegForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\">>> inside RegCobtructor\", props)\r\n\r\n        this.state = {\r\n            _id:Math.floor(Math.random()*100000000),\r\n            status:'',\r\n            group:'',\r\n            roomNumbers:'',\r\n            roomRate:0,\r\n            roomtypeName:'',\r\n            dailyRate: 0,\r\n            discounType:'',\r\n            discountAmount:'',\r\n            comingFrom:'',\r\n            goingTo:'',\r\n            transactionDate:'',\r\n            arrivalDate:'',\r\n            departureDate:'',\r\n            stay:'',\r\n            stay2:'',\r\n            calculatedstay:'',\r\n            postBillStatus:'',\r\n            title:'',\r\n            fname:'',\r\n            lname:'',\r\n            middlename:'',\r\n            dob: '',\r\n            mob:'',\r\n            phone:'',\r\n            email:'',\r\n            ID:'',\r\n            passportNum:'',\r\n            Gender:'',\r\n            Nationality:'',\r\n            Address:'',\r\n            occupation:'',\r\n            NokLname:'',\r\n            NokFname:'',\r\n            NokMname:'',\r\n            NokRelationship:'',\r\n            NokPhone:'',\r\n            POV:'',\r\n            vehicleReg:'',\r\n            roomStatus:'green',\r\n            groupDetails:'',\r\n            valid1:'red',\r\n            valid2:'red',\r\n            valid3:'red',\r\n            valid4:'red',\r\n            valid5:'red',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n\r\n            VAT:0,\r\n            TourismLevy:0,\r\n            ServiceChrg:0,\r\n            useVAT:0,\r\n            useTourismLevy:0,\r\n            useServiceChrg:0,\r\n            levyData:'',\r\n            // toggle1:true || false,\r\n            // bubble:true || false,\r\n            // servi:true || false\r\n\r\n            pastGuestData:'',\r\n            existingGuest:'',\r\n            regformSetting:'hidden',\r\n            FoundGuest:'',\r\n            BillStatus:0,\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:'',\r\n            cardDate: '',\r\n            cardMessages: [],\r\n            cardModal: false,\r\n            cardData: ''\r\n\r\n            \r\n            \r\n\r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n        this.checkouthandleChange = this.checkouthandleChange.bind(this);\r\n        // this.handleChangeVAT = this.handleChangeVAT.bind(this);\r\n        // this.handleChangeLevy = this.handleChangeLevy.bind(this);\r\n        // this.handleChangeServiceChrg = this.handleChangeServiceChrg.bind(this);\r\n        \r\n\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n            \r\n           \r\n        })\r\n    }\r\n\r\n    handleChangePast = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value,\r\n            \r\n            \r\n        })\r\n\r\n        if(event.target.value===''){\r\n            this.setState({regformSetting:'hidden'})\r\n        }\r\n\r\n        else{\r\n            fetch(`${retGuestUrl}${event.target.value}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    FoundGuest:data\r\n                })\r\n                \r\n            })\r\n           \r\n            this.myTimer = setTimeout(() => {\r\n                if(this.state.FoundGuest.length>0){\r\n                    this.setState({regformSetting:'visibe'})\r\n                    var useGuest = this.state.FoundGuest;\r\n                    useGuest.map((item)=>{\r\n                        \r\n                        this.setState({\r\n                           status:item.status,\r\n                            group:item.group,\r\n                            discounType:item.discounType,\r\n                            discountAmount:item.discountAmount,\r\n                            title:item.title,\r\n                            fname:item.fname,\r\n                            lname:item.lname,\r\n                            middlename:item.middlename,\r\n                            dob:item.dob,\r\n                            mob:item.mob,\r\n                            phone:item.phone,\r\n                            email:item.email,\r\n                            ID:item.ID,\r\n                            passportNum:item.passportNum,\r\n                            Gender:item.Gender,\r\n                            Nationality:item.Nationality,\r\n                            Address:item.Address,\r\n                            occupation:item.occupation,\r\n                            NokLname:item.NokLname,\r\n                            NokFname:item.NokFname,\r\n                            NokMname:item.NokMname,\r\n                            NokRelationship:item.NokRelationship,\r\n                            NokPhone:item.NokPhone,\r\n                            POV:item.POV,\r\n                            vehicleReg:item.vehicleReg\r\n    \r\n                        })\r\n                        return 'ok'\r\n                            \r\n                        \r\n                    })\r\n                   \r\n                }\r\n            },1000)\r\n            \r\n                \r\n                \r\n        }\r\n    }\r\n\r\n    handleChangeP = (event) => {\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value,\r\n            valid2:'black'\r\n           \r\n        })\r\n        var vatData = this.state.levyData;\r\n        var VATAmt = vatData.filter(levy=>levy.feesName.includes('VAT')).reduce((total, item)=>{\r\n            return total + parseFloat(item.feesRate)\r\n        },0);\r\n        this.setState({VAT:VATAmt});\r\n\r\n        this.myTimer = setTimeout(() => {\r\n            var VT = this.state.VAT;\r\n            var DailyR = this.state.dailyRate;\r\n            var VATCal = (VT/100)*DailyR\r\n            this.setState({useVAT:VATCal})\r\n            \r\n        },1000)\r\n\r\n        var LData = this.state.levyData;\r\n        var LevyAmt = LData.filter(levy=>levy.feesName.includes('Tourism')).reduce((total, item)=>{\r\n        return total + parseFloat(item.feesRate)\r\n        },0);\r\n        this.setState({TourismLevy:LevyAmt});\r\n\r\n        this.myTimer = setTimeout(() => {\r\n            var LV = this.state.TourismLevy;\r\n            var DailyR = this.state.dailyRate;\r\n            var LEVCal = (LV/100)*DailyR\r\n            this.setState({useTourismLevy:LEVCal})\r\n        },1000)\r\n\r\n        var SData = this.state.levyData;\r\n        var SChrgAmt = SData.filter(levy=>levy.feesName.match('Service Charge')).reduce((total, item)=>{\r\n        return total + parseFloat(item.feesRate)\r\n        },0);\r\n        this.setState({ServiceChrg:SChrgAmt});\r\n\r\n        this.myTimer = setTimeout(() => {\r\n            var SC = this.state.ServiceChrg;\r\n            var DailyR = this.state.dailyRate;\r\n            var SVCCal = (SC/100)*DailyR\r\n            this.setState({useServiceChrg:SVCCal})\r\n        },1000)\r\n\r\n\r\n    }\r\n\r\n    handleChangeS = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value,\r\n            valid3:'black'\r\n           \r\n        })\r\n       \r\n    }\r\n    \r\n    handleChangePh = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value,\r\n            valid4:'black'\r\n           \r\n        })\r\n    }\r\n   \r\n    handleChange2 = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n\r\n        })\r\n        \r\n        if (this.state.discounType ==='Amount'){\r\n            sessionStorage.setItem('pdc', event.target.value)\r\n            sessionStorage.setItem('rmR', this.state.roomRate)\r\n\r\n            let DscAmt = parseFloat(sessionStorage.getItem('pdc'))\r\n            let DRmRate = 0;\r\n            let rmRate = parseFloat(sessionStorage.getItem('rmR'))\r\n            DRmRate = parseFloat(DRmRate + rmRate - DscAmt)\r\n            this.setState({dailyRate:DRmRate})\r\n        }\r\n\r\n        if (this.state.discounType ==='Percentage'){\r\n            sessionStorage.setItem('pdc', event.target.value)\r\n            sessionStorage.setItem('rmR', this.state.roomRate)\r\n           \r\n            let PDscAmt = parseFloat(sessionStorage.getItem('pdc'))\r\n            let PDRmRate = 0;\r\n            let PrmRate = parseInt(sessionStorage.getItem('rmR'))\r\n            PDRmRate = parseInt(PDRmRate + PrmRate - (PDscAmt/100*PrmRate))\r\n            this.setState({dailyRate:PDRmRate})\r\n        }\r\n\r\n        if (this.state.discounType ==='FlatRate'){\r\n            sessionStorage.setItem('pdc', event.target.value)\r\n            \r\n            let FDscAmt = parseFloat(sessionStorage.getItem('pdc'))\r\n            let FDRmRate = 0;\r\n            FDRmRate = parseFloat(FDRmRate + FDscAmt)\r\n            this.setState({dailyRate:FDRmRate})\r\n        }\r\n        \r\n    }\r\n\r\n    // handleChangeVAT(){\r\n    //     this.setState({\r\n    //         toggle1:!this.state.toggle1\r\n    //     })\r\n    //     if(this.state.toggle1===true){\r\n    //         var vatData = this.state.levyData;\r\n    //         var VATAmt = vatData.filter(levy=>levy.feesName.includes('VAT')).reduce((total, item)=>{\r\n    //             return total + parseFloat(item.feesRate)\r\n    //         },0);\r\n    //         this.setState({VAT:VATAmt});\r\n    \r\n    //         this.myTimer = setTimeout(() => {\r\n    //             var VT = this.state.VAT;\r\n    //             var DailyR = this.state.dailyRate;\r\n    //             var VATCal = (VT/100)*DailyR\r\n    //             this.setState({useVAT:VATCal})\r\n                \r\n    //         },1000)\r\n    //     }\r\n    //     else if(this.state.toggle1===false){\r\n    //         this.setState({useVAT:0})\r\n    //     }\r\n       \r\n        \r\n        \r\n    // }\r\n    \r\n\r\n    // handleChangeLevy(){\r\n    //     this.setState({\r\n    //         bubble:!this.state.bubble\r\n    //     })\r\n    //     if(this.state.bubble===true){\r\n    //         var LData = this.state.levyData;\r\n    //         var LevyAmt = LData.filter(levy=>levy.feesName.includes('Tourism')).reduce((total, item)=>{\r\n    //         return total + parseFloat(item.feesRate)\r\n    //         },0);\r\n    //         this.setState({TourismLevy:LevyAmt});\r\n\r\n    //         this.myTimer = setTimeout(() => {\r\n    //             var LV = this.state.TourismLevy;\r\n    //             var DailyR = this.state.dailyRate;\r\n    //             var LEVCal = (LV/100)*DailyR\r\n    //             this.setState({useTourismLevy:LEVCal})\r\n    //         },1000)\r\n    //     }\r\n    //     else if(this.state.bubble===false){\r\n    //         this.setState({useTourismLevy:0})\r\n    //     }\r\n        \r\n        \r\n    // }\r\n\r\n    // handleChangeServiceChrg(){\r\n    //     this.setState({\r\n    //         servi:!this.state.servi\r\n    //     })\r\n    //     if(this.state.servi===true){\r\n    //         var SData = this.state.levyData;\r\n    //         var SChrgAmt = SData.filter(levy=>levy.feesName.match('Service Charge')).reduce((total, item)=>{\r\n    //         return total + parseFloat(item.feesRate)\r\n    //         },0);\r\n    //         this.setState({ServiceChrg:SChrgAmt});\r\n\r\n    //         this.myTimer = setTimeout(() => {\r\n    //             var SC = this.state.ServiceChrg;\r\n    //             var DailyR = this.state.dailyRate;\r\n    //             var SVCCal = (SC/100)*DailyR\r\n    //             this.setState({useServiceChrg:SVCCal})\r\n    //         },1000)\r\n    //     }\r\n    //     else if(this.state.servi===false){\r\n    //         this.setState({useServiceChrg:0})\r\n    //     }\r\n        \r\n        \r\n    // }\r\n\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            arrivalDate: date\r\n        });\r\n    }\r\n\r\n    checkouthandleChange(date) {\r\n        this.setState({\r\n            departureDate: date,\r\n            valid5:'black'\r\n            \r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n            var thisDate = this.state.departureDate;\r\n            var endDate = moment(thisDate);\r\n            var startDt = moment(this.state.arrivalDate);\r\n            var diff =endDate.diff(startDt);\r\n            var datecomp = Math.ceil(diff/(1000*3600*24));\r\n            this.setState({stay:datecomp})\r\n            sessionStorage.setItem('stayLenght', datecomp)\r\n            this.formatDate();\r\n\r\n            \r\n\r\n        },1000)\r\n        this.myTimer = setTimeout(() => {\r\n            var stayL = parseInt(this.state.stay);\r\n            var dailyRt = parseInt(this.state.dailyRate);\r\n            var calcstay = 0;\r\n            var calcstayLenght = calcstay + (stayL*dailyRt)\r\n\r\n            this.setState({calculatedstay:calcstayLenght});\r\n        },1000)\r\n    }\r\n       \r\n    rendercheckinDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.arrivalDate}\r\n                    onChange={this.checkinhandleChange}\r\n                    minDate={new Date()}\r\n                    maxDate={addDays(new Date(),31)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    \r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    formatDate(){\r\n        const originalDate = `${this.state.departureDate}`;\r\n        const formattedDate = moment(originalDate).format('YYMMDD');\r\n        this.setState({cardDate: formattedDate})\r\n    }\r\n\r\n    newGuest(){\r\n        this.setState({\r\n            regformSetting:'visibe'\r\n        })\r\n    }\r\n    \r\n    rendercheckOutDate() {\r\n        \r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.departureDate}\r\n                    onChange={this.checkouthandleChange}\r\n                    minDate={addDays(this.state.arrivalDate,1)}\r\n                    maxDate={addDays(new Date(),31)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                />\r\n            </div>\r\n            \r\n        )\r\n        \r\n    }\r\n\r\n       \r\n    handleGueststatus (event) {\r\n        \r\n        this.setState({status:event.target.value, valid1:'black'},\r\n            () => {\r\n            if (this.state.status==='Individual') {\r\n                this.setState({roomStatus:'blueviolet'})\r\n                this.setState({groupDetails:''})\r\n                this.setState({group:''})\r\n            }\r\n            else if(this.state.status==='Corporate') {\r\n                this.setState({roomStatus:'blue'});\r\n                fetch(`${companyUrl}`, {method:'GET'})\r\n                .then((resp) => resp.json())\r\n                .then((data) => {\r\n                this.setState({groupDetails:data})\r\n                })\r\n                    \r\n            }\r\n            else if(this.state.status==='Staff') {\r\n                this.setState({roomStatus:'deeppink'})\r\n                this.setState({groupDetails:''})\r\n                this.setState({group:''})\r\n            }\r\n\r\n            else if(this.state.status==='Complimentary') {\r\n                this.setState({roomStatus:'orange'})\r\n                this.setState({groupDetails:''})\r\n                this.setState({group:''})\r\n            }\r\n                 \r\n            else if(this.state.roomStatus==='green') {\r\n                this.setState({status:''})\r\n                this.setState({groupDetails:''})\r\n                this.setState({group:''})\r\n            }\r\n\r\n            else {\r\n                this.setState({roomStatus:'green'})\r\n                this.setState({groupDetails:''})\r\n                this.setState({group:''})\r\n            }\r\n\r\n        })\r\n        \r\n    }\r\n    renderCompany = (data) => {\r\n        if(data){\r\n            return data.map((item) => {\r\n                return(\r\n                    <option key={item.orgName} value={item.orgName}>\r\n                        {item.orgName}\r\n                    </option>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderPastGuest = (data) => {\r\n        if(data){\r\n            return data.map((item) => {\r\n                return(\r\n                    <option key={item.refID} value={item.refID}>\r\n                        {item.lname}  {item.fname}  {item.phone}\r\n                    </option>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    onCloseModalCard(){\r\n        this.setState({cardModal: false});\r\n    }\r\n\r\n    renderCardMessages = (data) => {\r\n        if(data){\r\n            return data.map((item) => {\r\n                let newMessage = \"\";\r\n                let finalMessage1 = \"Wait until you here the encoder beep sound before you remove card.\"\r\n                let finalMessage2 = \"Click close after you remove card\"\r\n                let finalMessage3 = \"Card Issue was successfull\"\r\n                if(item.message !== \"\") {\r\n                    if(item.message === \"No valid card is read in the sensor area of the card issuer: 550100\") {\r\n                        newMessage = \"Place the card well on the encoder or turn the card\";\r\n                    } else if(item.message === \"There is no card on the encoder.\") {\r\n                        newMessage = \"Place a room card on the encoder\";\r\n                    }\r\n\r\n                    return(\r\n                        <div key={item._id}>\r\n                                <h3> {item.message} </h3>\r\n                                <h5> {newMessage} </h5>\r\n                                <h6> {finalMessage1} </h6> \r\n                                <h6> {finalMessage2} </h6><br/>\r\n                                <button className=\"btn btn-success\" onClick={() => {this.deleteGuestCardInfo()}}>\r\n                                    Close\r\n                                </button>\r\n                        </div>\r\n                    )\r\n                } else {\r\n                    return(\r\n                        <div key={item._id}>\r\n                                <h3> {finalMessage3} </h3>\r\n                                <h5> {finalMessage2} </h5>\r\n                                <br/>\r\n                                <button className=\"btn btn-success\" onClick={() => {this.deleteGuestCardInfo()}}>\r\n                                    Close\r\n                                </button>\r\n                        </div>\r\n                    )\r\n                }\r\n                \r\n                \r\n                \r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n    // deleteGuestCardInfo() {\r\n    //     fetch(`${deleteCard}`, {\r\n    //         method: 'DELETE'\r\n    //     });\r\n        \r\n    // }\r\n\r\n\r\n    // handleCardOperations() {\r\n        \r\n    //     fetch(`${getErrors}`, { method: 'GET' })\r\n    //     .then((resp) => resp.json())\r\n    //     .then((data) => {\r\n    //         this.setState ({\r\n    //             cardData: data\r\n    //         })\r\n    //         setTimeout(() => {\r\n    //             const newCard = this.state.cardData;\r\n    //             const hasEmptyMessage = newCard.some((item) => item.message === \"\");\r\n\r\n    //             if (hasEmptyMessage) {\r\n    //                 // Delete card errors if any message is empty\r\n    //                 fetch(`${deleteErrors}`, {\r\n    //                     method: 'DELETE'\r\n    //                 });\r\n                   \r\n    //                 // Perform additional actions (e.g., deleteGuestCardInfo, show alert, redirect)\r\n    //                 this.deleteGuestCardInfo();\r\n    //                 alert(\"Check in Completed click Ok\");\r\n    //                 fetch(`${deleteErrors}`, {\r\n    //                     method: 'DELETE'\r\n    //                 });\r\n    //                 this.props.history.push('/roomchart');\r\n    //             } else {\r\n    //                 alert(\"Turn the card on the encoder or place a card on the encoder and click Ok\");\r\n    //                 this.handleCardOperations();\r\n    //             }\r\n    //         }, 1000);\r\n    //         // Check if any item has an empty message\r\n            \r\n    //     })\r\n        \r\n        \r\n    // }\r\n    \r\n    \r\n    async handleSubmit() {\r\n    \r\n        try {\r\n            var rid = this.props.match.params.reID;\r\n            var roomID = parseInt(rid);\r\n            \r\n            var statusUpdate = {\r\n\r\n                status:`${this.state.status}`,\r\n                roomtypeName:`${this.state.roomtypeName}`,\r\n                fname:`${this.state.fname}`,\r\n                lname:`${this.state.lname}`,\r\n                roomStatus:`${this.state.roomStatus}`,\r\n                refID:`${this.state._id}`,\r\n                BillStatus:`${this.state.BillStatus}`,\r\n\r\n                \r\n            }\r\n            \r\n            var globalrmchrg = {\r\n                refID:`${this.state._id}`,\r\n                fname:`${this.state.fname}`,\r\n                lname:`${this.state.lname}`,\r\n                group:`${this.state.group}`,\r\n                roomtypeName:`${this.state.roomtypeName}`,\r\n                arrivalDate:`${this.state.arrivalDate}`,\r\n                departureDate:`${this.state.departureDate}`,\r\n                roomNumbers:`${this.state.roomNumbers}`,\r\n                dailyRate: `${this.state.dailyRate}`,\r\n                tranDate:new Date(),\r\n                description: 'Daily Room Rate',\r\n                searchKey: \"GuestBill\"\r\n\r\n\r\n            }\r\n\r\n            // let cardPrint = {\r\n            //     day :`${this.state.stay}`,\r\n            //     Begindate : `${this.state.cardDate}`,\r\n            //     roomno : `${this.state.roomNumbers}`,\r\n            //     door_lock : true\r\n\r\n            // }\r\n\r\n            var arrvDate = (this.state.arrivalDate).toISOString();\r\n            var depDater = (this.state.departureDate).toISOString();\r\n            var tranDate = moment(this.state.transactionDate).format('MMM DD YYYY')\r\n           \r\n            var guestdetails = {\r\n\r\n            _id:`${this.state._id}`,\r\n            refID:`${this.state._id}`,\r\n            status:`${this.state.status}`,\r\n            group:`${this.state.group}`,\r\n            roomNumbers:`${this.state.roomNumbers}`,\r\n            roomRate:`${this.state.roomRate}`,\r\n            roomtypeName:`${this.state.roomtypeName}`,\r\n            dailyRate: `${this.state.dailyRate}`,\r\n            discounType:`${this.state.discounType}`,\r\n            discountAmount:`${this.state.discountAmount}`,\r\n            comingFrom:`${this.state.comingFrom}`,\r\n            goingTo:`${this.state.goingTo}`,\r\n            arrivalDate:arrvDate,\r\n            departureDate:depDater,\r\n            stay:`${this.state.stay}`,\r\n            calculatedstay:`${this.state.calculatedstay}`,\r\n            postBillStatus:`${this.state.postBillStatus}`,\r\n            title:`${this.state.title}`,\r\n            fname:`${this.state.fname}`,\r\n            lname:`${this.state.lname}`,\r\n            middlename:`${this.state.middlename}`,\r\n            dob: `${this.state.dob}`,\r\n            mob:`${this.state.mob}`,\r\n            phone:`${this.state.phone}`,\r\n            email:`${this.state.email}`,\r\n            ID:`${this.state.ID}`,\r\n            passportNum:`${this.state.passportNum}`,\r\n            Gender:`${this.state.Gender}`,\r\n            Nationality:`${this.state.Nationality}`,\r\n            Address:`${this.state.Address}`,\r\n            occupation:`${this.state.occupation}`,\r\n            NokLname:`${this.state.NokLname}`,\r\n            NokFname:`${this.state.NokFname}`,\r\n            NokMname:`${this.state.NokMname}`,\r\n            NokRelationship:`${this.state.NokRelationship}`,\r\n            NokPhone:`${this.state.NokPhone}`,\r\n            POV:`${this.state.POV}`,\r\n            vehicleReg:`${this.state.vehicleReg}`,\r\n            roomStatus:`${this.state.roomStatus}`,\r\n            transactionDate:tranDate,\r\n            \r\n           \r\n            }\r\n            \r\n            let delFirst = await fetch(`${regDel}/${this.state._id}`, {\r\n                method: 'delete',\r\n\r\n            });\r\n            console.log('delFirst>  ' + delFirst)\r\n            \r\n            this.myTimer = setTimeout(() => {\r\n                let result = fetch(regformUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                       guestdetails\r\n                    )\r\n                    \r\n                });\r\n                \r\n                console.log('result>  ' + result)\r\n\r\n                let result2 = fetch(`${roomstatusUrl}/${roomID}`, {\r\n                    method:'put',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                     \r\n                    },\r\n                    body: JSON.stringify(\r\n                        statusUpdate\r\n                    )\r\n            \r\n    \r\n                });\r\n    \r\n                console.log('result2> '+ result2)\r\n                let result3 = fetch(`${globalrmChrgUrl}` , {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(\r\n                        globalrmchrg\r\n                    )\r\n    \r\n                });\r\n                console.log('result3>  ' + result3)\r\n\r\n                console.log('result2> '+ result2)\r\n                // let cardUnlock = fetch(`${encodeCard}` , {\r\n                //     method: 'post',\r\n    \r\n                //     headers: {\r\n                //         'Accept': 'application/json',\r\n                //         'Content-type': 'application/json',\r\n                //     },\r\n                //     body: JSON.stringify(\r\n                //         cardPrint\r\n                //     )\r\n    \r\n                // });\r\n                // console.log('cardUnlock>  ' + cardUnlock)\r\n\r\n                // this.handleCardOperations();\r\n                \r\n                // alert(\"Check in Completed\")\r\n            \r\n                // this.props.history.push('/roomchart')\r\n\r\n                \r\n            },1000);\r\n            \r\n            \r\n\r\n            // var organisations=this.state.group;\r\n            // if(organisations!==''){\r\n            //     let resultb = await fetch(postGroupGuest, {\r\n            //         method: 'post',\r\n    \r\n            //         headers: {\r\n            //             'Accept': 'application/json',\r\n            //             'Content-type': 'application/json',\r\n            //         },\r\n    \r\n            //         body: JSON.stringify(\r\n            //            guestdetails\r\n            //         )\r\n                    \r\n            //     });\r\n            //     console.log('resultb>  ' + resultb)\r\n            // }\r\n            \r\n\r\n            \r\n        \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async applyReservation(){\r\n        try {\r\n            var rsvAmount = sessionStorage.getItem('getrsvAmount')\r\n            var rsvID = sessionStorage.getItem('getrsvCode')\r\n            var rsvPost = {\r\n                receiptNum:'BillRec'+Math.floor(Math.random()*10000),\r\n                _id:`${this.state._id}`,\r\n                refID:`${this.state._id}`,\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                POSAmount:0,\r\n                CashAmount:0,\r\n                TransferAmount:0,\r\n                CompDebit:Math.abs(parseInt(`${rsvAmount}`)),\r\n                roomDebit:0,\r\n                paymentMethod:'Complimentary',\r\n                roomNumbers:`${this.state.roomNumbers}`,\r\n                description:'Reservation Deposit',\r\n                department: \"Room Deposit\",\r\n                user: localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift')\r\n            \r\n            }\r\n            let result1 = await fetch(postGuestDeposit, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    rsvPost\r\n                \r\n                )\r\n                \r\n            });\r\n            console.log('result1>  ' + result1)\r\n            let result1b = await fetch(TempRoomDepositUrl, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    rsvPost\r\n                \r\n                )\r\n                \r\n            });\r\n            console.log('result1b>  ' + result1b)\r\n            fetch(`${delReservation}/${rsvID}`, {method:'delete'});\r\n\r\n            this.handleSubmit();\r\n           \r\n            alert(\"Reservation Deposit has been applied to \" +this.state.roomNumbers)\r\n            sessionStorage.removeItem('getrsvAmount')\r\n            sessionStorage.removeItem('getrsvCode')\r\n\r\n\r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n        \r\n    }\r\n    \r\n    render(){\r\n        console.log (\">>> Inside REgdetails\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <FLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        return(\r\n            <>\r\n                <div className=\"container\" key={this.state.roomNumbers}>\r\n                    <div className=\"formdesign11\">\r\n                        \r\n                        <button className=\"btn btn-warning movebtn2 printing\" onClick={ () => window.print()}>Print Form</button>\r\n                            \r\n                        \r\n                    <div>\r\n                    <div>\r\n                        <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2mmmm\" style={{width:\"150px\", height:\"150px\"}} alt=\"companylogo\"/>\r\n                    </div>\r\n                        <center>\r\n                            <h6>{this.state.Hotelname}</h6>\r\n                            <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                        </center>\r\n                        </div>\r\n                        <center><h4>Guests Entry Form</h4></center>\r\n                        <form><br/>\r\n                            <div className='row'>\r\n                                <div className='col-6'>\r\n                                    <h5 className=\"form-control mb-3 background11 searchColor formsize btn btn-warning\" onClick={()=>this.newGuest()}>Register New Guests</h5>\r\n                                </div>\r\n                                <div className='col-6'>\r\n                                    <h5>\r\n                                        <input type=\"text\" className=\"form-control mb-3 background11 searchColor btn-warning\" name=\"existingGuest\" require placeholder=\"Find Existing Guests\" value={this.state.existingGuest} list=\"findGuest\" onChange={this.handleChangePast}/>\r\n                                        <datalist id=\"findGuest\">\r\n                                            {this.renderPastGuest(this.state.pastGuestData)}\r\n                                        </datalist>\r\n                                    </h5>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={this.state.regformSetting}>\r\n                            \r\n                                <div className=\"row\">\r\n                                    \r\n                                    <div className=\"mb-3 col-4\">\r\n                                        <label className='form-label'>GuestID</label>\r\n                                        <input type=\"number\" className=\"form-control mb-3 formsize\" name=\"_id\" value={this.state._id} readOnly/>\r\n                                        \r\n                                        <label className='form-label' style={{color:this.state.valid1}}>Guest Status</label>\r\n                                        <select className=\"form-select formsize mb-3\" name=\"status\" onChange={this.handleGueststatus.bind(this)}>\r\n                                            <option selected value=''>Choose</option>\r\n                                            <option value=\"Individual\">Individual</option>\r\n                                            <option value=\"Corporate\">Group/Corporate</option>\r\n                                            <option value=\"Staff\">Staff</option>\r\n                                            <option value=\"Complimentary\">Complimentary</option>\r\n                                        </select>\r\n\r\n                                        <label className='form-label'>Organisations</label>\r\n                                        <select className=\"form-select formsize mb-3\" name=\"group\" onChange={this.handleChange}>\r\n                                            <option selected value=''>Select Company</option>\r\n                                            {this.renderCompany(this.state.groupDetails)}\r\n                                                                            \r\n                                        </select>\r\n\r\n                                    \r\n                                        <label className='form-label'>Room Number</label>\r\n                                        <input type=\"text\" className=\"form-control mb-3 formsize\" name=\"roomNumbers\" value={this.state.roomNumbers} readOnly/>\r\n                                        <label className='form-label'>Room Type</label>\r\n                                        <input type=\"text\" className=\"form-control mb-3 formsize\" name=\"roomtypeName\" value={this.state.roomtypeName} readOnly/>\r\n                                        <label className='form-label'>Room Rate</label>\r\n                                        <p className=\"form-control mb-3 formsize\"><NumberFormat value={this.state.roomRate} displayType={\"text\"} thousandSeparator={true} prefix={\"N\"}/>.00</p>\r\n                                    </div>\r\n                                    <div className=\"col-4\">\r\n                                        <label className='form-label'>Discount Type</label>\r\n                                        <select className=\"form-select formsize mb-3\" name=\"discounType\" onChange={this.handleChange2}>\r\n                                            <option selected value='None'>Select</option>\r\n                                            <option value=\"Amount\">Discount Amount</option>\r\n                                            <option value=\"Percentage\">Percentage Discount</option>\r\n                                            <option value=\"FlatRate\">Flat Rate</option>\r\n                                                                    \r\n                                        </select>\r\n\r\n                                        <label className='form-label'>{this.state.discounType}</label>\r\n                                        <input type=\"number\" className=\"form-control mb-3 formsize\" name=\"discountAmount\" value={this.state.discountAmount} onChange={this.handleChange2}/>\r\n                                        \r\n                                        <label className='form-label'>Daily Rate</label>\r\n                                        <p className=\"form-control mb-4 formsize\"> <NumberFormat value={this.state.dailyRate} displayType={\"text\"} thousandSeparator={true} prefix={\"N\"}/></p>\r\n                                        \r\n                                        {/* <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" checked value={this.state.toggle1}/>\r\n                                            <label class=\"form-check-label\" for=\"inlineCheckbox1\">VAT({this.state.VAT})%</label>\r\n                                        </div>\r\n                                        <div className=\"form-check form-check-inline mb-4\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" checked value={this.state.bubble}/>\r\n                                            <label class=\"form-check-label\" for=\"inlineCheckbox2\">Tourism Levy({this.state.TourismLevy})%</label>\r\n                                        </div> \r\n                                        <div className=\"form-check form-check-inline mb-4\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox3\" checked value={this.state.servi}/>\r\n                                            <label class=\"form-check-label\" for=\"inlineCheckbox3\">Service Charge({this.state.ServiceChrg})%</label>\r\n                                        </div> \r\n                                        \r\n                                        <p><label className='form-label'><b>Hotel's Income</b></label></p>\r\n                                    <p className=\"form-control mb-3 formsize\"> <b> <NumberFormat value={this.state.dailyRate - this.state.useVAT - this.state.useTourismLevy - this.state.useServiceChrg} displayType={\"text\"} thousandSeparator={true} prefix={\"N\"}/></b></p> */}\r\n\r\n                                    </div>\r\n                                    <div className=\"col-4\">\r\n                                        <label className='form-label'>Travelling From</label>\r\n                                        <input type=\"text\" className=\"form-control mb-3 formsize\" name=\"comingFrom\" value={this.state.comingFrom} onChange={this.handleChange}/>\r\n                                        <label className='form-label'>Next Destination</label>\r\n                                        <input type=\"text\" className=\"form-control mb-3 formsize\" name=\"goingTo\" value={this.state.goingTo} onChange={this.handleChange}/>\r\n                                        <label className='form-label'>Arrival Date</label>\r\n                                        <label className=\"formsize\">{this.rendercheckinDate(this.state.arrivalDate)}</label>\r\n                                        <label className='form-label' style={{color:this.state.valid5}}>Departure Date</label>\r\n                                        <label className=\"formsize\">{this.rendercheckOutDate(this.state.departureDate)}</label>\r\n                                        <label className='form-label' style={{color:this.state.valid2}}>Enable Dockets?</label>\r\n                                        <select className=\"form-select formsize mb-3\" name=\"postBillStatus\" onChange={this.handleChangeP}>\r\n                                            <option selected value=''>Select</option>\r\n                                            <option value='No'>No</option>\r\n                                            <option value='Yes'>Yes</option>\r\n                                        </select>\r\n                                    </div> \r\n                                    <hr/>\r\n                                    \r\n                                </div>\r\n                                <br/>\r\n                                <h5 className=\"mb-3 background11 formsize21\" >Personal Info</h5>\r\n                                <div className=\"row\">\r\n                                    <div className=\"mb-3 col-2\">\r\n                                        <label className='form-label'>Title</label>\r\n                                        <select className=\"form-select formsize21 mb-3\" name=\"title\" onChange={this.handleChange}>\r\n                                            <option selected value=''>Select</option>\r\n                                            <option value='Mr'>Mr</option>\r\n                                            <option value='Mrs'>Mrs</option>\r\n                                            <option value='Miss'>Miss</option>\r\n                                            <option value='Rev'>Rev.</option>\r\n                                            <option value='Mal'>Mal.</option>\r\n                                            <option value='Alh'>Alh.</option>\r\n                                            <option value='Chief'>Chief</option>\r\n                                            <option value='Engr'>Engr.</option>\r\n                                            <option value='Bar'>Bar.</option>\r\n                                            <option value='Dr.'>Dr.</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"mb-3 col-2\">\r\n                                        <label className='form-label' style={{color:this.state.valid3}}>Surname</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"lname\" value={this.state.lname} onChange={this.handleChangeS}/>\r\n                                    </div>\r\n                                    <div className=\"mb-3 col-2\">\r\n                                        <label className='form-label'>Firstname</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"fname\" value={this.state.fname} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                    <div className=\"mb-3 col-2\">\r\n                                        <label className='form-label'>Middle Name</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"middlename\" value={this.state.middlename} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                    <div className=\"mb-3 col-2\">\r\n                                        <label className='form-label'>Birth Day</label>\r\n                                        <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"dob\" value={this.state.dob} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                    <div className=\"mb-3 col-2\">\r\n                                        <label className='form-label'>Birth Month</label>\r\n                                        <select className=\"form-select formsize21 mb-3\" name=\"mob\" onChange={this.handleChange}>\r\n                                            <option selected value=''>Select Month</option>\r\n                                            <option value='Jan'>Jan</option>\r\n                                            <option value='Feb'>Feb</option>\r\n                                            <option value='Mar'>Mar</option>\r\n                                            <option value='Apr'>Apr</option>\r\n                                            <option value='May'>May</option>\r\n                                            <option value='Jun'>Jun</option>\r\n                                            <option value='Jul'>Jul</option>\r\n                                            <option value='Aug'>Aug</option>\r\n                                            <option value='Sept'>Sept</option>\r\n                                            <option value='Oct'>Oct</option>\r\n                                            <option value='Nov'>Nov</option>\r\n                                            <option value='Dec'>Dec</option>\r\n                                        </select>\r\n                                    </div>\r\n                                \r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"mb-3 col-2\">\r\n                                        <label className='form-label' style={{color:this.state.valid4}}>Phone</label>\r\n                                        <input type=\"number\" className=\"form-control mb-3 formsize21\" name=\"phone\" value={this.state.phone} onChange={this.handleChangePh}/>\r\n                                    </div>\r\n                                    <div className=\"mb-3 col-2\">\r\n                                        <label className='form-label'>Email</label>\r\n                                        <input type=\"email\" className=\"form-control mb-3 formsize21\" name=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                    <div className=\"mb-3 col-2\">\r\n                                        <label className='form-label'>ID</label>\r\n                                        <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"ID\" value={this.state.ID} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                    <div className=\"mb-3 col-2\">\r\n                                        <label className='form-label'>Passport Num</label>\r\n                                        <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"passportNum\" value={this.state.passportNum} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                    <div className=\"mb-3 col-2\">\r\n                                        <label className='form-label'>Gender</label>\r\n                                        <select className=\"form-select formsize21 mb-3\" name=\"Gender\" onChange={this.handleChange}>\r\n                                            <option selected value=''>Select</option>\r\n                                            <option value='Male'>Male</option>\r\n                                            <option value='Female'>Female</option>\r\n                                        </select>\r\n                                        \r\n                                    </div>\r\n                                    <div className=\"mb-3 col-2\">\r\n                                        <label className='form-label'>Nationality</label>\r\n                                        <select className=\"form-select formsize21 mb-3\" name=\"Nationality\" onChange={this.handleChange}>\r\n                                            <option selected value=''>Select</option>\r\n                                            <option value='Nigeria'>Nigeria</option>\r\n                                            <option value='Others'>Others</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"mb-3 col-2\">\r\n                                        <label className='form-label'>Address</label>\r\n                                        <textarea row=\"4\" className=\"form-control mb-3\" name=\"Address\" value={this.state.Address} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                    <div className=\"mb-3 col-2\">\r\n                                        <label className='form-label'>occupation</label>\r\n                                        <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"occupation\" value={this.state.occupation} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                    <div className=\"mb-3 col-2\">\r\n                                        <label className='form-label'>Purpose of Visits</label>\r\n                                        <textarea row=\"4\" className=\"form-control mb-3 formsize21\" name=\"POV\" value={this.state.POV} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                    <div className=\"mb-3 col-2\">\r\n                                        <label className='form-label'>Vehicle Reg</label>\r\n                                        <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"vehicleReg\" value={this.state.vehicleReg} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                </div>\r\n                                <hr/>\r\n                                <h5 className=\"mb-3 background11 formsize4\" >Next of Kin Details</h5>\r\n                                <div className=\"row\">\r\n                                    <div className=\"mb-3 col-2\">\r\n                                        <label className='form-label'>Surname</label>\r\n                                        <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"NokLname\" value={this.state.NokLname} onChange={this.handleChangeS}/>\r\n                                    </div>\r\n                                    <div className=\"mb-3 col-2\">\r\n                                        <label className='form-label'>Firstname</label>\r\n                                        <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"NokFname\" value={this.state.NokFname} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                    <div className=\"mb-3 col-2\">\r\n                                        <label className='form-label'>Middle Name</label>\r\n                                        <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"NokMname\" value={this.state.NokMname} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                    <div className=\"mb-3 col-2\">\r\n                                        <label className='form-label'>Relationship</label>\r\n                                        <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"NokRelationship\" value={this.state.NokRelationship} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                    <div className=\"mb-3 col-2\">\r\n                                        <label className='form-label'>Phone</label>\r\n                                        <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"NokPhone\" value={this.state.NokPhone} onChange={this.handleChange}/>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        <div>\r\n                            <center>\r\n                                <span>\r\n                                    <button disabled={this.state.status===''||this.state.lname===''||this.state.phone===''||this.state.postBillStatus===''||this.state.departureDate===''||sessionStorage.getItem('getrsvAmount')!==null} className=\"btn btn-primary printing\" onClick={()=>this.handleSubmit()}>Check In</button>\r\n                                    <Link to=\"/roomchart\">\r\n                                        <button className=\"btn btn-danger space printing\" onClick={()=>{sessionStorage.removeItem('getrsvAmount')}}>Cancel</button>\r\n                                    </Link>\r\n                                    <button disabled={sessionStorage.getItem('getrsvAmount')===''||this.state.status===''||this.state.lname===''||this.state.phone===''||this.state.postBillStatus===''||this.state.departureDate===''||sessionStorage.getItem('getrsvAmount')===null}className=\"btn btn-warning movebtn31 printing\" onClick={ () => this.applyReservation()}>Check In Reservation</button>\r\n                                </span>\r\n                            </center>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Modal open={this.state.cardModal} onClose={()=>this.onCloseModalCard()} center>\r\n                    \r\n                    <div className=\"editModal\">\r\n                        \r\n                        <center>\r\n                            \r\n                        {this.renderCardMessages(this.cardMessages)};\r\n                            \r\n                        </center>\r\n                        \r\n                    </div>\r\n                    \r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    async componentDidMount(){\r\n        console.log(\">>> Inside RegDidMount\", this.state)\r\n        \r\n        var fomID = this.props.match.params.reID;\r\n        var rumID = parseInt(fomID)\r\n       fetch(`${roomsUrl}${rumID}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item) =>{\r\n                let xyz=Number(item.roomRate)\r\n                this.setState({roomNumbers:item.roomNumbers})\r\n                this.setState({roomRate:xyz})\r\n                this.setState({roomtypeName:item.roomtypeName})\r\n                this.setState({_id:Math.floor(Math.random()*100000000)})\r\n                this.setState({dailyRate:xyz})\r\n                                \r\n                return 'ok'\r\n\r\n            })\r\n        })\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        await fetch(`${getWorkDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({transactionDate:item.date})\r\n                return 'ok'\r\n            })\r\n            \r\n           \r\n        })\r\n\r\n        await fetch(`${getWorkDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({arrivalDate:new Date(item.date)})\r\n                return 'ok'\r\n            })\r\n            \r\n           \r\n        })\r\n\r\n                \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${retGuestUrl}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                pastGuestData:data\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${levyUrl}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({levyData:data})\r\n               \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n        \r\n        \r\n    }\r\n\r\n}\r\nexport default RegForm;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Header.css';\r\nimport {withRouter} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst actionUrl = \"https://zarvichdemo.localto.net/checkin?guest=\"\r\n\r\nclass Header2 extends Component {\r\n    constructor(props) {\r\n        super()\r\n\r\n        this.state={\r\n            guestdata:''\r\n        }\r\n    }\r\n    \r\n\r\n    render(){\r\n        return (\r\n            <div className=\"black\">\r\n                \r\n                <span>\r\n                    <Link to={`/stay/${sessionStorage.getItem('rmNum')}`}>\r\n                        <button className=\"btn btn-primary mt-3 mb-3 buttncontrol1 printing\">Extend Stay</button>\r\n                    </Link>\r\n                    <Link to={`/change/${sessionStorage.getItem('rmNum')}`}>\r\n                        <button className=\"btn btn-primary mt-3 mb-3 buttncontrol2 printing\">Room Change</button>\r\n                    </Link>\r\n                    <button className=\"btn btn-warning movebtn printing\" onClick={ () => window.print() }>Print Form</button>\r\n                    <Link to=\"/roomchart\">\r\n                        <button className=\"btn btn-danger buttncontrol3 printing\">Close</button>\r\n                    </Link>\r\n                </span>\r\n                \r\n            \r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        console.log(\">>> Inside GsDidMount\", this.state)\r\n\r\n        var guID = this.props.match.params.stID;\r\n        var nwID = parseInt(guID)\r\n       fetch(`${actionUrl}${nwID}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                guestdata:data\r\n            })\r\n        })\r\n    }\r\n\r\n    \r\n}\r\nexport default withRouter (Header2);","import React, {Component} from 'react';\r\nimport './Reception.css';\r\nimport {Link} from 'react-router-dom';\r\nimport NumberFormat from 'react-number-format'; \r\nimport moment from 'moment';\r\nimport Header2 from '../Header2';\r\nimport FLogin from '../FLogin';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nconst guestformUrl = \"https://zarvichdemo.localto.net/checkin?guest=\";\r\nconst guestUpdateUrl = \"https://zarvichdemo.localto.net/guestupdate\";\r\nconst userName = \"https://zarvichdemo.localto.net/fofUserInfo\";\r\nconst companyUrl= \"https://zarvichdemo.localto.net/org\";\r\nconst updateRoomStatus = \"https://zarvichdemo.localto.net/rmstatus2\";\r\nconst updateFirstNit = \"https://zarvichdemo.localto.net/updateFirstNite\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\n\r\nclass guestForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\">>> inside GstContructor\", props)\r\n\r\n        this.state = {\r\n            _id:'',\r\n            status:'',\r\n            group:'',\r\n            roomNumbers:'',\r\n            roomRate:'',\r\n            roomtypeName:'',\r\n            dailyRate:'',\r\n            discounType:'',\r\n            discountAmount:'',\r\n            comingFrom:'',\r\n            goingTo:'',\r\n            arrivalDate:'',\r\n            departureDate:'',\r\n            stay:'',\r\n            postBillStatus:'',\r\n            title:'',\r\n            fname:'',\r\n            lname:'',\r\n            middlename:'',\r\n            dob:'',\r\n            mob:'',\r\n            phone:'',\r\n            email:'',\r\n            ID:'',\r\n            passportNum:'',\r\n            Gender:'',\r\n            Nationality:'',\r\n            Address:'',\r\n            occupation:'',\r\n            VAT:0,\r\n            TourismLevy:0,\r\n            ServiceChrg:0,\r\n            NokLname:'',\r\n            NokFname:'',\r\n            NokMname:'',\r\n            NokRelationship:'',\r\n            NokPhone:'',\r\n            POV:'',\r\n            vehicleReg:'',\r\n            roomStatus:'',\r\n            transactionDate:'',\r\n            calculatedstay:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            groupDatax:'',\r\n            renameBtn:'Add to Group',\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n\r\n            \r\n            \r\n        }\r\n\r\n    }\r\n\r\n    renderCompany = (data) => {\r\n        if(data){\r\n            data.sort((a, b) => a.orgName - b.orgName);\r\n            return data.map((item) => {\r\n                return(\r\n                    <option key={item.orgName} value={item.orgName}>\r\n                        {item.orgName}\r\n                        \r\n                    </option>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n   \r\n   \r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n\r\n        })\r\n    }\r\n\r\n    handleChange2 = (event) => {\r\n        if(this.state.renameBtn==='Add to Group'){\r\n            this.setState({\r\n                [event.target.name]:event.target.value,\r\n                status:'Corporate',\r\n                roomStatus:'blue',\r\n                renameBtn:'Return to Individual'\r\n                \r\n            })\r\n        }\r\n        \r\n        else{\r\n            this.setState({\r\n                group:'',\r\n                status:\"Individual\",\r\n                roomStatus:'blueviolet',\r\n                renameBtn:'Add to Group'\r\n                \r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    async handleSubmit() {\r\n        \r\n        try {\r\n            var rid = this.props.match.params.rmID;\r\n            var FNID = this.state._id;\r\n\r\n            var roomStatusUpdate = {\r\n\r\n                status:`${this.state.status}`,\r\n                roomtypeName:`${this.state.roomtypeName}`,\r\n                fname: `${this.state.fname}`,\r\n                lname: `${this.state.lname}`,\r\n                roomStatus: `${this.state.roomStatus}`,\r\n                refID:`${this.state._id}`,\r\n               \r\n            }\r\n\r\n            var updateFirstNite = {\r\n                \r\n                group:`${this.state.group}`,\r\n                roomtypeName:`${this.state.roomtypeName}`,\r\n                dailyRate: `${this.state.dailyRate}`,\r\n                arrivalDate:`${this.state.arrivalDate}`,\r\n                departureDate:`${this.state.departureDate}`,\r\n                fname:`${this.state.fname}`,\r\n                lname:`${this.state.lname}`,\r\n                VAT:parseFloat(`${this.state.useVAT}`),\r\n                TourismLevy:parseFloat(`${this.state.useTourismLevy}`),\r\n                roomNumbers:(`${this.state.roomNumbers}`),\r\n                ServiceCharge:(`${this.state.ServiceCharge}`),\r\n                tranDate:(`${this.state.transactionDate}`),\r\n                description:'Daily Room Rate',\r\n                searchKey:'GuestBill'\r\n               \r\n                \r\n            }\r\n            \r\n            var checkindetails = {\r\n                status:`${this.state.status}`,\r\n                refID:`${this.state._id}`,\r\n                group:`${this.state.group}`,\r\n                roomRate:`${this.state.roomRate}`,\r\n                roomtypeName:`${this.state.roomtypeName}`,\r\n                dailyRate: `${this.state.dailyRate}`,\r\n                discounType:`${this.state.discounType}`,\r\n                discountAmount:`${this.state.discountAmount}`,\r\n                comingFrom:`${this.state.comingFrom}`,\r\n                goingTo:`${this.state.goingTo}`,\r\n                arrivalDate:`${this.state.arrivalDate}`,\r\n                departureDate:`${this.state.departureDate}`,\r\n                stay:`${this.state.stay}`,\r\n                postBillStatus:`${this.state.postBillStatus}`,\r\n                title:`${this.state.title}`,\r\n                fname:`${this.state.fname}`,\r\n                lname:`${this.state.lname}`,\r\n                middlename:`${this.state.middlename}`,\r\n                dob: `${this.state.dob}`,\r\n                mob:`${this.state.mob}`,\r\n                phone:`${this.state.phone}`,\r\n                email:`${this.state.email}`,\r\n                ID:`${this.state.ID}`,\r\n                passportNum:`${this.state.passportNum}`,\r\n                Gender:`${this.state.Gender}`,\r\n                Nationality:`${this.state.Nationality}`,\r\n                Address:`${this.state.Address}`,\r\n                occupation:`${this.state.occupation}`,\r\n                NokLname:`${this.state.NokLname}`,\r\n                NokFname:`${this.state.NokFname}`,\r\n                NokMname:`${this.state.NokMname}`,\r\n                NokRelationship:`${this.state.NokRelationship}`,\r\n                NokPhone:`${this.state.NokPhone}`,\r\n                POV:`${this.state.POV}`,\r\n                vehicleReg:`${this.state.vehicleReg}`,\r\n                roomStatus:`${this.state.roomStatus}`,\r\n                VAT:parseFloat(`${this.state.VAT}`),\r\n                TourismLevy:parseFloat(`${this.state.TourismLevy}`),\r\n                ServiceChrg:parseFloat(`${this.state.ServiceChrg}`),\r\n                calculatedstay:`${this.state.calculatedstay}`\r\n            }\r\n            let result = await fetch(`${guestUpdateUrl}/${rid}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    checkindetails\r\n                )\r\n                \r\n            });\r\n            console.log('result>  ' + result)\r\n\r\n            let FirstNite = await fetch(`${updateFirstNit}/${FNID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    updateFirstNite\r\n                )\r\n                \r\n            });\r\n            \r\n            console.log('FirstNite>  ' + FirstNite)\r\n\r\n            let RmStatus = await fetch(`${updateRoomStatus}/${rid}`, {\r\n                method: 'put',\r\n    \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n    \r\n                body: JSON.stringify(\r\n                    \r\n                    roomStatusUpdate\r\n                        \r\n                )\r\n                    \r\n                    \r\n            });\r\n            console.log('RmStatus>  ' + RmStatus)\r\n            alert(\"Guest Records Updated\")\r\n            this.props.history.push('/roomchart')\r\n                    \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    render () {\r\n        console.log (\">>> Inside Gsdetails\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <FLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        return(\r\n            <>\r\n            <Header2/>\r\n                <div className=\"container\" key={this.state.roomNumbers}>\r\n                    <div className=\"formdesign11\">\r\n                        <div className=\"NoPrint\">\r\n                        <div>\r\n                            <img src= \"https://i.ibb.co/xfH44ry/grandseason-Logo.jpg\" className=\"alignImg2Dt\" style={{width:\"80px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                        </div>\r\n                        <center>\r\n                            <h6>{this.state.Hotelname}</h6>\r\n                            <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                        </center>\r\n                        </div>\r\n                        <center><h4>Guests Registration Form</h4></center>\r\n                        <form><br/>\r\n                            <h5 className=\"mb-3 background11 formsize\">Booking Info</h5>\r\n                            <div className=\"row\">\r\n                                    \r\n                                <div className=\"mb-3 col-4\">\r\n                                    <label className='form-label'>GuestID</label>\r\n                                    <input type=\"number\" className=\"form-control mb-3 formsize\" name=\"_id\" value={this.state._id} readOnly/>\r\n                                            \r\n                                    <label className='form-label valid'>Guest Status</label> \r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize\" name=\"status\" value={this.state.status} readOnly/>\r\n                                    <select type =\"button\" className=\"form-select formsize mb-3 btn btn-primary\" name=\"group\" onChange={this.handleChange2}>\r\n                                        <option selected value=''>{this.state.renameBtn}</option>\r\n                                        {this.renderCompany(this.state.groupDatax)}\r\n                                        \r\n                                        \r\n                                                                                    \r\n                                    </select>\r\n\r\n                                    <label className='form-label'>Organisations</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize\" name=\"group\" value={this.state.group} readOnly/>\r\n                                    \r\n                                    <label className='form-label'>Room Number</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize\" name=\"roomNumbers\" value={this.state.roomNumbers} readOnly/>\r\n                                    <label className='form-label'>Room Type</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize\" name=\"roomtypeName\" value={this.state.roomtypeName} readOnly/>\r\n                                    <label className='form-label'>Room Rate</label>\r\n                                    <p className=\"form-control mb-3 formsize\"><NumberFormat value={this.state.roomRate} displayType={\"text\"} thousandSeparator={true} prefix={\"N\"}/>.00</p>\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <label className='form-label'>Discount Type</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize\" name=\"discounType\" value={this.state.discounType} readOnly/>\r\n\r\n                                    <label className='form-label'>{this.state.discounType}</label>\r\n                                    <input type=\"number\" className=\"form-control mb-3 formsize\" name=\"discountAmount\" value={this.state.discountAmount} readOnly/>\r\n                                            \r\n                                    <label className='form-label'>Daily Rate</label>\r\n                                    <p className=\"form-control mb-3 formsize\"> <NumberFormat value={this.state.dailyRate} displayType={\"text\"} thousandSeparator={true} prefix={\"N\"}/>.00</p>\r\n\r\n                                    <label className='form-label'>VAT</label>\r\n                                    <p className=\"form-control mb-3 formsize\"> <NumberFormat value={this.state.VAT} displayType={\"text\"} thousandSeparator={true} prefix={\"N\"}/></p>\r\n\r\n                                    <label className='form-label'>Tourism Levy</label>\r\n                                    <p className=\"form-control mb-3 formsize\"> <NumberFormat value={this.state.TourismLevy} displayType={\"text\"} thousandSeparator={true} prefix={\"N\"}/></p>\r\n\r\n                                    <label className='form-label'>Service Charge</label>\r\n                                    <p className=\"form-control mb-3 formsize\"> <NumberFormat value={this.state.ServiceChrg} displayType={\"text\"} thousandSeparator={true} prefix={\"N\"}/></p>\r\n\r\n                                    <label className='form-label'>Hotel's Income</label>\r\n                                    <p className=\"form-control mb-3 formsize\"> <NumberFormat value={parseFloat(this.state.dailyRate) - parseFloat(this.state.VAT) - parseFloat(this.state.TourismLevy) - parseFloat(this.state.ServiceChrg)} displayType={\"text\"} thousandSeparator={true} prefix={\"N\"}/></p>\r\n\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <label className='form-label'>Travelling From</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize\" name=\"comingFrom\" value={this.state.comingFrom} readOnly/>\r\n                                    <label className='form-label'>Next Destination</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize\" name=\"goingTo\" value={this.state.goingTo} readOnly/>\r\n                                    <label className='form-label'>Arrival Date</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize\" name=\"arrivalDate\" value={this.state.arrivalDate} readOnly/>\r\n                                    <label className='form-label'>Departure Date</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize\" name=\"departureDate\" value={this.state.departureDate} readOnly/>\r\n                                    <label className=\"form-check-label valid\">Enable Dockets is set to - {this.state.postBillStatus}</label>\r\n                                    \r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"postBillStatus\" value=\"No\" id=\"flexRadioDefault1\" onChange={this.handleChange}></input>\r\n                                        <label className=\"form-check-label\" for=\"flexRadioDefault1\">No</label>\r\n                                    </div>\r\n                                    <div className=\"form-check\">\r\n                                        <input className=\"form-check-input\" type=\"radio\" name=\"postBillStatus\" value=\"Yes\" id=\"flexRadioDefault2\" onChange={this.handleChange}></input>\r\n                                        <label className=\"form-check-label\" for=\"flexRadioDefault1\">Yes</label>\r\n                                    </div>\r\n                                    \r\n                                    \r\n                                </div> \r\n                                <hr/>\r\n                                    \r\n                            </div>\r\n                            <br/>\r\n                            <h5 className=\"mb-3 background11 formsize2\" >Personal Info</h5>\r\n                            <div className=\"row\">\r\n                                <div className=\"mb-3 col-2\">\r\n                                    <label className='form-label'>Title</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize\" name=\"title\" value={this.state.title} readOnly/>\r\n                                </div>\r\n                                <div className=\"mb-3 col-2\">\r\n                                    <label className='form-label valid'>Surname</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"lname\" value={this.state.lname} readOnly/>\r\n                                </div>\r\n                                <div className=\"mb-3 col-2\">\r\n                                    <label className='form-label'>Firstname</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"fname\" value={this.state.fname} readOnly/>\r\n                                </div>\r\n                                <div className=\"mb-3 col-2\">\r\n                                    <label className='form-label'>Middle Name</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"middlename\" value={this.state.middlename} readOnly/>\r\n                                </div>\r\n                                <div className=\"mb-3 col-2\">\r\n                                    <label className='form-label'>Birth Day</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"dob\" value={this.state.dob} readOnly/>\r\n                                </div>\r\n                                <div className=\"mb-3 col-2\">\r\n                                    <label className='form-label'>Birth Month</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"mob\" value={this.state.mob} readOnly/>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"mb-3 col-2\">\r\n                                    <label className='form-label valid'>Phone</label>\r\n                                    <input type=\"number\" className=\"form-control mb-3 formsize21\" name=\"phone\" value={this.state.phone} readOnly/>\r\n                                </div>\r\n                                 <div className=\"mb-3 col-2\">\r\n                                    <label className='form-label'>Email</label>\r\n                                    <input type=\"email\" className=\"form-control mb-3 formsize21\" name=\"email\" value={this.state.email} readOnly/>\r\n                                </div>\r\n                                <div className=\"mb-3 col-2\">\r\n                                    <label className='form-label'>ID</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"ID\" value={this.state.ID} readOnly/>\r\n                                </div>\r\n                                <div className=\"mb-3 col-2\">\r\n                                    <label className='form-label'>Passport Num</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"passportNum\" value={this.state.passportNum} readOnly/>\r\n                                </div>\r\n                                <div className=\"mb-3 col-2\">\r\n                                    <label className='form-label'>Gender</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"Gender\" value={this.state.Gender} readOnly/>\r\n                                            \r\n                                </div>\r\n                                <div className=\"mb-3 col-2\">\r\n                                    <label className='form-label'>Nationality</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"Nationality\" value={this.state.Nationality} readOnly/>\r\n                                </div>\r\n                                <div className=\"mb-3 col-2\">\r\n                                    <label className='form-label'>Address</label>\r\n                                    <textarea row=\"4\" className=\"form-control mb-3\" name=\"Address\" value={this.state.Address} readOnly/>\r\n                                </div>\r\n                                <div className=\"mb-3 col-2\">\r\n                                    <label className='form-label'>occupation</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"occupation\" value={this.state.occupation}readOnly/>\r\n                                </div>\r\n                                <div className=\"mb-3 col-2\">\r\n                                    <label className='form-label'>Purpose of Visits</label>\r\n                                    <textarea row=\"4\" className=\"form-control mb-3 formsize21\" name=\"POV\" value={this.state.POV} readOnly/>\r\n                                </div>\r\n                                <div className=\"mb-3 col-2\">\r\n                                    <label className='form-label'>Vehicle Reg</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"vehicleReg\" value={this.state.vehicleReg} readOnly/>\r\n                                </div>\r\n                                </div>\r\n                                <hr/>\r\n                                <h5 className=\"mb-3 background11 formsize4\" >Next of Kin Details</h5>\r\n                                <div className=\"row\">\r\n                                    <div className=\"mb-3 col-2\">\r\n                                    <label className='form-label'>Surname</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"NokLname\" value={this.state.NokLname} readOnly/>\r\n                                </div>\r\n                                <div className=\"mb-3 col-2\">\r\n                                    <label className='form-label'>Firstname</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"NokFname\" value={this.state.NokFname} readOnly/>\r\n                                </div>\r\n                                <div className=\"mb-3 col-2\">\r\n                                    <label className='form-label'>Middle Name</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"NokMname\" value={this.state.NokMname} readOnly/>\r\n                                </div>\r\n                                <div className=\"mb-3 col-2\">\r\n                                    <label className='form-label'>Relationship</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"NokRelationship\" value={this.state.NokRelationship}readOnly/>\r\n                                </div>\r\n                                <div className=\"mb-3 col-2\">\r\n                                    <label className='form-label'>Phone</label>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize21\" name=\"NokPhone\" value={this.state.NokPhone} readOnly/>\r\n                                </div>\r\n                                   \r\n                            </div>\r\n                        </form>\r\n                        <div>\r\n                            <center>\r\n                                <span>\r\n                                    <button disabled={this.state.postBillStatus===''} className=\"btn btn-primary printing\" onClick={ () => this.handleSubmit () }>Save Changes</button>\r\n                                    <Link to=\"/roomchart\">\r\n                                        <button className=\"btn btn-danger space printing\">Cancel Changes</button>\r\n                                    </Link>\r\n                                </span>\r\n                            </center>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                       \r\n            </>\r\n        )\r\n               \r\n            \r\n        \r\n    }\r\n    \r\n    \r\n    componentDidMount(){\r\n        console.log(\">>> Inside GsDidMount\", this.state)\r\n\r\n        var chkinID = this.props.match.params.rmID;\r\n        var chkgstID = parseInt(chkinID)\r\n        fetch(`${guestformUrl}${chkgstID}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item) =>{\r\n                let checkindate = moment(`${item.arrivalDate}`).format('YYYY-DD-MMM')\r\n                let checkoutdate = moment(`${item.departureDate}`).format('YYYY-DD-MMM')\r\n               \r\n                sessionStorage.setItem ('rmNum', item.roomNumbers);\r\n                \r\n                this.setState({\r\n                    _id:item._id,\r\n                    status:item.status,\r\n                    group:item.group,\r\n                    roomNumbers:item.roomNumbers,\r\n                    roomRate:item.roomRate,\r\n                    roomtypeName:item.roomtypeName,\r\n                    dailyRate:item.dailyRate,\r\n                    VAT:item.VAT,\r\n                    TourismLevy:item.TourismLevy,\r\n                    ServiceChrg:item.ServiceCharge,\r\n                    discounType:item.discounType,\r\n                    discountAmount:item.discountAmount,\r\n                    comingFrom:item.comingFrom,\r\n                    goingTo:item.goingTo,\r\n                    arrivalDate:checkindate,\r\n                    departureDate:checkoutdate,\r\n                    stay:item.stay,\r\n                    postBillStatus:item.postBillStatus,\r\n                    title:item.title,\r\n                    fname:item.fname,\r\n                    lname:item.lname,\r\n                    middlename:item.middlename,\r\n                    dob:item.dob,\r\n                    mob:item.mob,\r\n                    phone:item.phone,\r\n                    email:item.email,\r\n                    ID:item.ID,\r\n                    passportNum:item.passportNum,\r\n                    Gender:item.Gender,\r\n                    Nationality:item.Nationality,\r\n                    Address:item.Address,\r\n                    occupation:item.occupation,\r\n                    NokLname:item.NokLname,\r\n                    NokFname:item.NokFname,\r\n                    NokMname:item.NokMname,\r\n                    NokRelationship:item.NokRelationship,\r\n                    NokPhone:item.NokPhone,\r\n                    POV:item.POV,\r\n                    vehicleReg:item.vehicleReg,\r\n                    roomStatus:item.roomStatus,\r\n                    transactionDate:item.transactionDate,\r\n                    calculatedstay:item.calculatedstay\r\n                })\r\n                \r\n                return 'ok'\r\n            })\r\n               \r\n        })\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        \r\n\r\n        fetch(`${companyUrl}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                groupDatax:data\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n        \r\n        \r\n    }\r\n\r\n}\r\nexport default guestForm;","import React,{Component} from 'react';\r\nimport './Header.css';\r\nimport {withRouter} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport moment from 'moment';\r\n\r\n\r\nconst checkinDataUrl = \"https://zarvichdemo.localto.net/getrmstatus\"\r\nconst getRSVPwrtDt = \"https://zarvichdemo.localto.net/getReservationBydate?selectDate=\";\r\nconst GetReservationID = \"https://zarvichdemo.localto.net/reservation?resavtnID=\";\r\nconst getWorkDate = \"https://zarvichdemo.localto.net/getActive\";\r\n\r\n\r\n\r\nclass Footer3 extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        console.log(\">>>Inside RMConstructor\", props)\r\n        this.state={\r\n            checkinData:'',\r\n            vacantData:'',\r\n            reservationData:'',\r\n            Corporate:'',\r\n            Individual:'',\r\n            Staff:'',\r\n            Complimentary:'',\r\n            CheckOut:'',\r\n\r\n            TrDate:'',\r\n            displayevnts:'',\r\n            Totdisplayevnts:'',\r\n            searchDte:''\r\n            \r\n            \r\n        }\r\n    }\r\n\r\n            \r\n    render(){\r\n        console.log(\">>>Inside RMrender\",this.state)\r\n        var count=this.state.checkinData;\r\n        if (count!=='green'){\r\n            var result = count.length;\r\n        }\r\n        var vacant=this.state.vacantData;\r\n        var output = vacant.length;\r\n\r\n        var corp=this.state.Corporate;\r\n        var corpRate = corp.length;\r\n\r\n        var ind=this.state.Individual;\r\n        var indVi = ind.length;\r\n\r\n        var staff=this.state.Staff;\r\n        var sta = staff.length;\r\n\r\n        var compl=this.state.Complimentary;\r\n        var comp = compl.length;\r\n        \r\n        var chkout=this.state.CheckOut;\r\n        var out = chkout.length;\r\n\r\n        let rsvptoday = this.state.displayevnts;\r\n        let rsvpout = rsvptoday.length;\r\n\r\n        let rsvptotal = this.state.Totdisplayevnts;\r\n        let rsvpTotalout = rsvptotal.length;\r\n       \r\n        return (\r\n            <div className=\"black\">\r\n                \r\n                <span>\r\n                   \r\n                    <button className=\"btn btn-danger buttncontrol6 mb-3 mt-3\">Occuppied Rooms: {result}</button>\r\n                    <button className=\"btn btn-danger buttncontrol6 mb-3 mt-3\">Vacant Rooms: {output}</button>\r\n                    <button className=\"btn btn-danger buttncontrol6 mb-3 mt-3\" style={{backgroundColor:'chartreuse', color:'black',borderBlockStyle:'solid'}}>Total Reservation: {rsvpTotalout}</button>\r\n                    <button className=\"btn buttncontrol6 mb-3 mt-3 setmarginNew\" style={{backgroundColor:'green', color:'white'}}>Vacant: {output}</button>\r\n                    <button className=\"btn buttncontrol6 mb-3 mt-3\" style={{backgroundColor:'blue', color:'white'}}>Corporate: {corpRate}</button>\r\n                    <button className=\"btn buttncontrol6 mb-3 mt-3\" style={{backgroundColor:'blueviolet', color:'white'}}>Individual: {indVi}</button>\r\n                    <button className=\"btn buttncontrol6 mb-3 mt-3\" style={{backgroundColor:'deeppink', color:'white'}}>Staff: {sta}</button>\r\n                    <button className=\"btn buttncontrol6 mb-3 mt-3\" style={{backgroundColor:'orange', color:'white'}}>Complimentary: {comp}</button>\r\n                    <button className=\"btn buttncontrol6 mb-3 mt-3\" style={{backgroundColor:'black', color:'white',borderBlockStyle:'solid', borderBlockColor:'white'}}>Check Out: {out}</button>\r\n                    <button className=\"btn buttncontrol6 mb-3 mt-3\" style={{backgroundColor:'chartreuse', color:'black',borderBlockStyle:'solid'}} onClick={()=>{localStorage.setItem('rsvpNwDte', new Date(this.state.searchDte)); this.props.history.push('/EditReservation')}}>Reservation: {rsvpout}</button>\r\n                    \r\n                </span>\r\n\r\n                \r\n                \r\n            </div>\r\n\r\n            \r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log (\">>> Inside RMdidMount\")\r\n        fetch(`${checkinDataUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            \r\n            this.setState({\r\n                checkinData:data.map(item => item.roomStatus).filter(item=> item !=='green'&& item !=='black')\r\n                \r\n            })\r\n            this.setState({\r\n                vacantData:data.map(item => item.roomStatus).filter(item=> item ==='green')\r\n                \r\n            })\r\n            this.setState({\r\n                Corporate:data.map(item => item.roomStatus).filter(item=> item ==='blue')\r\n                \r\n            })\r\n            this.setState({\r\n                Individual:data.map(item => item.roomStatus).filter(item=> item ==='blueviolet')\r\n                \r\n            })\r\n            this.setState({\r\n                Staff:data.map(item => item.roomStatus).filter(item=> item ==='deeppink')\r\n                \r\n            })\r\n            \r\n            this.setState({\r\n                Complimentary:data.map(item => item.roomStatus).filter(item=> item ==='orange')\r\n                \r\n            })\r\n\r\n            this.setState({\r\n                CheckOut:data.map(item => item.roomStatus).filter(item=> item ==='black')\r\n                \r\n            })\r\n            \r\n            \r\n        })\r\n\r\n        fetch(`${getWorkDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({TrDate:moment(item.date).format('YYYY-DD-MMM')})\r\n                this.setState({searchDte:item.date})\r\n                return 'ok'\r\n            })\r\n\r\n\r\n                       \r\n        })\r\n\r\n        setTimeout(() => {\r\n            fetch(`${getRSVPwrtDt}${this.state.TrDate}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({displayevnts:data});\r\n        \r\n\r\n            });\r\n\r\n            fetch(`${GetReservationID}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({Totdisplayevnts:data});\r\n        \r\n\r\n            });\r\n\r\n\r\n        }, 1000);\r\n\r\n        \r\n      \r\n    }\r\n    \r\n}\r\n\r\nexport default withRouter (Footer3);","import React,{Component} from 'react';\r\nimport './Reception.css';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport Footer3 from '../Footer3';\r\nimport FLogin from '../FLogin';\r\nimport moment from 'moment';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst roomchartUrl = \"https://zarvichdemo.localto.net/getrmstatus\";\r\nconst checkinguestUrl = \"https://zarvichdemo.localto.net/checkin?guest=\";\r\nconst userName = \"https://zarvichdemo.localto.net/fofUserInfo\";\r\nconst getWorkDate = \"https://zarvichdemo.localto.net/getActive\";\r\n\r\nclass RoomChart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside RMConstructor\")\r\n\r\n        this.state={\r\n            roomchart:'',\r\n            guestrecord:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            transactionDatex:''\r\n\r\n        }\r\n\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    renderRoomchart=((data)=>{\r\n        \r\n        if (data){\r\n            return data.map((item) =>{\r\n                data.sort((a, b) => a.roomNumbers - b.roomNumbers);\r\n                if(item.fname||item.lname||item.roomStatus===\"black\"||item.roomStatus!=='green'){\r\n                    return(\r\n                        <>\r\n                            <Link to={`/guestForm/${item.roomNumbers}`} key={item.roomNumbers}>\r\n                                <div className=\"card alignroomsgreen\" style={{backgroundColor:`${item.roomStatus}`}}>\r\n                                    <div className=\"card-body top\">\r\n                                        <h5 className=\"card-title\">{item.roomNumbers}</h5>\r\n                                        <h6 className=\"card-subtitle mb-2 size\">{item.fname} {item.lname}</h6>\r\n                                        <h6 className=\"card-subtitle mb-2 size2\">{item.roomtypeName}</h6>\r\n                                    </div>\r\n                                </div>\r\n                            </Link>\r\n                        </>\r\n                    )\r\n                    \r\n                }\r\n\r\n                \r\n                else{\r\n                    return(\r\n                        <>\r\n                            <Link to={`/form/${item.roomNumbers}`} key={item.roomNumbers}>\r\n                                <div className=\"card alignroomsgreen\" style={{backgroundColor:`${item.roomStatus}`}}>\r\n                                    <div className=\"card-body top\">\r\n                                        <h5 className=\"card-title\">{item.roomNumbers}</h5>\r\n                                        <h6 className=\"card-subtitle mb-2 size\">{item.fname} {item.lname}</h6>\r\n                                        <h6 className=\"card-subtitle mb-2 size2\">{item.roomtypeName}</h6>\r\n                                    </div>\r\n                                </div>\r\n                            </Link>\r\n                        </>\r\n                    )\r\n                }\r\n                \r\n                   \r\n            })\r\n        }\r\n        \r\n    }) \r\n    \r\n\r\n    render(){\r\n        console.log(\">>> Inside RMrender\", this.state)\r\n        var trDate = moment(this.state.transactionDatex).format('MMM DD YYYY');\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <FLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        return(\r\n            <>\r\n                <Footer3/>\r\n                \r\n                <div className=\"pagebody12\">\r\n                    <br/>\r\n                    {this.renderRoomchart(this.state.roomchart)}\r\n                </div>\r\n\r\n                \r\n                \r\n                <center>\r\n                    <div className=\"pagebody2\">\r\n                        <center><h6 style={{color:'yellow'}}>Active Work Date is: {trDate}</h6></center>\r\n                        <div className=\"space\">\r\n                            <br/>\r\n                            \r\n                            <button className=\"btn btn-danger gap6\" onClick={ () => this.props.history.push('./Reservation')}>Reservation</button>\r\n                            <button disabled='true' className=\"btn btn-danger gap6\" onClick={ () => this.props.history.push('./HallHire')}>Hall Reservation</button>\r\n                            <button className=\"btn btn-danger gap6\" onClick={ () => this.props.history.push('./Group')}>Register Group</button>\r\n                            <button className=\"btn btn-danger gap6\" onClick={ () => this.props.history.push('./ReceptionMenu')}>Reception Reports</button>\r\n                            {/* <button className=\"btn btn-warning gap\" onClick={ ()=> {this.props.history.push('/AppMenu')}}>App Menu</button> */}\r\n                            <button className=\"btn btn-warning gap6\" onClick={ ()=> {this.props.history.push('/BillingMenu')}}>Goto Billing</button>\r\n                            <button className=\"btn btn-warning gap6\" onClick={ ()=> {this.props.history.push('/Laundry')}}>Goto Laundry</button>\r\n                            <button className=\"btn btn-success gap6\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>    \r\n                            \r\n                            \r\n                        </div>\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"col-3\">\r\n                                <h6 style = {{color:'purple',marginLeft:'880px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                \r\n                </center>\r\n                \r\n                \r\n                \r\n               \r\n                \r\n            </>\r\n        )\r\n        \r\n        \r\n    }\r\n\r\n    async componentDidMount(){\r\n        \r\n        console.log (\">>> Inside RMdidMount\")\r\n        const response = await axios.get(`${roomchartUrl}`)\r\n        const resp = await axios.get(`${checkinguestUrl}`)\r\n        this.setState({roomchart:response.data, guestrecord:resp.data})\r\n      \r\n        this.myTimer = setInterval(() => {\r\n            console.log (\">>> Inside RMdidMount\")\r\n            \r\n            fetch(`${roomchartUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({roomchart:data});\r\n                \r\n            })\r\n\r\n            fetch(`${checkinguestUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({guestrecord:data});\r\n                \r\n            })\r\n\r\n        },30000);\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n        await fetch(`${getWorkDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({transactionDatex:item.date})\r\n                return 'ok'\r\n            })\r\n            \r\n           \r\n        })\r\n\r\n        this.myTimer = setInterval(() => {\r\n            fetch(`${getWorkDate}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({transactionDatex:item.date})\r\n                    return 'ok'\r\n                })\r\n                \r\n            \r\n            })\r\n            \r\n        },1000);\r\n    }\r\n\r\n\r\n}\r\nexport default RoomChart;","import React, {Component} from 'react';\r\nimport './Reception.css';\r\nimport DatePicker from 'react-datepicker';\r\nimport addDays from 'date-fns/addDays';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport {Link} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport NumberFormat from 'react-number-format'; \r\nimport FLogin from '../FLogin';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Modal} from 'react-responsive-modal';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst extendUrl = \"https://zarvichdemo.localto.net/checkin?guest=\";\r\nconst extenddateUrl = \"https://zarvichdemo.localto.net/guestupdate\";\r\nconst groupextenddateUrl = \"https://zarvichdemo.localto.net/groupguestupdate\";\r\nconst globalRmUpdtUrl2 = \"https://zarvichdemo.localto.net/rmstatus3\";\r\nconst userName = \"https://zarvichdemo.localto.net/fofUserInfo\";\r\n\r\n// const encodeCard = \"/prntCard\";\r\n// const getCards = \"/getCards\";\r\n// const getErrors = \"/getCardError \";\r\n// const deleteErrors = \"/delError \";\r\n// const deleteCard = \"/delCard \";\r\n\r\n\r\nclass Extenddays extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\">>> inside ExtContructor\", props)\r\n\r\n        this.state={\r\n            _id:'',\r\n            status:'',\r\n            group:'',\r\n            roomNumbers:'',\r\n            roomRate:'',\r\n            roomtypeName:'',\r\n            dailyRate:'',\r\n            discounType:'',\r\n            discountAmount:'',\r\n            comingFrom:'',\r\n            goingTo:'',\r\n            arrivalDate: '',\r\n            departureDate: new Date(),\r\n            stay:'',\r\n            postBillStatus:'',\r\n            title:'',\r\n            fname:'',\r\n            lname:'',\r\n            middlename:'',\r\n            dob:'',\r\n            mob:'',\r\n            phone:'',\r\n            email:'',\r\n            ID:'',\r\n            passportNum:'',\r\n            Gender:'',\r\n            Nationality:'',\r\n            Address:'',\r\n            occupation:'',\r\n            NokLname:'',\r\n            NokFname:'',\r\n            NokMname:'',\r\n            NokRelationship:'',\r\n            NokPhone:'',\r\n            POV:'',\r\n            vehicleReg:'',\r\n            roomStatus:'',\r\n            newDepartureDate: new Date(),\r\n            transactionDate:'',\r\n            calculatedstay:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            cardDate: '',\r\n            cardMessages: [],\r\n            cardModal: false,\r\n            cardData: ''\r\n        };\r\n        this.checkouthandleChange = this.checkouthandleChange.bind(this);\r\n     \r\n    }\r\n\r\n    checkouthandleChange(Date) {\r\n        this.setState({\r\n            departureDate: Date\r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n            var thisDate = this.state.departureDate;\r\n            var endDate = moment(thisDate);\r\n            var startDt = moment(this.state.arrivalDate);\r\n            var diff =endDate.diff(startDt);\r\n            var datecomp = Math.ceil(diff/(1000*3600*24));\r\n            this.setState({stay:datecomp})\r\n            this.formatDate();\r\n        },1000)\r\n        this.myTimer = setTimeout(() => {\r\n            var stay = this.state.stay\r\n            var dailyrate = this.state.dailyRate;\r\n            var calc = 0;\r\n            var calcstay = calc + (stay*dailyrate)\r\n\r\n            this.setState({calculatedstay:calcstay});\r\n        },1000)\r\n    }\r\n\r\n    formatDate(){\r\n        const originalDate = `${this.state.departureDate}`;\r\n        const formattedDate = moment(originalDate).format('YYMMDD');\r\n        this.setState({cardDate: formattedDate})\r\n    }\r\n    \r\n    \r\n    rendercheckOutDate() {\r\n        return (\r\n            <div >\r\n                \r\n                <DatePicker\r\n                    selected={this.state.departureDate}\r\n                    onChange={this.checkouthandleChange}\r\n                    minDate={addDays(this.state.departureDate,1)}\r\n                    maxDate={addDays(new Date(),31)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onCloseModalCard(){\r\n        this.setState({cardModal: false});\r\n    }\r\n\r\n    renderCardMessages = (data) => {\r\n        if(data){\r\n            return data.map((item) => {\r\n                let newMessage = \"\";\r\n                let finalMessage1 = \"Wait until you here the encoder beep sound before you remove card.\"\r\n                let finalMessage2 = \"Click close after you remove card\"\r\n                let finalMessage3 = \"Card Issue was successfull\"\r\n                if(item.message !== \"\") {\r\n                    if(item.message === \"No valid card is read in the sensor area of the card issuer: 550100\") {\r\n                        newMessage = \"Place the card well on the encoder or turn the card\";\r\n                    } else if(item.message === \"There is no card on the encoder.\") {\r\n                        newMessage = \"Place a room card on the encoder\";\r\n                    }\r\n\r\n                    return(\r\n                        <div key={item._id}>\r\n                                <h3> {item.message} </h3>\r\n                                <h5> {newMessage} </h5>\r\n                                <h6> {finalMessage1} </h6> \r\n                                <h6> {finalMessage2} </h6><br/>\r\n                                <button className=\"btn btn-success\" onClick={() => {this.deleteGuestCardInfo()}}>\r\n                                    Close\r\n                                </button>\r\n                        </div>\r\n                    )\r\n                } else {\r\n                    return(\r\n                        <div key={item._id}>\r\n                                <h3> {finalMessage3} </h3>\r\n                                <h5> {finalMessage2} </h5>\r\n                                <br/>\r\n                                <button className=\"btn btn-success\" onClick={() => {this.deleteGuestCardInfo()}}>\r\n                                    Close\r\n                                </button>\r\n                        </div>\r\n                    )\r\n                }\r\n                \r\n                \r\n                \r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n    // deleteGuestCardInfo() {\r\n    //     fetch(`${deleteCard}`, {\r\n    //         method: 'DELETE'\r\n    //     });\r\n        \r\n    // }\r\n\r\n    // handleCardOperations() {\r\n        \r\n    //     fetch(`${getErrors}`, { method: 'GET' })\r\n    //     .then((resp) => resp.json())\r\n    //     .then((data) => {\r\n    //         this.setState ({\r\n    //             cardData: data\r\n    //         })\r\n    //         setTimeout(() => {\r\n    //             const newCard = this.state.cardData;\r\n    //             const hasEmptyMessage = newCard.some((item) => item.message === \"\");\r\n\r\n    //             if (hasEmptyMessage) {\r\n    //                 // Delete card errors if any message is empty\r\n    //                 fetch(`${deleteErrors}`, {\r\n    //                     method: 'DELETE'\r\n    //                 });\r\n                   \r\n    //                 // Perform additional actions (e.g., deleteGuestCardInfo, show alert, redirect)\r\n    //                 this.deleteGuestCardInfo();\r\n    //                 alert(\"Guest Records Updated. click Ok\");\r\n    //                 fetch(`${deleteErrors}`, {\r\n    //                     method: 'DELETE'\r\n    //                 });\r\n    //                 this.props.history.push('/roomchart');\r\n    //             } else {\r\n    //                 alert(\"Turn the card on the encoder or place a card on the encoder and click Ok\");\r\n    //                 this.handleCardOperations();\r\n    //             }\r\n    //         }, 1000);\r\n    //         // Check if any item has an empty message\r\n            \r\n    //     })\r\n        \r\n        \r\n    // }\r\n\r\n\r\n    async handleSubmit() {\r\n        \r\n        try {\r\n            var eid = this.props.match.params.stID;\r\n            var extID = sessionStorage.getItem('extStayID')\r\n            var depDate = moment(this.state.departureDate).format('YYYY-DD-MMM')\r\n            \r\n            var globalRmChrgUpdate2 = {\r\n\r\n                refID: `${this.state._id}`,\r\n                arrivalDate:`${this.state.arrivalDate}`,\r\n                departureDate:`${this.state.departureDate}`,\r\n                roomNumbers:`${this.state.roomNumbers}`,\r\n                dailyRate: `${this.state.dailyRate}`,\r\n                description: 'Daily Room Rate'\r\n            }\r\n\r\n            // let cardPrint = {\r\n            //     day :`${this.state.stay}`,\r\n            //     Begindate : `${this.state.cardDate}`,\r\n            //     roomno : `${this.state.roomNumbers}`,\r\n            //     door_lock : true\r\n\r\n            // }\r\n           \r\n            var extendstaydetails = {\r\n                status:`${this.state.status}`,\r\n                refID:`${this.state._id}`,\r\n                group:`${this.state.group}`,\r\n                roomRate:`${this.state.roomRate}`,\r\n                roomtypeName:`${this.state.roomtypeName}`,\r\n                dailyRate: `${this.state.dailyRate}`,\r\n                discounType:`${this.state.discounType}`,\r\n                discountAmount:`${this.state.discountAmount}`,\r\n                comingFrom:`${this.state.comingFrom}`,\r\n                goingTo:`${this.state.goingTo}`,\r\n                arrivalDate:`${this.state.arrivalDate}`,\r\n                departureDate:depDate,\r\n                stay:`${this.state.stay}`,\r\n                postBillStatus:`${this.state.postBillStatus}`,\r\n                title:`${this.state.title}`,\r\n                fname:`${this.state.fname}`,\r\n                lname:`${this.state.lname}`,\r\n                middlename:`${this.state.middlename}`,\r\n                dob: `${this.state.dob}`,\r\n                mob:`${this.state.mob}`,\r\n                phone:`${this.state.phone}`,\r\n                email:`${this.state.email}`,\r\n                ID:`${this.state.ID}`,\r\n                passportNum:`${this.state.passportNum}`,\r\n                Gender:`${this.state.Gender}`,\r\n                Nationality:`${this.state.Nationality}`,\r\n                Address:`${this.state.Address}`,\r\n                occupation:`${this.state.occupation}`,\r\n                NokLname:`${this.state.NokLname}`,\r\n                NokFname:`${this.state.NokFname}`,\r\n                NokMname:`${this.state.NokMname}`,\r\n                NokRelationship:`${this.state.NokRelationship}`,\r\n                NokPhone:`${this.state.NokPhone}`,\r\n                POV:`${this.state.POV}`,\r\n                vehicleReg:`${this.state.vehicleReg}`,\r\n                roomStatus:`${this.state.roomStatus}`,\r\n                transactionDate:`${this.state.transactionDate}`,\r\n                calculatedstay:`${this.state.calculatedstay}`\r\n            }\r\n            let result = await fetch(`${extenddateUrl}/${eid}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    extendstaydetails\r\n                )\r\n                \r\n            });\r\n            \r\n            console.log('result>  ' + result)\r\n            \r\n            var orgName = this.state.group;\r\n            if(orgName!==''){\r\n                let resultd = await fetch(`${groupextenddateUrl}/${eid}`, {\r\n                    method: 'put',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        extendstaydetails\r\n                    )\r\n                    \r\n                });\r\n                \r\n                console.log('resultd>  ' + resultd)\r\n            }\r\n            \r\n            let result2 = await fetch(`${globalRmUpdtUrl2}/${extID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    globalRmChrgUpdate2\r\n                )\r\n                \r\n            });\r\n            console.log('result2> ' + result2)\r\n\r\n            // let cardUnlock = fetch(`${encodeCard}` , {\r\n            //     method: 'post',\r\n\r\n            //     headers: {\r\n            //         'Accept': 'application/json',\r\n            //         'Content-type': 'application/json',\r\n            //     },\r\n            //     body: JSON.stringify(\r\n            //         cardPrint\r\n            //     )\r\n\r\n            // });\r\n            // console.log('cardUnlock>  ' + cardUnlock)\r\n\r\n            // this.handleCardOperations();\r\n            \r\n            // console.log('result2>  ' + result2)\r\n            // alert(\"Guest Records Updated\")\r\n            // this.props.history.push('/roomchart')\r\n                    \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        console.log (\">>> Inside Exdetails\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <FLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        return(\r\n            <>\r\n            \r\n                <div className=\"background120\">\r\n                    \r\n                    <div className=\"formdesign101\">\r\n                        \r\n                        <div className=\"row\">\r\n                            <div className=\"col-4\">\r\n                                <label className='form-label valid'>Names</label>\r\n                                <label className=\"form-control mb-3 formsize2\">{this.state.lname} {this.state.fname} </label>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                               <label className='form-label valid'>Room No.</label>\r\n                                <label className=\"form-control mb-3 formsize2\">{this.state.roomNumbers} </label>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                               <label className='form-label valid'>Daily Room Rate</label>\r\n                               <p className=\"form-control mb-3 formsize2\"> <NumberFormat value={this.state.dailyRate} displayType={\"text\"} thousandSeparator={true} prefix={\"N\"}/>.00</p>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <hr/>\r\n                        \r\n                        <form>\r\n                        \r\n                            <center>\r\n                                <h5 className =\"mb-3\"> Existing Dates</h5>\r\n                                <label className='form-label'>Arrival Date</label>\r\n                                <input type=\"text\" className=\"form-control mb-3 formsize\" name=\"arrivalDate\" value={this.state.arrivalDate} readOnly/>\r\n                                <label className='form-label'>Departure Date</label>\r\n                                <input type=\"text\" className=\"form-control mb-3 formsize\" name=\"departureDate\" value={this.state.newDepartureDate} readOnly/>\r\n                                <input type=\"hidden\" name=\"group\" value={this.state.group}/>\r\n                                <input type=\"hidden\" name=\"roomRate\" value={this.state.roomRate}/>\r\n                                <input type=\"hidden\" name=\"status\" value={this.state.status}/>\r\n                                <input type=\"hidden\" name=\"_id\" value={this.state._id}/>\r\n                                <input type=\"hidden\" name=\"roomtypeName\" value={this.state.roomtypeName}/>\r\n                                <input type=\"hidden\" name=\"dailyRate\" value={this.state.dailyRate}/>\r\n                                <input type=\"hidden\" name=\"discountType\" value={this.state.discounType}/>\r\n                                <input type=\"hidden\" name=\"discountAmount\" value={this.state.discountAmount}/>\r\n                                <input type=\"hidden\" name=\"comingFrom\" value={this.state.comingFrom}/>\r\n                                <input type=\"hidden\" name=\"goingTo\" value={this.state.goingTo}/>\r\n                                <input type=\"hidden\" name=\"stay\" value={this.state.stay}/>\r\n                                <input type=\"hidden\" name=\"title\" value={this.state.title}/>\r\n                                <input type=\"hidden\" name=\"middlename\" value={this.state.middlename}/>\r\n                                <input type=\"hidden\" name=\"dob\" value={this.state.dob}/>\r\n                                <input type=\"hidden\" name=\"mob\" value={this.state.mob}/>\r\n                                <input type=\"hidden\" name=\"phone\" value={this.state.phone}/>\r\n                                <input type=\"hidden\" name=\"email\" value={this.state.email}/>\r\n                                <input type=\"hidden\" name=\"ID\" value={this.state.ID}/>\r\n                                <input type=\"hidden\" name=\"passportNum\" value={this.state.passportNum}/>\r\n                                <input type=\"hidden\" name=\"Gender\" value={this.state.Gender}/>\r\n                                <input type=\"hidden\" name=\"Nationality\" value={this.state.Nationality}/>\r\n                                <input type=\"hidden\" name=\"Address\" value={this.state.Address}/>\r\n                                <input type=\"hidden\" name=\"occupation\" value={this.state.occupation}/>\r\n                                <input type=\"hidden\" name=\"NokLname\" value={this.state.NokLname}/>\r\n                                <input type=\"hidden\" name=\"NokFname\" value={this.state.NokFname}/>\r\n                                <input type=\"hidden\" name=\"NokMname\" value={this.state.NokMname}/>\r\n                                <input type=\"hidden\" name=\"NokRelationship\" value={this.state.NokRelationship}/>\r\n                                <input type=\"hidden\" name=\"NokPhone\" value={this.state.NokPhone}/>\r\n                                <input type=\"hidden\" name=\"POV\" value={this.state.POV}/>\r\n                                <input type=\"hidden\" name=\"vehicleReg\" value={this.state.vehicleReg}/>\r\n                                <input type=\"hidden\" name=\"roomStatus\" value={this.state.roomStatus}/>\r\n\r\n\r\n                                <br/><hr/>\r\n                                <h5 className =\"mb-3\"> Change Departure Date</h5>\r\n\r\n                                <label className=\"formsize\">{this.rendercheckOutDate(this.state.departureDate)}</label>\r\n                                <br/><br/><hr/>\r\n                            </center>\r\n                        </form>\r\n                        <div>\r\n                            <center>\r\n                                <span>\r\n                                    <button className=\"btn btn-primary\" onClick={ () => this.handleSubmit () } >Extend Stay</button>\r\n                                    <Link to=\"/roomchart\">\r\n                                        <button className=\"btn btn-danger space\">Cancel</button>\r\n                                    </Link>\r\n                                </span>\r\n                            </center>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div>\r\n                    \r\n                                    \r\n                </div> \r\n                    \r\n                   \r\n                </div>\r\n                <Modal open={this.state.cardModal} onClose={()=>this.onCloseModalCard()} center>\r\n                    \r\n                    <div className=\"editModal\">\r\n                        \r\n                        <center>\r\n                            \r\n                        {this.renderCardMessages(this.cardMessages)};\r\n                            \r\n                        </center>\r\n                        \r\n                    </div>\r\n                    \r\n                </Modal>\r\n                \r\n            </>\r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(\">>> Inside ExDidMount\", this.state)\r\n\r\n        var ExID = this.props.match.params.stID;\r\n        var NxID = parseInt(ExID)\r\n       fetch(`${extendUrl}${NxID}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item) => {\r\n                let checkindate = moment(`${item.arrivalDate}`).format('YYYY-DD-MMM')\r\n                let checkoutdate = moment(`${item.departureDate}`).format('YYYY-DD-MMM')\r\n               \r\n\r\n                this.setState({\r\n                    _id:item._id,\r\n                    status:item.status,\r\n                    group:item.group,\r\n                    roomNumbers:item.roomNumbers,\r\n                    roomRate:item.roomRate,\r\n                    roomtypeName:item.roomtypeName,\r\n                    dailyRate:item.dailyRate,\r\n                    discounType:item.discounType,\r\n                    discountAmount:item.discountAmount,\r\n                    comingFrom:item.comingFrom,\r\n                    goingTo:item.goingTo,\r\n                    arrivalDate:checkindate,\r\n                    newDepartureDate:checkoutdate,\r\n                    stay:item.stay,\r\n                    postBillStatus:item.postBillStatus,\r\n                    title:item.title,\r\n                    fname:item.fname,\r\n                    lname:item.lname,\r\n                    middlename:item.middlename,\r\n                    dob:item.dob,\r\n                    mob:item.mob,\r\n                    phone:item.phone,\r\n                    email:item.email,\r\n                    ID:item.ID,\r\n                    passportNum:item.passportNum,\r\n                    Gender:item.Gender,\r\n                    Nationality:item.Nationality,\r\n                    Address:item.Address,\r\n                    occupation:item.occupation,\r\n                    NokLname:item.NokLname,\r\n                    NokFname:item.NokFname,\r\n                    NokMname:item.NokMname,\r\n                    NokRelationship:item.NokRelationship,\r\n                    NokPhone:item.NokPhone,\r\n                    POV:item.POV,\r\n                    vehicleReg:item.vehicleReg,\r\n                    roomStatus:item.roomStatus,\r\n                    transactionDate:item.transactionDate,\r\n                    calculatedstay:item.calculatedstay\r\n                })\r\n                sessionStorage.setItem('extStayID', this.state._id)\r\n                return 'ok'\r\n               \r\n            })\r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n    }\r\n\r\n}\r\nexport default Extenddays;","import React, {Component} from 'react';\r\nimport './Reception.css';\r\nimport {Link} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport NumberFormat from 'react-number-format'; \r\nimport FLogin from '../FLogin';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nconst changeUrl = \"https://zarvichdemo.localto.net/checkin?guest=\";\r\nconst putchangeUrl = \"https://zarvichdemo.localto.net/guestupdate2\";\r\nconst groupputchangeUrl = \"https://zarvichdemo.localto.net/groupguestupdate2\";\r\nconst roomstatusUrl = \"https://zarvichdemo.localto.net/rmstatus\";\r\nconst roomupgradeUrl = \"https://zarvichdemo.localto.net/rmstatus2\";\r\nconst getrooms = \"https://zarvichdemo.localto.net/roomstatus?Rstatus=green\";\r\nconst getroomrates = \"https://zarvichdemo.localto.net/rooms?rates=\";\r\nconst getroomtypes = \"https://zarvichdemo.localto.net/roomstatus?Rnumber=\";\r\nconst globalRmUpdtUrl = \"https://zarvichdemo.localto.net/rmstatus3\";\r\nconst roomChangeReasonUrl = \"https://zarvichdemo.localto.net/postRoomChangeReason\";\r\nconst userName = \"https://zarvichdemo.localto.net/fofUserInfo\";\r\n// const encodeCard = \"/prntCard\";\r\n// // const getCards = \"/getCards\";\r\n// const getErrors = \"/getCardError \";\r\n// const deleteErrors = \"/delError \";\r\n// const deleteCard = \"/delCard \";\r\n\r\n\r\nclass RoomChange extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\">>> inside RCContructor\", props)\r\n\r\n        this.state={\r\n            _id:'',\r\n            status:'',\r\n            group:'',\r\n            roomNumbers:'',\r\n            roomRate:'',\r\n            roomtypeName:'',\r\n            dailyRate:'',\r\n            discountAmount:0,\r\n            discounType:'',\r\n            comingFrom:'',\r\n            goingTo:'',\r\n            arrivalDate: '',\r\n            departureDate: '',\r\n            stay:'',\r\n            postBillStatus:'',\r\n            title:'',\r\n            fname:'',\r\n            lname:'',\r\n            middlename:'',\r\n            dob:'',\r\n            mob:'',\r\n            phone:'',\r\n            email:'',\r\n            ID:'',\r\n            passportNum:'',\r\n            Gender:'',\r\n            Nationality:'',\r\n            Address:'',\r\n            occupation:'',\r\n            NokLname:'',\r\n            NokFname:'',\r\n            NokMname:'',\r\n            NokRelationship:'',\r\n            NokPhone:'',\r\n            POV:'',\r\n            vehicleReg:'',\r\n            roomStatus:'',\r\n            newroomNum:'',\r\n            newroomtype:'',\r\n            newdailyRate:'',\r\n            displayrooms:'',\r\n            displayroomrates:'',\r\n            displayroomtypes:'',\r\n            reason:'',\r\n            transactionDate:'',\r\n            calculatedstay:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            cardDate: '',\r\n            cardMessages: [],\r\n            cardModal: false,\r\n            cardData: ''\r\n            \r\n            \r\n           \r\n        };\r\n        this.handleChange3 = this.handleChange3.bind(this);\r\n        \r\n     \r\n    }\r\n\r\n    renderRooms = (data) => {\r\n        if(data){\r\n            return data.map((item, index) => {\r\n                return(\r\n                    <option key={index} value={item.roomNumbers}>\r\n                        {item.roomNumbers}\r\n                    </option>\r\n                )\r\n            })\r\n        }\r\n        \r\n    }\r\n    renderRoomTypes = (data) => {\r\n        if(data){\r\n            return data.map((item, index) => {\r\n                if (this.state.roomNumbers === ''){\r\n                    return(\r\n                        <h5>\r\n                            {'Select a Room Number'}\r\n                        </h5>\r\n                    )\r\n                    \r\n                }\r\n                if (this.state.roomNumbers !==''){\r\n                    return(\r\n                        <option key={index} value={item.roomtypeName}>\r\n                            {item.roomtypeName}\r\n                        </option>\r\n                    )\r\n                    \r\n                \r\n                }\r\n                return 'ok'\r\n            })\r\n            \r\n                \r\n        }\r\n        \r\n    }\r\n\r\n    renderRoomRates = (data) => {\r\n        if(data){\r\n            return data.map((item, index) => {\r\n                if (this.state.roomNumbers === ''){\r\n                    return(\r\n                        <h5>\r\n                            {'Select a Room Number'}\r\n                        </h5>\r\n                    )\r\n                }\r\n                if (this.state.roomNumbers !==''){\r\n                    return(\r\n                        <option key={index} value={item.roomRate}>\r\n                            {item.roomRate}\r\n                        </option>\r\n                    )\r\n                    \r\n                    \r\n                }\r\n                return 'ok'\r\n                \r\n                               \r\n            })\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    handleChange4 = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        sessionStorage.setItem ('drr', event.target.value)\r\n      \r\n\r\n        if (this.state.discountAmount===''){\r\n            sessionStorage.setItem ('disc', 0)\r\n            var drate3 = 0;\r\n            drate3 = drate3 + parseInt(sessionStorage.getItem('drr')) - parseInt(sessionStorage.getItem('disc'))\r\n            this.setState({dailyRate:drate3})\r\n            \r\n        }\r\n        if (this.state.discounType==='Amount'){\r\n            sessionStorage.setItem ('discAval', this.state.discountAmount)\r\n            var drate4 = 0;\r\n            drate4 = drate4 + parseInt(sessionStorage.getItem('drr')) - parseInt(sessionStorage.getItem('discAval'))\r\n            this.setState({dailyRate:drate4})\r\n        }\r\n\r\n        if (this.state.discounType==='FlatRate'){\r\n            sessionStorage.setItem ('discAval', this.state.discountAmount)\r\n            var drate5 = 0;\r\n            drate5 = drate5 + parseInt(sessionStorage.getItem('discAval')) \r\n            this.setState({dailyRate:drate5})\r\n        }\r\n\r\n        if (this.state.discounType==='Percentage'){\r\n            sessionStorage.setItem ('discAval', this.state.discountAmount)\r\n            var drate6 = 0;\r\n            var per = parseInt(sessionStorage.getItem('discAval'))/100 * parseInt(sessionStorage.getItem('drr'))\r\n            drate6 = drate6 + parseInt(sessionStorage.getItem('drr')) - per\r\n            this.setState({dailyRate:drate6})\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    handleChange3 = (event) => {\r\n        \r\n       this.setState({\r\n            [event.target.name]:event.target.value\r\n\r\n        })\r\n\r\n        this.formatDate();\r\n\r\n        if (`${sessionStorage.getItem('rcNum')===null}`) {\r\n            this.setState({\r\n                displayroomtypes:'',\r\n                displayroomrates:'',\r\n                roomNumbers:'',\r\n                roomtypeName:'',\r\n                roomRate:''\r\n                \r\n                \r\n            })\r\n        }\r\n\r\n        if (event.target.value !=='Select Room') {\r\n\r\n            sessionStorage.setItem ('rcNum', event.target.value);\r\n            \r\n            fetch(`${getroomtypes}${sessionStorage.getItem('rcNum')}`, {method:'GET'})\r\n            .then((respo) => respo.json())\r\n            .then((data) => {\r\n                this.setState({displayroomtypes:data})\r\n            })\r\n            fetch(`${getroomrates}${sessionStorage.getItem('rcNum')}`, {method:'GET'})\r\n            .then((respd) => respd.json())\r\n            .then((data) => {\r\n                this.setState({displayroomrates:data})\r\n            })\r\n            this.setState({\r\n                roomNumbers:event.target.value\r\n            })\r\n        }\r\n       \r\n        \r\n        \r\n    }\r\n\r\n    formatDate(){\r\n        const originalDate = `${this.state.departureDate}`;\r\n        const formattedDate = moment(originalDate).format('YYMMDD');\r\n        this.setState({cardDate: formattedDate})\r\n    }\r\n\r\n    // deleteGuestCardInfo() {\r\n    //     fetch(`${deleteCard}`, {\r\n    //         method: 'DELETE'\r\n    //     });\r\n        \r\n    // }\r\n\r\n    // handleCardOperations() {\r\n        \r\n    //     fetch(`${getErrors}`, { method: 'GET' })\r\n    //     .then((resp) => resp.json())\r\n    //     .then((data) => {\r\n    //         this.setState ({\r\n    //             cardData: data\r\n    //         })\r\n    //         setTimeout(() => {\r\n    //             const newCard = this.state.cardData;\r\n    //             const hasEmptyMessage = newCard.some((item) => item.message === \"\");\r\n\r\n    //             if (hasEmptyMessage) {\r\n    //                 // Delete card errors if any message is empty\r\n    //                 fetch(`${deleteErrors}`, {\r\n    //                     method: 'DELETE'\r\n    //                 });\r\n                   \r\n    //                 // Perform additional actions (e.g., deleteGuestCardInfo, show alert, redirect)\r\n    //                 this.deleteGuestCardInfo();\r\n    //                 alert(\"Room Change Successful click Ok\");\r\n    //                 fetch(`${deleteErrors}`, {\r\n    //                     method: 'DELETE'\r\n    //                 });\r\n    //                 this.props.history.push('/roomchart');\r\n    //             } else {\r\n    //                 alert(\"Turn the card on the encoder or place a card on the encoder and click Ok\");\r\n    //                 this.handleCardOperations();\r\n    //             }\r\n    //         }, 1000);\r\n    //         // Check if any item has an empty message\r\n            \r\n    //     })\r\n        \r\n        \r\n    // }\r\n\r\n        \r\n    async handleSubmit2() {\r\n        \r\n        try {\r\n            var cid = sessionStorage.getItem('rcNum')\r\n            var ind = sessionStorage.getItem('rcIndex')\r\n            var nwrn = sessionStorage.getItem('nrn')\r\n\r\n            var statusUpdate = {\r\n\r\n                roomNumbers:`${this.state.roomNumbers}`,\r\n                status:`${this.state.status}`,\r\n                roomtypeName:`${this.state.roomtypeName}`,\r\n                fname:`${this.state.fname}`,\r\n                lname:`${this.state.lname}`,\r\n                roomStatus:`${this.state.roomStatus}`,\r\n                refID:`${this.state._id}`,\r\n                BillStatus:0\r\n                \r\n            }\r\n\r\n            var roomChangeReason = {\r\n                OldRoomNum:`${this.state.newroomNum}`,\r\n                NewRoomNum:`${this.state.roomNumbers}`,\r\n                Reason:`${this.state.reason}`,\r\n                date: new Date()\r\n\r\n            }\r\n\r\n            var globalRmChrgUpdate = {\r\n\r\n                refID: `${this.state._id}`,\r\n                arrivalDate:`${this.state.arrivalDate}`,\r\n                departureDate:`${this.state.departureDate}`,\r\n                roomNumbers:`${this.state.roomNumbers}`,\r\n                dailyRate: `${this.state.dailyRate}`,\r\n                description: 'Daily Room Rate'\r\n            }\r\n\r\n            var oldStatusUpdate = {\r\n\r\n                roomNumbers:`${this.state.newroomNum}`,\r\n                status:'',\r\n                roomtypeName:`${this.state.newroomtype}`,\r\n                fname: '',\r\n                lname: '',\r\n                roomStatus: 'black',\r\n                refID:'',\r\n                BillStatus:0\r\n            }\r\n\r\n            // let cardPrint = {\r\n            //     day :`${this.state.stay}`,\r\n            //     Begindate : `${this.state.cardDate}`,\r\n            //     roomno : `${this.state.roomNumbers}`,\r\n            //     door_lock : true\r\n\r\n            // }\r\n\r\n            var roomchangedetails = {\r\n                roomNumbers:`${this.state.roomNumbers}`,\r\n                refID:`${this.state._id}`,\r\n                status:`${this.state.status}`,\r\n                group:`${this.state.group}`,\r\n                roomRate:`${this.state.roomRate}`,\r\n                roomtypeName:`${this.state.roomtypeName}`,\r\n                dailyRate: `${this.state.dailyRate}`,\r\n                discountAmount:`${this.state.discountAmount}`,\r\n                discounType:`${this.state.discounType}`,\r\n                comingFrom:`${this.state.comingFrom}`,\r\n                goingTo:`${this.state.goingTo}`,\r\n                arrivalDate:`${this.state.arrivalDate}`,\r\n                departureDate:`${this.state.departureDate}`,\r\n                stay:`${this.state.stay}`,\r\n                postBillStatus:`${this.state.postBillStatus}`,\r\n                title:`${this.state.title}`,\r\n                fname:`${this.state.fname}`,\r\n                lname:`${this.state.lname}`,\r\n                middlename:`${this.state.middlename}`,\r\n                dob: `${this.state.dob}`,\r\n                mob:`${this.state.mob}`,\r\n                phone:`${this.state.phone}`,\r\n                email:`${this.state.email}`,\r\n                ID:`${this.state.ID}`,\r\n                passportNum:`${this.state.passportNum}`,\r\n                Gender:`${this.state.Gender}`,\r\n                Nationality:`${this.state.Nationality}`,\r\n                Address:`${this.state.Address}`,\r\n                occupation:`${this.state.occupation}`,\r\n                NokLname:`${this.state.NokLname}`,\r\n                NokFname:`${this.state.NokFname}`,\r\n                NokMname:`${this.state.NokMname}`,\r\n                NokRelationship:`${this.state.NokRelationship}`,\r\n                NokPhone:`${this.state.NokPhone}`,\r\n                POV:`${this.state.POV}`,\r\n                vehicleReg:`${this.state.vehicleReg}`,\r\n                roomStatus:`${this.state.roomStatus}`,\r\n                transactionDate:`${this.state.transactionDate}`,\r\n                calculatedstay:`${this.state.calculatedstay}`\r\n            }\r\n            let result = await fetch(`${putchangeUrl}/${ind}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    roomchangedetails\r\n                )\r\n                \r\n            });\r\n            \r\n            console.log('result>  ' + result)\r\n            var orgName = this.state.group;\r\n            if(orgName!==''){\r\n                let resultc = await fetch(`${groupputchangeUrl}/${ind}`, {\r\n                    method: 'put',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        roomchangedetails\r\n                    )\r\n                    \r\n                });\r\n                \r\n                console.log('resultc>  ' + resultc)\r\n            }\r\n\r\n            let result3 = await fetch(`${roomupgradeUrl}/${cid}`, {\r\n                method:'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                 \r\n                },\r\n                body: JSON.stringify(\r\n                    statusUpdate\r\n                )\r\n        \r\n\r\n            });\r\n\r\n            console.log('result3> '+ result3)\r\n            \r\n\r\n            let result4 = await fetch(`${roomstatusUrl}/${nwrn}`, {\r\n                method:'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                 \r\n                },\r\n                body: JSON.stringify(\r\n                    oldStatusUpdate\r\n                )\r\n        \r\n\r\n            });\r\n\r\n            console.log('result4> '+ result4)\r\n\r\n\r\n            let result5 = await fetch(`${globalRmUpdtUrl}/${ind}`, {\r\n                method:'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                 \r\n                },\r\n                body: JSON.stringify(\r\n                    globalRmChrgUpdate\r\n                )\r\n        \r\n\r\n            });\r\n\r\n            console.log('result5> '+ result5)\r\n\r\n            let result6 = await fetch(`${roomChangeReasonUrl}`, {\r\n                method:'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                 \r\n                },\r\n                body: JSON.stringify(\r\n                    roomChangeReason\r\n                )\r\n        \r\n            });\r\n\r\n            // let cardUnlock = fetch(`${encodeCard}` , {\r\n            //     method: 'post',\r\n\r\n            //     headers: {\r\n            //         'Accept': 'application/json',\r\n            //         'Content-type': 'application/json',\r\n            //     },\r\n            //     body: JSON.stringify(\r\n            //         cardPrint\r\n            //     )\r\n\r\n            // });\r\n            // console.log('cardUnlock>  ' + cardUnlock)\r\n\r\n            // this.handleCardOperations();\r\n\r\n            console.log('result6> '+ result6)\r\n            // alert(\"Room Change Successful\")\r\n            // this.props.history.push('/roomchart')\r\n                    \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        console.log (\">>> Inside RCdetails\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <FLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        \r\n            return(\r\n            <>\r\n                \r\n                <div className=\"background190\">\r\n                    \r\n                    <div className=\"formdesign110\">\r\n                        \r\n                        \r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\">\r\n                                <label className='form-label valid'>Names</label>\r\n                                <label className=\"form-control mb-3 formsize2\">{this.state.lname} {this.state.fname} </label>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                               <label className='form-label valid'>Room Status</label>\r\n                                <label className=\"form-control mb-3 formsize6\">{this.state.newroomNum} | {this.state.newroomtype} </label>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                               <label className='form-label valid'>Daily Room Rate</label>\r\n                               <p className=\"form-control mb-3 formsize2\"> <NumberFormat value={this.state.newdailyRate} displayType={\"text\"} thousandSeparator={true} prefix={\"N\"}/>.00</p>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                               <label className='form-label valid'>Discount ({this.state.discounType})</label>\r\n                               <input type=\"number\" className=\"form-control mb-3 formsize2\" name=\"discountAmount\" value={this.state.discountAmount} onChange={this.handleChange}/>\r\n                               \r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <hr/>\r\n                        \r\n                        <form>\r\n                        \r\n                            <center>\r\n                                <h5 className =\"mb-3\"> Room Change</h5>\r\n                                <label className='form-label'>Vacant Rooms</label>\r\n                                <select className=\"form-select formsize mb-3\" name=\"roomNumbers\" onChange={this.handleChange3.bind(this)}>\r\n                                    <option selected value=''>Select Room</option>\r\n                                    {this.renderRooms(this.state.displayrooms)}\r\n                                                                        \r\n                                </select>\r\n\r\n                                <label className='form-label'>Room Types</label>\r\n                                <select className=\"form-select formsize mb-3\" name=\"roomtypeName\" onChange={this.handleChange}>\r\n                                    <option selected value=''>Select Room Type</option>\r\n                                    {this.renderRoomTypes(this.state.displayroomtypes)}\r\n                                                                        \r\n                                </select>\r\n\r\n                                <label className='form-label'>Room Rate</label>\r\n                                <select className=\"form-select formsize mb-3\" name=\"roomRate\" onChange={this.handleChange4}>\r\n                                    <option selected value=''>Select Room Rate</option>\r\n                                    {this.renderRoomRates(this.state.displayroomrates)}\r\n                                    \r\n                                                                        \r\n                                </select>\r\n                                <label className='form-label'>Reason for Room Change</label>\r\n                                <textarea row=\"4\" className=\"form-control formsize mb-3\" name=\"reason\" value={this.state.reason} onChange={this.handleChange}/>\r\n\r\n                                <input type=\"hidden\" name=\"departureDate\" value={this.state.departureDate}/>\r\n                                <input type=\"hidden\" name=\"arrivalDate\" value={this.state.arrivalDate}/>\r\n                                <input type=\"hidden\" name=\"group\" value={this.state.group}/>\r\n                                <input type=\"hidden\" name=\"status\" value={this.state.status}/>\r\n                                <input type=\"hidden\" name=\"_id\" value={this.state._id}/>\r\n                                <input type=\"hidden\" name=\"discounType\" value={this.state.discounType}/>\r\n                                <input type=\"hidden\" name=\"discountAmount\" value={this.state.discountAmount}/>\r\n                                <input type=\"hidden\" name=\"comingFrom\" value={this.state.comingFrom}/>\r\n                                <input type=\"hidden\" name=\"goingTo\" value={this.state.goingTo}/>\r\n                                <input type=\"hidden\" name=\"stay\" value={this.state.stay}/>\r\n                                <input type=\"hidden\" name=\"title\" value={this.state.title}/>\r\n                                <input type=\"hidden\" name=\"middlename\" value={this.state.middlename}/>\r\n                                <input type=\"hidden\" name=\"dob\" value={this.state.dob}/>\r\n                                <input type=\"hidden\" name=\"mob\" value={this.state.mob}/>\r\n                                <input type=\"hidden\" name=\"phone\" value={this.state.phone}/>\r\n                                <input type=\"hidden\" name=\"email\" value={this.state.email}/>\r\n                                <input type=\"hidden\" name=\"ID\" value={this.state.ID}/>\r\n                                <input type=\"hidden\" name=\"passportNum\" value={this.state.passportNum}/>\r\n                                <input type=\"hidden\" name=\"Gender\" value={this.state.Gender}/>\r\n                                <input type=\"hidden\" name=\"Nationality\" value={this.state.Nationality}/>\r\n                                <input type=\"hidden\" name=\"Address\" value={this.state.Address}/>\r\n                                <input type=\"hidden\" name=\"occupation\" value={this.state.occupation}/>\r\n                                <input type=\"hidden\" name=\"NokLname\" value={this.state.NokLname}/>\r\n                                <input type=\"hidden\" name=\"NokFname\" value={this.state.NokFname}/>\r\n                                <input type=\"hidden\" name=\"NokMname\" value={this.state.NokMname}/>\r\n                                <input type=\"hidden\" name=\"NokRelationship\" value={this.state.NokRelationship}/>\r\n                                <input type=\"hidden\" name=\"NokPhone\" value={this.state.NokPhone}/>\r\n                                <input type=\"hidden\" name=\"POV\" value={this.state.POV}/>\r\n                                <input type=\"hidden\" name=\"vehicleReg\" value={this.state.vehicleReg}/>\r\n                                <input type=\"hidden\" name=\"roomStatus\" value={this.state.roomStatus}/>\r\n\r\n\r\n                                <hr/>\r\n                                \r\n                                <label className='form-label valid'>Daily Room Rate</label>\r\n                                \r\n                                <p className=\"form-control mb-3 formsize2\"> <NumberFormat value={this.state.dailyRate} displayType={\"text\"} thousandSeparator={true} prefix={\"N\"}/>.00</p>\r\n                                                            \r\n                                <hr/>\r\n                            </center>\r\n                        </form>\r\n                        <div>\r\n                            <center>\r\n                                <span>\r\n                                    <button disabled={this.state.dailyRate===''||this.state.reason===''} className=\"btn btn-primary\" onClick={ () => this.handleSubmit2 () } >Change Room</button>\r\n                                    <Link to=\"/roomchart\">\r\n                                        <button className=\"btn btn-danger space\">Cancel Changes</button>\r\n                                    </Link>\r\n                                </span>\r\n                            </center>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div>\r\n                    \r\n                                    \r\n                </div> \r\n                    \r\n                   \r\n                </div>\r\n                \r\n            </>\r\n        )\r\n        \r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(\">>> Inside ExDidMount\", this.state)\r\n\r\n        var ExID = this.props.match.params.rcID;\r\n        var NxID = parseInt(ExID)\r\n       fetch(`${changeUrl}${NxID}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n           \r\n            data.map((item) => {\r\n                let checkindate = moment(`${item.arrivalDate}`).format('YYYY-DD-MMM')\r\n                let checkoutdate = moment(`${item.departureDate}`).format('YYYY-DD-MMM')\r\n               \r\n\r\n                this.setState({\r\n                    _id:item._id,\r\n                    status:item.status,\r\n                    group:item.group,\r\n                    newdailyRate:item.dailyRate,\r\n                    departureDate:checkoutdate,\r\n                    discountAmount:item.discountAmount,\r\n                    discounType:item.discounType,\r\n                    comingFrom:item.comingFrom,\r\n                    goingTo:item.goingTo,\r\n                    arrivalDate:checkindate,\r\n                    newroomNum:item.roomNumbers,\r\n                    newroomtype:item.roomtypeName,\r\n                    stay:item.stay,\r\n                    postBillStatus:item.postBillStatus,\r\n                    title:item.title,\r\n                    fname:item.fname,\r\n                    lname:item.lname,\r\n                    middlename:item.middlename,\r\n                    dob:item.dob,\r\n                    mob:item.mob,\r\n                    phone:item.phone,\r\n                    email:item.email,\r\n                    ID:item.ID,\r\n                    passportNum:item.passportNum,\r\n                    Gender:item.Gender,\r\n                    Nationality:item.Nationality,\r\n                    Address:item.Address,\r\n                    occupation:item.occupation,\r\n                    NokLname:item.NokLname,\r\n                    NokFname:item.NokFname,\r\n                    NokMname:item.NokMname,\r\n                    NokRelationship:item.NokRelationship,\r\n                    NokPhone:item.NokPhone,\r\n                    POV:item.POV,\r\n                    vehicleReg:item.vehicleReg,\r\n                    roomStatus:item.roomStatus,\r\n                    transactionDate:item.transactionDate,\r\n                    calculatedstay:item.calculatedstay\r\n\r\n                })\r\n                \r\n                sessionStorage.setItem ('rcIndex', item._id)\r\n                sessionStorage.setItem ('nrn', this.state.newroomNum)\r\n               \r\n                return 'ok'\r\n                \r\n\r\n            })\r\n        })\r\n        fetch(`${getrooms}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                displayrooms:data\r\n                \r\n            })\r\n           \r\n           \r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n        \r\n    }\r\n\r\n    \r\n\r\n}\r\nexport default RoomChange;","import React, { Component } from 'react';\r\nimport 'react-responsive-modal/styles.css';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport './Bar/BarReport.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst userLogin = \"https://zarvichdemo.localto.net/restUserInfo?restcode=\";\r\nconst userName = \"https://zarvichdemo.localto.net/restUserInfo\";\r\n\r\n\r\n\r\nclass Restlogin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\">>> inside loginConstructor\", props)\r\n       \r\n        this.state = {\r\n            login: false,\r\n            userInfo:'',\r\n            userPassword:'',\r\n            authPassword:'',\r\n            selectUserName:'',\r\n            shift:'',\r\n            \r\n        };\r\n        \r\n    }\r\n\r\n    login(){\r\n        fetch(`${userLogin}${this.state.userPassword}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({userInfo:data})\r\n           \r\n            this.myTimer = setTimeout(() => {\r\n                if(this.state.userInfo.length>0){\r\n                    this.setState({\r\n                        login: false\r\n                        \r\n                    })\r\n                    window.location.reload();\r\n                    data.map((item) =>{\r\n                        localStorage.setItem('userInfo',item.name);\r\n                        localStorage.setItem('shift',this.state.shift);\r\n                        return 'ok'\r\n                    })\r\n                }\r\n            },1000)\r\n           \r\n        })\r\n\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseModallogin(){\r\n        this.setState({\r\n            login: true\r\n        })\r\n        \r\n    }\r\n\r\n    render() {\r\n        console.log (\">>> Inside logindetails\", this.state)\r\n        return (\r\n            <>\r\n                <Modal open={this.state.login} onClose={()=>this.onCloseModallogin()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Login First</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <input type=\"password\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"userPassword\" require placeholder=\"Enter password\" value={this.state.userPassword} onChange={this.handleChange}/>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"shift\" require placeholder=\"Select Shift\" value={this.state.shift} list=\"shift\"  onChange={this.handleChange}/>\r\n                                    <datalist id=\"shift\">\r\n                                        <option value = \"Morning Shift\"></option>\r\n                                        <option value = \"Night Shift\"></option>\r\n                                        <option value = \"All Day\"></option>\r\n                                    </datalist>\r\n                                    <button disabled = {this.state.userPassword===''||this.state.shift===''} className=\"btn btn-warning formsize91\" onClick={()=>this.login()}>Login</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n        \r\n    componentDidMount() {\r\n        console.log(\">>> Inside loginDidMount\", this.state)\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                selectUserName:data,\r\n                login: true\r\n            \r\n            });\r\n            \r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Restlogin;","import React,{Component} from 'react';\r\nimport '../Bar/Bar.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment';\r\nimport Restlogin from '../Restlogin';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nconst restMenugrpUrl = \"https://zarvichdemo.localto.net/menuCategories\";\r\nconst menuUrl = \"https://zarvichdemo.localto.net/menuitems?mealtypes=\";\r\nconst postRestBill = \"https://zarvichdemo.localto.net/restaurant\";\r\nconst postRestCredit = \"https://zarvichdemo.localto.net/restCredit\";\r\nconst getRooms =\"https://zarvichdemo.localto.net/checkin?docket=Yes\";\r\nconst getGuestID = \"https://zarvichdemo.localto.net/checkin?roomNumID=\";\r\nconst postDocketToRoom = \"https://zarvichdemo.localto.net/bill\";\r\nconst getPaymentMethods = \"https://zarvichdemo.localto.net/paymentMethods\";\r\nconst postToTable = \"https://zarvichdemo.localto.net/restaurantTablePost\";\r\nconst getTable = \"https://zarvichdemo.localto.net/restTable\";\r\nconst getTableID = \"https://zarvichdemo.localto.net/restTable?resttableID=\";\r\nconst getStoreData = \"https://zarvichdemo.localto.net/getRestBarStore\";\r\nconst postBarSalesQty = \"https://zarvichdemo.localto.net/postRestSalesQty\";\r\nconst getBarSalesQty = \"https://zarvichdemo.localto.net/getRestSalesQty\";\r\nconst getRestCredit = \"https://zarvichdemo.localto.net/restaurantCredit?RCstaff=\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\nconst getWorkDate = \"https://zarvichdemo.localto.net/getActive\";\r\nconst userName = \"https://zarvichdemo.localto.net/restUserInfo\";\r\n\r\n\r\nclass RestaurantApp extends Component {\r\n\r\n    constructor(props) {\r\n        super (props);\r\n        console.log(\">>>Inside RESConstructor\",props)\r\n\r\n        this.state = {\r\n            Newmeal:'',\r\n            Newprice:'',\r\n            Newqty:0,\r\n            Newid:'',\r\n            edit:false,\r\n            credit:false,\r\n            editreceipt:false,\r\n            compModal:false,\r\n            report:false,\r\n            printStop:0,\r\n            docketFirst:0,\r\n            printBTN:'Print',\r\n            print:0,\r\n            blockTable:0,\r\n            IDfound:[],\r\n\r\n\r\n            menu:'',\r\n            meal:'',\r\n            mealPrice:'',\r\n            mealQuantity:'',\r\n            mealId:Math.floor(Math.random()*10000),\r\n            guestInhouseID:'',\r\n            selected:[],\r\n            menuID:'',\r\n            menulist:'',\r\n            cost:0,\r\n            amountPaid:'',\r\n            roomNumbers:'',\r\n            paymentMethod:'',\r\n            displayPaymentMethods:'',\r\n            displayRoomNums:'',\r\n            transactionDate:'',\r\n            tables:'',\r\n            group:'',\r\n            newTable:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            shiftcolor:'',\r\n            shift:localStorage.getItem('shift'),\r\n\r\n            DrinkstoreData:[],\r\n            DrinkSalesQtyData:[],\r\n            DrinkStore:0,\r\n            DrinkSalesQty:0,\r\n            stockBal:0,\r\n            \r\n            \r\n            DrinkSalesQtyReportData:[],\r\n            useReportName:'',\r\n            useReportShift:'',\r\n            useReportDate:'',\r\n            totalSales:0,\r\n            Stockbtn:'Add',\r\n            NewtableNum:0,\r\n\r\n\r\n            creditSales:'',\r\n            TotalCredit:0,\r\n            creditPaid:0,\r\n            payNwMeth:'',\r\n            TotalCreditPaid:0,\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:'',\r\n\r\n            pass:'',\r\n            pword:false,\r\n            pword2:false,\r\n\r\n            \r\n\r\n        }\r\n        \r\n    }\r\n\r\n    onOpenPword(){\r\n        if(this.state.paymentMethod===\"Credit\"){\r\n            this.setState({\r\n                pword: true\r\n            })\r\n            \r\n        }\r\n        else{\r\n            this.setState({\r\n                pword: false\r\n            });\r\n            this.onOpenModalreceipt();\r\n            this.postQty()\r\n        }\r\n\r\n    }\r\n\r\n    onClosePword(){\r\n        this.setState({\r\n            pword: false\r\n        })\r\n        \r\n    }\r\n\r\n    AllowRefund(){\r\n        if(this.state.pass==='6849'){\r\n            this.onOpenModalreceipt();\r\n            this.postQty();\r\n            this.onClosePword()\r\n\r\n        }\r\n        else{\r\n            alert('Access Denied')\r\n        }\r\n    }\r\n\r\n\r\n    onOpenModaltoprint(){\r\n        this.setState({\r\n            edit: true\r\n            \r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    \r\n    onOpenCompModal(){\r\n        this.setState({\r\n            compModal: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseCompModal(){\r\n        this.setState({\r\n            compModal: false\r\n        })\r\n        \r\n    }\r\n\r\n\r\n    onCloseModaltoprint(){\r\n        this.setState({\r\n            edit: false\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseModalCredit(){\r\n        this.setState({\r\n            credit: false,\r\n            creditPaid:0\r\n        })\r\n        \r\n    }\r\n    onOpenModalreceipt(){\r\n        this.setState({\r\n            editreceipt: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseModalreceipt(){\r\n        this.setState({\r\n            editreceipt: false\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenModalreport(){\r\n        this.setState({\r\n            report: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseModalreport(){\r\n        this.setState({\r\n            report: false\r\n        })\r\n        \r\n    }\r\n\r\n    handleReport(){\r\n\r\n        var todayDate = moment(this.state.transactionDate).format('MMM DD YYYY');\r\n        var username = localStorage.getItem('userInfo');\r\n        var findQty = `${getBarSalesQty}?useDate=${todayDate}&&useshift=${this.state.shift}&&userstaff=${username}`\r\n        \r\n        fetch(`${findQty}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                DrinkSalesQtyReportData:data\r\n            })\r\n            \r\n        })\r\n        this.myTimer = setTimeout(() => {\r\n            if(this.state.DrinkSalesQtyReportData.length>0){\r\n                var useData = this.state.DrinkSalesQtyReportData\r\n                var findUser = useData.find(element=>element.user===username)\r\n                var useDt = [];\r\n                useDt.push(findUser);\r\n                this.setState({useReportName:useDt.map(item=>item.user)})\r\n                this.setState({useReportShift:useDt.map(item=>item.shift)})\r\n                this.setState({useReportDate:useDt.map(item=>item.tranDate)})\r\n                \r\n                var TotSal = useData.reduce((total, item)=>{\r\n                    return total + parseInt (item.productPrice * item.Quantity)\r\n                }, 0);\r\n                this.setState({totalSales:TotSal});\r\n    \r\n                this.onOpenModalreport()\r\n            }\r\n            else{\r\n    \r\n                alert('No Sales was posted by '+username)\r\n    \r\n            }\r\n        },1000)\r\n        \r\n        \r\n    }\r\n\r\n    handleStock(){\r\n        if(this.state.DrinkstoreData.length>0){\r\n            var stockItem = sessionStorage.getItem('meal');\r\n           \r\n            //check available stock\r\n            const stockData=this.state.DrinkstoreData;\r\n            var totalStock = stockData.filter(stock => stock.productName.includes(stockItem)).reduce((total, item)=>{\r\n                return total + parseInt(item.piecesOut)\r\n            }, 0);\r\n            this.setState({DrinkStore:totalStock})\r\n\r\n            //check quantity sold\r\n            const qtyData=this.state.DrinkSalesQtyData;\r\n            var totalQty = qtyData.filter(qty => qty.productName.includes(stockItem)).reduce((total, item)=>{\r\n                return total + parseInt(item.Quantity)\r\n            }, 0);\r\n            this.setState({DrinkSalesQty:totalQty})\r\n            \r\n            //show stock balance\r\n            this.myTimer = setTimeout(() => {\r\n\r\n                var Total = 0;\r\n                var ST = Total + this.state.DrinkStore-this.state.DrinkSalesQty;\r\n                this.setState({stockBal:ST})\r\n\r\n                // if(this.state.stockBal===0){\r\n                //     var stockItem2 = sessionStorage.getItem('meal');\r\n                //     alert(stockItem2+' is out of stock')\r\n                //     this.setState({\r\n                //         Newmeal:'',\r\n                //         Newprice:'',\r\n                //         Newqty:0,\r\n                //         Newid:''\r\n                //     })\r\n                // }\r\n                \r\n                \r\n            },1000);\r\n\r\n            \r\n                \r\n        }\r\n       \r\n\r\n    }\r\n\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n        \r\n    handleCost=(selected)=>{\r\n        if(this.state.selected!==null){\r\n           const totalSale = selected.reduce((total, item) => {\r\n               return total + item.mealPrice * item.qty\r\n           }, 0);\r\n           this.setState({cost:totalSale})\r\n        }\r\n        if(this.state.cost!==null){\r\n            fetch(`${getRooms}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayRoomNums:data\r\n                })\r\n            })\r\n            fetch(`${getPaymentMethods}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayPaymentMethods:data\r\n                })\r\n            })\r\n            localStorage.setItem('printMenus', JSON.stringify(selected));\r\n            localStorage.removeItem('btnCntrl');\r\n            localStorage.removeItem('delcntrl')\r\n            \r\n            \r\n        }\r\n        \r\n        \r\n    }  \r\n   \r\n    addqty = () => {\r\n        const del = this.state.selected.map((item) => parseInt(item.qty + 1));\r\n        this.setState({selected:del})\r\n       \r\n    }\r\n        \r\n    removeAll = (id) => {\r\n        const del = this.state.selected.filter(item => item.id === id);\r\n        this.setState({selected:del})\r\n        this.setState({cost:0})\r\n        this.setState({roomNumbers:''})\r\n        this.setState({amountPaid:''})\r\n        this.setState({displayRoomNums:''})\r\n        this.setState({paymentMethod:''})\r\n        this.setState({displayPaymentMethods:''})\r\n        this.setState({\r\n            displayPaymentMethods:'',\r\n            DrinkStore:0,\r\n            DrinkSalesQty:0,\r\n            stockBal:0\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n\r\n    async addToTable() {\r\n          \r\n        try {\r\n            var tableID2 = sessionStorage.getItem('tableNumber2');\r\n\r\n           var orderItems = this.state.selected;\r\n           var data = {\r\n                selected:orderItems.map(item => item),\r\n                billCost:this.state.cost,\r\n                tableNum:sessionStorage.getItem('tableNumber2'),\r\n                user:localStorage.getItem('userInfo')\r\n            }\r\n           \r\n            \r\n            let result = await fetch(`${postToTable}/${tableID2}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result>  ' + result)\r\n            this.setState({selected:[]})\r\n            localStorage.setItem('btnCntrl',true);\r\n            this.setState({cost:0})\r\n            this.setState({roomNumbers:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            this.setState({paymentMethod:''})\r\n            this.setState({printStop:0})\r\n            localStorage.removeItem('delcntrl');\r\n            sessionStorage.removeItem('tableNumber2')\r\n            \r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            });\r\n\r\n            \r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async NewTable() {\r\n          \r\n        try {\r\n            \r\n            var NewtableID = sessionStorage.getItem('tableNumber2');\r\n\r\n            var orderItems = this.state.selected;\r\n            var data = {\r\n                selected:orderItems.map(item => item),\r\n                billCost:this.state.cost,\r\n                tableNum:NewtableID\r\n            }\r\n            \r\n            if(this.state.cost===0){\r\n                alert (\"If you click table Number again without an order, I will slap you!\")\r\n                sessionStorage.removeItem('tableNumber2')\r\n            }\r\n\r\n            else{\r\n                let result = await fetch(`${postToTable}/${NewtableID}`, {\r\n                    method: 'put',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        data\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('result>  ' + result)\r\n                this.setState({selected:[]})\r\n                localStorage.setItem('btnCntrl',true);\r\n                this.setState({cost:0})\r\n                this.setState({roomNumbers:''})\r\n                this.setState({displayRoomNums:''})\r\n                this.setState({displayPaymentMethods:''})\r\n                this.setState({paymentMethod:''})\r\n                localStorage.removeItem('delcntrl');\r\n                this.setState({newTable:''})\r\n                \r\n    \r\n                fetch(`${getTable}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({tables:data})\r\n                });\r\n    \r\n            }\r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async getTableR() {\r\n          \r\n        try {\r\n            \r\n            var tableID2 = sessionStorage.getItem('tableNumber2');\r\n           \r\n            fetch(`${getTableID}${tableID2}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n            data.map((item)=>{\r\n            this.setState({\r\n                selected:item.selected,\r\n                cost:item.billCost,\r\n                NewtableNum:1\r\n            })\r\n            return 'ok'\r\n                   \r\n            })\r\n                localStorage.removeItem('btnCntrl')\r\n            })\r\n\r\n            fetch(`${getRooms}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayRoomNums:data\r\n                })\r\n            })\r\n        \r\n            fetch(`${getPaymentMethods}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayPaymentMethods:data\r\n                })\r\n            })\r\n            localStorage.setItem('delcntrl',true)\r\n            this.setState({printStop:1})\r\n       \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    postQty(){\r\n       \r\n        try {\r\n            \r\n            this.state.selected.map((item)=>{\r\n                var prodName = item.meal;\r\n                var prodPrice = item.mealPrice;\r\n                var Qty = item.qty;\r\n                var ID = item.tranID;\r\n                \r\n                var salesQty = {\r\n                    id:ID,\r\n                    productName:prodName,\r\n                    productPrice:prodPrice,\r\n                    Quantity:parseInt(Qty),\r\n                    user: localStorage.getItem('userInfo'),\r\n                    tranDate:moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                    shift:localStorage.getItem('shift'),\r\n                                \r\n                }\r\n                let result = fetch(`${postBarSalesQty}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        salesQty\r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                this.setState({\r\n                    Newmeal:'',\r\n                    Newprice:'',\r\n                    Newqty:0,\r\n                    Newid:'',\r\n                    DrinkstoreData:[],\r\n                    DrinkSalesQtyData:[]\r\n                })\r\n\r\n                fetch(`${getStoreData}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        DrinkstoreData:data\r\n                    })\r\n                })\r\n\r\n                fetch(`${getBarSalesQty}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        DrinkSalesQtyData:data\r\n                    })\r\n                })\r\n                \r\n                return 'ok'\r\n            })    \r\n        \r\n\r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n             \r\n    buttonClick (){\r\n        fetch(`${menuUrl}${this.state.menuID}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                menulist:data\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    sendtoprinter(){\r\n        \r\n        window.print();\r\n        \r\n       \r\n    }\r\n\r\n    sendtoprinter2(){\r\n        if(this.state.printBTN==='Print'){\r\n            window.print();\r\n            // this.printReceipt()\r\n            this.setState({printBTN:'Close'})\r\n        }\r\n        else if(this.state.printBTN==='Close'){\r\n            this.setState({edit: false})      \r\n            this.setState({printBTN:'Print'})\r\n            this.setState({\r\n                print:0,\r\n                printStop:0,\r\n                // DrinkStore:0,\r\n                DrinkSalesQty:0,\r\n                stockBal:0,\r\n                blockTable:0\r\n\r\n            }) \r\n            \r\n        }\r\n       \r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n    \r\n    }\r\n\r\n    handleCredit(){\r\n        var userCredit = localStorage.getItem('userInfo');\r\n        fetch(`${getRestCredit}${userCredit}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                creditSales:data\r\n            })\r\n            data.map((item)=>{\r\n                var allCredit = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.creditAmount)\r\n                }, 0);\r\n\r\n                this.setState({TotalCredit:allCredit,});\r\n                var allCreditPaid = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.creditPaid)\r\n                }, 0);\r\n                this.setState({TotalCreditPaid:allCreditPaid});\r\n                return 'ok'\r\n            })\r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            this.setState({\r\n                credit: true\r\n            })\r\n    \r\n        },1000);\r\n        \r\n        \r\n    }\r\n\r\n    handleChange3 = (event) => {\r\n        if(this.state.Newmeal!==''||this.state.Newprice!==''||this.state.Newid!==''){\r\n            this.setState({\r\n                [event.target.name]:event.target.value\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    handleChange2 = (event) => {\r\n        console.log('inside handle', this.props)\r\n        this.setState({\r\n           [event.target.name]:event.target.value\r\n        })\r\n        fetch(`${getGuestID}${event.target.value}`, {method: 'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item) => {\r\n                this.setState({\r\n                    guestInhouseID:item.refID,\r\n                    group:item.group\r\n                })\r\n                return 'ok'\r\n            })\r\n        })\r\n    \r\n    }\r\n    \r\n    async handleSubmit() {\r\n          \r\n        \r\n        try {\r\n            var tableID = sessionStorage.getItem('tableNumber2');\r\n            \r\n            var data = {\r\n                selected:[],\r\n                billCost:\"\",\r\n                tableNum:sessionStorage.getItem('tableNumber2')\r\n            }\r\n\r\n            if(this.state.paymentMethod===\"POS\"){\r\n                var POSSales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    POSAmount:`${this.state.amountPaid}`,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Restaurant Sales\",\r\n                    department: \"Restaurant Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result5 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        POSSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result5>  ' + result5)\r\n\r\n            }\r\n            if(this.state.paymentMethod===\"Cash\"){\r\n                var CashSales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    CashAmount:`${this.state.amountPaid}`,\r\n                    POSAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Restaurant Sales\",\r\n                    department: \"Restaurant Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result4 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CashSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result4>  ' + result4)\r\n                \r\n            }\r\n            if(this.state.paymentMethod===\"Transfer\"){\r\n                var transferSales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    TransferAmount:`${this.state.amountPaid}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Restaurant Sales\",\r\n                    department: \"Restaurant Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result3 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        transferSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3>  ' + result3)\r\n                \r\n            }\r\n\r\n            if(this.state.paymentMethod===\"Complimentary\"){\r\n                var complimentarySales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    amountPaid:`${this.state.amountPaid}`,\r\n                    CompDebit:`${this.state.cost}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Restaurant Sales\",\r\n                    department: \"Restaurant Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n\r\n                let result2 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        complimentarySales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2>  ' + result2)\r\n\r\n            }\r\n\r\n            if(this.state.paymentMethod===\"Credit\"){\r\n                var CreditSales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    creditAmount:`${this.state.amountPaid}`,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Restaurant Credit\",\r\n                    department: \"Restaurant Credit\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift'),\r\n                    creditPaid:`${this.state.creditPaid}`\r\n                   \r\n                }\r\n\r\n                let result2 = await fetch(postRestCredit, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CreditSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2>  ' + result2)\r\n\r\n            }\r\n            \r\n            let result12 = await fetch(`${postToTable}/${tableID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result12>  ' + result12)\r\n\r\n            alert(\"Sales Posted\")\r\n            this.setState({selected:[]});\r\n            this.setState({cost:0})\r\n            this.setState({amountPaid:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({roomNumbers:''})\r\n            this.setState({paymentMethod:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            this.setState({group:''})\r\n            this.setState({\r\n                shift:'',\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:'',\r\n                DrinkstoreData:[],\r\n                DrinkSalesQtyData:[],\r\n                NewtableNum:0\r\n            })\r\n            localStorage.removeItem('delcntrl');\r\n            sessionStorage.removeItem('tableNumber2')\r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            })\r\n           \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async postCredit() {\r\n          \r\n        \r\n        try {\r\n            \r\n            var CreditSales = {\r\n                docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                cost:0,\r\n                creditAmount:0,\r\n                paymentMethod:`${this.state.paymentMethod}`,\r\n                description: \"Restaurant Credit\",\r\n                department: \"Restaurant Credit\",\r\n                docketDetails: this.state.selected,\r\n                group:`${this.state.group}`,\r\n                user: localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift'),\r\n                creditPaid:`${this.state.creditPaid}`\r\n                \r\n            }\r\n            let creditPay = await fetch(postRestCredit, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    CreditSales\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('creditPay>  ' + creditPay)\r\n\r\n            if(this.state.paymentMethod===\"POS\"){\r\n                var POSSales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    POSAmount:`${this.state.creditPaid}`,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Restaurant Credit\",\r\n                    department: \"Restaurant Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result5 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        POSSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result5>  ' + result5)\r\n\r\n            }\r\n            if(this.state.paymentMethod===\"Cash\"){\r\n                var CashSales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    CashAmount:`${this.state.creditPaid}`,\r\n                    POSAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Restaurant Credit\",\r\n                    department: \"Restaurant Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result4 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CashSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result4>  ' + result4)\r\n                \r\n            }\r\n            if(this.state.paymentMethod===\"Transfer\"){\r\n                var transferSales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    TransferAmount:`${this.state.creditPaid}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Restaurant Credit\",\r\n                    department: \"Restaurant Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result3 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        transferSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3>  ' + result3)\r\n                \r\n            }\r\n\r\n            alert(\"Credit Posted\")\r\n            this.setState({\r\n                creditSales:'',\r\n                TotalCredit:0,\r\n                creditPaid:0,\r\n                TotalCreditPaid:0\r\n            })\r\n                               \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleRoomSubmit() {\r\n        \r\n        try {\r\n            \r\n            var tableID2 = sessionStorage.getItem('tableNumber2');\r\n\r\n            var data = {\r\n                selected:[],\r\n                billCost:\"\",\r\n                tableNum:sessionStorage.getItem('tableNumber2')\r\n            }\r\n            \r\n            var restaurantSales = {\r\n                docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                refID:`${this.state.guestInhouseID}`,\r\n                _id:Math.floor(Math.random()*10000000),\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                cost:`${this.state.cost}`,\r\n                amountPaid:`${this.state.amountPaid}`,\r\n                roomDebit:`${this.state.cost}`,\r\n                POSAmount:0,\r\n                CashAmount:0,\r\n                TransferAmount:0,\r\n                CompDebit:0,\r\n                paymentMethod:`${this.state.paymentMethod}`,\r\n                roomNumbers:`${this.state.roomNumbers}`,\r\n                description: \"Restaurant Docket\",\r\n                department: \"Restaurant Sales\",\r\n                docketDetails: this.state.selected,\r\n                group:`${this.state.group}`,\r\n                user: localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift')\r\n            }\r\n            let result = await fetch(postDocketToRoom, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    restaurantSales\r\n                   \r\n                )\r\n                \r\n            });\r\n            console.log('result>  ' + result)\r\n\r\n            let result2 = await fetch(postRestBill, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    restaurantSales\r\n                   \r\n                )\r\n                \r\n            });\r\n            console.log('result2>  ' + result2)\r\n           \r\n            let result14 = await fetch(`${postToTable}/${tableID2}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result14>  ' + result14)\r\n            alert(\"Docket Posted to Room \" +this.state.roomNumbers)\r\n            this.setState({selected:[]});\r\n            this.setState({cost:0})\r\n            this.setState({amountPaid:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({roomNumbers:''})\r\n            this.setState({paymentMethod:''})\r\n            this.setState({group:''})\r\n            this.setState({shift:''})\r\n            this.setState({ NewtableNum:0})\r\n            localStorage.removeItem('delcntrl');\r\n            sessionStorage.removeItem('tableNumber2')\r\n           \r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            })\r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    renderPayMeth(data){\r\n        if(data) {\r\n            return data.map((item, index) => {\r\n                return(\r\n                    <>\r\n                        <option key={index} value={item.method}>\r\n                            {item.method}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderTables(data){\r\n        if(data) {\r\n            data.sort((a, b) => a.tableNum - b.tableNum);\r\n           \r\n            return data.map((item) => {\r\n                if(item.billCost===\"\"){\r\n                    return(\r\n                        <div key={item._id}>\r\n                            <button className=\"btn btn-success cartBtn3 alignroomsgreen2\" disabled = {this.state.NewtableNum===1} onClick={() => {sessionStorage.setItem('tableNumber2', item.tableNum);this.NewTable();this.setState({docketFirst:0})}}>\r\n                                <p className=\"texted\">{item.tableNum}</p>\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <div key={item._id}>\r\n                            <button className=\"btn btn-warning cartBtn3 alignroomsgreen2\" onClick={() => {sessionStorage.setItem('tableNumber2', item.tableNum);this.getTableR();this.setState({print:1})}}>\r\n                                <p className=\"texted\">{item.tableNum}</p>\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n               \r\n            })\r\n        }\r\n    }\r\n\r\n    renderRooms(data){\r\n        if(data) {\r\n           data.sort((a, b) => a.roomNumbers - b.roomNumbers);\r\n            return data.map((item, index) => {\r\n                return(\r\n                    <>\r\n                        <option key={index} value={item.roomNumbers}>\r\n                            {item.roomNumbers} - {item.fname} {item.lname}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    \r\n    addMeal(){\r\n        var menuselect=this.state.menulist;\r\n        menuselect.map((item)=>{\r\n            this.setState({\r\n                Newmeal:item.mealName,\r\n                Newprice:item.mealPrice,\r\n                Newqty:parseInt(item.mealQt),\r\n                Newid:item._id\r\n\r\n            })\r\n            return 'ok'\r\n        })\r\n        \r\n    }\r\n    increament(){\r\n        if(this.state.Newqty!==0){\r\n            this.setState({\r\n                Newqty:this.state.Newqty +1\r\n            })\r\n        }\r\n       \r\n    }\r\n\r\n    decreament(){\r\n        if(this.state.Newqty!==0){\r\n            this.setState({\r\n                Newqty:this.state.Newqty -1\r\n            })\r\n        }\r\n    }\r\n\r\n    pushorder(){\r\n        var selected = this.state.selected;\r\n        var selectedMeals = {};\r\n\r\n        if(this.state.selected.length>0){\r\n            this.setState({blockTable:1});\r\n    \r\n            selectedMeals.id=this.state.Newid;\r\n            selectedMeals.meal=this.state.Newmeal;\r\n            selectedMeals.mealPrice=this.state.Newprice;\r\n            selectedMeals.qty=this.state.Newqty;\r\n            selectedMeals.tranID=Math.floor(Math.random()*10000)\r\n            \r\n            selected.push(selectedMeals);\r\n                      \r\n            this.setState({\r\n                selected,\r\n                printStop:0,\r\n                DrinkStore:0,\r\n                DrinkSalesQty:0,\r\n                stockBal:0,\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:''\r\n            })\r\n                \r\n           \r\n        }\r\n        else if(this.state.selected.length===0){\r\n            this.setState({blockTable:0});\r\n\r\n            selectedMeals.id=this.state.Newid;\r\n            selectedMeals.meal=this.state.Newmeal;\r\n            selectedMeals.mealPrice=this.state.Newprice;\r\n            selectedMeals.qty=this.state.Newqty;\r\n            selectedMeals.tranID=Math.floor(Math.random()*10000)\r\n            \r\n            selected.push(selectedMeals);\r\n                      \r\n            this.setState({\r\n                selected,\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:'',\r\n                printStop:0,\r\n                DrinkStore:0,\r\n                DrinkSalesQty:0,\r\n                stockBal:0\r\n            })\r\n        }\r\n\r\n        \r\n\r\n        this.myTimer = setTimeout(() => {\r\n            if(this.state.selected.length>0){\r\n                const totalSale = selected.reduce((total, item) => {\r\n                    return total + item.mealPrice * item.qty\r\n                }, 0);\r\n                this.setState({\r\n                    cost:totalSale,\r\n                    \r\n                })\r\n            }\r\n\r\n            if(this.state.cost!==0){\r\n                fetch(`${getRooms}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        displayRoomNums:data\r\n                    })\r\n                })\r\n                fetch(`${getPaymentMethods}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        displayPaymentMethods:data\r\n                    })\r\n                })\r\n                // localStorage.removeItem('btnCntrl');\r\n                localStorage.removeItem('delcntrl')\r\n            }\r\n            \r\n        },1000);\r\n\r\n \r\n    }\r\n\r\n    \r\n    \r\n\r\n\r\n   \r\n     \r\n\r\n     \r\n    renderMenu(data){\r\n        if (data){\r\n            return data.map((item) =>{\r\n                return(\r\n                    <>\r\n                        <div>\r\n                            <center>\r\n                                \r\n                                <div className=\"card alignroomsgreen3\"style={{backgroundColor:'orangered'}} key={item.mealTypeID}>\r\n                                    <button className=\"btn btn-orangered buttnheightbtn\" onMouseOver={()=>sessionStorage.setItem('meal',item.mealName)} onClick={ () =>{this.setState({Newmeal:item.mealName,Newprice:item.mealPrice,Newqty:parseInt(item.mealQt),Newid:item._id,tranID2:Math.floor(Math.random()*10000)});this.handleStock()}}>                         \r\n                                        \r\n                                    <p className=\"card-title formatnew2\">{item.mealName}</p> \r\n                                    </button>\r\n                                </div>\r\n                                \r\n                            </center>\r\n                        </div>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n    \r\n    renderOders(data){\r\n        \r\n        if(data) {\r\n            return data.map((item) =>{\r\n               \r\n                return(\r\n                    <>\r\n                        <tr key= {item.id}>\r\n                            {/* <td className=\"table-light table-striped adjust texted8Nw\">{item.id}</td> */}\r\n                            <td className=\"Editedtexted8NwDescr\">{item.meal}</td>\r\n                            <td className=\"Editedtexted8NwDescr\">{item.qty}</td>\r\n                            <td className=\"Editedtexted8NwDescr\"><NumberFormat value={item.mealPrice} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"Editedtexted8NwDescr\"><NumberFormat value={item.mealPrice*item.qty} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderOdersPrint(data){\r\n        \r\n        if(data) {\r\n            return data.map((item) =>{\r\n               \r\n                return(\r\n                    <>\r\n                        <tr key= {item.id}>\r\n                            {/* <td className=\"table-light table-striped adjust texted8Nw\">{item.id}</td> */}\r\n                            <td className=\"Editedtexted8NwDescrEdited\">{item.meal}</td>\r\n                            <td className=\"Editedtexted8NwDescrEdited\">{item.qty}</td>\r\n                            <td className=\"Editedtexted8NwDescrEdited\"><NumberFormat value={item.mealPrice} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"Editedtexted8NwDescrEdited\"><NumberFormat value={item.mealPrice*item.qty} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderSalesReport(data){\r\n        \r\n        if(data) {\r\n            return data.map((item) =>{\r\n                \r\n                return(\r\n                    <>\r\n                        \r\n                        <tr key= {item.id}>\r\n                            {/* <td className=\"table-light table-striped adjust texted8\">{item.id}</td> */}\r\n                            <td className=\"table-light table-striped adjust texted8\">{item.productName}</td>\r\n                            <td className=\"table-light table-striped adjust texted8\">{item.Quantity}</td>\r\n                            <td className=\"table-light table-striped adjust texted8\"><NumberFormat value={item.productPrice} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust texted8\"><NumberFormat value={item.productPrice*item.Quantity} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust texted8\"> </td>\r\n                            \r\n                        </tr>\r\n                        \r\n                        \r\n                        \r\n                    </>\r\n                )\r\n                \r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    renderPos(food){\r\n        if(food) {\r\n            return food.map((item) =>{\r\n               \r\n                return(\r\n                    <>\r\n                        <div>\r\n                            <center>\r\n                                \r\n                                <div className=\"card alignroomsgreen3\"style={{backgroundColor:'blueviolet'}} key={item.mealTypeID}>\r\n                                    <button className=\"btn btn-blueviolet buttnheightbtn\" onMouseOver={() => this.setState({menuID:item.mealTypeID})} onClick={ () => this.buttonClick () }>\r\n                                        <p className=\"card-title formatnew2\">{item.mealType}</p> \r\n                                    </button>\r\n                                </div>\r\n                                \r\n                            </center>\r\n                        </div>\r\n                        \r\n                    </>\r\n                )\r\n            })\r\n        }\r\n\r\n    }\r\n    \r\n    render() {\r\n        console.log(\">>> Inside RESrender\", this.state)\r\n        var tranDt = moment(`${this.state.transactionDate}`).format('MMM DD YYYY');\r\n        var docketNum ='Rest'+Math.floor(Math.random()*10000);\r\n        var add = this.state.amountPaid;\r\n        if(this.state.amountPaid===''){\r\n            add = 0\r\n        }\r\n\r\n\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Restlogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return(\r\n            <div className=\"posterminal\">  \r\n                               \r\n                <br/>     \r\n                <div className =\"row quantity displayback\" >\r\n                               \r\n                    <center>\r\n                        <h6 style={{color:'white'}}>Add Quantity</h6>\r\n                    </center>\r\n                            \r\n                    <div>\r\n                        <div className=\"row\">\r\n                            <p className=\"prices\">Price: {this.state.Newprice}</p>\r\n                            {/* <p className=\"prices2\">Avail.Stock: {this.state.stockBal}</p> */}\r\n                            <span className=\"dcrbtn\">\r\n                                <button className=\"form-control mb-3 formsizeX1\" onClick={() =>this.decreament()}><p className=\"sign\">-</p></button>\r\n                            </span>\r\n                            <span className=\"qtybtn\">\r\n                                <input type=\"number\" className=\"form-control2 mb-3 formsizeX\" style={{textAlign:'center',fontStyle:'bold',color:'white',fontSize:'24px'}}name=\"Newqty\" value={this.state.Newqty} onChange={this.handleChange3}/>\r\n                            </span>\r\n                            <span className=\"incbtn\">\r\n                                <button className=\"form-control mb-3 formsizeX1\" onClick={() => this.increament()}><p className=\"sign\">+</p></button>\r\n                            </span>2\r\n                            <button className=\"btn btn-warning addbtn\" disabled={this.state.Newqty===0} onClick={() =>{this.pushorder();this.setState({docketFirst:1})}}>Add</button>\r\n                            \r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n                \r\n\r\n                <div className=\"salesTable displayback\">\r\n                \r\n                    <table className=\"table table-hover\">\r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                {/* <th className=\"adjust2\">ID</th> */}\r\n                                <th className=\"adjust2\">Menu</th>\r\n                                <th className=\"adjust2\">Qty</th>\r\n                                <th className=\"adjust2\">Price(=N)</th>\r\n                                <th className=\"adjust2\">Amount(=N)</th>\r\n                               \r\n                                \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"tableheight\">\r\n                            {this.renderOders(this.state.selected)}\r\n                            \r\n       \r\n                            \r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                </div>\r\n\r\n                \r\n                    \r\n                <div className=\"amountP displayback\">\r\n                    <input type=\"text\" className=\"form-control mb-3 formsizeA1 textedM\" name=\"amountPaid\" require placeholder= \"Enter Payment\" value={this.state.amountPaid} onChange={this.handleChange}/>\r\n                </div>\r\n\r\n                <div className=\"method displayback\">\r\n                    <select className=\"form-select formsizeA1 textedM\" name=\"paymentMethod\" onChange={this.handleChange}>\r\n                        <option selected value=''>Payment Method</option>\r\n                        {this.renderPayMeth(this.state.displayPaymentMethods)}\r\n                    </select>\r\n                </div>\r\n                \r\n                \r\n                <div className=\"textAmount displayback\">\r\n                    <p className=\"fmtcost2\" style={{color:'white'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                </div>\r\n                <div className=\"textAmount2 displayback\">\r\n                    <p className=\"fmtcost2\" style={{color:'white'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                </div>\r\n\r\n                <div className=\"operations displayback\">\r\n                    \r\n                    <h4 className=\"texted4\" style={{color:'white'}}>Operations</h4>\r\n                    \r\n                    <button disabled={localStorage.getItem('delcntrl')} className=\"btn btn-primary cartBtn2\" onClick={() => {this.removeAll();this.setState({docketFirst:0})}}>\r\n                        <p className=\"texted\">Delete</p>\r\n                    </button>\r\n                    \r\n                    <button disabled={this.state.cost===0||this.state.amountPaid===''||this.state.amountPaid<this.state.cost||this.state.amountPaid>this.state.cost||this.state.paymentMethod===''||this.state.paymentMethod==='Complimentary'||this.state.docketFirst===1} className=\"btn btn-primary cartBtn2\" onClick={() => {this.onOpenPword()}}>\r\n                        <p className=\"texted\">Post</p>\r\n                    </button>\r\n                    <select type =\"button\" disabled={this.state.docketFirst===1} className=\"form-select formsizeB mb-2 btn btn-primary texted\" name=\"roomNumbers\" onChange={this.handleChange2}>\r\n                        <option selected value=''>Rooms</option>\r\n                        {this.renderRooms(this.state.displayRoomNums)}\r\n                                                                    \r\n                    </select>\r\n                                            \r\n                    <button disabled={this.state.roomNumbers===''||this.state.amountPaid!=='' ||this.state.docketFirst===1} className=\"btn btn-primary cartBtn4\" onClick={() => {this.onOpenCompModal();this.postQty()}}>\r\n                        <p className=\"texted\">Room Post</p>\r\n                    </button>\r\n                    <button disabled={this.state.paymentMethod!=='Complimentary'||this.state.amountPaid!==''||this.state.docketFirst===1} className=\"btn btn-primary cartBtn2\" onClick={() =>{this.onOpenModalreceipt();this.postQty()}}>\r\n                        <p className=\"texted\">Comp</p>\r\n                    </button>\r\n                    <button disabled={this.state.docketFirst===1} className=\"btn btn-primary cartBtn2\" onClick={ ()=>{this.handleReport()}}>\r\n                        <p className=\"texted\">Reports</p>\r\n                    </button>\r\n                    \r\n                    <button disabled={localStorage.getItem('btnCntrl')} className=\"btn btn-warning cartBtn12\" onClick={() => {this.addToTable();this.setState({NewtableNum:0})}}>\r\n                        <p className=\"texted\">Add to Table {sessionStorage.getItem('tableNumber2')}</p>\r\n                    </button>\r\n                    \r\n                    <button disabled = 'true' className=\"btn btn-danger cartBtn2\" onClick={ ()=>this.logout}>\r\n                        <p className=\"texted\">Close</p>\r\n                    </button>    \r\n\r\n                    <button className=\"btn btn-danger cartBtn20\" onClick={ ()=> this.logout()}>\r\n                        <p className=\"texted\">Log Out {localStorage.getItem('userInfo').split(' ')[0]}</p>\r\n                    </button>\r\n\r\n                    {/* <button disabled={this.state.docketFirst===1} className=\"btn btn-primary cartBtn112\" onClick={ ()=>{this.handleCredit()}}>\r\n                        <p className=\"texted\">Recover Debt</p>\r\n                    </button> */}\r\n                    <button disabled className={this.state.shiftcolor}>\r\n                        <p className=\"texted\">{localStorage.getItem('shift')}</p>\r\n                    </button>\r\n                    <button disabled ={this.state.selected.length===0 || this.state.printStop===0||this.state.print===0}className={this.state.shiftcolor} onClick={()=>{this.onOpenModaltoprint();localStorage.setItem('delcntrl',true)}}>\r\n                        <p className=\"texted\">Print Docket</p>\r\n                    </button>\r\n                    \r\n                </div>\r\n\r\n                <div className=\"tables displayback\">\r\n                    <h5 className=\"texted2\" style={{color:'white'}}>Get Table</h5>\r\n                    <h5 className='texted2'style={{color:'yellow'}}>Work Date: {tranDt}</h5>\r\n                    <div>\r\n                        {this.renderTables(this.state.tables)}\r\n                    \r\n                    </div>\r\n                    <h6 style={{color:'silver', textAlign:'right'}}>Restaurant App</h6>\r\n                    <button className=\"btn btn-danger texted\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>\r\n                </div>\r\n\r\n                <div className =\"mainmenu displayback\">\r\n                    {this.renderPos(this.state.menu)}\r\n                </div>\r\n\r\n                <div className =\"menulistItems displayback\">\r\n                    {this.renderMenu(this.state.menulist)}\r\n                </div>\r\n\r\n                <Modal open={this.state.edit}>\r\n                    \r\n                    <div className='papersizeNew'>\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized mb-3\">{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSizedNumber\">+234 802 288 8776</p>\r\n                        <hr/>\r\n                            <p className=\"textSized2\" style={{fontWeight:'bold', fontFamily: 'Georgia, Times New Roman, Times, serif', fontSize:'14px'}}>Restaurant Docket</p>\r\n                            <p className=\"textSized2\">Date: {tranDt}</p>\r\n                            <p className=\"textSized2 mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"tableSettingsNow\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nwrest\">Menu</th>\r\n                                    <th className=\"adjust2Nwrest\">Qty</th>\r\n                                    <th className=\"adjust2Nwrest\">Rate</th>\r\n                                    <th className=\"adjust2Nwrest\">Amt</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tableSettingsNow\">\r\n                                {this.renderOdersPrint(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Total:<NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Amount Paid:<NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized2\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized2\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontFamily: 'monospace', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter2()}}>\r\n                                    <p className=\"texted2\">{this.state.printBTN}</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                <Modal open={this.state.pword} onClose={()=>this.onClosePword()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Access Required</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <input type=\"password\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"pass\" require placeholder=\"Enter Access Code\" value={this.state.pass} onChange={this.handleChange}/>\r\n                                    <button disabled = {this.state.pass===''} className=\"btn btn-warning formsize91\" onClick={()=>this.AllowRefund()}>Login</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n\r\n                <Modal open={this.state.editreceipt} onClose={()=>{this.onCloseModalreceipt();this.handleSubmit()}}>\r\n                    \r\n                    <div className=\"papersizeNew\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSizedNumber\">+234 802 288 8776</p>\r\n                        <hr/>\r\n                            <p className=\"textSized2\" style={{fontWeight:'bold', fontFamily: 'Georgia, Times New Roman, Times, serif', fontSize:'14px'}}>Restaurant Receipt</p>\r\n                            <p className=\"textSized2\">Date: {tranDt}</p>\r\n                            <p className=\"textSized2 mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"tableSettingsNow\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Rate</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Amt</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tableSettingsNow\">\r\n                                {this.renderOdersPrint(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'15px', fontFamily: 'monospace', fontWeight:'bolder'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'15px', fontFamily: 'monospace', fontWeight:'bolder'}}>Amount Paid: <NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'15px', fontFamily: 'monospace', fontWeight:'bolder'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'15px', fontFamily: 'monospace', fontWeight:'bolder'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized2\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized2\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontFamily: 'Georgia, Times New Roman, Times, serif', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted2\">Print</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseModalreceipt();this.handleSubmit()}}>\r\n                                    <p className=\"texted2\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                <Modal open={this.state.compModal} onClose={()=>{this.onCloseCompModal();this.handleRoomSubmit()}}>\r\n                    \r\n                    <div className=\"papersizeNew\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSizedNumber\">+234 802 288 8776</p>\r\n                        <hr/>\r\n                            <p className=\"textSized2\" style={{fontWeight:'bold',fontSize:'14px'}}>Restaurant Docket</p>\r\n                            <p className=\"textSized2\">Date: {tranDt}</p>\r\n                            <p className=\"textSized2 mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"tableSettingsNow\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Rate</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Amt</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tableSettingsNow\">\r\n                                {this.renderOdersPrint(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'12px', fontFamily: 'Georgia, Times New Roman, Times, serif', fontWeight:'bolder'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'12px', fontFamily: 'Georgia, Times New Roman, Times, serif', fontWeight:'bolder'}}>Amount Paid: <NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'12px', fontFamily: 'Georgia, Times New Roman, Times, serif', fontWeight:'bolder'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'12px', fontFamily: 'Georgia, Times New Roman, Times, serif', fontWeight:'bolder'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized2\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized2\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontFamily: 'Georgia, Times New Roman, Times, serif', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted2\">{this.state.printBTN}</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseCompModal();this.handleRoomSubmit()}}>\r\n                                    <p className=\"texted2\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                {/* view daily sales report */}\r\n                <Modal open={this.state.report} onClose={()=>{this.onCloseModalreport()}}>\r\n                    \r\n                    <div>\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSizedNumber\">+234 802 288 8776</p>\r\n                        <hr/>\r\n                            <p className=\"textSized2\" style={{fontWeight:'bold',fontSize:'14px'}}>Restaurant Daily Sales Report</p>\r\n                            <p className=\"textSized2\">Report Date: {tranDt}</p>\r\n                            <p className=\"textSized2 mb-3\">Shift: {this.state.useReportShift}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"table-warning\">\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>Price(=N)</th>\r\n                                    <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>Amount(=N)</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"table table-hover tableheight\">\r\n                                {this.renderSalesReport(this.state.DrinkSalesQtyReportData)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'14px', fontFamily: 'Georgia, Times New Roman, Times, serif', fontWeight:'bold'}}>Total Sales: <NumberFormat value={this.state.totalSales} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        \r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized2\">Staff: {this.state.useReportName}</p>\r\n                            <p className=\"textSized2\">Shift: {this.state.useReportShift}</p>\r\n                            <p style={{fontSize:'13px', fontFamily: 'monospace', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted2\">{this.state.printBTN}</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseModalreport()}}>\r\n                                    <p className=\"texted2\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                <Modal open={this.state.credit} onClose={()=>this.onCloseModalCredit()} style={{color:\"silver\"}}>\r\n                    <div className = \"background591stockin\">\r\n                        <h6 style = {{color:'silver',marginLeft:'50px', marginBottom:'-70px'}}>Recover Credit</h6>\r\n                        <div className=\"formdesign511\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <h6>Summary</h6>\r\n                                    <div className=\"col-3\">\r\n                                        <label>Total Credit</label>\r\n                                        <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\"><NumberFormat value={parseInt(this.state.TotalCredit)} thousandSeparator={true} displayType={\"text\"}/></p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-3\">\r\n                                        <label>Total Recovered</label>\r\n                                        <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\"><NumberFormat value={parseInt(this.state.TotalCreditPaid)} thousandSeparator={true} displayType={\"text\"}/></p>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"col-3\">\r\n                                        <label>Credit Balance</label>\r\n                                        <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\"><NumberFormat value={parseInt(this.state.TotalCredit)-parseInt(this.state.TotalCreditPaid)} thousandSeparator={true} displayType={\"text\"}/></p>\r\n                                    </div>\r\n                                    \r\n                                    \r\n                                </div>\r\n                                <div className='row'>\r\n                                    <div className=\"col-4\">\r\n                                            <input type=\"number\" className=\"form-control mb-3 formsize51 ikem\" name=\"creditPaid\" require placeholder=\"Enter Amount\" value={this.state.creditPaid} onChange={this.handleChange}/>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-4\">\r\n                                        <select className=\"form-select formsize51 ikem\" name=\"paymentMethod\" onChange={this.handleChange}>\r\n                                            <option selected value=''>Payment Method</option>\r\n                                            {this.renderPayMeth(this.state.payNwMeth)}\r\n                                        </select>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                \r\n                                <br/><br/>\r\n                                <center>\r\n                                    <span>\r\n                                        <button disabled ={this.state.creditPaid===''} className=\"btn btn-warning gap\" onClick={()=>this.postCredit()}>Post</button>\r\n                                        <button className=\"btn btn-danger gap\" onClick={ () => this.onCloseModalCredit()}>Close</button>\r\n                                                \r\n                                    </span>\r\n                                            \r\n                                </center>\r\n                                <br/>\r\n                        \r\n                            </div>\r\n                            \r\n                        </div> \r\n                        \r\n                    </div>  \r\n\r\n                </Modal>\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n    async componentDidMount(){\r\n        console.log (\">>> Inside RESdidMount\")\r\n        fetch(`${restMenugrpUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                menu:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        await fetch(`${getWorkDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({transactionDate:item.date})\r\n                return 'ok'\r\n            })\r\n            \r\n           \r\n        })\r\n        \r\n        this.myTimer = setInterval(() => {\r\n             fetch(`${getWorkDate}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({transactionDate:item.date})\r\n                    return 'ok'\r\n                })\r\n                \r\n        })\r\n            \r\n        },1000);\r\n       \r\n\r\n        fetch(`${getPaymentMethods}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                payNwMeth:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getStoreData}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                DrinkstoreData:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getBarSalesQty}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                DrinkSalesQtyData:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getTable}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({tables:data})\r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            });\r\n\r\n            localStorage.setItem('btnCntrl',true)\r\n\r\n\r\n        },2000)\r\n\r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n        if(localStorage.getItem('shift')==='Morning Shift'){\r\n            this.setState({shiftcolor:\"btn btn-primary cartBtn20\"})\r\n        }\r\n        else if(localStorage.getItem('shift')==='Night Shift'){\r\n            this.setState({shiftcolor:\"btn btn-dark cartBtn20\"})\r\n        }\r\n        else if(localStorage.getItem('shift')==='All Day'){\r\n            this.setState({shiftcolor:\"btn btn-warning cartBtn20\"})\r\n        }\r\n        \r\n    }\r\n}\r\nexport default RestaurantApp;","import React,{Component} from 'react';\r\nimport '../Bar/Bar.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment';\r\nimport FLogin from '../FLogin';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst restMenugrpUrl = \"https://zarvichdemo.localto.net/laundryCategories\";\r\nconst menuUrl = \"https://zarvichdemo.localto.net/laundryitems?clothtypes=\";\r\nconst postRestBill = \"https://zarvichdemo.localto.net/Laundry\";\r\nconst postRestCredit = \"https://zarvichdemo.localto.net/laundryCredit\";\r\nconst getRooms =\"https://zarvichdemo.localto.net/checkin?docket=Yes\";\r\nconst getGuestID = \"https://zarvichdemo.localto.net/checkin?roomNumID=\";\r\nconst postDocketToRoom = \"https://zarvichdemo.localto.net/bill\";\r\nconst getPaymentMethods = \"https://zarvichdemo.localto.net/paymentMethods\";\r\nconst postToTable = \"https://zarvichdemo.localto.net/laundryTablePost\";\r\nconst getTable = \"https://zarvichdemo.localto.net/laundTable\";\r\nconst getTableID = \"https://zarvichdemo.localto.net/LDTable?LDtableID=\";\r\nconst getStoreData = \"https://zarvichdemo.localto.net/getLaundryStore\";\r\nconst postBarSalesQty = \"https://zarvichdemo.localto.net/postRestSalesQty\";\r\nconst getBarSalesQty = \"https://zarvichdemo.localto.net/getLaundrySalesQty\";\r\nconst getRestCredit = \"https://zarvichdemo.localto.net/laundryCredit?LCstaff=\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\nconst getWorkDate = \"https://zarvichdemo.localto.net/getActive\";\r\nconst userName = \"https://zarvichdemo.localto.net/restUserInfo\";\r\n\r\n\r\nclass LaundryApp extends Component {\r\n\r\n    constructor(props) {\r\n        super (props);\r\n        console.log(\">>>Inside RESConstructor\",props)\r\n\r\n        this.state = {\r\n            Newmeal:'',\r\n            Newprice:'',\r\n            Newqty:0,\r\n            Newid:'',\r\n            edit:false,\r\n            credit:false,\r\n            editreceipt:false,\r\n            compModal:false,\r\n            report:false,\r\n            printStop:0,\r\n            docketFirst:0,\r\n            printBTN:'Print',\r\n            print:0,\r\n            blockTable:0,\r\n            IDfound:[],\r\n\r\n\r\n            menu:'',\r\n            meal:'',\r\n            mealPrice:'',\r\n            mealQuantity:'',\r\n            mealId:Math.floor(Math.random()*10000),\r\n            guestInhouseID:'',\r\n            selected:[],\r\n            menuID:'',\r\n            menulist:'',\r\n            cost:0,\r\n            amountPaid:'',\r\n            roomNumbers:'',\r\n            paymentMethod:'',\r\n            displayPaymentMethods:'',\r\n            displayRoomNums:'',\r\n            transactionDate:'',\r\n            tables:'',\r\n            group:'',\r\n            newTable:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            shiftcolor:'',\r\n            shift:localStorage.getItem('shift'),\r\n\r\n            DrinkstoreData:[],\r\n            DrinkSalesQtyData:[],\r\n            DrinkStore:0,\r\n            DrinkSalesQty:0,\r\n            stockBal:0,\r\n            \r\n            \r\n            DrinkSalesQtyReportData:[],\r\n            useReportName:'',\r\n            useReportShift:'',\r\n            useReportDate:'',\r\n            totalSales:0,\r\n            Stockbtn:'Add',\r\n            NewtableNum:0,\r\n\r\n\r\n            creditSales:'',\r\n            TotalCredit:0,\r\n            creditPaid:0,\r\n            payNwMeth:'',\r\n            TotalCreditPaid:0,\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:'',\r\n\r\n            pass:'',\r\n            pword:false,\r\n            pword2:false\r\n                      \r\n\r\n        }\r\n        \r\n    }\r\n\r\n    onOpenPword(){\r\n        if(this.state.paymentMethod===\"Credit\"){\r\n            this.setState({\r\n                pword: true\r\n            })\r\n            \r\n        }\r\n        else{\r\n            this.setState({\r\n                pword: false\r\n            });\r\n            this.onOpenModalreceipt();\r\n            this.postQty()\r\n        }\r\n\r\n    }\r\n\r\n    onClosePword(){\r\n        this.setState({\r\n            pword: false\r\n        })\r\n        \r\n    }\r\n\r\n    AllowRefund(){\r\n        if(this.state.pass==='6849'){\r\n            this.onOpenModalreceipt();\r\n            this.postQty();\r\n            this.onClosePword()\r\n\r\n        }\r\n        else{\r\n            alert('Access Denied')\r\n        }\r\n    }\r\n\r\n\r\n    onOpenModaltoprint(){\r\n        this.setState({\r\n            edit: true\r\n            \r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    \r\n    onOpenCompModal(){\r\n        this.setState({\r\n            compModal: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseCompModal(){\r\n        this.setState({\r\n            compModal: false\r\n        })\r\n        \r\n    }\r\n\r\n\r\n    onCloseModaltoprint(){\r\n        this.setState({\r\n            edit: false\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseModalCredit(){\r\n        this.setState({\r\n            credit: false,\r\n            creditPaid:0\r\n        })\r\n        \r\n    }\r\n    onOpenModalreceipt(){\r\n        this.setState({\r\n            editreceipt: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseModalreceipt(){\r\n        this.setState({\r\n            editreceipt: false\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenModalreport(){\r\n        this.setState({\r\n            report: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseModalreport(){\r\n        this.setState({\r\n            report: false\r\n        })\r\n        \r\n    }\r\n\r\n    handleReport(){\r\n\r\n        var todayDate = moment(this.state.transactionDate).format('MMM DD YYYY');\r\n        var username = localStorage.getItem('userInfo');\r\n        var findQty = `${getBarSalesQty}?useDate=${todayDate}&&useshift=${this.state.shift}&&userstaff=${username}`\r\n        \r\n        fetch(`${findQty}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                DrinkSalesQtyReportData:data\r\n            })\r\n            \r\n        })\r\n        this.myTimer = setTimeout(() => {\r\n            if(this.state.DrinkSalesQtyReportData.length>0){\r\n                var useData = this.state.DrinkSalesQtyReportData\r\n                var findUser = useData.find(element=>element.user===username)\r\n                var useDt = [];\r\n                useDt.push(findUser);\r\n                this.setState({useReportName:useDt.map(item=>item.user)})\r\n                this.setState({useReportShift:useDt.map(item=>item.shift)})\r\n                this.setState({useReportDate:useDt.map(item=>item.tranDate)})\r\n                \r\n                var TotSal = useData.reduce((total, item)=>{\r\n                    return total + parseInt (item.productPrice * item.Quantity)\r\n                }, 0);\r\n                this.setState({totalSales:TotSal});\r\n    \r\n                this.onOpenModalreport()\r\n            }\r\n            else{\r\n    \r\n                alert('No Sales was posted by '+username)\r\n    \r\n            }\r\n        },1000)\r\n        \r\n        \r\n    }\r\n\r\n    handleStock(){\r\n        if(this.state.DrinkstoreData.length>0){\r\n            var stockItem = sessionStorage.getItem('meal');\r\n           \r\n            //check available stock\r\n            const stockData=this.state.DrinkstoreData;\r\n            var totalStock = stockData.filter(stock => stock.productName.includes(stockItem)).reduce((total, item)=>{\r\n                return total + parseInt(item.piecesOut)\r\n            }, 0);\r\n            this.setState({DrinkStore:totalStock})\r\n\r\n            //check quantity sold\r\n            const qtyData=this.state.DrinkSalesQtyData;\r\n            var totalQty = qtyData.filter(qty => qty.productName.includes(stockItem)).reduce((total, item)=>{\r\n                return total + parseInt(item.Quantity)\r\n            }, 0);\r\n            this.setState({DrinkSalesQty:totalQty})\r\n            \r\n            //show stock balance\r\n            this.myTimer = setTimeout(() => {\r\n\r\n                var Total = 0;\r\n                var ST = Total + this.state.DrinkStore-this.state.DrinkSalesQty;\r\n                this.setState({stockBal:ST})\r\n\r\n                // if(this.state.stockBal===0){\r\n                //     var stockItem2 = sessionStorage.getItem('meal');\r\n                //     alert(stockItem2+' is out of stock')\r\n                //     this.setState({\r\n                //         Newmeal:'',\r\n                //         Newprice:'',\r\n                //         Newqty:0,\r\n                //         Newid:''\r\n                //     })\r\n                // }\r\n                \r\n                \r\n            },1000);\r\n\r\n            \r\n                \r\n        }\r\n       \r\n\r\n    }\r\n\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n        \r\n    handleCost=(selected)=>{\r\n        if(this.state.selected!==null){\r\n           const totalSale = selected.reduce((total, item) => {\r\n               return total + item.mealPrice * item.qty\r\n           }, 0);\r\n           this.setState({cost:totalSale})\r\n        }\r\n        if(this.state.cost!==null){\r\n            fetch(`${getRooms}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayRoomNums:data\r\n                })\r\n            })\r\n            fetch(`${getPaymentMethods}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayPaymentMethods:data\r\n                })\r\n            })\r\n            localStorage.setItem('printMenus', JSON.stringify(selected));\r\n            localStorage.removeItem('btnCntrl');\r\n            localStorage.removeItem('delcntrl')\r\n            \r\n            \r\n        }\r\n        \r\n        \r\n    }  \r\n   \r\n    addqty = () => {\r\n        const del = this.state.selected.map((item) => parseInt(item.qty + 1));\r\n        this.setState({selected:del})\r\n       \r\n    }\r\n        \r\n    removeAll = (id) => {\r\n        const del = this.state.selected.filter(item => item.id === id);\r\n        this.setState({selected:del})\r\n        this.setState({cost:0})\r\n        this.setState({roomNumbers:''})\r\n        this.setState({amountPaid:''})\r\n        this.setState({displayRoomNums:''})\r\n        this.setState({paymentMethod:''})\r\n        this.setState({displayPaymentMethods:''})\r\n        this.setState({\r\n            displayPaymentMethods:'',\r\n            DrinkStore:0,\r\n            DrinkSalesQty:0,\r\n            stockBal:0\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n\r\n    async addToTable() {\r\n          \r\n        try {\r\n            var tableID2 = sessionStorage.getItem('tableNumber2');\r\n\r\n           var orderItems = this.state.selected;\r\n           var data = {\r\n                selected:orderItems.map(item => item),\r\n                billCost:this.state.cost,\r\n                tableNum:sessionStorage.getItem('tableNumber2'),\r\n                user:localStorage.getItem('userInfo')\r\n            }\r\n           \r\n            \r\n            let result = await fetch(`${postToTable}/${tableID2}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result>  ' + result)\r\n            this.setState({selected:[]})\r\n            localStorage.setItem('btnCntrl',true);\r\n            this.setState({cost:0})\r\n            this.setState({roomNumbers:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            this.setState({paymentMethod:''})\r\n            this.setState({printStop:0})\r\n            localStorage.removeItem('delcntrl');\r\n            sessionStorage.removeItem('tableNumber2')\r\n            \r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            });\r\n\r\n            \r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async NewTable() {\r\n          \r\n        try {\r\n            \r\n            var NewtableID = sessionStorage.getItem('tableNumber2');\r\n            sessionStorage.setItem('printTableNum', NewtableID);\r\n\r\n            var orderItems = this.state.selected;\r\n            var data = {\r\n                selected:orderItems.map(item => item),\r\n                billCost:this.state.cost,\r\n                tableNum:NewtableID\r\n            }\r\n            \r\n            if(this.state.cost===0){\r\n                alert (\"If you click table Number again without an order, I will slap you!\")\r\n                sessionStorage.removeItem('tableNumber2')\r\n            }\r\n\r\n            else{\r\n                let result = await fetch(`${postToTable}/${NewtableID}`, {\r\n                    method: 'put',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        data\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('result>  ' + result)\r\n                this.setState({selected:[]})\r\n                localStorage.setItem('btnCntrl',true);\r\n                this.setState({cost:0})\r\n                this.setState({roomNumbers:''})\r\n                this.setState({displayRoomNums:''})\r\n                this.setState({displayPaymentMethods:''})\r\n                this.setState({paymentMethod:''})\r\n                localStorage.removeItem('delcntrl');\r\n                this.setState({newTable:''})\r\n                \r\n    \r\n                fetch(`${getTable}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({tables:data})\r\n                });\r\n    \r\n            }\r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async getTableR() {\r\n          \r\n        try {\r\n            \r\n            var tableID2 = sessionStorage.getItem('tableNumber2');\r\n            sessionStorage.setItem('printTableNum', tableID2);\r\n           \r\n            fetch(`${getTableID}${tableID2}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n            data.map((item)=>{\r\n            this.setState({\r\n                selected:item.selected,\r\n                cost:item.billCost,\r\n                NewtableNum:1\r\n            })\r\n            return 'ok'\r\n                   \r\n            })\r\n                localStorage.removeItem('btnCntrl')\r\n            })\r\n\r\n            fetch(`${getRooms}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayRoomNums:data\r\n                })\r\n            })\r\n        \r\n            fetch(`${getPaymentMethods}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayPaymentMethods:data\r\n                })\r\n            })\r\n            localStorage.setItem('delcntrl',true)\r\n            this.setState({printStop:1})\r\n       \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    postQty(){\r\n       \r\n        try {\r\n            \r\n            this.state.selected.map((item)=>{\r\n                var prodName = item.meal;\r\n                var prodPrice = item.mealPrice;\r\n                var Qty = item.qty;\r\n                var ID = item.tranID;\r\n                \r\n                var salesQty = {\r\n                    id:ID,\r\n                    productName:prodName,\r\n                    productPrice:prodPrice,\r\n                    Quantity:parseInt(Qty),\r\n                    user: localStorage.getItem('userInfo'),\r\n                    tranDate:moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                    shift:localStorage.getItem('shift'),\r\n                                \r\n                }\r\n                let result = fetch(`${postBarSalesQty}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        salesQty\r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                this.setState({\r\n                    Newmeal:'',\r\n                    Newprice:'',\r\n                    Newqty:0,\r\n                    Newid:'',\r\n                    DrinkstoreData:[],\r\n                    DrinkSalesQtyData:[]\r\n                })\r\n\r\n                fetch(`${getStoreData}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        DrinkstoreData:data\r\n                    })\r\n                })\r\n\r\n                fetch(`${getBarSalesQty}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        DrinkSalesQtyData:data\r\n                    })\r\n                })\r\n                \r\n                return 'ok'\r\n            })    \r\n        \r\n\r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n             \r\n    buttonClick (){\r\n        fetch(`${menuUrl}${this.state.menuID}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                menulist:data\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    sendtoprinter(){\r\n        \r\n        window.print();\r\n        \r\n       \r\n    }\r\n\r\n    sendtoprinter2(){\r\n        if(this.state.printBTN==='Print'){\r\n            window.print();\r\n            this.setState({printBTN:'Close'})\r\n        }\r\n        else if(this.state.printBTN==='Close'){\r\n            this.setState({edit: false})      \r\n            this.setState({printBTN:'Print'})\r\n            this.setState({\r\n                print:0,\r\n                printStop:0,\r\n                // DrinkStore:0,\r\n                DrinkSalesQty:0,\r\n                stockBal:0,\r\n                blockTable:0\r\n\r\n            }) \r\n            \r\n        }\r\n       \r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n    \r\n    }\r\n\r\n    handleCredit(){\r\n        var userCredit = localStorage.getItem('userInfo');\r\n        fetch(`${getRestCredit}${userCredit}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                creditSales:data\r\n            })\r\n            data.map((item)=>{\r\n                var allCredit = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.creditAmount)\r\n                }, 0);\r\n\r\n                this.setState({TotalCredit:allCredit,});\r\n                var allCreditPaid = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.creditPaid)\r\n                }, 0);\r\n                this.setState({TotalCreditPaid:allCreditPaid});\r\n                return 'ok'\r\n            })\r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            this.setState({\r\n                credit: true\r\n            })\r\n    \r\n        },1000);\r\n        \r\n        \r\n    }\r\n\r\n    handleChange3 = (event) => {\r\n        if(this.state.Newmeal!==''||this.state.Newprice!==''||this.state.Newid!==''){\r\n            this.setState({\r\n                [event.target.name]:event.target.value\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    handleChange2 = (event) => {\r\n        console.log('inside handle', this.props)\r\n        this.setState({\r\n           [event.target.name]:event.target.value\r\n        })\r\n        fetch(`${getGuestID}${event.target.value}`, {method: 'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item) => {\r\n                this.setState({\r\n                    guestInhouseID:item.refID,\r\n                    group:item.group\r\n                })\r\n                return 'ok'\r\n            })\r\n        })\r\n    \r\n    }\r\n    \r\n    async handleSubmit() {\r\n          \r\n        \r\n        try {\r\n            var tableID = sessionStorage.getItem('tableNumber2');\r\n            \r\n            var data = {\r\n                selected:[],\r\n                billCost:\"\",\r\n                tableNum:sessionStorage.getItem('tableNumber2')\r\n            }\r\n\r\n            if(this.state.paymentMethod===\"POS\"){\r\n                var POSSales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    POSAmount:`${this.state.amountPaid}`,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Laundry Sales\",\r\n                    department: \"Laundry Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result5 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        POSSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result5>  ' + result5)\r\n\r\n            }\r\n            if(this.state.paymentMethod===\"Cash\"){\r\n                var CashSales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    CashAmount:`${this.state.amountPaid}`,\r\n                    POSAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Laundry Sales\",\r\n                    department: \"Laundry Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result4 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CashSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result4>  ' + result4)\r\n                \r\n            }\r\n            if(this.state.paymentMethod===\"Transfer\"){\r\n                var transferSales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    TransferAmount:`${this.state.amountPaid}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Laundry Sales\",\r\n                    department: \"Laundry Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result3 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        transferSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3>  ' + result3)\r\n                \r\n            }\r\n\r\n            if(this.state.paymentMethod===\"Complimentary\"){\r\n                var complimentarySales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    amountPaid:`${this.state.amountPaid}`,\r\n                    CompDebit:`${this.state.cost}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Laundry Sales\",\r\n                    department: \"Laundry Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n\r\n                let result2 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        complimentarySales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2>  ' + result2)\r\n\r\n            }\r\n\r\n            if(this.state.paymentMethod===\"Credit\"){\r\n                var CreditSales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    creditAmount:`${this.state.amountPaid}`,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Restaurant Credit\",\r\n                    department: \"Restaurant Credit\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift'),\r\n                    creditPaid:`${this.state.creditPaid}`\r\n                   \r\n                }\r\n\r\n                let result2 = await fetch(postRestCredit, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CreditSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2>  ' + result2)\r\n\r\n            }\r\n            \r\n            let result12 = await fetch(`${postToTable}/${tableID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result12>  ' + result12)\r\n\r\n            alert(\"Sales Posted\")\r\n            this.setState({selected:[]});\r\n            this.setState({cost:0})\r\n            this.setState({amountPaid:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({roomNumbers:''})\r\n            this.setState({paymentMethod:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            this.setState({group:''})\r\n            this.setState({\r\n                shift:'',\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:'',\r\n                DrinkstoreData:[],\r\n                DrinkSalesQtyData:[],\r\n                NewtableNum:0\r\n            })\r\n            localStorage.removeItem('delcntrl');\r\n            sessionStorage.removeItem('tableNumber2')\r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            })\r\n           \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async postCredit() {\r\n          \r\n        \r\n        try {\r\n            \r\n            var CreditSales = {\r\n                docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                cost:0,\r\n                creditAmount:0,\r\n                paymentMethod:`${this.state.paymentMethod}`,\r\n                description: \"Laundry Credit\",\r\n                department: \"Laundry Credit\",\r\n                docketDetails: this.state.selected,\r\n                group:`${this.state.group}`,\r\n                user: localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift'),\r\n                creditPaid:`${this.state.creditPaid}`\r\n                \r\n            }\r\n            let creditPay = await fetch(postRestCredit, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    CreditSales\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('creditPay>  ' + creditPay)\r\n\r\n            if(this.state.paymentMethod===\"POS\"){\r\n                var POSSales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    POSAmount:`${this.state.creditPaid}`,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Laundry Credit\",\r\n                    department: \"Laundry Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result5 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        POSSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result5>  ' + result5)\r\n\r\n            }\r\n            if(this.state.paymentMethod===\"Cash\"){\r\n                var CashSales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    CashAmount:`${this.state.creditPaid}`,\r\n                    POSAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Laundry Credit\",\r\n                    department: \"Laundry Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result4 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CashSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result4>  ' + result4)\r\n                \r\n            }\r\n            if(this.state.paymentMethod===\"Transfer\"){\r\n                var transferSales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    TransferAmount:`${this.state.creditPaid}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Laundry Credit\",\r\n                    department: \"Laundry Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result3 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        transferSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3>  ' + result3)\r\n                \r\n            }\r\n\r\n            alert(\"Credit Posted\")\r\n            this.setState({\r\n                creditSales:'',\r\n                TotalCredit:0,\r\n                creditPaid:0,\r\n                TotalCreditPaid:0\r\n            })\r\n                               \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleRoomSubmit() {\r\n        \r\n        try {\r\n            \r\n            var tableID2 = sessionStorage.getItem('tableNumber2');\r\n\r\n            var data = {\r\n                selected:[],\r\n                billCost:\"\",\r\n                tableNum:sessionStorage.getItem('tableNumber2')\r\n            }\r\n            \r\n            var restaurantSales = {\r\n                docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                refID:`${this.state.guestInhouseID}`,\r\n                _id:Math.floor(Math.random()*10000000),\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                cost:`${this.state.cost}`,\r\n                amountPaid:`${this.state.amountPaid}`,\r\n                roomDebit:`${this.state.cost}`,\r\n                POSAmount:0,\r\n                CashAmount:0,\r\n                TransferAmount:0,\r\n                CompDebit:0,\r\n                paymentMethod:`${this.state.paymentMethod}`,\r\n                roomNumbers:`${this.state.roomNumbers}`,\r\n                description: \"Laundry Docket\",\r\n                department: \"Laundry Sales\",\r\n                docketDetails: this.state.selected,\r\n                group:`${this.state.group}`,\r\n                user: localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift')\r\n            }\r\n            let result = await fetch(postDocketToRoom, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    restaurantSales\r\n                   \r\n                )\r\n                \r\n            });\r\n            console.log('result>  ' + result)\r\n\r\n            let result2 = await fetch(postRestBill, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    restaurantSales\r\n                   \r\n                )\r\n                \r\n            });\r\n            console.log('result2>  ' + result2)\r\n           \r\n            let result14 = await fetch(`${postToTable}/${tableID2}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result14>  ' + result14)\r\n            alert(\"Docket Posted to Room \" +this.state.roomNumbers)\r\n            this.setState({selected:[]});\r\n            this.setState({cost:0})\r\n            this.setState({amountPaid:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({roomNumbers:''})\r\n            this.setState({paymentMethod:''})\r\n            this.setState({group:''})\r\n            this.setState({shift:''})\r\n            this.setState({ NewtableNum:0})\r\n            localStorage.removeItem('delcntrl');\r\n            sessionStorage.removeItem('tableNumber2')\r\n           \r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            })\r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    renderPayMeth(data){\r\n        if(data) {\r\n            return data.map((item, index) => {\r\n                return(\r\n                    <>\r\n                        <option key={index} value={item.method}>\r\n                            {item.method}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderTables(data){\r\n        if(data) {\r\n            data.sort((a, b) => a.tableNum - b.tableNum);\r\n           \r\n            return data.map((item) => {\r\n                if(item.billCost===\"\"){\r\n                    return(\r\n                        <div key={item._id}>\r\n                            <button className=\"btn btn-success cartBtn3 alignroomsgreen2\" disabled = {this.state.NewtableNum===1} onClick={() => {sessionStorage.setItem('tableNumber2', item.tableNum);this.NewTable();this.setState({docketFirst:0})}}>\r\n                                <p className=\"texted\">{item.tableNum}</p>\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <div key={item._id}>\r\n                            <button className=\"btn btn-warning cartBtn3 alignroomsgreen2\" onClick={() => {sessionStorage.setItem('tableNumber2', item.tableNum);this.getTableR();this.setState({print:1})}}>\r\n                                <p className=\"texted\">{item.tableNum}</p>\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n               \r\n            })\r\n        }\r\n    }\r\n\r\n    renderRooms(data){\r\n        if(data) {\r\n           data.sort((a, b) => a.roomNumbers - b.roomNumbers);\r\n            return data.map((item, index) => {\r\n                return(\r\n                    <>\r\n                        <option key={index} value={item.roomNumbers}>\r\n                            {item.roomNumbers} - {item.fname} {item.lname}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    \r\n    addMeal(){\r\n        var menuselect=this.state.menulist;\r\n        menuselect.map((item)=>{\r\n            this.setState({\r\n                Newmeal:item.mealName,\r\n                Newprice:item.mealPrice,\r\n                Newqty:parseInt(item.mealQt),\r\n                Newid:item._id\r\n\r\n            })\r\n            return 'ok'\r\n        })\r\n        \r\n    }\r\n    increament(){\r\n        if(this.state.Newqty!==0){\r\n            this.setState({\r\n                Newqty:this.state.Newqty +1\r\n            })\r\n        }\r\n       \r\n    }\r\n\r\n    decreament(){\r\n        if(this.state.Newqty!==0){\r\n            this.setState({\r\n                Newqty:this.state.Newqty -1\r\n            })\r\n        }\r\n    }\r\n\r\n    pushorder(){\r\n        var selected = this.state.selected;\r\n        var selectedMeals = {};\r\n\r\n        if(this.state.selected.length>0){\r\n            this.setState({blockTable:1});\r\n    \r\n            selectedMeals.id=this.state.Newid;\r\n            selectedMeals.meal=this.state.Newmeal;\r\n            selectedMeals.mealPrice=this.state.Newprice;\r\n            selectedMeals.qty=this.state.Newqty;\r\n            selectedMeals.tranID=Math.floor(Math.random()*10000)\r\n            \r\n            selected.push(selectedMeals);\r\n                      \r\n            this.setState({\r\n                selected,\r\n                printStop:0,\r\n                DrinkStore:0,\r\n                DrinkSalesQty:0,\r\n                stockBal:0,\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:''\r\n            })\r\n                \r\n           \r\n        }\r\n        else if(this.state.selected.length===0){\r\n            this.setState({blockTable:0});\r\n\r\n            selectedMeals.id=this.state.Newid;\r\n            selectedMeals.meal=this.state.Newmeal;\r\n            selectedMeals.mealPrice=this.state.Newprice;\r\n            selectedMeals.qty=this.state.Newqty;\r\n            selectedMeals.tranID=Math.floor(Math.random()*10000)\r\n            \r\n            selected.push(selectedMeals);\r\n                      \r\n            this.setState({\r\n                selected,\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:'',\r\n                printStop:0,\r\n                DrinkStore:0,\r\n                DrinkSalesQty:0,\r\n                stockBal:0\r\n            })\r\n        }\r\n\r\n        \r\n\r\n        this.myTimer = setTimeout(() => {\r\n            if(this.state.selected.length>0){\r\n                const totalSale = selected.reduce((total, item) => {\r\n                    return total + item.mealPrice * item.qty\r\n                }, 0);\r\n                this.setState({\r\n                    cost:totalSale,\r\n                    \r\n                })\r\n            }\r\n\r\n            if(this.state.cost!==0){\r\n                fetch(`${getRooms}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        displayRoomNums:data\r\n                    })\r\n                })\r\n                fetch(`${getPaymentMethods}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        displayPaymentMethods:data\r\n                    })\r\n                })\r\n                // localStorage.removeItem('btnCntrl');\r\n                localStorage.removeItem('delcntrl')\r\n            }\r\n            \r\n        },1000);\r\n\r\n \r\n    }\r\n    \r\n\r\n     \r\n    renderMenu(data){\r\n        if (data){\r\n            return data.map((item) =>{\r\n                return(\r\n                    <>\r\n                        <div>\r\n                            <center>\r\n                                \r\n                                <div className=\"card alignroomsgreen3\"style={{backgroundColor:'orangered'}} key={item.mealTypeID}>\r\n                                    <button className=\"btn btn-orangered buttnheightbtn\" onMouseOver={()=>sessionStorage.setItem('meal',item.mealName)} onClick={ () =>{this.setState({Newmeal:item.mealName,Newprice:item.mealPrice,Newqty:parseInt(item.mealQt),Newid:item._id,tranID2:Math.floor(Math.random()*10000)});this.handleStock()}}>                         \r\n                                        \r\n                                    <p className=\"card-title formatnew2\">{item.mealName}</p> \r\n                                    </button>\r\n                                </div>\r\n                                \r\n                            </center>\r\n                        </div>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n    \r\n    renderOders(data){\r\n        \r\n        if(data) {\r\n            return data.map((item) =>{\r\n               \r\n                return(\r\n                    <>\r\n                        <tr key= {item.id}>\r\n                            {/* <td className=\"table-light table-striped adjust texted8Nw\">{item.id}</td> */}\r\n                            <td className=\"table-light table-striped adjust texted8Nw\">{item.meal}</td>\r\n                            <td className=\"table-light table-striped adjust texted8Nw\">{item.qty}</td>\r\n                            <td className=\"table-light table-striped adjust texted8Nw\"><NumberFormat value={item.mealPrice} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust texted8Nw\"><NumberFormat value={item.mealPrice*item.qty} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderSalesReport(data){\r\n        \r\n        if(data) {\r\n            return data.map((item) =>{\r\n                \r\n                return(\r\n                    <>\r\n                        \r\n                        <tr key= {item.id}>\r\n                            {/* <td className=\"table-light table-striped adjust texted8\">{item.id}</td> */}\r\n                            <td className=\"table-light table-striped adjust texted8\">{item.productName}</td>\r\n                            <td className=\"table-light table-striped adjust texted8\">{item.Quantity}</td>\r\n                            <td className=\"table-light table-striped adjust texted8\"><NumberFormat value={item.productPrice} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust texted8\"><NumberFormat value={item.productPrice*item.Quantity} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust texted8\"> </td>\r\n                            \r\n                        </tr>\r\n                        \r\n                        \r\n                        \r\n                    </>\r\n                )\r\n                \r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    renderPos(food){\r\n        if(food) {\r\n            return food.map((item) =>{\r\n               \r\n                return(\r\n                    <>\r\n                        <div>\r\n                            <center>\r\n                                \r\n                                <div className=\"card alignroomsgreen3\"style={{backgroundColor:'blueviolet'}} key={item.mealTypeID}>\r\n                                    <button className=\"btn btn-blueviolet buttnheightbtn\" onMouseOver={() => this.setState({menuID:item.mealTypeID})} onClick={ () => this.buttonClick () }>\r\n                                        <p className=\"card-title formatnew2\">{item.mealType}</p> \r\n                                    </button>\r\n                                </div>\r\n                                \r\n                            </center>\r\n                        </div>\r\n                        \r\n                    </>\r\n                )\r\n            })\r\n        }\r\n\r\n    }\r\n    \r\n    render() {\r\n        console.log(\">>> Inside RESrender\", this.state)\r\n        var tranDt = moment(`${this.state.transactionDate}`).format('MMM DD YYYY');\r\n        var docketNum ='Rest'+Math.floor(Math.random()*10000);\r\n        var add = this.state.amountPaid;\r\n        if(this.state.amountPaid===''){\r\n            add = 0\r\n        }\r\n\r\n\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <FLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return(\r\n            <div className=\"posterminal displayback\">  \r\n                               \r\n                <br/>     \r\n                <div className =\"row quantity\" >\r\n                               \r\n                    <center>\r\n                        <h6 style={{color:'white'}}>Add Quantity</h6>\r\n                    </center>\r\n                            \r\n                    <div>\r\n                        <div className=\"row\">\r\n                            <p className=\"prices\">Price: {this.state.Newprice}</p>\r\n                            {/* <p className=\"prices2\">Avail.Stock: {this.state.stockBal}</p> */}\r\n                            <span className=\"dcrbtn\">\r\n                                <button className=\"form-control mb-3 formsizeX1\" onClick={() =>this.decreament()}><p className=\"sign\">-</p></button>\r\n                            </span>\r\n                            <span className=\"qtybtn\">\r\n                                <input type=\"number\" className=\"form-control2 mb-3 formsizeX\" style={{textAlign:'center',fontStyle:'bold',color:'white',fontSize:'24px'}}name=\"Newqty\" value={this.state.Newqty} onChange={this.handleChange3}/>\r\n                            </span>\r\n                            <span className=\"incbtn\">\r\n                                <button className=\"form-control mb-3 formsizeX1\" onClick={() => this.increament()}><p className=\"sign\">+</p></button>\r\n                            </span>2\r\n                            <button className=\"btn btn-warning addbtn\" disabled={this.state.Newqty===0} onClick={() =>{this.pushorder();this.setState({docketFirst:1})}}>Add</button>\r\n                            \r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n                \r\n\r\n                <div className=\"salesTable\">\r\n                \r\n                    <table className=\"table table-hover\">\r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                {/* <th className=\"adjust2\">ID</th> */}\r\n                                <th className=\"adjust2\">Menu</th>\r\n                                <th className=\"adjust2\">Qty</th>\r\n                                <th className=\"adjust2\">Price(=N)</th>\r\n                                <th className=\"adjust2\">Amount(=N)</th>\r\n                               \r\n                                \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover tableheight\">\r\n                            {this.renderOders(this.state.selected)}\r\n                            \r\n       \r\n                            \r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                </div>\r\n\r\n                \r\n                    \r\n                <div className=\"amountP\">\r\n                    <input type=\"text\" className=\"form-control mb-3 formsizeA1 textedM\" name=\"amountPaid\" require placeholder= \"Enter Payment\" value={this.state.amountPaid} onChange={this.handleChange}/>\r\n                </div>\r\n\r\n                <div className=\"method\">\r\n                    <select className=\"form-select formsizeA1 textedM\" name=\"paymentMethod\" onChange={this.handleChange}>\r\n                        <option selected value=''>Payment Method</option>\r\n                        {this.renderPayMeth(this.state.displayPaymentMethods)}\r\n                    </select>\r\n                </div>\r\n                \r\n                \r\n                <div className=\"textAmount\">\r\n                    <p className=\"fmtcost2\" style={{color:'white'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                </div>\r\n                <div className=\"textAmount2\">\r\n                    <p className=\"fmtcost2\" style={{color:'white'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                </div>\r\n\r\n                <div className=\"operations\">\r\n                    \r\n                    <h4 className=\"texted4\" style={{color:'white'}}>Operations</h4>\r\n                    \r\n                    <button disabled={localStorage.getItem('delcntrl')} className=\"btn btn-primary cartBtn2\" onClick={() => {this.removeAll();this.setState({docketFirst:0})}}>\r\n                        <p className=\"texted\">Delete</p>\r\n                    </button>\r\n                    \r\n                    <button disabled={this.state.cost===0||this.state.amountPaid===''||this.state.amountPaid<this.state.cost||this.state.amountPaid>this.state.cost||this.state.paymentMethod===''||this.state.paymentMethod==='Complimentary'||this.state.docketFirst===1} className=\"btn btn-primary cartBtn2\" onClick={() => {this.onOpenPword()}}>\r\n                        <p className=\"texted\">Post</p>\r\n                    </button>\r\n                    <select type =\"button\" disabled={this.state.docketFirst===1} className=\"form-select formsizeB mb-2 btn btn-primary texted\" name=\"roomNumbers\" onChange={this.handleChange2}>\r\n                        <option selected value=''>Rooms</option>\r\n                        {this.renderRooms(this.state.displayRoomNums)}\r\n                                                                    \r\n                    </select>\r\n                                            \r\n                    <button disabled={this.state.roomNumbers===''||this.state.amountPaid!=='' ||this.state.docketFirst===1} className=\"btn btn-primary cartBtn4\" onClick={() => {this.onOpenCompModal();this.postQty()}}>\r\n                        <p className=\"texted\">Room Post</p>\r\n                    </button>\r\n                    <button disabled={this.state.paymentMethod!=='Complimentary'||this.state.amountPaid!==''||this.state.docketFirst===1} className=\"btn btn-primary cartBtn2\" onClick={() =>{this.onOpenModalreceipt();this.postQty()}}>\r\n                        <p className=\"texted\">Comp</p>\r\n                    </button>\r\n                    <button disabled={this.state.docketFirst===1} className=\"btn btn-primary cartBtn2\" onClick={ ()=>{this.handleReport()}}>\r\n                        <p className=\"texted\">Reports</p>\r\n                    </button>\r\n                    \r\n                    <button disabled={localStorage.getItem('btnCntrl')} className=\"btn btn-warning cartBtn12\" onClick={() => {this.addToTable();this.setState({NewtableNum:0})}}>\r\n                        <p className=\"texted\">Add to Table {sessionStorage.getItem('tableNumber2')}</p>\r\n                    </button>\r\n                    \r\n                    <button disabled = 'true' className=\"btn btn-danger cartBtn2\" onClick={ ()=>this.logout}>\r\n                        <p className=\"texted\">Close</p>\r\n                    </button>    \r\n\r\n                    <button className=\"btn btn-danger cartBtn20\" onClick={ ()=> this.logout()}>\r\n                        <p className=\"texted\">Log Out {localStorage.getItem('userInfo').split(' ')[0]}</p>\r\n                    </button>\r\n\r\n                    {/* <button disabled={this.state.docketFirst===1} className=\"btn btn-primary cartBtn112\" onClick={ ()=>{this.handleCredit()}}>\r\n                        <p className=\"texted\">Recover Debt</p>\r\n                    </button> */}\r\n                    <button disabled className={this.state.shiftcolor}>\r\n                        <p className=\"texted\">{localStorage.getItem('shift')}</p>\r\n                    </button>\r\n                    <button disabled ={this.state.selected.length===0 || this.state.printStop===0||this.state.print===0}className={this.state.shiftcolor} onClick={()=>{this.onOpenModaltoprint();localStorage.setItem('delcntrl',true)}}>\r\n                        <p className=\"texted\">Print Docket</p>\r\n                    </button>\r\n                    \r\n                </div>\r\n\r\n                <div className=\"tables\">\r\n                    <h5 className=\"texted2\" style={{color:'white'}}>Get Table</h5>\r\n                    <h5 className='texted2'style={{color:'yellow'}}>Work Date: {tranDt}</h5>\r\n                    <div>\r\n                        {this.renderTables(this.state.tables)}\r\n                    \r\n                    </div>\r\n                    <h6 style={{color:'silver', textAlign:'right'}}>Laundry App</h6>\r\n                    <button className=\"btn btn-danger texted\" onClick={ ()=> {this.props.history.push('/roomchart')}}>Goto Reception</button>\r\n                </div>\r\n\r\n                <div className =\"mainmenu\">\r\n                    {this.renderPos(this.state.menu)}\r\n                </div>\r\n\r\n                <div className =\"menulistItems\">\r\n                    {this.renderMenu(this.state.menulist)}\r\n                </div>\r\n\r\n                <Modal open={this.state.edit}>\r\n                    \r\n                    <div className=\"paperWidth\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hotelphone}</p>\r\n                        <hr/>\r\n                            <p className=\"textSized2\" style={{fontWeight:'bold', fontFamily: 'Georgia, Times New Roman, Times, serif', fontSize:'14px'}}>Laundry Docket</p>\r\n                            <p className=\"textSized2\">Date: {tranDt}</p>\r\n                            <p className=\"textSized2 mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"table-warning\">\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>Price(=N)</th>\r\n                                    <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>Amount(=N)</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"table table-hover tableheight\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'15px', fontFamily: 'monospace', fontWeight:'bolder'}}>Total:<NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'15px', fontFamily: 'monospace', fontWeight:'bolder'}}>Amount Paid:<NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'15px', fontFamily: 'monospace', fontWeight:'bolder'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'15px', fontFamily: 'monospace', fontWeight:'bolder'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized2\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized2\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontFamily: 'monospace', fontWeight:'bold'}}>THANK YOU</p>\r\n                            <p style={{fontSize:'13px', fontFamily: 'monospace', fontWeight:'bold'}}>Table Num: {sessionStorage.getItem('printTableNum')}</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter2()}}>\r\n                                    <p className=\"texted2\">{this.state.printBTN}</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                <Modal open={this.state.pword} onClose={()=>this.onClosePword()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Access Required</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <input type=\"password\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"pass\" require placeholder=\"Enter Access Code\" value={this.state.pass} onChange={this.handleChange}/>\r\n                                    <button disabled = {this.state.pass===''} className=\"btn btn-warning formsize91\" onClick={()=>this.AllowRefund()}>Login</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n\r\n                <Modal open={this.state.editreceipt} onClose={()=>{this.onCloseModalreceipt();this.handleSubmit()}}>\r\n                    \r\n                    <div>\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hotelphone}</p>\r\n                        <hr/>\r\n                            <p className=\"textSized2\" style={{fontWeight:'bold', fontFamily: 'Georgia, Times New Roman, Times, serif', fontSize:'14px'}}>Laundry Receipt</p>\r\n                            <p className=\"textSized2\">Date: {tranDt}</p>\r\n                            <p className=\"textSized2 mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"table-warning\">\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>Price(=N)</th>\r\n                                    <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>Amount(=N)</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"table table-hover tableheight\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'15px', fontFamily: 'monospace', fontWeight:'bolder'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'15px', fontFamily: 'monospace', fontWeight:'bolder'}}>Amount Paid: <NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'15px', fontFamily: 'monospace', fontWeight:'bolder'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'15px', fontFamily: 'monospace', fontWeight:'bolder'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized2\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized2\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontFamily: 'Georgia, Times New Roman, Times, serif', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted2\">Print</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseModalreceipt();this.handleSubmit()}}>\r\n                                    <p className=\"texted2\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                <Modal open={this.state.compModal} onClose={()=>{this.onCloseCompModal();this.handleRoomSubmit()}}>\r\n                    \r\n                    <div>\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hotelphone}</p>\r\n                        <hr/>\r\n                            <p className=\"textSized2\" style={{fontWeight:'bold',fontSize:'14px'}}>Laundry Docket</p>\r\n                            <p className=\"textSized2\">Date: {tranDt}</p>\r\n                            <p className=\"textSized2 mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"table-warning\">\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>Price(=N)</th>\r\n                                    <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>Amount(=N)</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"table table-hover tableheight\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'15px', fontFamily: 'monospace', fontWeight:'bolder'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'15px', fontFamily: 'monospace', fontWeight:'bolder'}}>Amount Paid: <NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'15px', fontFamily: 'monospace', fontWeight:'bolder'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'15px', fontFamily: 'monospace', fontWeight:'bolder'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized2\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized2\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontFamily: 'Georgia, Times New Roman, Times, serif', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted2\">{this.state.printBTN}</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseCompModal();this.handleRoomSubmit()}}>\r\n                                    <p className=\"texted2\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                {/* view daily sales report */}\r\n                <Modal open={this.state.report} onClose={()=>{this.onCloseModalreport()}}>\r\n                    \r\n                    <div>\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hotelphone}</p>\r\n                        <hr/>\r\n                            <p className=\"textSized2\" style={{fontWeight:'bold',fontSize:'14px'}}>Laundry Daily Sales Report</p>\r\n                            <p className=\"textSized2\">Report Date: {tranDt}</p>\r\n                            <p className=\"textSized2 mb-3\">Shift: {this.state.useReportShift}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"table-warning\">\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>Price(=N)</th>\r\n                                    <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>Amount(=N)</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"table table-hover tableheight\">\r\n                                {this.renderSalesReport(this.state.DrinkSalesQtyReportData)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'14px', fontFamily: 'Georgia, Times New Roman, Times, serif', fontWeight:'bold'}}>Total Sales: <NumberFormat value={this.state.totalSales} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        \r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized2\">Staff: {this.state.useReportName}</p>\r\n                            <p className=\"textSized2\">Shift: {this.state.useReportShift}</p>\r\n                            <p style={{fontSize:'13px', fontFamily: 'monospace', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted2\">{this.state.printBTN}</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseModalreport()}}>\r\n                                    <p className=\"texted2\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                <Modal open={this.state.credit} onClose={()=>this.onCloseModalCredit()} style={{color:\"silver\"}}>\r\n                    <div className = \"background591stockin\">\r\n                        <h6 style = {{color:'silver',marginLeft:'50px', marginBottom:'-70px'}}>Recover Credit</h6>\r\n                        <div className=\"formdesign511\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <h6>Summary</h6>\r\n                                    <div className=\"col-3\">\r\n                                        <label>Total Credit</label>\r\n                                        <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\"><NumberFormat value={parseInt(this.state.TotalCredit)} thousandSeparator={true} displayType={\"text\"}/></p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-3\">\r\n                                        <label>Total Recovered</label>\r\n                                        <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\"><NumberFormat value={parseInt(this.state.TotalCreditPaid)} thousandSeparator={true} displayType={\"text\"}/></p>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"col-3\">\r\n                                        <label>Credit Balance</label>\r\n                                        <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\"><NumberFormat value={parseInt(this.state.TotalCredit)-parseInt(this.state.TotalCreditPaid)} thousandSeparator={true} displayType={\"text\"}/></p>\r\n                                    </div>\r\n                                    \r\n                                    \r\n                                </div>\r\n                                <div className='row'>\r\n                                    <div className=\"col-4\">\r\n                                            <input type=\"number\" className=\"form-control mb-3 formsize51 ikem\" name=\"creditPaid\" require placeholder=\"Enter Amount\" value={this.state.creditPaid} onChange={this.handleChange}/>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-4\">\r\n                                        <select className=\"form-select formsize51 ikem\" name=\"paymentMethod\" onChange={this.handleChange}>\r\n                                            <option selected value=''>Payment Method</option>\r\n                                            {this.renderPayMeth(this.state.payNwMeth)}\r\n                                        </select>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                \r\n                                <br/><br/>\r\n                                <center>\r\n                                    <span>\r\n                                        <button disabled ={this.state.creditPaid===''} className=\"btn btn-warning gap\" onClick={()=>this.postCredit()}>Post</button>\r\n                                        <button className=\"btn btn-danger gap\" onClick={ () => this.onCloseModalCredit()}>Close</button>\r\n                                                \r\n                                    </span>\r\n                                            \r\n                                </center>\r\n                                <br/>\r\n                        \r\n                            </div>\r\n                            \r\n                        </div> \r\n                        \r\n                    </div>  \r\n\r\n                </Modal>\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n    async componentDidMount(){\r\n        console.log (\">>> Inside RESdidMount\")\r\n        fetch(`${restMenugrpUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                menu:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        await fetch(`${getWorkDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({transactionDate:item.date})\r\n                return 'ok'\r\n            })\r\n            \r\n           \r\n        })\r\n        \r\n        this.myTimer = setInterval(() => {\r\n             fetch(`${getWorkDate}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({transactionDate:item.date})\r\n                    return 'ok'\r\n                })\r\n                \r\n        })\r\n            \r\n        },1000);\r\n       \r\n\r\n        fetch(`${getPaymentMethods}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                payNwMeth:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getStoreData}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                DrinkstoreData:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getBarSalesQty}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                DrinkSalesQtyData:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getTable}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({tables:data})\r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            });\r\n\r\n            localStorage.setItem('btnCntrl',true)\r\n\r\n\r\n        },2000)\r\n\r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n        if(localStorage.getItem('shift')==='Morning Shift'){\r\n            this.setState({shiftcolor:\"btn btn-primary cartBtn20\"})\r\n        }\r\n        else if(localStorage.getItem('shift')==='Night Shift'){\r\n            this.setState({shiftcolor:\"btn btn-dark cartBtn20\"})\r\n        }\r\n        else if(localStorage.getItem('shift')==='All Day'){\r\n            this.setState({shiftcolor:\"btn btn-warning cartBtn20\"})\r\n        }\r\n        \r\n    }\r\n}\r\nexport default LaundryApp;","import React, { Component } from 'react';\r\nimport 'react-responsive-modal/styles.css';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport './Bar/BarReport.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst userLogin = \"https://zarvichdemo.localto.net/barUserInfo?barcode=\";\r\nconst userName = \"https://zarvichdemo.localto.net/barUserInfo\";\r\n\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\">>> inside loginConstructor\", props)\r\n       \r\n        this.state = {\r\n            login: false,\r\n            userInfo:'',\r\n            userPassword:'',\r\n            authPassword:'',\r\n            selectUserName:'',\r\n            shift:'',\r\n            \r\n        };\r\n        \r\n    }\r\n\r\n    login(){\r\n        fetch(`${userLogin}${this.state.userPassword}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({userInfo:data})\r\n           \r\n            this.myTimer = setTimeout(() => {\r\n                if(this.state.userInfo.length>0){\r\n                    this.setState({\r\n                        login: false\r\n                        \r\n                    })\r\n                    window.location.reload();\r\n                    data.map((item) =>{\r\n                        localStorage.setItem('userInfo',item.name);\r\n                        localStorage.setItem('shift',this.state.shift);\r\n                        return 'ok'\r\n                    })\r\n                }\r\n            },1000)\r\n           \r\n        })\r\n\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseModallogin(){\r\n        this.setState({\r\n            login: true\r\n        })\r\n        \r\n    }\r\n\r\n    render() {\r\n        console.log (\">>> Inside logindetails\", this.state)\r\n        return (\r\n            <>\r\n                <Modal open={this.state.login} onClose={()=>this.onCloseModallogin()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Login First</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <input type=\"password\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"userPassword\" require placeholder=\"Enter password\" value={this.state.userPassword} onChange={this.handleChange}/>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"shift\" require placeholder=\"Select Shift\" value={this.state.shift} list=\"shift\"  onChange={this.handleChange}/>\r\n                                    <datalist id=\"shift\">\r\n                                        <option value = \"Morning Shift\"></option>\r\n                                        <option value = \"Night Shift\"></option>\r\n                                        <option value = \"All Day\"></option>\r\n                                    </datalist>\r\n                                    <button disabled = {this.state.userPassword===''||this.state.shift===''} className=\"btn btn-warning formsize91\" onClick={()=>this.login()}>Login</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n        \r\n    componentDidMount() {\r\n        console.log(\">>> Inside loginDidMount\", this.state)\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                selectUserName:data,\r\n                login: true\r\n            \r\n            });\r\n            \r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Login;","import React,{Component} from 'react';\r\nimport './RestReport.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment';\r\nimport Login from '../Login';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst sales='https://zarvichdemo.localto.net/restaurantSales';\r\n\r\n\r\n\r\n\r\nclass ComponentToPrintA extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        console.log(\">>>Inside CompToConstructor\",props)\r\n\r\n        this.state={\r\n            RestprintData:'',\r\n            \r\n        }\r\n    }\r\n\r\n    renderPrintData(data){\r\n        if(data)\r\n        return data.map((item) =>{\r\n                 return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                        <td className=\"table-light table-striped adjust2\">{moment(item.date).format('MMM DD YYYY')}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.docketNum}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.refID}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.roomNumbers}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.paymentMethod}</td>\r\n                            <td className=\"table-light table-striped adjust2\"><NumberFormat value={item.cost} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2\"><NumberFormat value={item.amountPaid} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                          \r\n                        </tr> \r\n                        \r\n                    </>            \r\n                )\r\n            \r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(\">>> Inside CompTorender\", this.state)\r\n        if(localStorage.getItem('userInfo')==null){\r\n            return(\r\n                <>\r\n                    <Login/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        return(\r\n            <div className=\"print-source\">\r\n                <div>\r\n                    <img src= \"zarvichlogo.png\" className=\"alignImg\" style={{width:\"100px\", height:\"70px\"}} alt=\"logo\"/>\r\n                </div>\r\n                <div>\r\n                    <center>\r\n                        <h6>Zarvich Hotels Ltd.</h6>\r\n                        <p className=\"textSize\">No ABC Road, Wuse II, Abuja, Nigeria</p>\r\n                        <p className=\"textSize\">+234 803 590 5421, info@zarvichosh.com</p>\r\n                       \r\n                    </center>\r\n                </div>\r\n                <center><h5>Restaurant Sales Report</h5></center>\r\n                <br/>\r\n              \r\n                <table className=\"table table-hover\">\r\n\r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                        <th className=\"adjust2\">Date</th>\r\n                            <th className=\"adjust2\">Docket Num</th>\r\n                            <th className=\"adjust2\">Room ID</th>\r\n                            <th className=\"adjust2\">Room Num</th>\r\n                            <th className=\"adjust2\">Payment Method</th>\r\n                            <th className=\"adjust2\">Price(=N)</th>\r\n                            <th className=\"adjust2\">AMount Paid(=N)</th>\r\n                            \r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderPrintData(this.state.RestprintData)}\r\n                    </tbody>\r\n                </table>            \r\n            </div>\r\n        );\r\n    }\r\n    componentDidMount(){\r\n        console.log (\">>> Inside CompTodidMount\")\r\n        fetch(sales, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                RestprintData:data\r\n            })\r\n            \r\n        })\r\n\r\n        \r\n    }\r\n}\r\nexport default ComponentToPrintA;","import React, {Component} from 'react';\r\nimport './Header.css';\r\nimport {withRouter} from 'react-router-dom';\r\nimport ReactToPrint from 'react-to-print';\r\nimport ComponentToPrintA from './Restaurant/ComponentToPrintA';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\nclass Header3 extends Component {\r\n      \r\n\r\n    render(){\r\n        return (\r\n            <div className=\"black\">\r\n                \r\n                <span>\r\n                    <ReactToPrint\r\n                        trigger={() => <button className=\"btn btn-primary buttncontrol5 mb-3 mt-3\">Print Sales</button>}\r\n                        content={() => this.componentRef}\r\n                    />\r\n                    <ComponentToPrintA ref={el => (this.componentRef = el)} />\r\n\r\n                    <button className=\"btn btn-danger buttncontrol6 mb-3 mt-3\"onClick={ ()=> {this.props.history.push('./BarPortal')}}>Close</button>\r\n                   \r\n                </span>\r\n                \r\n            \r\n            </div>\r\n        )\r\n    }\r\n   \r\n    \r\n}\r\nexport default withRouter (Header3);","import React,{Component} from 'react';\r\nimport './RestReport.css';\r\nimport moment from 'moment';\r\nimport NumberFormat from 'react-number-format';\r\nimport Header3 from '../Header3';\r\nimport Login from '../Login';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst salesRecordsUrl='https://zarvichdemo.localto.net/restaurantSales';\r\nconst userName = \"https://zarvichdemo.localto.net/barUserInfo\";\r\n\r\n\r\nclass SalesReport extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        console.log(\">>>Inside SalesConstructor\",props)\r\n\r\n        this.state={\r\n            salesRecords:'',\r\n            totalSales:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n            \r\n            \r\n        }\r\n    }\r\n\r\n    handleTotal(){\r\n        const total = this.state.salesRecords.reduce((totalCost, item) => totalCost + parseInt(item.amountPaid), 0)\r\n        this.setState({totalSales:total})\r\n    }\r\n   \r\n    renderSalesData(data){\r\n        \r\n        if(data)\r\n        return data.map((item, _id) =>{\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                        <td className=\"table-light table-striped adjust2\">{moment(item.date).format('MMM DD YYYY')}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.docketNum}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.refID}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.roomNumbers}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.paymentMethod}</td>\r\n                            <td className=\"table-light table-striped adjust2\"><NumberFormat value={item.cost} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2\"><NumberFormat value={item.amountPaid} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                          \r\n                        </tr> \r\n                        <div className=\"accordion-flush\" id=\"accordionFlushExample\">\r\n                            <div className=\"accordion-item\">\r\n                                <h5 className=\"accordion-header\" id=\"flush-headingOne\">\r\n                                    <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\"  aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\r\n                                        <b style={{color:'blue'}}>Order Details</b>\r\n                                    </button>\r\n                                </h5>\r\n                                <div id=\"flush-collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\">\r\n                                    <div className=\"accordion-body\">\r\n\r\n                                        { item.docketDetails.map(food => (\r\n                                            \r\n                                            <>\r\n                                                {food.meal} (<NumberFormat value={food.mealPrice} thousandSeparator={true} displayType={\"text\"}/>.00), &nbsp;;\r\n                                                \r\n                                            \r\n                                            </>\r\n                                            \r\n                                        ))}\r\n                                    </div>\r\n                                                \r\n                                        \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                            \r\n                         \r\n                    </>            \r\n                )\r\n            \r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(\">>> Inside CompTorender\", this.state)\r\n\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Login/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        \r\n        return(\r\n            <>\r\n            \r\n              <Header3/>\r\n                <center><h5>Daily Sales Report</h5></center>\r\n                <br/>\r\n                <table className=\"table table-hover\">\r\n\r\n                    <thead className=\"table-warning\">\r\n                       \r\n                        <tr>\r\n                        <th className=\"adjust2\">Date</th>\r\n                            <th className=\"adjust2\">Docket Num</th>\r\n                            <th className=\"adjust2\">Room ID</th>\r\n                            <th className=\"adjust2\">Room Num</th>\r\n                            <th className=\"adjust2\">Payment Method</th>\r\n                            <th className=\"adjust2\">Price(=N)</th>\r\n                            <th className=\"adjust2\">AMount Paid(=N)</th>\r\n                                                                \r\n                        </tr>\r\n                    </thead>\r\n                    \r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderSalesData(this.state.salesRecords)}\r\n                    </tbody>\r\n                </table>   \r\n                \r\n                      \r\n            \r\n                \r\n                        \r\n            </>\r\n        );\r\n    }\r\n    componentDidMount(){\r\n        console.log (\">>> Inside SalesTodidMount\")\r\n       \r\n       \r\n        fetch(salesRecordsUrl, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({salesRecords:data})\r\n           \r\n            \r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n        \r\n       \r\n    }\r\n}\r\nexport default SalesReport;","import React,{Component} from 'react';\r\nimport './RestReport.css';\r\nimport Restlogin from '../Restlogin';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst userName = \"https://zarvichdemo.localto.net/restUserInfo\";\r\n\r\nclass RestReports extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside RMConstructor\")\r\n\r\n        this.state={\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n           \r\n        }\r\n\r\n    }\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n          \r\n            login:true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Restlogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        return(\r\n            <>\r\n                 <div className=\"background15\">\r\n                     <center>\r\n                         <div className=\"formdesign150\">\r\n                             <h4 className=\"mb-3\">Restaurant Portal</h4>\r\n                            <div>\r\n                                \r\n                                <center>\r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('./restaurant')}}>Restaurant</button>\r\n                                    <button className=\"btn btn-warning btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/AppMenu')}}>App Menu</button>\r\n                                    <button className=\"btn btn-danger btnwidth15 mb-3\" onClick={ ()=> this.logout()}>\r\n                                    Log Out {localStorage.getItem('userInfo').split(' ')[0]}\r\n                                    </button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                         </div>\r\n\r\n                     </center>\r\n                   \r\n                </div>\r\n                <div className=\"pagebody3\">\r\n                    <input hidden/>\r\n                </div>\r\n            </>\r\n           \r\n\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default RestReports;\r\n","import React,{Component} from 'react';\r\nimport './Bar.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment';\r\nimport Login from '../Login';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst restMenugrpUrl = \"https://zarvichdemo.localto.net/drinkCategories\";\r\nconst menuUrl = \"https://zarvichdemo.localto.net/drinkitems?drinktypes=\";\r\nconst postRestBill = \"https://zarvichdemo.localto.net/bar\";\r\nconst getRooms =\"https://zarvichdemo.localto.net/checkin?docket=Yes\";\r\nconst getGuestID = \"https://zarvichdemo.localto.net/checkin?roomNumID=\";\r\nconst postDocketToRoom = \"https://zarvichdemo.localto.net/bill\";\r\nconst getPaymentMethods = \"https://zarvichdemo.localto.net/paymentMethods\";\r\nconst putToTable = \"https://zarvichdemo.localto.net/barTablePost\";\r\nconst getTable = \"https://zarvichdemo.localto.net/barTable\";\r\nconst getTableID = \"https://zarvichdemo.localto.net/barTable?tableID=\";\r\nconst getStoreData = \"https://zarvichdemo.localto.net/getBarStore\";\r\nconst postBarSalesQty = \"https://zarvichdemo.localto.net/postBarSalesQty\";\r\nconst getBarSalesQty = \"https://zarvichdemo.localto.net/getBarSalesQty\";\r\nconst userName = \"https://zarvichdemo.localto.net/barUserInfo\";\r\n\r\nconst postRestCredit = \"https://zarvichdemo.localto.net/barCredit\";\r\nconst getRestCredit = \"https://zarvichdemo.localto.net/barCreditSales?BCstaff=\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\nconst getWorkDate = \"https://zarvichdemo.localto.net/getActive\";\r\n\r\n\r\nclass BarApp extends Component {\r\n\r\n    constructor(props) {\r\n        super (props);\r\n        console.log(\">>>Inside RESConstructor\",props)\r\n\r\n        this.state = {\r\n            Newmeal:'',\r\n            Newprice:'',\r\n            Newqty:0,\r\n            Newid:'',\r\n            edit:false,\r\n            editreceipt:false,\r\n            compModal:false,\r\n            report:false,\r\n            printStop:0,\r\n            docketFirst:0,\r\n            printBTN:'Print',\r\n            print:0,\r\n            blockTable:0,\r\n            IDfound:[],\r\n           \r\n            menu:'',\r\n            meal:'',\r\n            mealPrice:'',\r\n            mealQuantity:'',\r\n            mealId:Math.floor(Math.random()*10000),\r\n            guestInhouseID:'',\r\n            selected:[],\r\n            menuID:'',\r\n            menulist:'',\r\n            cost:0,\r\n            amountPaid:'',\r\n            roomNumbers:'',\r\n            paymentMethod:'',\r\n            displayPaymentMethods:'',\r\n            displayRoomNums:'',\r\n            transactionDate:'',\r\n            tables:'',\r\n            newTable:'',\r\n            NewtableNum:0,\r\n            group:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            Blogin:'',\r\n            login:'',\r\n            shiftcolor:'',\r\n            shift:localStorage.getItem('shift'),\r\n            \r\n\r\n            DrinkstoreData:[],\r\n            DrinkSalesQtyData:[],\r\n            DrinkStore:0,\r\n            DrinkSalesQty:0,\r\n            stockBal:0,\r\n            \r\n            \r\n            DrinkSalesQtyReportData:'',\r\n            useReportName:'',\r\n            useReportShift:'',\r\n            useReportDate:'',\r\n            totalSales:0,\r\n            Stockbtn:'Add',\r\n\r\n            creditSales:'',\r\n            TotalCredit:0,\r\n            creditPaid:0,\r\n            payNwMeth:'',\r\n            TotalCreditPaid:0,\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:'',\r\n\r\n            pass:'',\r\n            pword:false,\r\n            pword2:false\r\n\r\n            \r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    onOpenPword(){\r\n        if(this.state.paymentMethod===\"Credit\"){\r\n            this.setState({\r\n                pword: true\r\n            })\r\n            \r\n        }\r\n        else{\r\n            this.setState({\r\n                pword: false\r\n            });\r\n            this.onOpenModalreceipt();\r\n            this.postQty()\r\n        }\r\n\r\n    }\r\n\r\n    onClosePword(){\r\n        this.setState({\r\n            pword: false\r\n        })\r\n        \r\n    }\r\n\r\n    AllowRefund(){\r\n        if(this.state.pass==='6849'){\r\n            this.onOpenModalreceipt();\r\n            this.postQty();\r\n            this.onClosePword()\r\n\r\n        }\r\n        else{\r\n            alert('Access Denied')\r\n        }\r\n    }\r\n\r\n\r\n    onOpenModaltoprint(){\r\n        this.setState({\r\n            edit: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onOpenCompModal(){\r\n        this.setState({\r\n            compModal: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseModalCredit(){\r\n        this.setState({\r\n            credit: false,\r\n            creditPaid:0\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseCompModal(){\r\n        this.setState({\r\n            compModal: false\r\n        })\r\n        \r\n    }\r\n\r\n\r\n    onCloseModaltoprint(){\r\n        this.setState({\r\n            edit: false\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenModalreceipt(){\r\n        this.setState({\r\n            editreceipt: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseModalreceipt(){\r\n        this.setState({\r\n            editreceipt: false\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenModalreport(){\r\n        this.setState({\r\n            report: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseModalreport(){\r\n        this.setState({\r\n            report: false\r\n        })\r\n        \r\n    }\r\n\r\n    handleReport(){\r\n\r\n        var todayDate = moment(this.state.transactionDate).format('MMM DD YYYY');\r\n        var username = localStorage.getItem('userInfo');\r\n        var findQty = `${getBarSalesQty}?useDate=${todayDate}&&useshift=${this.state.shift}&&userstaff=${username}`\r\n\r\n        fetch(`${findQty}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                DrinkSalesQtyReportData:data\r\n            })\r\n            \r\n        })\r\n        this.myTimer = setTimeout(() => {\r\n            if(this.state.DrinkSalesQtyReportData.length>0){\r\n                var useData = this.state.DrinkSalesQtyReportData\r\n                var findUser = useData.find(element=>element.user===username)\r\n                var useDt = [];\r\n                useDt.push(findUser);\r\n                this.setState({useReportName:useDt.map(item=>item.user)})\r\n                this.setState({useReportShift:useDt.map(item=>item.shift)})\r\n                this.setState({useReportDate:useDt.map(item=>item.tranDate)})\r\n                \r\n                var TotSal = useData.reduce((total, item)=>{\r\n                    return total + parseInt (item.productPrice * item.Quantity)\r\n                }, 0);\r\n                this.setState({totalSales:TotSal});\r\n    \r\n                this.onOpenModalreport()\r\n            }\r\n            else{\r\n    \r\n                alert('No Sales was posted by '+username)\r\n    \r\n            }\r\n        },1000)\r\n        \r\n\r\n        \r\n    }\r\n\r\n\r\n    handleStock(){\r\n                \r\n        if(this.state.DrinkstoreData.length>0){\r\n            var stockItem = sessionStorage.getItem('meal');\r\n                       \r\n            //check available stock\r\n            const stockData=this.state.DrinkstoreData;\r\n            var totalStock = stockData.filter(stock => stock.productName.includes(stockItem)).reduce((total, item)=>{\r\n                return total + parseInt(item.piecesOut)\r\n            }, 0);\r\n            this.setState({DrinkStore:totalStock})\r\n\r\n            //check quantity sold\r\n            const qtyData=this.state.DrinkSalesQtyData;\r\n            var totalQty = qtyData.filter(qty => qty.productName.includes(stockItem)).reduce((total, item)=>{\r\n                return total + parseInt(item.Quantity)\r\n            }, 0);\r\n            this.setState({DrinkSalesQty:totalQty})\r\n            \r\n            //show stock balance\r\n            this.myTimer = setTimeout(() => {\r\n\r\n                var Total = 0;\r\n                var ST = Total + this.state.DrinkStore-this.state.DrinkSalesQty;\r\n                this.setState({stockBal:ST})\r\n                if(ST<0||ST<-1){\r\n                    this.setState({stockBal:0})\r\n                };\r\n\r\n                if(this.state.stockBal===0){\r\n                    this.setState({Stockbtn:'Finished'})\r\n                }\r\n                else{this.setState({Stockbtn:'Add'})}\r\n                \r\n            },1000);\r\n                \r\n        }\r\n        \r\n\r\n    }\r\n    \r\n    handleCost=(selected)=>{\r\n        if(this.state.selected!==null){\r\n           const totalSale = selected.reduce((total, item) => {\r\n               return total + item.mealPrice * item.qty\r\n           }, 0);\r\n           this.setState({cost:totalSale})\r\n        }\r\n        if(this.state.cost!==null){\r\n            fetch(`${getRooms}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayRoomNums:data\r\n                })\r\n            })\r\n            fetch(`${getPaymentMethods}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayPaymentMethods:data\r\n                })\r\n            })\r\n            localStorage.removeItem('btnCntrl');\r\n            localStorage.removeItem('delcntrl')\r\n        }\r\n        \r\n        \r\n    }  \r\n   \r\n    addqty = () => {\r\n        const del = this.state.selected.map((item) => parseInt(item.qty + 1));\r\n        this.setState({selected:del})\r\n       \r\n    }\r\n        \r\n    removeAll = (id) => {\r\n        const del = this.state.selected.filter(item => item.id === id);\r\n        this.setState({selected:del})\r\n        this.setState({cost:0})\r\n        this.setState({roomNumbers:''})\r\n        this.setState({amountPaid:''})\r\n        this.setState({displayRoomNums:''})\r\n        this.setState({paymentMethod:''})\r\n        this.setState({\r\n            displayPaymentMethods:'',\r\n            DrinkStore:0,\r\n            DrinkSalesQty:0,\r\n            stockBal:0\r\n        })\r\n        \r\n       \r\n    }\r\n\r\n    async addToTable() {\r\n          \r\n        try {\r\n            \r\n            var tableID = sessionStorage.getItem('tableNumber');\r\n\r\n            var orderItems = this.state.selected;\r\n            var data = {\r\n                selected:orderItems.map(item => item),\r\n                billCost:this.state.cost,\r\n                tableNum:sessionStorage.getItem('tableNumber')\r\n            }\r\n           \r\n            \r\n            let result = await fetch(`${putToTable}/${tableID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result>  ' + result)\r\n            this.setState({selected:[]})\r\n            localStorage.setItem('btnCntrl',true);\r\n            this.setState({cost:0})\r\n            this.setState({roomNumbers:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            this.setState({paymentMethod:''})\r\n            this.setState({printStop:0})\r\n            localStorage.removeItem('delcntrl');\r\n            sessionStorage.removeItem('tableNumber')\r\n            \r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            });\r\n\r\n            \r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    handleCredit(){\r\n        var userCredit = localStorage.getItem('userInfo');\r\n        fetch(`${getRestCredit}${userCredit}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                creditSales:data\r\n            })\r\n            data.map((item)=>{\r\n                var allCredit = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.creditAmount)\r\n                }, 0);\r\n\r\n                this.setState({TotalCredit:allCredit,});\r\n                var allCreditPaid = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.creditPaid)\r\n                }, 0);\r\n                this.setState({TotalCreditPaid:allCreditPaid});\r\n                return 'ok'\r\n            })\r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            this.setState({\r\n                credit: true\r\n            })\r\n    \r\n        },1000);\r\n        \r\n        \r\n    }\r\n\r\n    async NewTable() {\r\n          \r\n        try {\r\n            \r\n            var NewtableID = sessionStorage.getItem('tableNumber');\r\n\r\n            var orderItems = this.state.selected;\r\n            var data = {\r\n                selected:orderItems.map(item => item),\r\n                billCost:this.state.cost,\r\n                tableNum:NewtableID\r\n            }\r\n           \r\n            if(this.state.cost===0){\r\n                alert (\"If you click table Number again without an order, I will slap you!\")\r\n                sessionStorage.removeItem('tableNumber')\r\n            }\r\n            else{\r\n                let result = await fetch(`${putToTable}/${NewtableID}`, {\r\n                    method: 'put',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        data\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('result>  ' + result)\r\n\r\n                this.setState({selected:[]})\r\n                localStorage.setItem('btnCntrl',true);\r\n                this.setState({cost:0})\r\n                this.setState({roomNumbers:''})\r\n                this.setState({displayRoomNums:''})\r\n                this.setState({displayPaymentMethods:''})\r\n                this.setState({paymentMethod:''})\r\n                localStorage.removeItem('delcntrl');\r\n                this.setState({newTable:''})\r\n                \r\n\r\n                fetch(`${getTable}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({tables:data})\r\n                });\r\n\r\n                \r\n            }\r\n                    \r\n            \r\n            \r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async getTable() {\r\n          \r\n        try {\r\n\r\n            \r\n            var tableID = sessionStorage.getItem('tableNumber');\r\n           \r\n            fetch(`${getTableID}${tableID}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n            data.map((item)=>{\r\n            this.setState({\r\n                selected:item.selected,\r\n                cost:item.billCost,\r\n                NewtableNum:1\r\n                        \r\n            })\r\n            return 'ok'\r\n                   \r\n            })\r\n                localStorage.removeItem('btnCntrl')\r\n                \r\n            })\r\n\r\n            fetch(`${getRooms}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayRoomNums:data\r\n                })\r\n            })\r\n        \r\n            fetch(`${getPaymentMethods}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayPaymentMethods:data\r\n                })\r\n            })\r\n            localStorage.setItem('delcntrl',true)\r\n            this.setState({printStop:1})\r\n        \r\n           \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    postQty(){\r\n       \r\n        try {\r\n            \r\n            this.state.selected.map((item)=>{\r\n                var prodName = item.meal;\r\n                var prodPrice = item.mealPrice;\r\n                var Qty = item.qty;\r\n                var ID = item.tranID;\r\n                \r\n                var salesQty = {\r\n                    id:ID,\r\n                    productName:prodName,\r\n                    productPrice:prodPrice,\r\n                    Quantity:parseInt(Qty),\r\n                    user: localStorage.getItem('userInfo'),\r\n                    tranDate:moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                    shift:localStorage.getItem('shift'),\r\n                                \r\n                }\r\n                let result = fetch(`${postBarSalesQty}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        salesQty\r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                this.setState({\r\n                    Newmeal:'',\r\n                    Newprice:'',\r\n                    Newqty:0,\r\n                    Newid:'',\r\n                    DrinkstoreData:[],\r\n                    DrinkSalesQtyData:[]\r\n\r\n                })\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    fetch(`${getStoreData}`, {method:'GET'})\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        this.setState({\r\n                            DrinkstoreData:data\r\n                        })\r\n                    })\r\n\r\n                    fetch(`${getBarSalesQty}`, {method:'GET'})\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        this.setState({\r\n                            DrinkSalesQtyData:data\r\n                        })\r\n                    })\r\n                \r\n                },1000)\r\n                \r\n                return 'ok'\r\n            })    \r\n        \r\n\r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    buttonClick (){\r\n        fetch(`${menuUrl}${this.state.menuID}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                menulist:data\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    sendtoprinter(){\r\n        \r\n        window.print();\r\n        \r\n       \r\n    }\r\n\r\n    sendtoprinter2(){\r\n        if(this.state.printBTN==='Print'){\r\n            window.print();\r\n            this.setState({printBTN:'Close'})\r\n        }\r\n        else if(this.state.printBTN==='Close'){\r\n            this.setState({edit: false})      \r\n            this.setState({printBTN:'Print'})\r\n            this.setState({\r\n                print:0,\r\n                printStop:0,\r\n                // DrinkStore:0,\r\n                DrinkSalesQty:0,\r\n                stockBal:0,\r\n                blockTable:0\r\n\r\n            }) \r\n            \r\n            \r\n            \r\n        }\r\n       \r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n    \r\n    }\r\n\r\n    handleChange3 = (event) => {\r\n        if(this.state.Newmeal!==''||this.state.Newprice!==''||this.state.Newid!==''){\r\n            this.setState({\r\n                [event.target.name]:event.target.value\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n    handleChange2 = (event) => {\r\n        console.log('inside handle', this.props)\r\n        this.setState({\r\n           [event.target.name]:event.target.value\r\n        })\r\n        fetch(`${getGuestID}${event.target.value}`, {method: 'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item) => {\r\n                this.setState({\r\n                    guestInhouseID:item.refID,\r\n                    group:item.group\r\n                })\r\n                return 'ok'\r\n            })\r\n        })\r\n    \r\n    }\r\n    \r\n\r\n    async handleSubmit() {\r\n          \r\n        \r\n        try {\r\n            var tableID = sessionStorage.getItem('tableNumber');\r\n            \r\n\r\n            var data = {\r\n                selected:[],\r\n                billCost:\"\",\r\n                tableNum:sessionStorage.getItem('tableNumber')\r\n            }\r\n\r\n            if(this.state.paymentMethod===\"POS\"){\r\n                var POSSales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    POSAmount:`${this.state.amountPaid}`,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Bar Sales\",\r\n                    department: \"Bar Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result5 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        POSSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result5>  ' + result5)\r\n                \r\n            }\r\n            if(this.state.paymentMethod===\"Cash\"){\r\n                var CashSales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    CashAmount:`${this.state.amountPaid}`,\r\n                    POSAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Bar Sales\",\r\n                    department: \"Bar Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result4 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CashSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result4>  ' + result4)\r\n                \r\n            }\r\n            if(this.state.paymentMethod===\"Transfer\"){\r\n                var transferSales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    TransferAmount:`${this.state.amountPaid}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Bar Sales\",\r\n                    department: \"Bar Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result3 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        transferSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3>  ' + result3)\r\n                \r\n            }\r\n\r\n            if(this.state.paymentMethod===\"Complimentary\"){\r\n                var complimentarySales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date:moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    amountPaid:`${this.state.amountPaid}`,\r\n                    CompDebit:`${this.state.cost}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Bar Sales\",\r\n                    department: \"Bar Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n\r\n                let result2 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        complimentarySales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2>  ' + result2)\r\n                \r\n            }\r\n            if(this.state.paymentMethod===\"Credit\"){\r\n                var CreditSales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    creditAmount:`${this.state.amountPaid}`,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Bar Credit\",\r\n                    department: \"Bar Credit\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift'),\r\n                    creditPaid:`${this.state.creditPaid}`\r\n                   \r\n                }\r\n\r\n                let result2 = await fetch(postRestCredit, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CreditSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2>  ' + result2)\r\n\r\n            }\r\n            \r\n            let result12 = await fetch(`${putToTable}/${tableID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result12>  ' + result12)\r\n\r\n            alert(\"Sales Posted\")\r\n            this.setState({selected:[]});\r\n            this.setState({cost:0})\r\n            this.setState({amountPaid:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({roomNumbers:''})\r\n            this.setState({paymentMethod:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            this.setState({group:''})\r\n            this.setState({\r\n                NewtableNum:0,\r\n                shift:'',\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:'',\r\n                DrinkstoreData:[],\r\n                DrinkSalesQtyData:[]\r\n            })\r\n            sessionStorage.removeItem('stockBal');\r\n            localStorage.removeItem('delcntrl');\r\n            localStorage.setItem('btnCntrl',true);\r\n            sessionStorage.removeItem('tableNumber');\r\n\r\n            fetch(`${getStoreData}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    DrinkstoreData:data\r\n                })\r\n            })\r\n\r\n            fetch(`${getBarSalesQty}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    DrinkSalesQtyData:data\r\n                })\r\n            })\r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            })\r\n           \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async postCredit() {\r\n          \r\n        \r\n        try {\r\n            \r\n            var CreditSales = {\r\n                docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                date:moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                cost:0,\r\n                creditAmount:0,\r\n                paymentMethod:`${this.state.paymentMethod}`,\r\n                description: \"Bar Credit\",\r\n                department: \"Bar Credit\",\r\n                docketDetails: this.state.selected,\r\n                group:`${this.state.group}`,\r\n                user: localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift'),\r\n                creditPaid:`${this.state.creditPaid}`\r\n                \r\n            }\r\n            let creditPay = await fetch(postRestCredit, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    CreditSales\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('creditPay>  ' + creditPay)\r\n\r\n            if(this.state.paymentMethod===\"POS\"){\r\n                var POSSales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    POSAmount:`${this.state.creditPaid}`,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Bar Credit\",\r\n                    department: \"Bar Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result5 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        POSSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result5>  ' + result5)\r\n\r\n            }\r\n            if(this.state.paymentMethod===\"Cash\"){\r\n                var CashSales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    CashAmount:`${this.state.creditPaid}`,\r\n                    POSAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Bar Credit\",\r\n                    department: \"Bar Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result4 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CashSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result4>  ' + result4)\r\n                \r\n            }\r\n            if(this.state.paymentMethod===\"Transfer\"){\r\n                var transferSales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    TransferAmount:`${this.state.creditPaid}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Bar Credit\",\r\n                    department: \"Bar Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result3 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        transferSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3>  ' + result3)\r\n                \r\n            }\r\n\r\n            alert(\"Credit Posted\")\r\n            this.setState({\r\n                creditSales:'',\r\n                TotalCredit:0,\r\n                creditPaid:0,\r\n                TotalCreditPaid:0\r\n            })\r\n                               \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleRoomSubmit() {\r\n        \r\n        try {\r\n            var tableID = sessionStorage.getItem('tableNumber');\r\n\r\n            var data = {\r\n                selected:[],\r\n                billCost:\"\",\r\n                tableNum:sessionStorage.getItem('tableNumber')\r\n            }\r\n\r\n            var restaurantSales = {\r\n                _id:Math.floor(Math.random()*10000000),\r\n                docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                refID:`${this.state.guestInhouseID}`,\r\n                date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                cost:`${this.state.cost}`,\r\n                amountPaid:`${this.state.amountPaid}`,\r\n                roomDebit:`${this.state.cost}`,\r\n                POSAmount:0,\r\n                CashAmount:0,\r\n                TransferAmount:0,\r\n                CompDebit:0,\r\n                paymentMethod:`${this.state.paymentMethod}`,\r\n                roomNumbers:`${this.state.roomNumbers}`,\r\n                description:\"Bar Docket\",\r\n                department: \"Bar Sales\",\r\n                docketDetails: this.state.selected,\r\n                group:`${this.state.group}`,\r\n                user: localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift')\r\n               \r\n            }\r\n            let result = await fetch(postDocketToRoom, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    restaurantSales\r\n                   \r\n                )\r\n                \r\n            });\r\n            console.log('result>  ' + result)\r\n\r\n            let result2 = await fetch(postRestBill, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    restaurantSales\r\n                   \r\n                )\r\n                \r\n            });\r\n            console.log('result2>  ' + result2)\r\n\r\n            let result14 = await fetch(`${putToTable}/${tableID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result14>  ' + result14)\r\n            alert(\"Docket Posted to Room \" +this.state.roomNumbers);\r\n            this.setState({selected:[]});\r\n            this.setState({cost:0})\r\n            this.setState({amountPaid:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({roomNumbers:''})\r\n            this.setState({paymentMethod:''})\r\n            this.setState({group:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            this.setState({group:''})\r\n            this.setState({\r\n                NewtableNum:0,\r\n                shift:'',\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:'',\r\n                DrinkstoreData:[],\r\n                DrinkSalesQtyData:[]\r\n            })\r\n            sessionStorage.removeItem('stockBal');\r\n            localStorage.removeItem('delcntrl');\r\n            localStorage.setItem('btnCntrl',true);\r\n            sessionStorage.removeItem('tableNumber');\r\n\r\n            fetch(`${getStoreData}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    DrinkstoreData:data\r\n                })\r\n            })\r\n\r\n           \r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            })\r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n            \r\n        });\r\n        localStorage.removeItem('shift')\r\n    }\r\n\r\n\r\n    renderTables(data){\r\n        if(data) {\r\n            data.sort((a, b) => a.tableNum - b.tableNum);\r\n           \r\n            return data.map((item) => {\r\n                if(item.billCost===\"\"){\r\n                    return(\r\n                        <div key={item._id}>\r\n                            <button className=\"btn btn-success cartBtn3 alignroomsgreen2\"disabled = {this.state.NewtableNum===1} onClick={() => {sessionStorage.setItem('tableNumber', item.tableNum);this.NewTable();this.setState({docketFirst:0})}}>\r\n                                <p className=\"texted\">{item.tableNum}</p>\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <div key={item._id}>\r\n                            <button className=\"btn btn-warning cartBtn3 alignroomsgreen2\" onClick={() => {sessionStorage.setItem('tableNumber', item.tableNum);this.getTable();this.setState({print:1})}}>\r\n                                <p className=\"texted\">{item.tableNum}</p>\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n               \r\n            })\r\n        }\r\n    }\r\n\r\n   \r\n    renderPayMeth(data){\r\n        if(data) {\r\n            return data.map((item, index) => {\r\n                return(\r\n                    <>\r\n                        <option key={index} value={item.method}>\r\n                            {item.method}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderRooms(data){\r\n        if(data) {\r\n           data.sort((a, b) => a.roomNumbers - b.roomNumbers);\r\n            return data.map((item, index) => {\r\n                return(\r\n                    <>\r\n                        <option key={index} value={item.roomNumbers}>\r\n                            {item.roomNumbers} - {item.fname} {item.lname}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    addMeal(){\r\n        var menuselect=this.state.menulist;\r\n        menuselect.map((item)=>{\r\n            this.setState({\r\n                Newmeal:item.mealName,\r\n                Newprice:item.mealPrice,\r\n                Newqty:parseInt(item.mealQt),\r\n                Newid:item._id\r\n\r\n            })\r\n            return 'ok'\r\n        })\r\n        \r\n    }\r\n    increament(){\r\n        if(this.state.Newqty!==0){\r\n            this.setState({\r\n                Newqty:this.state.Newqty +1\r\n            })\r\n        }\r\n       \r\n    }\r\n\r\n    decreament(){\r\n        if(this.state.Newqty!==0){\r\n            this.setState({\r\n                Newqty:this.state.Newqty -1\r\n            })\r\n        }\r\n    }\r\n\r\n    pushorder(){\r\n        var selected = this.state.selected;\r\n        var selectedMeals = {};\r\n\r\n        if(this.state.selected.length>0){\r\n            this.setState({blockTable:1});\r\n    \r\n            selectedMeals.id=this.state.Newid;\r\n            selectedMeals.meal=this.state.Newmeal;\r\n            selectedMeals.mealPrice=this.state.Newprice;\r\n            selectedMeals.qty=this.state.Newqty;\r\n            selectedMeals.tranID=Math.floor(Math.random()*10000)\r\n            \r\n            selected.push(selectedMeals);\r\n                      \r\n            this.setState({\r\n                selected,\r\n                printStop:0,\r\n                DrinkStore:0,\r\n                DrinkSalesQty:0,\r\n                stockBal:0,\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:''\r\n            })\r\n                \r\n           \r\n        }\r\n        else if(this.state.selected.length===0){\r\n            this.setState({blockTable:0});\r\n\r\n            selectedMeals.id=this.state.Newid;\r\n            selectedMeals.meal=this.state.Newmeal;\r\n            selectedMeals.mealPrice=this.state.Newprice;\r\n            selectedMeals.qty=this.state.Newqty;\r\n            selectedMeals.tranID=Math.floor(Math.random()*10000)\r\n            \r\n            selected.push(selectedMeals);\r\n                      \r\n            this.setState({\r\n                selected,\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:'',\r\n                printStop:0,\r\n                DrinkStore:0,\r\n                DrinkSalesQty:0,\r\n                stockBal:0\r\n            })\r\n        }\r\n\r\n        \r\n\r\n        this.myTimer = setTimeout(() => {\r\n            if(this.state.selected.length>0){\r\n                const totalSale = selected.reduce((total, item) => {\r\n                    return total + item.mealPrice * item.qty\r\n                }, 0);\r\n                this.setState({\r\n                    cost:totalSale,\r\n                    \r\n                })\r\n            }\r\n\r\n            if(this.state.cost!==0){\r\n                fetch(`${getRooms}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        displayRoomNums:data\r\n                    })\r\n                })\r\n                fetch(`${getPaymentMethods}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        displayPaymentMethods:data\r\n                    })\r\n                })\r\n                // localStorage.removeItem('btnCntrl');\r\n                localStorage.removeItem('delcntrl')\r\n            }\r\n            \r\n        },1000);\r\n\r\n \r\n    }\r\n         \r\n    \r\n    renderMenu(data){\r\n        if (data){\r\n            return data.map((item) =>{\r\n                return(\r\n                    \r\n                    <>\r\n                        <div>\r\n                            <center>\r\n                                \r\n                            <div className=\"card alignroomsgreen3\"style={{backgroundColor:'orangered'}} key={item.mealTypeID}>\r\n                                <button className=\"btn btn-orangered buttnheightbtn\" onMouseOver={()=>sessionStorage.setItem('meal',item.mealName)} onClick={ () =>{this.setState({Newmeal:item.mealName,Newprice:item.mealPrice,Newqty:parseInt(item.mealQt),Newid:item._id,tranID2:Math.floor(Math.random()*10000)});this.handleStock()}}>\r\n                            \r\n                                <p className=\"card-title formatnew2\">{item.mealName}</p> \r\n                                </button>\r\n                            </div>\r\n                            \r\n                                \r\n                            </center>\r\n                        </div>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n    \r\n    \r\n    renderOders(data){\r\n        \r\n        if(data) {\r\n            return data.map((item) =>{\r\n               \r\n                return(\r\n                    <>\r\n                        \r\n                            <tr key= {item.id}>\r\n                                {/* <td className=\"table-light table-striped adjust texted8Nw\">{item.id}</td> */}\r\n                                <td className=\"texted8NwDescr\">{item.meal}</td>\r\n                                <td className=\"texted8NwQty\">{item.qty}</td>\r\n                                <td className=\"texted8NwPri\"><NumberFormat value={item.mealPrice} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                                <td className=\"texted8NwPri\"><NumberFormat value={item.mealPrice*item.qty} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            </tr>\r\n                        \r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderSalesReport(data){\r\n        \r\n        if(data) {\r\n            return data.map((item) =>{\r\n                \r\n                return(\r\n                    <>\r\n                        \r\n                        <tr key= {item.id}>\r\n                            {/* <td className=\"table-light table-striped adjust texted8\">{item.id}</td> */}\r\n                            <td className=\"table-light table-striped adjust texted8\">{item.productName}</td>\r\n                            <td className=\"table-light table-striped adjust texted8\">{item.Quantity}</td>\r\n                            <td className=\"table-light table-striped adjust texted8\"><NumberFormat value={item.productPrice} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust texted8\"><NumberFormat value={item.productPrice*item.Quantity} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust texted8\"> </td>\r\n                            \r\n                        </tr>\r\n                        \r\n                        \r\n                        \r\n                    </>\r\n                )\r\n                \r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    renderPos(food){\r\n        if(food) {\r\n            return food.map((item) =>{\r\n               \r\n                return(\r\n                    <>\r\n                        <div>\r\n                            <center>\r\n                                \r\n                                    <div className=\"card alignroomsgreen3\"style={{backgroundColor:'blueviolet'}} key={item.mealTypeID}>\r\n                                        <button className=\"btn btn-blueviolet buttnheightbtn\" onMouseOver={() => this.setState({menuID:item.mealTypeID})} onClick={ () => this.buttonClick () }>\r\n                                            <p className=\"card-title formatnew2\">{item.mealType}</p> \r\n                                        </button>\r\n                                    </div>\r\n                                \r\n                                \r\n                            </center>\r\n                        </div>\r\n                        \r\n                    </>\r\n                )\r\n            })\r\n        }\r\n\r\n    }\r\n    \r\n    render() {\r\n        console.log(\">>> Inside RESrender\", this.state)\r\n        var tranDt = moment(this.state.transactionDate).format('MMM DD YYYY');\r\n        var docketNum ='Bar'+Math.floor(Math.random()*10000);\r\n        var add = this.state.amountPaid;\r\n        if(this.state.amountPaid===''){\r\n            add = 0\r\n        }\r\n        \r\n\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Login/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return(\r\n            <div className=\"posterminal\">  \r\n                               \r\n                <br/>     \r\n                <div className =\"row quantity displayback\" >\r\n                               \r\n                    <center>\r\n                        <h6 style={{color:'white'}}>Add Quantity</h6>\r\n                    </center>\r\n                            \r\n                    <div>\r\n                        <div className=\"row\">\r\n                            <p className=\"prices\">Price: {this.state.Newprice}</p>\r\n                            <p className=\"prices2\">Avail.Stock: {this.state.stockBal}</p>\r\n                            <span className=\"dcrbtn\">\r\n                                <button className=\"form-control mb-3 formsizeX1\" onClick={() =>this.decreament()}><p className=\"sign\">-</p></button>\r\n                            </span>\r\n                            <span className=\"qtybtn\">\r\n                                <input type=\"number\" className=\"form-control2 mb-3 formsizeX\" style={{textAlign:'center',fontStyle:'bold',color:'white',fontSize:'24px'}}name=\"Newqty\" value={this.state.Newqty} onChange={this.handleChange3}/>\r\n                            </span>\r\n                            <span className=\"incbtn\">\r\n                                <button className=\"form-control mb-3 formsizeX1\" onClick={() => this.increament()}><p className=\"sign\">+</p></button>\r\n                            </span>\r\n                            <button className=\"btn btn-warning addbtn\" disabled={this.state.Newqty===0||this.state.stockBal===0} onClick={() =>{this.pushorder();this.setState({docketFirst:1})}}>{this.state.Stockbtn}</button>\r\n                            \r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n              \r\n\r\n                <div className=\"salesTable displayback\">\r\n                \r\n                    <table className=\"table table-hover\">\r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                {/* <th className=\"adjust2\">ID</th> */}\r\n                                <th className=\"adjust2\">Menu</th>\r\n                                <th className=\"adjust2\">Qty</th>\r\n                                <th className=\"adjust2\">Price(=N)</th>\r\n                                <th className=\"adjust2\">Amount(=N)</th>\r\n                               \r\n                                \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover tableheight\">\r\n                            {this.renderOders(this.state.selected)}\r\n                            \r\n       \r\n                            \r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                </div>\r\n\r\n                \r\n                    \r\n                <div className=\"amountP displayback\">\r\n                    <input type=\"text\" className=\"form-control mb-3 formsizeA1 textedM\" name=\"amountPaid\" require placeholder= \"Enter Payment\" value={this.state.amountPaid} onChange={this.handleChange}/>\r\n                </div>\r\n\r\n                <div className=\"method displayback\">\r\n                    <select className=\"form-select formsizeA1 textedM\" name=\"paymentMethod\" onChange={this.handleChange}>\r\n                        <option selected value=''>Payment Method</option>\r\n                        {this.renderPayMeth(this.state.displayPaymentMethods)}\r\n                    </select>\r\n                </div>\r\n                \r\n                \r\n                <div className=\"textAmount displayback\">\r\n                    <p className=\"fmtcost2\" style={{color:'white'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                </div>\r\n                <div className=\"textAmount2 displayback\">\r\n                    <p className=\"fmtcost2\" style={{color:'white'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                </div>\r\n\r\n                <div className=\"operations displayback\">\r\n                    \r\n                    <h4 className=\"texted4\" style={{color:'white'}}>Operations</h4>\r\n                    \r\n                    <button disabled={localStorage.getItem('delcntrl')} className=\"btn btn-primary cartBtn2\" onClick={() => {this.removeAll();this.setState({docketFirst:0})}}>\r\n                        <p className=\"texted\">Delete</p>\r\n                    </button>\r\n                    \r\n                    <button disabled={this.state.cost===0||this.state.amountPaid===''||this.state.amountPaid<this.state.cost||this.state.amountPaid>this.state.cost||this.state.paymentMethod===''||this.state.paymentMethod==='Complimentary'||this.state.docketFirst===1} className=\"btn btn-primary cartBtn2\" onClick={() =>{this.onOpenPword()}}>\r\n                        <p className=\"texted\">Post</p>\r\n                    </button>\r\n                    <select type =\"button\" disabled={this.state.docketFirst===1} className=\"form-select formsizeB mb-2 btn btn-primary texted\" name=\"roomNumbers\" onChange={this.handleChange2}>\r\n                        <option selected value=''>Rooms</option>\r\n                        {this.renderRooms(this.state.displayRoomNums)}\r\n                                                                    \r\n                    </select>\r\n                                            \r\n                    <button disabled={this.state.roomNumbers===''||this.state.amountPaid!=='' ||this.state.docketFirst===1} className=\"btn btn-primary cartBtn4\" onClick={() => {this.onOpenCompModal();this.postQty()}}>\r\n                        <p className=\"texted\">Room Post</p>\r\n                    </button>\r\n                    <button disabled={this.state.paymentMethod!=='Complimentary'||this.state.amountPaid!==''||this.state.docketFirst===1} className=\"btn btn-primary cartBtn2\" onClick={() =>{this.onOpenModalreceipt();this.postQty()}}>\r\n                        <p className=\"texted\">Comp</p>\r\n                    </button>\r\n                    <button disabled={this.state.docketFirst===1} className=\"btn btn-primary cartBtn2\" onClick={ ()=>{this.handleReport()}}>\r\n                        <p className=\"texted\">Reports</p>\r\n                    </button>\r\n                    \r\n                    <button disabled={localStorage.getItem('btnCntrl')} className=\"btn btn-warning cartBtn12\" onClick={() => {this.addToTable();this.setState({NewtableNum:0})}}>\r\n                        <p className=\"texted\">Add to Table {sessionStorage.getItem('tableNumber')}</p>\r\n                    </button>\r\n                    \r\n                    <button disabled = 'true' className=\"btn btn-danger cartBtn2\" onClick={ ()=>this.logout}>\r\n                        <p className=\"texted\">Close</p>\r\n                    </button>    \r\n\r\n                    <button className=\"btn btn-danger cartBtn20\" onClick={ ()=> this.logout()}>\r\n                        <p className=\"texted\">Log Out {localStorage.getItem('userInfo').split(' ')[0]}</p>\r\n                    </button>\r\n\r\n                    <button disabled={this.state.docketFirst===1} className=\"btn btn-primary cartBtn112\" onClick={ ()=>{this.handleCredit()}}>\r\n                        <p className=\"texted\">Recover Debt</p>\r\n                    </button>\r\n\r\n                    <button disabled className={this.state.shiftcolor}>\r\n                        <p className=\"texted\">{localStorage.getItem('shift')}</p>\r\n                    </button>\r\n                    <button disabled ={this.state.selected.length===0 || this.state.printStop===0||this.state.print===0}className={this.state.shiftcolor} onClick={()=>{this.onOpenModaltoprint();localStorage.setItem('delcntrl',true)}}>\r\n                        <p className=\"texted\">Print Docket</p>\r\n                    </button>\r\n                    \r\n                </div>\r\n\r\n                <div className=\"tables displayback\">\r\n                    <h5 className=\"texted2\" style={{color:'white'}}>Get Table</h5>\r\n                    <h5 className='texted2'style={{color:'yellow'}}>Work Date: {tranDt}</h5>\r\n                    <div>\r\n                        {this.renderTables(this.state.tables)}\r\n                    \r\n                    </div>\r\n                    <h6 style={{color:'silver', textAlign:'right'}}>Bar App</h6>\r\n                    <button className=\"btn btn-danger texted\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>\r\n                </div>\r\n\r\n                <div className =\"mainmenu displayback\">\r\n                    {this.renderPos(this.state.menu)}\r\n                </div>\r\n\r\n                <div className =\"menulistItems displayback\">\r\n                    {this.renderMenu(this.state.menulist)}\r\n                </div>\r\n\r\n                <Modal open={this.state.edit}>\r\n                    \r\n                    <div className = \"papersizeNew\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSizedNumber\">+234 802 288 8776</p>\r\n                            <hr/>\r\n                            <p className=\"textSized2\" style={{fontWeight:'bold', fontFamily: 'Georgia, Times New Roman, Times, serif', fontSize:'14px'}}>Bar Docket</p>\r\n                            <p className=\"textSized2\">Date: {tranDt}</p>\r\n                            <p className=\"textSized2 mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"tableSettingsNow\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nwrest\">Menu</th>\r\n                                    <th className=\"adjust2Nwrest\">Qty</th>\r\n                                    <th className=\"adjust2Nwrest\">Rate</th>\r\n                                    <th className=\"adjust2Nwrest\">Amt</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tableSettingsNow\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Total:<NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Amount Paid:<NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized2\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized2\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontFamily: 'Georgia, Times New Roman, Times, serif', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter2()}}>\r\n                                    <p className=\"texted2\">{this.state.printBTN}</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n                <Modal open={this.state.pword} onClose={()=>this.onClosePword()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Access Required</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <input type=\"password\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"pass\" require placeholder=\"Enter Access Code\" value={this.state.pass} onChange={this.handleChange}/>\r\n                                    <button disabled = {this.state.pass===''} className=\"btn btn-warning formsize91\" onClick={()=>this.AllowRefund()}>Login</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n                \r\n                <Modal open={this.state.editreceipt} onClose={()=>{this.onCloseModalreceipt();this.handleSubmit()}}>\r\n                    \r\n                    <div className = \"papersizeNew\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSizedNumber\">+234 802 288 8776</p>\r\n                            <hr/>\r\n                            <p className=\"textSized2\" style={{fontWeight:'bold',fontSize:'14px'}}>Bar Receipt</p>\r\n                            <p className=\"textSized2\">Date: {tranDt}</p>\r\n                            <p className=\"textSized2 mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"tableSettingsNow\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Rate</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Amt</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tableSettingsNow\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Amount Paid: <NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"texttextSized2Sized\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized2\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontFamily: 'Georgia, Times New Roman, Times, serif', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted2\">Print</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseModalreceipt();this.handleSubmit()}}>\r\n                                    <p className=\"texted2\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                <Modal open={this.state.compModal} onClose={()=>{this.onCloseCompModal();this.handleRoomSubmit()}}>\r\n                    \r\n                    <div className = \"papersizeNew\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSizedNumber\">+234 802 288 8776</p>\r\n                        <hr/>\r\n                            <p className=\"textSized2\" style={{fontWeight:'bold',fontSize:'14px'}}>Bar Docket</p>\r\n                            <p className=\"textSized2\">Date: {tranDt}</p>\r\n                            <p className=\"textSized2 mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"tableSettingsNow\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Rate</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Amt</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tableSettingsNow\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Amount Paid: <NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized2\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized2\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted2\">{this.state.printBTN}</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseCompModal();this.handleRoomSubmit()}}>\r\n                                    <p className=\"texted2\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                {/* view daily sales report */}\r\n                <Modal open={this.state.report} onClose={()=>{this.onCloseModalreport()}}>\r\n                    \r\n                    <div className = \"posPrint\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSizedNumber\">+234 802 288 8776</p>\r\n                        <hr/>\r\n                            <p className=\"textSized2\" style={{fontWeight:'bold',fontSize:'14px'}}>Bar Daily Sales Report</p>\r\n                            <p className=\"textSized2\">Report Date: {tranDt}</p>\r\n                            <p className=\"textSized2 mb-3\">Shift: {this.state.useReportShift}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"table-warning\">\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>Price(=N)</th>\r\n                                    <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>Amount(=N)</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"table table-hover tableheight\">\r\n                                {this.renderSalesReport(this.state.DrinkSalesQtyReportData)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'14px', fontFamily: 'Georgia, Times New Roman, Times, serif', fontWeight:'bold'}}>Total Sales: <NumberFormat value={this.state.totalSales} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        \r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized2\">Staff: {this.state.useReportName}</p>\r\n                            <p className=\"textSized2\">Shift: {this.state.useReportShift}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted2\">{this.state.printBTN}</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseModalreport()}}>\r\n                                    <p className=\"texted2\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                <Modal open={this.state.credit} onClose={()=>this.onCloseModalCredit()} style={{color:\"silver\"}}>\r\n                    <div className = \"background591stockin\">\r\n                        <h6 style = {{color:'silver',marginLeft:'50px', marginBottom:'-70px'}}>Recover Credit</h6>\r\n                        <div className=\"formdesign511\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <h6>Summary</h6>\r\n                                    <div className=\"col-3\">\r\n                                        <label>Total Credit</label>\r\n                                        <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\"><NumberFormat value={parseInt(this.state.TotalCredit)} thousandSeparator={true} displayType={\"text\"}/></p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-3\">\r\n                                        <label>Total Recovered</label>\r\n                                        <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\"><NumberFormat value={parseInt(this.state.TotalCreditPaid)} thousandSeparator={true} displayType={\"text\"}/></p>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"col-3\">\r\n                                        <label>Credit Balance</label>\r\n                                        <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\"><NumberFormat value={parseInt(this.state.TotalCredit)-parseInt(this.state.TotalCreditPaid)} thousandSeparator={true} displayType={\"text\"}/></p>\r\n                                    </div>\r\n                                    \r\n                                    \r\n                                </div>\r\n                                <div className='row'>\r\n                                    <div className=\"col-4\">\r\n                                            <input type=\"number\" className=\"form-control mb-3 formsize51 ikem\" name=\"creditPaid\" require placeholder=\"Enter Amount\" value={this.state.creditPaid} onChange={this.handleChange}/>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-4\">\r\n                                        <select className=\"form-select formsize51 ikem\" name=\"paymentMethod\" onChange={this.handleChange}>\r\n                                            <option selected value=''>Payment Method</option>\r\n                                            {this.renderPayMeth(this.state.payNwMeth)}\r\n                                        </select>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                \r\n                                <br/><br/>\r\n                                <center>\r\n                                    <span>\r\n                                        <button disabled ={this.state.creditPaid===''} className=\"btn btn-warning gap\" onClick={()=>this.postCredit()}>Post</button>\r\n                                        <button className=\"btn btn-danger gap\" onClick={ () => this.onCloseModalCredit()}>Close</button>\r\n                                                \r\n                                    </span>\r\n                                            \r\n                                </center>\r\n                                <br/>\r\n                        \r\n                            </div>\r\n                            \r\n                        </div> \r\n                        \r\n                    </div>  \r\n\r\n                </Modal>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n    \r\n\r\n    async componentDidMount(){\r\n        console.log (\">>> Inside RESdidMount\")\r\n        fetch(`${restMenugrpUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                menu:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getStoreData}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                DrinkstoreData:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        await fetch(`${getWorkDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({transactionDate:item.date})\r\n                return 'ok'\r\n            })\r\n            \r\n           \r\n        })\r\n\r\n        this.myTimer = setInterval(() => {\r\n            fetch(`${getWorkDate}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({transactionDate:item.date})\r\n                    return 'ok'\r\n                })\r\n                \r\n            \r\n            })\r\n            \r\n\r\n        },1000)\r\n\r\n\r\n        fetch(`${getPaymentMethods}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                payNwMeth:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getBarSalesQty}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                DrinkSalesQtyData:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getTable}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({tables:data})\r\n            \r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            });\r\n\r\n            localStorage.setItem('btnCntrl',true)\r\n\r\n\r\n        },2000)\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n        if(localStorage.getItem('shift')==='Morning Shift'){\r\n            this.setState({shiftcolor:\"btn btn-primary cartBtn20\"})\r\n        }\r\n        else if(localStorage.getItem('shift')==='Night Shift'){\r\n            this.setState({shiftcolor:\"btn btn-dark cartBtn20\"})\r\n        }\r\n        else if(localStorage.getItem('shift')==='All Day'){\r\n            this.setState({shiftcolor:\"btn btn-warning cartBtn20\"})\r\n        }\r\n       \r\n        \r\n    }\r\n}\r\nexport default BarApp;","import React,{Component} from 'react';\r\nimport './Bar.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment';\r\n// import GuestLogin from '../GuestLogin';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst restMenugrpUrl = \"https://zarvichdemo.localto.net/drinkCategories\";\r\nconst menuUrl = \"https://zarvichdemo.localto.net/drinkitems?drinktypes=\";\r\nconst postRestBill = \"https://zarvichdemo.localto.net/bar\";\r\nconst getRooms =\"https://zarvichdemo.localto.net/checkin?docket=Yes\";\r\nconst getGuestID = \"https://zarvichdemo.localto.net/checkin?roomNumID=\";\r\nconst postDocketToRoom = \"https://zarvichdemo.localto.net/bill\";\r\nconst getPaymentMethods = \"https://zarvichdemo.localto.net/paymentMethods\";\r\nconst putToTable = \"https://zarvichdemo.localto.net/barTablePost\";\r\nconst getTable = \"https://zarvichdemo.localto.net/barTable\";\r\nconst getTableID = \"https://zarvichdemo.localto.net/barTable?tableID=\";\r\nconst getStoreData = \"https://zarvichdemo.localto.net/getBarStore\";\r\nconst postBarSalesQty = \"https://zarvichdemo.localto.net/postBarSalesQty\";\r\nconst getBarSalesQty = \"https://zarvichdemo.localto.net/getBarSalesQty\";\r\nconst userName = \"https://zarvichdemo.localto.net/barUserInfo\";\r\n\r\n\r\nclass BarApp extends Component {\r\n\r\n    constructor(props) {\r\n        super (props);\r\n        console.log(\">>>Inside RESConstructor\",props)\r\n\r\n        this.state = {\r\n            Newmeal:'',\r\n            Newprice:'',\r\n            Newqty:0,\r\n            Newid:'',\r\n            edit:false,\r\n            editreceipt:false,\r\n            compModal:false,\r\n            report:false,\r\n            printStop:0,\r\n            docketFirst:0,\r\n            printBTN:'Print',\r\n            print:0,\r\n            blockTable:0,\r\n            IDfound:[],\r\n           \r\n            menu:'',\r\n            meal:'',\r\n            mealPrice:'',\r\n            mealQuantity:'',\r\n            mealId:Math.floor(Math.random()*10000),\r\n            guestInhouseID:'',\r\n            selected:[],\r\n            menuID:'',\r\n            menulist:'',\r\n            cost:0,\r\n            amountPaid:'',\r\n            roomNumbers:'',\r\n            paymentMethod:'',\r\n            displayPaymentMethods:'',\r\n            displayRoomNums:'',\r\n            transactionDate:new Date(),\r\n            tables:'',\r\n            newTable:'',\r\n            NewtableNum:0,\r\n            group:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            Blogin:'',\r\n            login:'',\r\n            shiftcolor:'',\r\n            shift:localStorage.getItem('shift'),\r\n            \r\n\r\n            DrinkstoreData:[],\r\n            DrinkSalesQtyData:[],\r\n            DrinkStore:0,\r\n            DrinkSalesQty:0,\r\n            stockBal:0,\r\n            \r\n            \r\n            DrinkSalesQtyReportData:'',\r\n            useReportName:'',\r\n            useReportShift:'',\r\n            useReportDate:'',\r\n            totalSales:0,\r\n            Stockbtn:'Add'\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    onOpenModaltoprint(){\r\n        this.setState({\r\n            edit: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onOpenCompModal(){\r\n        this.setState({\r\n            compModal: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseCompModal(){\r\n        this.setState({\r\n            compModal: false\r\n        })\r\n        \r\n    }\r\n\r\n\r\n    onCloseModaltoprint(){\r\n        this.setState({\r\n            edit: false\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenModalreceipt(){\r\n        this.setState({\r\n            editreceipt: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseModalreceipt(){\r\n        this.setState({\r\n            editreceipt: false\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenModalreport(){\r\n        this.setState({\r\n            report: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseModalreport(){\r\n        this.setState({\r\n            report: false\r\n        })\r\n        \r\n    }\r\n\r\n    handleReport(){\r\n\r\n        var todayDate = moment(new Date()).format('MMM DD YYYY');\r\n        var username = localStorage.getItem('userInfo');\r\n        var findQty = `${getBarSalesQty}?useDate=${todayDate}&&useshift=${this.state.shift}&&userstaff=${username}`\r\n\r\n        fetch(`${findQty}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                DrinkSalesQtyReportData:data\r\n            })\r\n            \r\n        })\r\n        this.myTimer = setTimeout(() => {\r\n            if(this.state.DrinkSalesQtyReportData.length>0){\r\n                var useData = this.state.DrinkSalesQtyReportData\r\n                var findUser = useData.find(element=>element.user===username)\r\n                var useDt = [];\r\n                useDt.push(findUser);\r\n                this.setState({useReportName:useDt.map(item=>item.user)})\r\n                this.setState({useReportShift:useDt.map(item=>item.shift)})\r\n                this.setState({useReportDate:useDt.map(item=>item.tranDate)})\r\n                \r\n                var TotSal = useData.reduce((total, item)=>{\r\n                    return total + parseInt (item.productPrice * item.Quantity)\r\n                }, 0);\r\n                this.setState({totalSales:TotSal});\r\n    \r\n                this.onOpenModalreport()\r\n            }\r\n            else{\r\n    \r\n                alert('No Sales was posted by '+username)\r\n    \r\n            }\r\n        },1000)\r\n        \r\n\r\n        \r\n    }\r\n\r\n\r\n    handleStock(){\r\n                \r\n        if(this.state.DrinkstoreData.length>0){\r\n            var stockItem = sessionStorage.getItem('meal');\r\n                       \r\n            //check available stock\r\n            const stockData=this.state.DrinkstoreData;\r\n            var totalStock = stockData.filter(stock => stock.productName.includes(stockItem)).reduce((total, item)=>{\r\n                return total + parseInt(item.piecesOut)\r\n            }, 0);\r\n            this.setState({DrinkStore:totalStock})\r\n\r\n            //check quantity sold\r\n            const qtyData=this.state.DrinkSalesQtyData;\r\n            var totalQty = qtyData.filter(qty => qty.productName.includes(stockItem)).reduce((total, item)=>{\r\n                return total + parseInt(item.Quantity)\r\n            }, 0);\r\n            this.setState({DrinkSalesQty:totalQty})\r\n            \r\n            //show stock balance\r\n            this.myTimer = setTimeout(() => {\r\n\r\n                var Total = 0;\r\n                var ST = Total + this.state.DrinkStore-this.state.DrinkSalesQty;\r\n                this.setState({stockBal:ST})\r\n                if(ST<0||ST<-1){\r\n                    this.setState({stockBal:0})\r\n                };\r\n\r\n                if(this.state.stockBal===0){\r\n                    this.setState({Stockbtn:'Finished'})\r\n                }\r\n                else{this.setState({Stockbtn:'Add'})}\r\n                \r\n            },1000);\r\n                \r\n        }\r\n        \r\n\r\n    }\r\n\r\n\r\n    \r\n    handleCost=(selected)=>{\r\n        if(this.state.selected!==null){\r\n           const totalSale = selected.reduce((total, item) => {\r\n               return total + item.mealPrice * item.qty\r\n           }, 0);\r\n           this.setState({cost:totalSale})\r\n        }\r\n        if(this.state.cost!==null){\r\n            fetch(`${getRooms}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayRoomNums:data\r\n                })\r\n            })\r\n            fetch(`${getPaymentMethods}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayPaymentMethods:data\r\n                })\r\n            })\r\n            localStorage.removeItem('btnCntrl');\r\n            localStorage.removeItem('delcntrl')\r\n        }\r\n        \r\n        \r\n    }  \r\n   \r\n    addqty = () => {\r\n        const del = this.state.selected.map((item) => parseInt(item.qty + 1));\r\n        this.setState({selected:del})\r\n       \r\n    }\r\n        \r\n    removeAll = (id) => {\r\n        const del = this.state.selected.filter(item => item.id === id);\r\n        this.setState({selected:del})\r\n        this.setState({cost:0})\r\n        this.setState({roomNumbers:''})\r\n        this.setState({amountPaid:''})\r\n        this.setState({displayRoomNums:''})\r\n        this.setState({paymentMethod:''})\r\n        this.setState({\r\n            displayPaymentMethods:'',\r\n            DrinkStore:0,\r\n            DrinkSalesQty:0,\r\n            stockBal:0\r\n        })\r\n        \r\n       \r\n    }\r\n\r\n    async addToTable() {\r\n          \r\n        try {\r\n            \r\n            var tableID = sessionStorage.getItem('tableNumber');\r\n\r\n            var orderItems = this.state.selected;\r\n            var data = {\r\n                selected:orderItems.map(item => item),\r\n                billCost:this.state.cost,\r\n                tableNum:sessionStorage.getItem('tableNumber')\r\n            }\r\n           \r\n            \r\n            let result = await fetch(`${putToTable}/${tableID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result>  ' + result)\r\n            this.setState({selected:[]})\r\n            localStorage.setItem('btnCntrl',true);\r\n            this.setState({cost:0})\r\n            this.setState({roomNumbers:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            this.setState({paymentMethod:''})\r\n            this.setState({printStop:0})\r\n            localStorage.removeItem('delcntrl');\r\n            sessionStorage.removeItem('tableNumber')\r\n            \r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            });\r\n\r\n            \r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async NewTable() {\r\n          \r\n        try {\r\n            \r\n            var NewtableID = sessionStorage.getItem('tableNumber');\r\n\r\n            var orderItems = this.state.selected;\r\n            var data = {\r\n                selected:orderItems.map(item => item),\r\n                billCost:this.state.cost,\r\n                tableNum:NewtableID\r\n            }\r\n           \r\n            if(this.state.cost===0){\r\n                alert (\"If you click table Number again without an order, I will slap you!\")\r\n                sessionStorage.removeItem('tableNumber')\r\n            }\r\n            else{\r\n                let result = await fetch(`${putToTable}/${NewtableID}`, {\r\n                    method: 'put',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        data\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('result>  ' + result)\r\n\r\n                this.setState({selected:[]})\r\n                localStorage.setItem('btnCntrl',true);\r\n                this.setState({cost:0})\r\n                this.setState({roomNumbers:''})\r\n                this.setState({displayRoomNums:''})\r\n                this.setState({displayPaymentMethods:''})\r\n                this.setState({paymentMethod:''})\r\n                localStorage.removeItem('delcntrl');\r\n                this.setState({newTable:''})\r\n                \r\n\r\n                fetch(`${getTable}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({tables:data})\r\n                });\r\n\r\n                \r\n            }\r\n                    \r\n            \r\n            \r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async getTable() {\r\n          \r\n        try {\r\n\r\n            \r\n            var tableID = sessionStorage.getItem('tableNumber');\r\n           \r\n            fetch(`${getTableID}${tableID}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n            data.map((item)=>{\r\n            this.setState({\r\n                selected:item.selected,\r\n                cost:item.billCost,\r\n                NewtableNum:1\r\n                        \r\n            })\r\n            return 'ok'\r\n                   \r\n            })\r\n                localStorage.removeItem('btnCntrl')\r\n                \r\n            })\r\n\r\n            fetch(`${getRooms}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayRoomNums:data\r\n                })\r\n            })\r\n        \r\n            fetch(`${getPaymentMethods}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayPaymentMethods:data\r\n                })\r\n            })\r\n            localStorage.setItem('delcntrl',true)\r\n            this.setState({printStop:1})\r\n        \r\n           \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    postQty(){\r\n       \r\n        try {\r\n            \r\n            this.state.selected.map((item)=>{\r\n                var prodName = item.meal;\r\n                var prodPrice = item.mealPrice;\r\n                var Qty = item.qty;\r\n                var ID = item.tranID;\r\n                \r\n                var salesQty = {\r\n                    id:ID,\r\n                    productName:prodName,\r\n                    productPrice:prodPrice,\r\n                    Quantity:parseInt(Qty),\r\n                    user: localStorage.getItem('userInfo'),\r\n                    tranDate:moment(new Date()).format('MMM DD YYYY'),\r\n                    shift:localStorage.getItem('shift'),\r\n                                \r\n                }\r\n                let result = fetch(`${postBarSalesQty}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        salesQty\r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                this.setState({\r\n                    Newmeal:'',\r\n                    Newprice:'',\r\n                    Newqty:0,\r\n                    Newid:'',\r\n                    DrinkstoreData:[],\r\n                    DrinkSalesQtyData:[]\r\n\r\n                })\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    fetch(`${getStoreData}`, {method:'GET'})\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        this.setState({\r\n                            DrinkstoreData:data\r\n                        })\r\n                    })\r\n\r\n                    fetch(`${getBarSalesQty}`, {method:'GET'})\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        this.setState({\r\n                            DrinkSalesQtyData:data\r\n                        })\r\n                    })\r\n                \r\n                },1000)\r\n                \r\n                return 'ok'\r\n            })    \r\n        \r\n\r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    buttonClick (){\r\n        fetch(`${menuUrl}${this.state.menuID}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                menulist:data\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    sendtoprinter(){\r\n        \r\n        window.print();\r\n        \r\n       \r\n    }\r\n\r\n    sendtoprinter2(){\r\n        if(this.state.printBTN==='Print'){\r\n            window.print();\r\n            this.setState({printBTN:'Close'})\r\n        }\r\n        else if(this.state.printBTN==='Close'){\r\n            this.setState({edit: false})      \r\n            this.setState({printBTN:'Print'})\r\n            this.setState({\r\n                print:0,\r\n                printStop:0,\r\n                // DrinkStore:0,\r\n                DrinkSalesQty:0,\r\n                stockBal:0,\r\n                blockTable:0\r\n\r\n            }) \r\n            \r\n            \r\n            \r\n        }\r\n       \r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n    \r\n    }\r\n\r\n    handleChange3 = (event) => {\r\n        if(this.state.Newmeal!==''||this.state.Newprice!==''||this.state.Newid!==''){\r\n            this.setState({\r\n                [event.target.name]:event.target.value\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n    handleChange2 = (event) => {\r\n        console.log('inside handle', this.props)\r\n        this.setState({\r\n           [event.target.name]:event.target.value\r\n        })\r\n        fetch(`${getGuestID}${event.target.value}`, {method: 'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item) => {\r\n                this.setState({\r\n                    guestInhouseID:item.refID,\r\n                    group:item.group\r\n                })\r\n                return 'ok'\r\n            })\r\n        })\r\n    \r\n    }\r\n    \r\n\r\n    async handleSubmit() {\r\n          \r\n        \r\n        try {\r\n            var tableID = sessionStorage.getItem('tableNumber');\r\n\r\n            var data = {\r\n                selected:[],\r\n                billCost:\"\",\r\n                tableNum:sessionStorage.getItem('tableNumber')\r\n            }\r\n\r\n            if(this.state.paymentMethod===\"POS\"){\r\n                var POSSales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    POSAmount:`${this.state.amountPaid}`,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Bar Sales\",\r\n                    department: \"Bar Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result5 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        POSSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result5>  ' + result5)\r\n                \r\n            }\r\n            if(this.state.paymentMethod===\"Cash\"){\r\n                var CashSales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    CashAmount:`${this.state.amountPaid}`,\r\n                    POSAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Bar Sales\",\r\n                    department: \"Bar Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result4 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CashSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result4>  ' + result4)\r\n                \r\n            }\r\n            if(this.state.paymentMethod===\"Transfer\"){\r\n                var transferSales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    TransferAmount:`${this.state.amountPaid}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Bar Sales\",\r\n                    department: \"Bar Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result3 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        transferSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3>  ' + result3)\r\n                \r\n            }\r\n\r\n            if(this.state.paymentMethod===\"Complimentary\"){\r\n                var complimentarySales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    amountPaid:`${this.state.amountPaid}`,\r\n                    CompDebit:`${this.state.cost}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Bar Sales\",\r\n                    department: \"Bar Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n\r\n                let result2 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        complimentarySales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2>  ' + result2)\r\n                \r\n            }\r\n            \r\n            let result12 = await fetch(`${putToTable}/${tableID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result12>  ' + result12)\r\n\r\n            alert(\"Sales Posted\")\r\n            this.setState({selected:[]});\r\n            this.setState({cost:0})\r\n            this.setState({amountPaid:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({roomNumbers:''})\r\n            this.setState({paymentMethod:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            this.setState({group:''})\r\n            this.setState({\r\n                NewtableNum:0,\r\n                shift:'',\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:'',\r\n                DrinkstoreData:[],\r\n                DrinkSalesQtyData:[]\r\n            })\r\n            sessionStorage.removeItem('stockBal');\r\n            localStorage.removeItem('delcntrl');\r\n            localStorage.setItem('btnCntrl',true);\r\n            sessionStorage.removeItem('tableNumber');\r\n\r\n            fetch(`${getStoreData}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    DrinkstoreData:data\r\n                })\r\n            })\r\n\r\n            fetch(`${getBarSalesQty}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    DrinkSalesQtyData:data\r\n                })\r\n            })\r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            })\r\n           \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleRoomSubmit() {\r\n        \r\n        try {\r\n            var tableID = sessionStorage.getItem('tableNumber');\r\n\r\n            var data = {\r\n                selected:[],\r\n                billCost:\"\",\r\n                tableNum:sessionStorage.getItem('tableNumber')\r\n            }\r\n\r\n            var restaurantSales = {\r\n                _id:Math.floor(Math.random()*10000),\r\n                docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                refID:`${this.state.guestInhouseID}`,\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                cost:`${this.state.cost}`,\r\n                amountPaid:`${this.state.amountPaid}`,\r\n                roomDebit:`${this.state.cost}`,\r\n                POSAmount:0,\r\n                CashAmount:0,\r\n                TransferAmount:0,\r\n                CompDebit:0,\r\n                paymentMethod:`${this.state.paymentMethod}`,\r\n                roomNumbers:`${this.state.roomNumbers}`,\r\n                description:\"Bar Docket\",\r\n                department: \"Bar Sales\",\r\n                docketDetails: this.state.selected,\r\n                group:`${this.state.group}`,\r\n                user: localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift')\r\n               \r\n            }\r\n            let result = await fetch(postDocketToRoom, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    restaurantSales\r\n                   \r\n                )\r\n                \r\n            });\r\n            console.log('result>  ' + result)\r\n\r\n            let result2 = await fetch(postRestBill, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    restaurantSales\r\n                   \r\n                )\r\n                \r\n            });\r\n            console.log('result2>  ' + result2)\r\n\r\n            let result14 = await fetch(`${putToTable}/${tableID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result14>  ' + result14)\r\n            alert(\"Docket Posted to Room \" +this.state.roomNumbers);\r\n            this.setState({selected:[]});\r\n            this.setState({cost:0})\r\n            this.setState({amountPaid:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({roomNumbers:''})\r\n            this.setState({paymentMethod:''})\r\n            this.setState({group:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            this.setState({group:''})\r\n            this.setState({\r\n                NewtableNum:0,\r\n                shift:'',\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:'',\r\n                DrinkstoreData:[],\r\n                DrinkSalesQtyData:[]\r\n            })\r\n            sessionStorage.removeItem('stockBal');\r\n            localStorage.removeItem('delcntrl');\r\n            localStorage.setItem('btnCntrl',true);\r\n            sessionStorage.removeItem('tableNumber');\r\n\r\n            fetch(`${getStoreData}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    DrinkstoreData:data\r\n                })\r\n            })\r\n\r\n           \r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            })\r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n            \r\n        });\r\n        localStorage.removeItem('shift')\r\n    }\r\n\r\n\r\n    renderTables(data){\r\n        if(data) {\r\n            data.sort((a, b) => a.tableNum - b.tableNum);\r\n           \r\n            return data.map((item) => {\r\n                if(item.billCost===\"\"){\r\n                    return(\r\n                        <div key={item._id}>\r\n                            <button className=\"btn btn-success cartBtn3 alignroomsgreen2\"disabled = {this.state.NewtableNum===1} onClick={() => {sessionStorage.setItem('tableNumber', item.tableNum);this.NewTable();this.setState({docketFirst:0})}}>\r\n                                <p className=\"texted\">{item.tableNum}</p>\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <div key={item._id}>\r\n                            <button className=\"btn btn-warning cartBtn3 alignroomsgreen2\" onClick={() => {sessionStorage.setItem('tableNumber', item.tableNum);this.getTable();this.setState({print:1})}}>\r\n                                <p className=\"texted\">{item.tableNum}</p>\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n               \r\n            })\r\n        }\r\n    }\r\n\r\n   \r\n    renderPayMeth(data){\r\n        if(data) {\r\n            return data.map((item, index) => {\r\n                return(\r\n                    <>\r\n                        <option key={index} value={item.method}>\r\n                            {item.method}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderRooms(data){\r\n        if(data) {\r\n           data.sort((a, b) => a.roomNumbers - b.roomNumbers);\r\n            return data.map((item, index) => {\r\n                return(\r\n                    <>\r\n                        <option key={index} value={item.roomNumbers}>\r\n                            {item.roomNumbers} - {item.fname} {item.lname}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    addMeal(){\r\n        var menuselect=this.state.menulist;\r\n        menuselect.map((item)=>{\r\n            this.setState({\r\n                Newmeal:item.mealName,\r\n                Newprice:item.mealPrice,\r\n                Newqty:parseInt(item.mealQt),\r\n                Newid:item._id\r\n\r\n            })\r\n            return 'ok'\r\n        })\r\n        \r\n    }\r\n    increament(){\r\n        if(this.state.Newqty!==0){\r\n            this.setState({\r\n                Newqty:this.state.Newqty +1\r\n            })\r\n        }\r\n       \r\n    }\r\n\r\n    decreament(){\r\n        if(this.state.Newqty!==0){\r\n            this.setState({\r\n                Newqty:this.state.Newqty -1\r\n            })\r\n        }\r\n    }\r\n\r\n    pushorder(){\r\n        var selected = this.state.selected;\r\n        var selectedMeals = {};\r\n\r\n        if(this.state.selected.length>0){\r\n            this.setState({blockTable:1});\r\n    \r\n            selectedMeals.id=this.state.Newid;\r\n            selectedMeals.meal=this.state.Newmeal;\r\n            selectedMeals.mealPrice=this.state.Newprice;\r\n            selectedMeals.qty=this.state.Newqty;\r\n            selectedMeals.tranID=Math.floor(Math.random()*10000)\r\n            \r\n            selected.push(selectedMeals);\r\n                      \r\n            this.setState({\r\n                selected,\r\n                printStop:0,\r\n                DrinkStore:0,\r\n                DrinkSalesQty:0,\r\n                stockBal:0,\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:''\r\n            })\r\n                \r\n           \r\n        }\r\n        else if(this.state.selected.length===0){\r\n            this.setState({blockTable:0});\r\n\r\n            selectedMeals.id=this.state.Newid;\r\n            selectedMeals.meal=this.state.Newmeal;\r\n            selectedMeals.mealPrice=this.state.Newprice;\r\n            selectedMeals.qty=this.state.Newqty;\r\n            selectedMeals.tranID=Math.floor(Math.random()*10000)\r\n            \r\n            selected.push(selectedMeals);\r\n                      \r\n            this.setState({\r\n                selected,\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:'',\r\n                printStop:0,\r\n                DrinkStore:0,\r\n                DrinkSalesQty:0,\r\n                stockBal:0\r\n            })\r\n        }\r\n\r\n        \r\n\r\n        this.myTimer = setTimeout(() => {\r\n            if(this.state.selected.length>0){\r\n                const totalSale = selected.reduce((total, item) => {\r\n                    return total + item.mealPrice * item.qty\r\n                }, 0);\r\n                this.setState({\r\n                    cost:totalSale,\r\n                    \r\n                })\r\n            }\r\n\r\n            if(this.state.cost!==0){\r\n                fetch(`${getRooms}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        displayRoomNums:data\r\n                    })\r\n                })\r\n                fetch(`${getPaymentMethods}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        displayPaymentMethods:data\r\n                    })\r\n                })\r\n                // localStorage.removeItem('btnCntrl');\r\n                localStorage.removeItem('delcntrl')\r\n            }\r\n            \r\n        },1000);\r\n\r\n \r\n    }\r\n         \r\n    \r\n    renderMenu(data){\r\n        if (data){\r\n            return data.map((item) =>{\r\n                return(\r\n                    \r\n                    <>\r\n                        <div>\r\n                            <center>\r\n                                \r\n                            <div className=\"card alignroomsgreen3\"style={{backgroundColor:'orangered'}} key={item.mealTypeID}>\r\n                                <button className=\"btn btn-orangered buttnheightbtn\" onMouseOver={()=>sessionStorage.setItem('meal',item.mealName)} onClick={ () =>{this.setState({Newmeal:item.mealName,Newprice:item.mealPrice,Newqty:parseInt(item.mealQt),Newid:item._id,tranID2:Math.floor(Math.random()*10000)});this.handleStock()}}>\r\n                                        \r\n                                <p className=\"card-title formatnew2\">{item.mealName}</p> \r\n                                </button>\r\n                            </div>\r\n                                \r\n                            </center>\r\n                        </div>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n    \r\n    \r\n    renderOders(data){\r\n        \r\n        if(data) {\r\n            return data.map((item) =>{\r\n               \r\n                return(\r\n                    <>\r\n                        \r\n                            <tr key= {item.id}>\r\n                                <td className=\"table-light table-striped adjust texted8\">{item.id}</td>\r\n                                <td className=\"table-light table-striped adjust texted8\">{item.meal}</td>\r\n                                <td className=\"table-light table-striped adjust texted8\">{item.qty}</td>\r\n                                <td className=\"table-light table-striped adjust texted8\"><NumberFormat value={item.mealPrice} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                                <td className=\"table-light table-striped adjust texted8\"><NumberFormat value={item.mealPrice*item.qty} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            </tr>\r\n                        \r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderSalesReport(data){\r\n        \r\n        if(data) {\r\n            return data.map((item) =>{\r\n                \r\n                return(\r\n                    <>\r\n                        \r\n                        <tr key= {item.id}>\r\n                            <td className=\"table-light table-striped adjust texted8\">{item.id}</td>\r\n                            <td className=\"table-light table-striped adjust texted8\">{item.productName}</td>\r\n                            <td className=\"table-light table-striped adjust texted8\">{item.Quantity}</td>\r\n                            <td className=\"table-light table-striped adjust texted8\"><NumberFormat value={item.productPrice} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust texted8\"><NumberFormat value={item.productPrice*item.Quantity} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust texted8\"> </td>\r\n                            \r\n                        </tr>\r\n                        \r\n                        \r\n                        \r\n                    </>\r\n                )\r\n                \r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    renderPos(food){\r\n        if(food) {\r\n            return food.map((item) =>{\r\n               \r\n                return(\r\n                    <>\r\n                        <div>\r\n                            <center>\r\n                                \r\n                                    <div className=\"card alignroomsgreen3\"style={{backgroundColor:'blueviolet'}} key={item.mealTypeID}>\r\n                                        <button className=\"btn btn-blueviolet buttnheightbtn\" onMouseOver={() => this.setState({menuID:item.mealTypeID})} onClick={ () => this.buttonClick () }>\r\n                                            <p className=\"card-title formatnew2\">{item.mealType}</p> \r\n                                        </button>\r\n                                    </div>\r\n                                \r\n                                \r\n                            </center>\r\n                        </div>\r\n                        \r\n                    </>\r\n                )\r\n            })\r\n        }\r\n\r\n    }\r\n    \r\n    render() {\r\n        console.log(\">>> Inside RESrender\", this.state)\r\n        var tranDt = moment(`${this.state.transactionDate}`).format('MMM DD YYYY');\r\n        var docketNum ='Bar'+Math.floor(Math.random()*10000);\r\n        var add = this.state.amountPaid;\r\n        if(this.state.amountPaid===''){\r\n            add = 0\r\n        }\r\n        \r\n\r\n        // if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n        //     return(\r\n        //         <>\r\n        //             <GuestLogin/>\r\n        //         </>\r\n        //     )\r\n\r\n        // }\r\n\r\n        return(\r\n            <div className=\"posterminal\">  \r\n                               \r\n                <br/>     \r\n                <div className =\"row quantity\" >\r\n                               \r\n                    <center>\r\n                        <h6 style={{color:'white'}}>Add Quantity</h6>\r\n                    </center>\r\n                            \r\n                    <div>\r\n                        <div className=\"row\">\r\n                            <p className=\"prices\">Price: {this.state.Newprice}</p>\r\n                            <p className=\"prices2\">Avail.Stock: {this.state.stockBal}</p>\r\n                            <span className=\"dcrbtn\">\r\n                                <button className=\"form-control mb-3 formsizeX1\" onClick={() =>this.decreament()}><p className=\"sign\">-</p></button>\r\n                            </span>\r\n                            <span className=\"qtybtn\">\r\n                                <input type=\"number\" className=\"form-control2 mb-3 formsizeX\" style={{textAlign:'center',fontStyle:'bold',color:'white',fontSize:'24px'}}name=\"Newqty\" value={this.state.Newqty} onChange={this.handleChange3}/>\r\n                            </span>\r\n                            <span className=\"incbtn\">\r\n                                <button className=\"form-control mb-3 formsizeX1\" onClick={() => this.increament()}><p className=\"sign\">+</p></button>\r\n                            </span>\r\n                            <button className=\"btn btn-warning addbtn\" disabled={this.state.Newqty===0||this.state.stockBal===0} onClick={() =>{this.pushorder();this.setState({docketFirst:1})}}>{this.state.Stockbtn}</button>\r\n                            \r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n                \r\n\r\n                <div className=\"salesTable\">\r\n                \r\n                    <table className=\"table table-hover\">\r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust2\">ID</th>\r\n                                <th className=\"adjust2\">Menu</th>\r\n                                <th className=\"adjust2\">Qty</th>\r\n                                <th className=\"adjust2\">Price(=N)</th>\r\n                                <th className=\"adjust2\">Amount(=N)</th>\r\n                               \r\n                                \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover tableheight\">\r\n                            {this.renderOders(this.state.selected)}\r\n                            \r\n       \r\n                            \r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                </div>\r\n\r\n                \r\n                    \r\n                {/* <div className=\"amountP\">\r\n                    <input type=\"text\" className=\"form-control mb-3 formsizeA1 textedM\" name=\"amountPaid\" require placeholder= \"Enter Payment\" value={this.state.amountPaid} onChange={this.handleChange}/>\r\n                </div>\r\n\r\n                <div className=\"method\">\r\n                    <select className=\"form-select formsizeA1 textedM\" name=\"paymentMethod\" onChange={this.handleChange}>\r\n                        <option selected value=''>Payment Method</option>\r\n                        {this.renderPayMeth(this.state.displayPaymentMethods)}\r\n                    </select>\r\n                </div> */}\r\n                \r\n                \r\n                <div className=\"textAmount\">\r\n                    <p className=\"fmtcost2\" style={{color:'white'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                </div>\r\n                <div className=\"textAmount2\">\r\n                    <p className=\"fmtcost2\" style={{color:'white'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                </div>\r\n\r\n                <div className=\"operations\">\r\n                    \r\n                    <h4 className=\"texted4\" style={{color:'white'}}>Operations</h4>\r\n                    \r\n                    <button disabled={localStorage.getItem('delcntrl')} className=\"btn btn-primary cartBtn2\" onClick={() => {this.removeAll();this.setState({docketFirst:0})}}>\r\n                        <p className=\"texted\">Delete</p>\r\n                    </button>\r\n                    \r\n                    {/* <button disabled={this.state.cost===0||this.state.amountPaid===''||this.state.amountPaid<this.state.cost||this.state.amountPaid>this.state.cost||this.state.paymentMethod===''||this.state.paymentMethod==='Complimentary'||this.state.docketFirst===1} className=\"btn btn-primary cartBtn2\" onClick={() => {this.onOpenModalreceipt();this.postQty()}}>\r\n                        <p className=\"texted\">Post</p>\r\n                    </button> */}\r\n                    {/* <select type =\"button\" disabled={this.state.docketFirst===1} className=\"form-select formsizeB mb-2 btn btn-primary texted\" name=\"roomNumbers\" onChange={this.handleChange2}>\r\n                        <option selected value=''>Rooms</option>\r\n                        {this.renderRooms(this.state.displayRoomNums)}\r\n                                                                    \r\n                    </select> */}\r\n                                            \r\n                    {/* <button disabled={this.state.roomNumbers===''||this.state.amountPaid!=='' ||this.state.docketFirst===1} className=\"btn btn-primary cartBtn4\" onClick={() => {this.onOpenCompModal();this.postQty()}}>\r\n                        <p className=\"texted\">Room Post</p>\r\n                    </button> */}\r\n                    {/* <button disabled={this.state.paymentMethod!=='Complimentary'||this.state.amountPaid!==''||this.state.docketFirst===1} className=\"btn btn-primary cartBtn2\" onClick={() =>{this.onOpenModalreceipt();this.postQty()}}>\r\n                        <p className=\"texted\">Comp</p>\r\n                    </button>\r\n                    <button disabled={this.state.docketFirst===1} className=\"btn btn-primary cartBtn2\" onClick={ ()=>{this.handleReport()}}>\r\n                        <p className=\"texted\">Reports</p>\r\n                    </button> */}\r\n                    \r\n                    <button disabled={localStorage.getItem('btnCntrl')} className=\"btn btn-warning cartBtn12\" onClick={() => {this.addToTable();this.setState({NewtableNum:0})}}>\r\n                        <p className=\"texted\">Add to Table {sessionStorage.getItem('tableNumber')}</p>\r\n                    </button>\r\n                    \r\n                    <button disabled = {this.state.docketFirst===1} className=\"btn btn-danger cartBtn2\" onClick={ ()=> {this.props.history.push('./BarPortal')}}>\r\n                        <p className=\"texted\">Close</p>\r\n                    </button>    \r\n\r\n                    <button className=\"btn btn-danger cartBtn20\" onClick={ ()=> this.logout()}>\r\n                        <p className=\"texted\">Log Out {localStorage.getItem('userInfo').split(' ')[0]}</p>\r\n                    </button>\r\n                    {/* <button disabled className={this.state.shiftcolor}>\r\n                        <p className=\"texted\">{localStorage.getItem('shift')}</p>\r\n                    </button> */}\r\n                    {/* <button disabled ={this.state.selected.length===0 || this.state.printStop===0||this.state.print===0}className={this.state.shiftcolor} onClick={()=>{this.onOpenModaltoprint();localStorage.setItem('delcntrl',true)}}>\r\n                        <p className=\"texted\">Print Docket</p>\r\n                    </button> */}\r\n                    \r\n                </div>\r\n\r\n                <div className=\"tables\">\r\n                    <h5 className=\"texted2\" style={{color:'white'}}>Get Table</h5>\r\n                    <div>\r\n                        {this.renderTables(this.state.tables)}\r\n                    \r\n                    </div>\r\n                    <h6 style={{color:'silver', textAlign:'right'}}>Bar App</h6>\r\n                </div>\r\n\r\n                <div className =\"mainmenu\">\r\n                    {this.renderPos(this.state.menu)}\r\n                </div>\r\n\r\n                <div className =\"menulistItems\">\r\n                    {this.renderMenu(this.state.menulist)}\r\n                </div>\r\n\r\n                <Modal open={this.state.edit}>\r\n                    \r\n                    <div className = \"posPrint\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Zarvich Hotels</p>\r\n                            <p className=\"textSized mb-3\">No 123 ABC Road, Abuja</p>\r\n                        <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Inner Bar Docket</p>\r\n                            <p className=\"textSized\">Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"table-warning\">\r\n                                <tr>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>ID</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Price(=N)</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Amount(=N)</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"table table-hover tableheight\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Total:<NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Amount Paid:<NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter2()}}>\r\n                                    <p className=\"texted\">{this.state.printBTN}</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n\r\n                <Modal open={this.state.editreceipt} onClose={()=>{this.onCloseModalreceipt();this.handleSubmit()}}>\r\n                    \r\n                    <div className = \"posPrint\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Zarvich Hotels</p>\r\n                            <p className=\"textSized mb-3\">No 123 ABC Road, Abuja</p>\r\n                        <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Inner Bar Receipt</p>\r\n                            <p className=\"textSized\">Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"table-warning\">\r\n                                <tr>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>ID</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Price(=N)</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Amount(=N)</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"table table-hover tableheight\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Amount Paid: <NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted\">Print</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseModalreceipt();this.handleSubmit()}}>\r\n                                    <p className=\"texted\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                <Modal open={this.state.compModal} onClose={()=>{this.onCloseCompModal();this.handleRoomSubmit()}}>\r\n                    \r\n                    <div className = \"posPrint\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Zarvich Hotels</p>\r\n                            <p className=\"textSized mb-3\">No 123 ABC Road, Abuja</p>\r\n                        <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Inner Bar Docket</p>\r\n                            <p className=\"textSized\">Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"table-warning\">\r\n                                <tr>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>ID</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Price(=N)</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Amount(=N)</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"table table-hover tableheight\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Amount Paid: <NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted\">{this.state.printBTN}</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseCompModal();this.handleRoomSubmit()}}>\r\n                                    <p className=\"texted\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                {/* view daily sales report */}\r\n                <Modal open={this.state.report} onClose={()=>{this.onCloseModalreport()}}>\r\n                    \r\n                    <div className = \"posPrint\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Zarvich Hotels</p>\r\n                            <p className=\"textSized mb-3\">No 123 ABC Road, Abuja</p>\r\n                        <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Inner Bar Daily Sales Report</p>\r\n                            <p className=\"textSized\">Report Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Shift: {this.state.useReportShift}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"table-warning\">\r\n                                <tr>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>ID</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Price(=N)</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Amount(=N)</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"table table-hover tableheight\">\r\n                                {this.renderSalesReport(this.state.DrinkSalesQtyReportData)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Total Sales: <NumberFormat value={this.state.totalSales} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        \r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Staff: {this.state.useReportName}</p>\r\n                            <p className=\"textSized\">Shift: {this.state.useReportShift}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted\">{this.state.printBTN}</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseModalreport()}}>\r\n                                    <p className=\"texted\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n        console.log (\">>> Inside RESdidMount\")\r\n        fetch(`${restMenugrpUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                menu:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getStoreData}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                DrinkstoreData:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getBarSalesQty}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                DrinkSalesQtyData:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getTable}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({tables:data})\r\n            \r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            });\r\n\r\n            localStorage.setItem('btnCntrl',true)\r\n\r\n\r\n        },2000)\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n        if(localStorage.getItem('shift')==='Morning Shift'){\r\n            this.setState({shiftcolor:\"btn btn-primary cartBtn20\"})\r\n        }\r\n        else if(localStorage.getItem('shift')==='Night Shift'){\r\n            this.setState({shiftcolor:\"btn btn-dark cartBtn20\"})\r\n        }\r\n        else if(localStorage.getItem('shift')==='All Day'){\r\n            this.setState({shiftcolor:\"btn btn-warning cartBtn20\"})\r\n        }\r\n       \r\n        \r\n    }\r\n}\r\nexport default BarApp;","import React, { Component } from 'react';\r\nimport 'react-responsive-modal/styles.css';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport './Bar/BarReport.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst userLogin = \"https://zarvichdemo.localto.net/poolUserInfo?poolcode=\";\r\nconst userName = \"https://zarvichdemo.localto.net/poolUserInfo\";\r\n\r\n\r\n\r\nclass Poollogin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\">>> inside loginConstructor\", props)\r\n       \r\n        this.state = {\r\n            login: false,\r\n            userInfo:'',\r\n            userPassword:'',\r\n            authPassword:'',\r\n            selectUserName:'',\r\n            shift:'',\r\n            \r\n        };\r\n        \r\n    }\r\n\r\n    login(){\r\n        fetch(`${userLogin}${this.state.userPassword}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({userInfo:data})\r\n           \r\n            this.myTimer = setTimeout(() => {\r\n                if(this.state.userInfo.length>0){\r\n                    this.setState({\r\n                        login: false\r\n                        \r\n                    })\r\n                    window.location.reload();\r\n                    data.map((item) =>{\r\n                        localStorage.setItem('userInfo',item.name);\r\n                        localStorage.setItem('shift',this.state.shift);\r\n                        return 'ok'\r\n                    })\r\n                }\r\n            },1000)\r\n           \r\n        })\r\n\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseModallogin(){\r\n        this.setState({\r\n            login: true\r\n        })\r\n        \r\n    }\r\n\r\n    render() {\r\n        console.log (\">>> Inside logindetails\", this.state)\r\n        return (\r\n            <>\r\n                <Modal open={this.state.login} onClose={()=>this.onCloseModallogin()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Login First</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <input type=\"password\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"userPassword\" require placeholder=\"Enter password\" value={this.state.userPassword} onChange={this.handleChange}/>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"shift\" require placeholder=\"Select Shift\" value={this.state.shift} list=\"shift\"  onChange={this.handleChange}/>\r\n                                    <datalist id=\"shift\">\r\n                                        <option value = \"Morning Shift\"></option>\r\n                                        <option value = \"Night Shift\"></option>\r\n                                        <option value = \"All Day\"></option>\r\n                                    </datalist>\r\n                                    <button disabled = {this.state.userPassword===''||this.state.shift===''} className=\"btn btn-warning formsize91\" onClick={()=>this.login()}>Login</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n        \r\n    componentDidMount() {\r\n        console.log(\">>> Inside loginDidMount\", this.state)\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                selectUserName:data,\r\n                login: true\r\n            \r\n            });\r\n            \r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Poollogin;","import React,{Component} from 'react';\r\nimport './BarReport.css';\r\nimport moment from 'moment';\r\nimport NumberFormat from 'react-number-format';\r\nimport Header3 from '../Header3';\r\nimport Poollogin from '../Poollogin';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst salesRecordsUrl='https://zarvichdemo.localto.net/poolbarSales';\r\nconst userName = \"https://zarvichdemo.localto.net/poolUserInfo\";\r\n\r\n\r\nclass PoolBarSalesReport extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        console.log(\">>>Inside SalesConstructor\",props)\r\n\r\n        this.state={\r\n            salesRecords:'',\r\n            totalSales:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n\r\n            \r\n            \r\n        }\r\n    }\r\n\r\n    handleTotal(){\r\n        const total = this.state.salesRecords.reduce((totalCost, item) => totalCost + parseInt(item.amountPaid), 0)\r\n        this.setState({totalSales:total})\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n          \r\n            login:true\r\n        })\r\n    }\r\n\r\n   \r\n    renderSalesData(data){\r\n        \r\n        if(data)\r\n        return data.map((item, _id) =>{\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                        <td className=\"table-light table-striped adjust2\">{moment(item.date).format('MMM DD YYYY')}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.docketNum}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.refID}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.roomNumbers}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.paymentMethod}</td>\r\n                            <td className=\"table-light table-striped adjust2\"><NumberFormat value={item.cost} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2\"><NumberFormat value={item.amountPaid} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                          \r\n                        </tr> \r\n                        <div className=\"accordion-flush\" id=\"accordionFlushExample\">\r\n                            <div className=\"accordion-item\">\r\n                                <h5 className=\"accordion-header\" id=\"flush-headingOne\">\r\n                                    <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\"  aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\r\n                                        <b style={{color:'blue'}}>Order Details</b>\r\n                                    </button>\r\n                                </h5>\r\n                                <div id=\"flush-collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\">\r\n                                    <div className=\"accordion-body\">\r\n\r\n                                        { item.docketDetails.map(food => (\r\n                                            \r\n                                            <>\r\n                                                {food.meal} (<NumberFormat value={food.mealPrice} thousandSeparator={true} displayType={\"text\"}/>.00), &nbsp;;\r\n                                                \r\n                                            \r\n                                            </>\r\n                                            \r\n                                        ))}\r\n                                    </div>\r\n                                                \r\n                                        \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                            \r\n                         \r\n                    </>            \r\n                )\r\n            \r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(\">>> Inside CompTorender\", this.state)\r\n        \r\n        if(localStorage.getItem('userInfo')==null||this.state.login===false){\r\n            return(\r\n                <>\r\n                    <Poollogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return(\r\n            <>\r\n            \r\n              <Header3/>\r\n                <center><h5>Pool Bar Daily Sales Report</h5></center>\r\n                <br/>\r\n                <table className=\"table table-hover\">\r\n\r\n                    <thead className=\"table-warning\">\r\n                       \r\n                        <tr>\r\n                        <th className=\"adjust2\">Date</th>\r\n                            <th className=\"adjust2\">Docket Num</th>\r\n                            <th className=\"adjust2\">Room ID</th>\r\n                            <th className=\"adjust2\">Room Num</th>\r\n                            <th className=\"adjust2\">Payment Method</th>\r\n                            <th className=\"adjust2\">Price(=N)</th>\r\n                            <th className=\"adjust2\">AMount Paid(=N)</th>\r\n                                                                \r\n                        </tr>\r\n                    </thead>\r\n                    \r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderSalesData(this.state.salesRecords)}\r\n                    </tbody>\r\n                </table>   \r\n                \r\n                      \r\n            \r\n                \r\n                        \r\n            </>\r\n        );\r\n    }\r\n    componentDidMount(){\r\n        console.log (\">>> Inside BarSalesTodidMount\")\r\n       \r\n       \r\n        fetch(salesRecordsUrl, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({salesRecords:data})\r\n           \r\n            \r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n       \r\n       \r\n        \r\n       \r\n    }\r\n}\r\nexport default PoolBarSalesReport;","import React,{Component} from 'react';\r\nimport './BarReport.css';\r\nimport Login from '../Login';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst userName = \"https://zarvichdemo.localto.net/barUserInfo\";\r\n\r\nclass BarReports extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            Blogin:''\r\n        }\r\n    }\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n          \r\n            login:true\r\n        })\r\n    }\r\n   \r\n    render() {\r\n        console.log (\">>> Inside logindetails\", this.state)\r\n        if(localStorage.getItem('userInfo')==null || this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Login/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        return(\r\n            <>\r\n              \r\n                 <div className=\"background15\">\r\n                     <center>\r\n                         <div className=\"formdesign152\">\r\n                             <h4 className=\"mb-3\">Bar Portal</h4>\r\n                            <div>\r\n                                \r\n                                <center>\r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('./Bar')}}>Bar</button>\r\n                                    <button className=\"btn btn-warning btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/AppMenu')}}>App Menu</button>\r\n                                    <button className=\"btn btn-warning btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>\r\n                                    <button className=\"btn btn-danger btnwidth15 mb-3\" onClick={ ()=> this.logout()}>\r\n                                    Log Out {localStorage.getItem('userInfo').split(' ')[0]}\r\n                                    </button>\r\n                                    \r\n                                </center>\r\n                                \r\n                            </div>\r\n                         </div>\r\n\r\n                     </center>\r\n                   \r\n                </div>\r\n                <div className=\"pagebody3\">\r\n                    <input hidden/>\r\n                </div>\r\n            </>\r\n           \r\n\r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n    }\r\n\r\n   \r\n\r\n}\r\n\r\n\r\nexport default BarReports;\r\n","import React, { Component } from 'react';\r\nimport 'react-responsive-modal/styles.css';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport './Bar/BarReport.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst userLogin = \"https://zarvichdemo.localto.net/billingUserInfo?billingcode=\";\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\n\r\n\r\n\r\nclass Billinglogin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\">>> inside loginConstructor\", props)\r\n       \r\n        this.state = {\r\n            login: false,\r\n            userInfo:'',\r\n            userPassword:'',\r\n            authPassword:'',\r\n            selectUserName:'',\r\n            shift:'',\r\n            \r\n        };\r\n        \r\n    }\r\n\r\n    login(){\r\n        fetch(`${userLogin}${this.state.userPassword}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({userInfo:data})\r\n           \r\n            this.myTimer = setTimeout(() => {\r\n                if(this.state.userInfo.length>0){\r\n                    this.setState({\r\n                        login: false\r\n                        \r\n                    })\r\n                    window.location.reload();\r\n                    data.map((item) =>{\r\n                        localStorage.setItem('userInfo',item.name);\r\n                        localStorage.setItem('shift',this.state.shift);\r\n                        return 'ok'\r\n                    })\r\n                }\r\n            },1000)\r\n           \r\n        })\r\n\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseModallogin(){\r\n        this.setState({\r\n            login: true\r\n        })\r\n        \r\n    }\r\n\r\n    render() {\r\n        console.log (\">>> Inside logindetails\", this.state)\r\n        return (\r\n            <>\r\n                <Modal open={this.state.login} onClose={()=>this.onCloseModallogin()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Login First</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <input type=\"password\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"userPassword\" require placeholder=\"Enter password\" value={this.state.userPassword} onChange={this.handleChange}/>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"shift\" require placeholder=\"Select Shift\" value={this.state.shift} list=\"shift\"  onChange={this.handleChange}/>\r\n                                    <datalist id=\"shift\">\r\n                                        <option value = \"Morning Shift\"></option>\r\n                                        <option value = \"Night Shift\"></option>\r\n                                        <option value = \"All Day\"></option>\r\n                                    </datalist>\r\n                                    <button disabled = {this.state.userPassword===''||this.state.shift===''} className=\"btn btn-warning formsize91\" onClick={()=>this.login()}>Login</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n        \r\n    componentDidMount() {\r\n        console.log(\">>> Inside loginDidMount\", this.state)\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                selectUserName:data,\r\n                login: true\r\n            \r\n            });\r\n            \r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Billinglogin;","import React, { Component } from 'react';\r\nimport Billinglogin from '../../Billinglogin';\r\nimport '../Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport DatePicker from 'react-datepicker';\r\nimport moment from 'moment';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport addDays from 'date-fns/addDays';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\nconst getRoomSales = \"https://zarvichdemo.localto.net/findOtherSales?others12=Other%20Sales\";\r\n// const getRoomSales2 = \"/findRmDeposits?roomDep13=Room%20Deposit\";\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\nconst levyUrl= \"https://zarvichdemo.localto.net/feesAndCharges\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\n\r\n\r\n\r\nclass OtherSalesReport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside CashConstructor\",props)\r\n        this.state = {\r\n            RoomSales:'',\r\n            RoomTotal:'',\r\n            depPOS:'',\r\n            depCash:'',\r\n            depTransfer:'',\r\n            depComp:'',\r\n            TotalSales:'',\r\n            date:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            shift:'',\r\n            startdate:'',\r\n            endDate:'',\r\n            levyData:'',\r\n            ServiceChrg:'',\r\n            TourismLevy:'',\r\n            VAT:'',\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n            \r\n            \r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n\r\n    }\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            date: date,\r\n            startdate: date\r\n\r\n        });\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            endDate: date\r\n        });\r\n    }\r\n    \r\n    renderDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.date}\r\n                    onChange={this.checkinhandleChange}\r\n                    maxDate={addDays(new Date(),0)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText='Select Start Date'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderendDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.endDate}\r\n                    onChange={this.endhandleChange}\r\n                    maxDate={(new Date())}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112 mvrght\"\r\n                    placeholderText=\"Search End Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    handleChange=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n    }\r\n    handleChange10=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value,\r\n            roomSales:''\r\n        })\r\n\r\n    }\r\n    \r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    cleanup(){\r\n        this.setState({\r\n            RoomSales:0,\r\n            RoomTotal:0,\r\n            depPOS:0,\r\n            depCash:0,\r\n            depTransfer:0,\r\n            depComp:0,\r\n            TotalSales:0\r\n            \r\n        })\r\n    }\r\n\r\n    findRoomReport(){\r\n        var start = moment(this.state.date).format('MMM DD YYYY');\r\n        var end = moment(this.state.endDate).format('MMM DD YYYY');\r\n\r\n       var findAllBar = `${getRoomSales}&&Othrstartdate12=${start}&&OthrendDate12=${end}`\r\n        // var findBarwrtshift = `${getRoomSales2}&&startdate13=${start}&&endDate13=${end}&&shiftNow2='All Day'`\r\n\r\n        \r\n            this.setState({RoomSales:''})\r\n            fetch(`${findAllBar}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({RoomSales:data});\r\n                data.map((item) => {\r\n    \r\n                    var RmSales = 0;\r\n                    var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)\r\n                    this.setState({RoomTotal:roomSales});\r\n    \r\n                    var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.POSAmount)\r\n                    }, 0);\r\n                    this.setState({depPOS:allPOS});\r\n    \r\n                    var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.CashAmount)\r\n                    }, 0);\r\n                    this.setState({depCash:allCash});\r\n    \r\n                    var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.TransferAmount)\r\n                    }, 0);\r\n                    this.setState({depTransfer:allTransfer});\r\n    \r\n                    var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.CompDebit)\r\n                    }, 0);\r\n                    this.setState({depComp:allComp});\r\n    \r\n                    var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.roomDebit)\r\n                    }, 0);\r\n                    this.setState({deproom:allRoom});\r\n                    \r\n                    return 'ok'\r\n                })\r\n                \r\n                \r\n            });\r\n            this.myTimer = setTimeout(() => {\r\n            \r\n                var AllSalesPoint = 0;\r\n                var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n                this.setState({TotalSales:TotalSalesPoints})\r\n    \r\n            },1000)\r\n        \r\n\r\n        \r\n            // this.setState({RoomSales:''})\r\n            // fetch(`${findBarwrtshift}`, {method:'GET'})\r\n            // .then((res) => res.json())\r\n            // .then((data) => {\r\n            //     this.setState({RoomSales:data});\r\n            //     data.map((item) => {\r\n\r\n            //         var RmSales = 0;\r\n            //         var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.CompDebit) + parseInt(item.roomDebit)\r\n            //         this.setState({RoomTotal:roomSales});\r\n    \r\n            //         var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.POSAmount)\r\n            //         }, 0);\r\n            //         this.setState({depPOS:allPOS});\r\n    \r\n            //         var allCash = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.CashAmount)\r\n            //         }, 0);\r\n            //         this.setState({depCash:allCash});\r\n    \r\n            //         var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.TransferAmount)\r\n            //         }, 0);\r\n            //         this.setState({depTransfer:allTransfer});\r\n    \r\n            //         var allComp = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.CompDebit)\r\n            //         }, 0);\r\n            //         this.setState({depComp:allComp});\r\n    \r\n            //         var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.roomDebit)\r\n            //         }, 0);\r\n            //         this.setState({deproom:allRoom});\r\n                    \r\n            //         return 'ok'\r\n            //     })\r\n                \r\n                \r\n            // });\r\n            \r\n            this.myTimer = setTimeout(() => {\r\n            \r\n                var AllSalesPoint = 0;\r\n                var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n                this.setState({TotalSales:TotalSalesPoints})\r\n    \r\n            },1000)\r\n            \r\n        \r\n       \r\n    }\r\n        \r\n    \r\n\r\n    renderRoomSales=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a, b) => a.date - b.date);\r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust222\">{defaultdate}</td>\r\n                            {/* <td className=\"table-light table-striped adjust2\">{item.roomNumbers}</td> */}\r\n                            <td className=\"table-light table-striped adjust223 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POSAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CashAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.TransferAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CompDebit}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POSAmount) + parseInt(item.CashAmount) + parseInt(item.TransferAmount)}thousandSeparator={true}displayType={\"text\"}/></b></td> \r\n                            \r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log (\">>> Inside Cashdetails\", this.state)\r\n        // var defaultdate = moment(this.state.date).format('MMM DD YYYY');\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Billinglogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <div className =\"container\">\r\n                <div>\r\n                    <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                </div>\r\n                <div>\r\n                    <center>\r\n                        <h6>{this.state.Hotelname}</h6>\r\n                        <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                        <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n                       \r\n                    </center>\r\n                </div>\r\n                <center>\r\n                    <h5>Other Sales Report</h5><br/>\r\n                    <div>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderDate(this.state.startdate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderendDate(this.state.endDate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            {/* <select type =\"button\" className=\"form-select mb-2 btn btn-primary mt-3 btnwidthp printing space selectadjuster\" name=\"shift\" value ={this.state.shift} onChange={this.handleChange10}>\r\n                                <option selected value=''>Select Shift</option>\r\n                                <option value='Morning Shift'>Morning Shift</option>\r\n                                <option value='Night Shift'>Night Shift</option>\r\n                                <option value='All Day'>All Day</option>\r\n                                <option value='All Shifts'>All Shifts</option>\r\n                                \r\n                            </select> */}\r\n                            <button className=\"btn btn-primary space btnadjuster printing\" onClick={ () => {this.cleanup();this.findRoomReport()}}>Find</button>\r\n                        </span>\r\n                    </div>\r\n                                   \r\n                </center>\r\n                \r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust50\">Date</th>\r\n                            {/* <th className=\"adjust50\">Room Number</th> */}\r\n                            <th className=\"adjust50b\">Description</th>\r\n                            <th className=\"adjust50\">POS (NGN)</th>\r\n                            <th className=\"adjust50\">Cash(NGN)</th>\r\n                            <th className=\"adjust50\">Transfer(NGN)</th>\r\n                            <th className=\"adjust50\">Complimentary(NGN)</th>\r\n                            <th className=\"adjust50\">Total(NGN)</th>\r\n                            \r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderRoomSales(this.state.RoomSales)}\r\n                        <tr>\r\n                            {/* <td className=\"table-light table-striped adjust2\"> </td> */}\r\n                            <td className=\"table-light table-striped adjust2\"><b>Total</b></td>\r\n                            <td className=\"table-light table-striped adjust2\"><b> </b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depPOS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depCash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depTransfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depComp)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b> <NumberFormat value={this.state.depPOS + this.state.depCash + this.state.depTransfer}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                        </tr>\r\n\r\n                        \r\n                        \r\n                        \r\n                    </tbody>\r\n                </table>\r\n                \r\n                \r\n                <h6>Gross Collection:         <NumberFormat value={this.state.depPOS + this.state.depCash + this.state.depTransfer}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                \r\n                <hr/>\r\n                <center>\r\n                \r\n                    <button className=\"btn btn-danger movebtn printing\" onClick={ () => this.props.history.push('/EndOfDay') }>Close</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ () => window.print() }>Print</button>\r\n                        \r\n                </center>       \r\n            </div>\r\n            \r\n        );\r\n    }\r\n  \r\n    componentDidMount() {\r\n        console.log(\">>> Inside CashDidMount\", this.state)\r\n\r\n        fetch(`${levyUrl}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({levyData:data})\r\n               \r\n        })\r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n    \r\n        var start = moment(new Date()).format('MMM DD YYYY');\r\n        var end = moment(new Date()).format('MMM DD YYYY');\r\n\r\n        var findAllBar = `${getRoomSales}&&Othrstartdate12=${start}&&OthrendDate12=${end}`\r\n\r\n        this.setState({RoomSales:''})\r\n        fetch(`${findAllBar}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({RoomSales:data});\r\n            data.map((item) => {\r\n\r\n                var RmSales = 0;\r\n                var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)\r\n                this.setState({RoomTotal:roomSales});\r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({depPOS:allPOS});\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({depCash:allCash});\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({depTransfer:allTransfer});\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({depComp:allComp});\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({deproom:allRoom});\r\n                \r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n        \r\n            var AllSalesPoint = 0;\r\n            var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n            this.setState({TotalSales:TotalSalesPoints})\r\n\r\n        },1000)\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n            \r\n    \r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n    }\r\n\r\n       \r\n       \r\n       \r\n    \r\n\r\n\r\n}\r\n\r\n\r\nexport default OtherSalesReport;","import React,{Component} from 'react';\r\nimport './BarReport.css';\r\nimport Poollogin from '../Poollogin';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst userName = \"https://zarvichdemo.localto.net/poolUserInfo\";\r\n\r\nclass PoolBarReports extends Component {\r\n    constructor(props) {\r\n        super (props);\r\n        console.log(\">>>Inside RESConstructor\",props)\r\n\r\n        this.state = {\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            Blogin:'',\r\n            login:''\r\n        }\r\n    }\r\n    \r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n          \r\n            login:true\r\n        })\r\n    }\r\n   \r\n    render() {\r\n        console.log (\">>> Inside logindetails\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Poollogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        return(\r\n            <>\r\n              \r\n                 <div className=\"background15\">\r\n                     <center>\r\n                         <div className=\"formdesign152\">\r\n                             <h4 className=\"mb-3\">Pool Bar Portal</h4>\r\n                            <div>\r\n                                \r\n                                <center>\r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('./PoolBar')}}>Pool Bar</button>\r\n                                    <button className=\"btn btn-warning btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/AppMenu')}}>App Menu</button>\r\n                                    <button className=\"btn btn-warning btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>\r\n                                    <button className=\"btn btn-danger btnwidth15 mb-3\" onClick={ ()=> this.logout()}>\r\n                                    Log Out {localStorage.getItem('userInfo').split(' ')[0]}\r\n                                    </button>\r\n                                    \r\n                                </center>\r\n                                \r\n                            </div>\r\n                         </div>\r\n\r\n                     </center>\r\n                   \r\n                </div>\r\n                <div className=\"pagebody3\">\r\n                    <input hidden/>\r\n                </div>\r\n            </>\r\n           \r\n\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n    }\r\n\r\n   \r\n\r\n}\r\n\r\n\r\nexport default PoolBarReports;\r\n","import React,{Component} from 'react';\r\nimport './Header.css';\r\nimport {withRouter} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nconst checkinDataUrl = \"https://zarvichdemo.localto.net/getrmstatus\"\r\n\r\n\r\nclass Footer4 extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        console.log(\">>>Inside RMConstructor\", props)\r\n        this.state={\r\n            checkinData:'',\r\n            vacantData:'',\r\n            Corporate:'',\r\n            Individual:'',\r\n            Staff:'',\r\n            Complimentary:'',\r\n            CheckOut:''\r\n            \r\n        }\r\n    }\r\n        \r\n    render(){\r\n        console.log(\">>>Inside RMrender\",this.state)\r\n        var count=this.state.checkinData;\r\n        if (count!=='green'){\r\n            var result = count.length;\r\n        }\r\n        var vacant=this.state.vacantData;\r\n        var output = vacant.length;\r\n\r\n        var corp=this.state.Corporate;\r\n        var corpRate = corp.length;\r\n\r\n        var ind=this.state.Individual;\r\n        var indVi = ind.length;\r\n\r\n        var staff=this.state.Staff;\r\n        var sta = staff.length;\r\n\r\n        var compl=this.state.Complimentary;\r\n        var comp = compl.length;\r\n        \r\n        var chkout=this.state.CheckOut;\r\n        var out = chkout.length;\r\n       \r\n        return (\r\n            <div className=\"black\">\r\n                \r\n                <span>\r\n                   \r\n                    <button className=\"btn btn-danger buttncontrol6 mb-3 mt-3\">Occuppied Rooms: {result}</button>\r\n                    <button className=\"btn btn-danger buttncontrol6 mb-3 mt-3\">Vacant Rooms: {output}</button>\r\n                    <button className=\"btn buttncontrol6 mb-3 mt-3 setmargin2\" style={{backgroundColor:'green', color:'white'}}>Vacant {output}</button>\r\n                    <button className=\"btn buttncontrol6 mb-3 mt-3\" style={{backgroundColor:'blue', color:'white'}}>Corporate {corpRate}</button>\r\n                    <button className=\"btn buttncontrol6 mb-3 mt-3\" style={{backgroundColor:'blueviolet', color:'white'}}>Individual {indVi}</button>\r\n                    <button className=\"btn buttncontrol6 mb-3 mt-3\" style={{backgroundColor:'deeppink', color:'white'}}>Staff {sta}</button>\r\n                    <button className=\"btn buttncontrol6 mb-3 mt-3\" style={{backgroundColor:'orange', color:'white'}}>Complimentary {comp}</button>\r\n                    <button className=\"btn buttncontrol7 mb-3 mt-3\" style={{backgroundColor:'black', color:'white',borderBlockStyle:'solid', borderBlockColor:'white'}}>Check Out {out}</button>\r\n                    \r\n                </span>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log (\">>> Inside RMdidMount\")\r\n        fetch(`${checkinDataUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            \r\n            this.setState({\r\n                checkinData:data.map(item => item.roomStatus).filter(item=> item !=='green')\r\n                \r\n            })\r\n            this.setState({\r\n                vacantData:data.map(item => item.roomStatus).filter(item=> item ==='green')\r\n                \r\n            })\r\n            this.setState({\r\n                Corporate:data.map(item => item.roomStatus).filter(item=> item ==='blue')\r\n                \r\n            })\r\n            this.setState({\r\n                Individual:data.map(item => item.roomStatus).filter(item=> item ==='blueviolet')\r\n                \r\n            })\r\n            this.setState({\r\n                Staff:data.map(item => item.roomStatus).filter(item=> item ==='deeppink')\r\n                \r\n            })\r\n            \r\n            this.setState({\r\n                Complimentary:data.map(item => item.roomStatus).filter(item=> item ==='orange')\r\n                \r\n            })\r\n\r\n            this.setState({\r\n                CheckOut:data.map(item => item.roomStatus).filter(item=> item ==='black')\r\n                \r\n            })\r\n            \r\n            \r\n        })\r\n      \r\n    }\r\n    \r\n}\r\n\r\nexport default withRouter (Footer4);","import React, { Component } from 'react';\r\nimport 'react-responsive-modal/styles.css';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport './Bar/BarReport.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst userLogin = \"https://zarvichdemo.localto.net/housekpUserInfo?housekpcode=\";\r\nconst userName = \"https://zarvichdemo.localto.net/housekpUserInfo\";\r\n\r\n\r\n\r\nclass Housekplogin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\">>> inside loginConstructor\", props)\r\n       \r\n        this.state = {\r\n            login: false,\r\n            userInfo:'',\r\n            userPassword:'',\r\n            authPassword:'',\r\n            selectUserName:'',\r\n            shift:'',\r\n            \r\n        };\r\n        \r\n    }\r\n\r\n    login(){\r\n        fetch(`${userLogin}${this.state.userPassword}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({userInfo:data})\r\n           \r\n            this.myTimer = setTimeout(() => {\r\n                if(this.state.userInfo.length>0){\r\n                    this.setState({\r\n                        login: false\r\n                        \r\n                    })\r\n                    window.location.reload();\r\n                    data.map((item) =>{\r\n                        localStorage.setItem('userInfo',item.name);\r\n                        localStorage.setItem('shift',this.state.shift);\r\n                        return 'ok'\r\n                    })\r\n                }\r\n            },1000)\r\n           \r\n        })\r\n\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseModallogin(){\r\n        this.setState({\r\n            login: true\r\n        })\r\n        \r\n    }\r\n\r\n    render() {\r\n        console.log (\">>> Inside logindetails\", this.state)\r\n        return (\r\n            <>\r\n                <Modal open={this.state.login} onClose={()=>this.onCloseModallogin()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Login First</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <input type=\"password\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"userPassword\" require placeholder=\"Enter password\" value={this.state.userPassword} onChange={this.handleChange}/>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"shift\" require placeholder=\"Select Shift\" value={this.state.shift} list=\"shift\"  onChange={this.handleChange}/>\r\n                                    <datalist id=\"shift\">\r\n                                        <option value = \"Morning Shift\"></option>\r\n                                        <option value = \"Night Shift\"></option>\r\n                                        <option value = \"All Day\"></option>\r\n                                    </datalist>\r\n                                    <button disabled = {this.state.userPassword===''||this.state.shift===''} className=\"btn btn-warning formsize91\" onClick={()=>this.login()}>Login</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n        \r\n    componentDidMount() {\r\n        console.log(\">>> Inside loginDidMount\", this.state)\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                selectUserName:data,\r\n                login: true\r\n            \r\n            });\r\n            \r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Housekplogin;","import React,{Component} from 'react';\r\nimport './Housekeeping.css';\r\nimport axios from 'axios';\r\nimport Footer4 from '../Footer4';\r\nimport Housekplogin from '../Housekplogin';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nconst roomchartUrl = \"https://zarvichdemo.localto.net/getrmstatus\";\r\nconst hskeepingputUrl = \"https://zarvichdemo.localto.net/rmstatus\";\r\nconst userName = \"https://zarvichdemo.localto.net/housekpUserInfo\";\r\n\r\n\r\nclass houseKeeping extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside RMConstructor\")\r\n\r\n        this.state={\r\n            roomchart:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n           \r\n        }\r\n\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    async handleSubmit() {\r\n        \r\n        try {\r\n            var hkid = sessionStorage.getItem('hskrmID')\r\n            \r\n            var HousekeepUpdate = {\r\n    \r\n                roomNumbers:`${sessionStorage.getItem('hskrm')}`,\r\n                status:'',\r\n                roomtypeName:`${sessionStorage.getItem('hskrtype')}`,\r\n                fname: '',\r\n                lname: '',\r\n                roomStatus: 'green'\r\n            }\r\n     \r\n            let result = await fetch(`${hskeepingputUrl}/${hkid}`, {\r\n                method:'put',\r\n    \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                 \r\n                },\r\n                body: JSON.stringify(\r\n                    HousekeepUpdate\r\n                )\r\n    \r\n            });\r\n    \r\n            console.log('result> '+ result)\r\n            fetch(`${roomchartUrl}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    roomchart:data\r\n                    \r\n                })\r\n               \r\n            })\r\n           \r\n                    \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n    \r\n    }\r\n\r\n\r\n    renderHousekeepingchart=((data)=>{\r\n        \r\n        if (data){\r\n            return data.map((item) =>{\r\n                data.sort((a, b) => a.roomNumbers - b.roomNumbers);\r\n                if(item.roomStatus===\"black\"){\r\n                    return(\r\n                        <>\r\n                        \r\n                            <button className=\"btn alignroomsgreen\" style={{backgroundColor:`${item.roomStatus}`}} onMouseOver={ () => {sessionStorage.setItem('hskrmID',item._id); sessionStorage.setItem('hskrm',item.roomNumbers); sessionStorage.setItem('hskrtype',item.roomtypeName)}} onClick={ () => this.handleSubmit() }>\r\n                                <h5 className=\"card-title\">{item.roomNumbers}</h5>\r\n                                <h6 className=\"card-subtitle mb-2 size2\">{item.roomtypeName}</h6>\r\n                            </button>\r\n                        </>\r\n                    )\r\n\r\n                }\r\n                else {\r\n                    return(\r\n                        <>\r\n                        \r\n                            <button className=\"btn alignroomsgreen\" style={{backgroundColor:`${item.roomStatus}`}}>\r\n                                <h5 className=\"card-title\">{item.roomNumbers}</h5>\r\n                                <h6 className=\"card-subtitle mb-2 size2\">{item.roomtypeName}</h6>\r\n                            </button>\r\n                            \r\n                        </>\r\n                    )\r\n                }\r\n                   \r\n            })\r\n        }\r\n        \r\n    }) \r\n    \r\n\r\n    render(){\r\n        console.log(\">>> Inside RMrender\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Housekplogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        return(\r\n            <>\r\n                <Footer4/>\r\n                \r\n                <div className=\"pagebodyNow\">\r\n                    <br/>\r\n                    {this.renderHousekeepingchart(this.state.roomchart)}\r\n                    \r\n                </div>\r\n                \r\n                <div className=\"pagebody\">\r\n                   <center><button className=\"btn btn-danger\" onClick={ () => this.props.history.push('./hskPortal')}>Close</button></center>\r\n                   <div className=\"row mt-3\">\r\n                            <div className=\"col-6\">\r\n                                <h6 style = {{color:'purple',marginLeft:'480px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n                \r\n              \r\n                \r\n            </>\r\n        )\r\n        \r\n        \r\n    }\r\n\r\n    async componentDidMount(){\r\n        console.log (\">>> Inside RMdidMount\")\r\n        const response = await axios.get(`${roomchartUrl}`)\r\n        this.setState({roomchart:response.data})\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n        this.myTimer = setInterval(() => {\r\n            console.log (\">>> Inside RMdidMount\")\r\n            \r\n            fetch(`${roomchartUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({roomchart:data});\r\n                \r\n            })\r\n\r\n        },60000);\r\n        \r\n      \r\n    }\r\n\r\n}\r\nexport default houseKeeping;","import React,{Component} from 'react';\r\nimport './Housekeeping.css';\r\nimport Housekplogin from '../Housekplogin';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst userName = \"https://zarvichdemo.localto.net/housekpUserInfo\";\r\n\r\n\r\nclass HousekeepingMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside RMConstructor\")\r\n\r\n        this.state={\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n           \r\n        }\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(\">>> Inside RMrender\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Housekplogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        return(\r\n            <>\r\n                 <div className=\"background15k\">\r\n                     <center>\r\n                         <div className=\"formdesign15k\">\r\n                             <h4 className=\"mb-3\">Housekeeping Portal</h4>\r\n                            <div>\r\n                                \r\n                                <center>\r\n                                   \r\n                                   <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('./housekeeping')}}>Housekeeping</button>\r\n                                   <button className=\"btn btn-warning btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/AppMenu')}}>App Menu</button>\r\n                                   <button className=\"btn btn-danger btnwidth15k\" onClick={ ()=> this.logout()}>Log Out</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                         </div>\r\n\r\n                     </center>\r\n                   \r\n                </div>\r\n            </>\r\n           \r\n\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default HousekeepingMenu;\r\n","import React,{Component} from 'react';\r\nimport './OtherPosts.css';\r\nimport moment from 'moment';\r\nimport Billinglogin from '../../Billinglogin';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport NumberFormat from 'react-number-format';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nconst postOtherSalesUrl = \"https://zarvichdemo.localto.net/otherSales\";\r\nconst postLaundrySalesUrl = \"https://zarvichdemo.localto.net/postLaundry\";\r\nconst postGymSalesUrl = \"https://zarvichdemo.localto.net/GymnasiumSales\";\r\nconst postSmoothiesSalesUrl = \"https://zarvichdemo.localto.net/SmoothiesSales\";\r\nconst postSwimmingSalesUrl = \"https://zarvichdemo.localto.net/SwimmingSales\";\r\nconst postHallHireSalesUrl = \"https://zarvichdemo.localto.net/HallHireSales\";\r\nconst postShishaSalesUrl = \"https://zarvichdemo.localto.net/ShishaSales\";\r\nconst postBbqSalesUrl = \"https://zarvichdemo.localto.net/BbqSales\";\r\nconst postMiniMartSalesUrl = \"https://zarvichdemo.localto.net/MiniMartSales\";\r\nconst dailysalesPost = \"https://zarvichdemo.localto.net/add\";\r\n// const postOthersupdater = \"/postothersupdater\";\r\nconst getRooms =\"https://zarvichdemo.localto.net/checkin?docket=Yes\";\r\nconst getCityLedger =\"https://zarvichdemo.localto.net/getcityLedger?phoneNumb=\";\r\nconst delCityLedger =\"https://zarvichdemo.localto.net/delcityLedger\";\r\nconst getGuestID = \"https://zarvichdemo.localto.net/checkin?roomNumID=\";\r\nconst postGuestDeposit = \"https://zarvichdemo.localto.net/rmDeposit\";\r\nconst postGuestDocket = \"https://zarvichdemo.localto.net/bill\";\r\nconst getPaymentMethods = \"https://zarvichdemo.localto.net/paymentMethods\";\r\nconst RoomUrl = \"https://zarvichdemo.localto.net/getrmstatus\";\r\nconst depositUrl = \"https://zarvichdemo.localto.net/roomDeposits\";\r\nconst TempRoomDepositUrl = \"https://zarvichdemo.localto.net/PostTmpRmDep\";\r\nconst getOrgUrl = \"https://zarvichdemo.localto.net/org?grpName=\";\r\nconst getDeptsWitOutPC = \"https://zarvichdemo.localto.net/DeptWitOutPC\";\r\nconst postFunctionBill = \"https://zarvichdemo.localto.net/functionBillPost\";\r\nconst postTempFunctionBill = \"https://zarvichdemo.localto.net/PostTempfunction\";\r\nconst HallUrl = \"https://zarvichdemo.localto.net/getHalls?hallType=\";\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\nconst getWorkDate = \"https://zarvichdemo.localto.net/getActive\";\r\n\r\n\r\nclass OtherPosts extends Component {\r\n\r\n    constructor(props) {\r\n        super (props);\r\n        console.log(\">>>Inside OthrConstructor\",props)\r\n\r\n        this.state = {\r\n            rate:'',\r\n            guestInhouseID:'',\r\n            amountPaid:'',\r\n            roomNumbers:'',\r\n            paymentMethod:'',\r\n            paymentMethod3:'',\r\n            paymentMethod2:'',\r\n            displayPaymentMethods:'',\r\n            displayRoomNums:'',\r\n            displayAllRoomNums:'',\r\n            displayDeposits:'',\r\n            transactionDate:'',\r\n            description1:'',\r\n            description2:'',\r\n            description3:'',\r\n            amountPaid3:'',\r\n            depositAmount:'',\r\n            rmType:'',\r\n            cost:'',\r\n            roomNumbers3:'',\r\n            cost3:'',\r\n            org:'',\r\n            orgName:'',\r\n            group:'',\r\n            functionDeposit:'',\r\n            description12:'',\r\n            orgID:'',\r\n            email:'',\r\n            phone:'',\r\n            class:'',\r\n            paymentMethod4:'',\r\n            displayAllHalls:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            guestfname: '',\r\n            guestlname: '',\r\n            login:'',\r\n            Blogin:'',\r\n\r\n            cityLedgerData:'',\r\n            phoneCode:'',\r\n\r\n            printBTN:'Print',\r\n\r\n            othersedit:false,\r\n            deptwdpc:false,\r\n            deptwdpc2:false,\r\n            deptwdpc3:false,\r\n            deptwdpc4:false,\r\n            deptwdpc5:false,\r\n            deptwdpc6:false,\r\n            deptwdpc7:false,\r\n            depositedit:false,\r\n            functionedit:false,\r\n            Dcktedit:false,\r\n\r\n            arrivalDate:'',\r\n            departureDate:'',\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:'',\r\n\r\n            otherDepartments:'',\r\n            CashPay:0,\r\n            POSPay:0,\r\n            TransferPay:0,\r\n            CompPay:0,\r\n            DeptsWdPC:'',\r\n            receiptnumberz:''\r\n\r\n        \r\n        }   \r\n        \r\n    }\r\n\r\n    onOpenDktModal(){\r\n        this.setState({\r\n            Dcktedit:true,\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    \r\n    onCloseDktModal(){\r\n        this.setState({\r\n            Dcktedit: false\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseDepModal(){\r\n        this.setState({\r\n            depositedit: false\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenDepModal(){\r\n        this.setState({\r\n            depositedit: true\r\n\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseOthrspModal(){\r\n        this.setState({\r\n            othersedit: false\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenOthrsModal(){\r\n        this.setState({\r\n            othersedit: true\r\n\r\n        })\r\n        \r\n        \r\n    }\r\n    setfigures(){\r\n        if(this.state.CashPay===''){\r\n            this.setState({CashPay:0})\r\n        }\r\n\r\n        if(this.state.POSPay===''){\r\n            this.setState({POSPay:0})\r\n        }\r\n\r\n        if(this.state.TransferPay===''){\r\n            this.setState({TransferPay:0})\r\n        }\r\n\r\n        if(this.state.CompPay===''){\r\n            this.setState({CompPay:0})\r\n        }\r\n        \r\n    }\r\n\r\n    onOpendeptwoutpcModal(){\r\n        if(this.state.otherDepartments===\"Laundry\"){\r\n            \r\n            this.handleLaundry()\r\n        }\r\n\r\n        if(this.state.otherDepartments===\"Gymnasium\"){\r\n            this.handleGymn()\r\n        }\r\n\r\n        if(this.state.otherDepartments===\"Suya\"){\r\n            this.handleSmoothie()\r\n        }\r\n\r\n       if(this.state.otherDepartments===\"MiniMart\"){\r\n            this.handleMiniMart()\r\n        }\r\n\r\n        if(this.state.otherDepartments===\"Barbeque\"){\r\n            this.handleBbq()\r\n        }\r\n\r\n        if(this.state.otherDepartments===\"Games\"){\r\n            this.handleShisha()\r\n        }\r\n\r\n        if(this.state.otherDepartments===\"HallHire\"){\r\n            this.handleHallHires()\r\n        }\r\n\r\n        if(this.state.otherDepartments===\"Swimming\"){\r\n            this.handleSwimming()\r\n        }\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    \r\n\r\n    onCloseFunctnModal(){\r\n        this.setState({\r\n            functionedit: false\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenFunctnModal(){\r\n        this.setState({\r\n            functionedit: true\r\n\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    sendtoprinterDkt(){\r\n        if(this.state.printBTN==='Print'){\r\n            window.print();\r\n            this.setState({printBTN:'Close'})\r\n        }\r\n        else if(this.state.printBTN==='Close'){\r\n            this.setState({Dcktedit: false})      \r\n            this.setState({\r\n                printBTN:'Print',\r\n                receiptnumberz: ''\r\n            })\r\n\r\n            this.handleRoomDockets()\r\n            \r\n        }\r\n        \r\n       \r\n    }\r\n\r\n   \r\n    sendtoprinterDep(){\r\n        if(this.state.printBTN==='Print'){\r\n            window.print();\r\n            this.setState({printBTN:'Close'})\r\n        }\r\n        else if(this.state.printBTN==='Close'){\r\n            this.setState({depositedit: false})      \r\n            this.setState({\r\n                printBTN:'Print',\r\n                receiptnumberz: ''\r\n            })\r\n\r\n            this.handleRoomDeposit()\r\n            \r\n        }\r\n        \r\n       \r\n    }\r\n\r\n    sendtoprinterOthrs(){\r\n        if(this.state.printBTN==='Print'){\r\n            window.print();\r\n            this.setState({printBTN:'Close'})\r\n        }\r\n        else if(this.state.printBTN==='Close'){\r\n            this.setState({othersedit: false})      \r\n            this.setState({\r\n                printBTN:'Print',\r\n                receiptnumberz: ''\r\n            })\r\n\r\n            this.handleSubmit()\r\n            \r\n        }\r\n        \r\n       \r\n    }\r\n\r\n    \r\n    clearReceipt() {\r\n        this.setState({receiptnumberz:''});\r\n    }\r\n\r\n    // sendtoprinterDeptWP(){\r\n    //     if(this.state.printBTN==='Print'){\r\n    //         window.print();\r\n    //         this.setState({printBTN:'Close'})\r\n    //     }\r\n    //     else if(this.state.printBTN==='Close'){\r\n    //         this.setState({deptwdpc: false})      \r\n    //         this.setState({printBTN:'Print'})\r\n            \r\n    //         this.handleLaundry()\r\n    //         // if(this.state.otherDepartments==='Laundry'){\r\n    //         //     this.handleLaundry()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Gymnasium'){\r\n    //         //     this.handleGymn()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Smoothie'){\r\n    //         //     this.handleSmoothie()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='MiniMart'){\r\n    //         //     this.handleMiniMart()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Barbeque'){\r\n    //         //     this.handleBbq()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Shisha'){\r\n    //         //     this.handleShisha()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='HallHire'){\r\n    //         //     this.handleHallHires()\r\n    //         // }\r\n\r\n    //     }\r\n        \r\n    // }\r\n\r\n    // sendtoprinterDeptWP2(){\r\n    //     if(this.state.printBTN==='Print'){\r\n    //         window.print();\r\n    //         this.setState({printBTN:'Close'})\r\n    //     }\r\n    //     else if(this.state.printBTN==='Close'){\r\n    //         this.setState({deptwdpc: false})      \r\n    //         this.setState({printBTN:'Print'})\r\n            \r\n    //         this.handleGymn()\r\n    //         // if(this.state.otherDepartments==='Laundry'){\r\n    //         //     this.handleLaundry()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Gymnasium'){\r\n    //         //     this.handleGymn()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Smoothie'){\r\n    //         //     this.handleSmoothie()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='MiniMart'){\r\n    //         //     this.handleMiniMart()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Barbeque'){\r\n    //         //     this.handleBbq()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Shisha'){\r\n    //         //     this.handleShisha()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='HallHire'){\r\n    //         //     this.handleHallHires()\r\n    //         // }\r\n\r\n    //     }\r\n        \r\n    // }\r\n    // sendtoprinterDeptWP3(){\r\n    //     if(this.state.printBTN==='Print'){\r\n    //         window.print();\r\n    //         this.setState({printBTN:'Close'})\r\n    //     }\r\n    //     else if(this.state.printBTN==='Close'){\r\n    //         this.setState({deptwdpc: false})      \r\n    //         this.setState({printBTN:'Print'})\r\n            \r\n    //         this.handleSmoothie()\r\n    //         // if(this.state.otherDepartments==='Laundry'){\r\n    //         //     this.handleLaundry()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Gymnasium'){\r\n    //         //     this.handleGymn()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Smoothie'){\r\n    //         //     this.handleSmoothie()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='MiniMart'){\r\n    //         //     this.handleMiniMart()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Barbeque'){\r\n    //         //     this.handleBbq()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Shisha'){\r\n    //         //     this.handleShisha()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='HallHire'){\r\n    //         //     this.handleHallHires()\r\n    //         // }\r\n\r\n    //     }\r\n        \r\n    // }\r\n\r\n    // sendtoprinterDeptWP4(){\r\n    //     if(this.state.printBTN==='Print'){\r\n    //         window.print();\r\n    //         this.setState({printBTN:'Close'})\r\n    //     }\r\n    //     else if(this.state.printBTN==='Close'){\r\n    //         this.setState({deptwdpc: false})      \r\n    //         this.setState({printBTN:'Print'})\r\n            \r\n    //         this.handleMiniMart()\r\n    //         // if(this.state.otherDepartments==='Laundry'){\r\n    //         //     this.handleLaundry()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Gymnasium'){\r\n    //         //     this.handleGymn()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Smoothie'){\r\n    //         //     this.handleSmoothie()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='MiniMart'){\r\n    //         //     this.handleMiniMart()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Barbeque'){\r\n    //         //     this.handleBbq()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Shisha'){\r\n    //         //     this.handleShisha()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='HallHire'){\r\n    //         //     this.handleHallHires()\r\n    //         // }\r\n\r\n    //     }\r\n        \r\n    // }\r\n\r\n    // sendtoprinterDeptWP5(){\r\n    //     if(this.state.printBTN==='Print'){\r\n    //         window.print();\r\n    //         this.setState({printBTN:'Close'})\r\n    //     }\r\n    //     else if(this.state.printBTN==='Close'){\r\n    //         this.setState({deptwdpc: false})      \r\n    //         this.setState({printBTN:'Print'})\r\n            \r\n    //         this.handleBbq()\r\n    //         // if(this.state.otherDepartments==='Laundry'){\r\n    //         //     this.handleLaundry()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Gymnasium'){\r\n    //         //     this.handleGymn()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Smoothie'){\r\n    //         //     this.handleSmoothie()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='MiniMart'){\r\n    //         //     this.handleMiniMart()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Barbeque'){\r\n    //         //     this.handleBbq()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Shisha'){\r\n    //         //     this.handleShisha()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='HallHire'){\r\n    //         //     this.handleHallHires()\r\n    //         // }\r\n\r\n    //     }\r\n        \r\n    // }\r\n\r\n    // sendtoprinterDeptWP6(){\r\n    //     if(this.state.printBTN==='Print'){\r\n    //         window.print();\r\n    //         this.setState({printBTN:'Close'})\r\n    //     }\r\n    //     else if(this.state.printBTN==='Close'){\r\n    //         this.setState({deptwdpc: false})      \r\n    //         this.setState({printBTN:'Print'})\r\n            \r\n    //         this.handleShisha()\r\n    //         // if(this.state.otherDepartments==='Laundry'){\r\n    //         //     this.handleLaundry()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Gymnasium'){\r\n    //         //     this.handleGymn()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Smoothie'){\r\n    //         //     this.handleSmoothie()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='MiniMart'){\r\n    //         //     this.handleMiniMart()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Barbeque'){\r\n    //         //     this.handleBbq()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Shisha'){\r\n    //         //     this.handleShisha()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='HallHire'){\r\n    //         //     this.handleHallHires()\r\n    //         // }\r\n\r\n    //     }\r\n        \r\n    // }\r\n\r\n    // sendtoprinterDeptWP7(){\r\n    //     if(this.state.printBTN==='Print'){\r\n    //         window.print();\r\n    //         this.setState({printBTN:'Close'})\r\n    //     }\r\n    //     else if(this.state.printBTN==='Close'){\r\n    //         this.setState({deptwdpc: false})      \r\n    //         this.setState({printBTN:'Print'})\r\n            \r\n    //         this.handleHallHires()\r\n    //         // if(this.state.otherDepartments==='Laundry'){\r\n    //         //     this.handleLaundry()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Gymnasium'){\r\n    //         //     this.handleGymn()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Smoothie'){\r\n    //         //     this.handleSmoothie()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='MiniMart'){\r\n    //         //     this.handleMiniMart()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Barbeque'){\r\n    //         //     this.handleBbq()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='Shisha'){\r\n    //         //     this.handleShisha()\r\n    //         // }\r\n\r\n    //         // else if(this.state.otherDepartments==='HallHire'){\r\n    //         //     this.handleHallHires()\r\n    //         // }\r\n\r\n    //     }\r\n        \r\n    // }\r\n\r\n\r\n    sendtoprinterFunctn(){\r\n        if(this.state.printBTN==='Print'){\r\n            window.print();\r\n            this.setState({printBTN:'Close'})\r\n        }\r\n        else if(this.state.printBTN==='Close'){\r\n            this.setState({functionedit: false})      \r\n            this.setState({printBTN:'Print'})\r\n\r\n            this.handleFunctionDeposit()\r\n            \r\n        }\r\n        \r\n       \r\n    }\r\n\r\n    \r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        localStorage.removeItem('shift')\r\n        \r\n    }\r\n        \r\n    handleroomData=(event)=>{\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n        if(this.state.description2!==null&&this.state.description3!==null){\r\n            fetch(`${getRooms}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayRoomNums:data\r\n                })\r\n            })\r\n\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    handleDepositData=()=>{\r\n        \r\n        fetch(`${depositUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n                this.setState({\r\n                displayDeposits:data\r\n            })\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    handleFunctionData=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n        fetch(`${getOrgUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n                this.setState({\r\n                org:data\r\n            })\r\n        })\r\n        \r\n    }\r\n\r\n\r\n    handleroomData2=(event)=>{\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n        if(this.state.description2!==null){\r\n            fetch(`${RoomUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayAllRoomNums:data\r\n                })\r\n            })\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    handleOrgData2(){\r\n               \r\n        if(this.state.description12!==null){\r\n            fetch(`${depositUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                    this.setState({\r\n                    displayDeposits:data\r\n                })\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    getOrgData(){\r\n\r\n        fetch(`${getDeptsWitOutPC}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                org:data\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    \r\n    handlePayMethData=(event)=>{\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n        if(this.state.description1!==null){\r\n            fetch(`${getPaymentMethods}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayPaymentMethods:data\r\n                })\r\n            })\r\n        }\r\n\r\n       \r\n\r\n    }\r\n   \r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value,\r\n            receiptnumberz: Math.floor(Math.random()*100000)\r\n        })\r\n    \r\n    }\r\n\r\n    handleChange99 = (event) => {\r\n        if(event.target.value===''){\r\n            this.setState({\r\n                [event.target.name]:0\r\n                \r\n            })\r\n        }\r\n\r\n        else{\r\n            this.setState({\r\n                [event.target.name]:event.target.value,\r\n                receiptnumberz: Math.floor(Math.random()*100000)\r\n            })\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    handleChange2 = (event) => {\r\n        console.log('inside handle', this.props)\r\n        this.setState({\r\n           [event.target.name]:event.target.value\r\n        })\r\n\r\n       \r\n        fetch(`${getPaymentMethods}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                displayPaymentMethods:data\r\n            })\r\n        })\r\n        \r\n        fetch(`${getGuestID}${event.target.value}`, {method: 'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item) => {\r\n                this.setState({\r\n                    rate:item.dailyRate,\r\n                    rmType:item.roomtypeName,\r\n                    guestInhouseID:item.refID,\r\n                    phoneCode:item.phone,\r\n                    arrivalDate:item.arrivalDate,\r\n                    departureDate:item.departureDate,\r\n                    guestfname: item.fname,\r\n                    guestlname : item.lname,\r\n                    receiptnumberz: Math.floor(Math.random()*100000)\r\n                   \r\n                })\r\n                fetch(`${getCityLedger}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        cityLedgerData:data\r\n                    })\r\n                    this.myTimer = setTimeout(() => {\r\n\r\n                        var finddeptID = this.state.cityLedgerData;\r\n                        var founddeptID = this.state.phoneCode;\r\n    \r\n                        if(finddeptID.some(item => item.phone===founddeptID)){\r\n                            alert('City Ledger Balance is Available');\r\n                            this.setState({ displayPaymentMethods:''});\r\n                            fetch(`${getCityLedger}${this.state.phoneCode}`, {method:'GET'})\r\n                            .then((res) => res.json())\r\n                            .then((data) => {\r\n                                this.setState({\r\n                                    depositAmount:data.map(item => item.Amount),\r\n                                    paymentMethod2:'Transfer',\r\n                                    description2:'City Ledger Bal.'\r\n                                    \r\n    \r\n                                })\r\n                            })\r\n                            \r\n\r\n                        }\r\n                        else{\r\n                            return 'ok'\r\n                        }\r\n                    },1000)\r\n                })\r\n\r\n               \r\n                return 'ok'\r\n            })\r\n        })\r\n    \r\n    }\r\n\r\n    handleChange12 = (event) => {\r\n        console.log('inside handle', this.props)\r\n        this.setState({\r\n           [event.target.name]:event.target.value\r\n        })\r\n\r\n        fetch(`${getPaymentMethods}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                displayPaymentMethods:data\r\n            })\r\n        })\r\n        this.myTimer = setTimeout(() => {\r\n            if(this.state.orgName!==''){\r\n                fetch(`${getOrgUrl}${this.state.orgName}`, {method: 'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    data.map((item) => {\r\n                        this.setState({\r\n                            group:item.orgName,\r\n                            refID:item.orgID,\r\n                            email:item.orgEmail,\r\n                            phone:item.orgPhone,\r\n                            class:item.class\r\n                        })\r\n                        return 'ok'\r\n                    })\r\n                })\r\n            }\r\n\r\n            else{\r\n                this.setState({\r\n                    group:'',\r\n                    refID:'',\r\n                    email:'',\r\n                    phone:'',\r\n                    class:''\r\n                })\r\n            }\r\n        },2000)\r\n       \r\n    }\r\n\r\n    handleChange14 = (event) => {\r\n        console.log('inside handle', this.props)\r\n        this.setState({\r\n           [event.target.name]:event.target.value\r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n            if(this.state.orgName!==''){\r\n                fetch(`${getOrgUrl}${this.state.orgName}`, {method: 'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    data.map((item) => {\r\n                        this.setState({\r\n                            group:item.orgName,\r\n                            refID:item.orgID,\r\n                            email:item.orgEmail,\r\n                            phone:item.orgPhone,\r\n                            class:item.class\r\n                        })\r\n                        return 'ok'\r\n                    })\r\n                })\r\n            }\r\n           \r\n            else{\r\n                this.setState({\r\n                    group:'',\r\n                    refID:'',\r\n                    email:'',\r\n                    phone:'',\r\n                    class:''\r\n                })\r\n            }\r\n           \r\n        },2000)\r\n    \r\n    }\r\n\r\n    handleChange3 = (event) => {\r\n        console.log('inside handle', this.props)\r\n        this.setState({\r\n           [event.target.name]:event.target.value\r\n        })\r\n        fetch(`${getGuestID}${event.target.value}`, {method: 'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item) => {\r\n                this.setState({\r\n                    \r\n                    guestInhouseID:item.refID,\r\n                    guestfname: item.fname,\r\n                    guestlname : item.lname,\r\n                    receiptnumberz: Math.floor(Math.random()*100000),\r\n                    group:item.group\r\n                })\r\n                return 'ok'\r\n            })\r\n        })\r\n    \r\n    }\r\n\r\n    async handleSubmit() {\r\n          \r\n        try {\r\n            if(this.state.paymentMethod===\"POS\"){\r\n                var billingPOSSales = {\r\n                    docketNum:'BillSales'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    POSAmount:`${this.state.amountPaid}`,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    description:`${this.state.description1}`,\r\n                    group:`${this.state.group}`,\r\n                    groupEmail:`${this.state.email}`,\r\n                    groupPhone:`${this.state.phone}`,\r\n                    refID:`${this.state.orgID}`,\r\n                    department: \"Other Sales\",\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift'),\r\n                    arrivalDate:`${this.state.orgID}`\r\n                   \r\n                }\r\n                let result1 = await fetch(postOtherSalesUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        billingPOSSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result1>  ' + result1)\r\n\r\n                // let result1b = await fetch(postOthersupdater, {\r\n                //     method: 'post',\r\n    \r\n                //     headers: {\r\n                //         'Accept': 'application/json',\r\n                //         'Content-type': 'application/json',\r\n                //     },\r\n    \r\n                //     body: JSON.stringify(\r\n                //         billingPOSSales\r\n                       \r\n                //     )\r\n                    \r\n                // });\r\n                // console.log('result1b>  ' + result1b)\r\n\r\n               \r\n            }\r\n            \r\n            if(this.state.paymentMethod===\"Cash\"){\r\n                var billingCashSales = {\r\n                    docketNum:'BillSales'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    POSAmount:0,\r\n                    CashAmount:`${this.state.amountPaid}`,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    description:`${this.state.description1}`,\r\n                    group:`${this.state.group}`,\r\n                    groupEmail:`${this.state.email}`,\r\n                    groupPhone:`${this.state.phone}`,\r\n                    refID:`${this.state.orgID}`,\r\n                    department: \"Other Sales\",\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                   \r\n                }\r\n                let result2 = await fetch(postOtherSalesUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        billingCashSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2>  ' + result2)\r\n                // let result1b = await fetch(postOthersupdater, {\r\n                //     method: 'post',\r\n    \r\n                //     headers: {\r\n                //         'Accept': 'application/json',\r\n                //         'Content-type': 'application/json',\r\n                //     },\r\n    \r\n                //     body: JSON.stringify(\r\n                //         billingCashSales\r\n                       \r\n                //     )\r\n                    \r\n                // });\r\n                // console.log('result1b>  ' + result1b)\r\n\r\n               \r\n            }\r\n\r\n           \r\n           \r\n\r\n            if(this.state.paymentMethod===\"Transfer\"){\r\n                var billingTransferSales = {\r\n                    docketNum:'BillSales'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:`${this.state.amountPaid}`,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    description:`${this.state.description1}`,\r\n                    group:`${this.state.group}`,\r\n                    groupEmail:`${this.state.email}`,\r\n                    groupPhone:`${this.state.phone}`,\r\n                    refID:`${this.state.orgID}`,\r\n                    department: \"Other Sales\",\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                   \r\n                }\r\n                let result3 = await fetch(postOtherSalesUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        billingTransferSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3>  ' + result3)\r\n\r\n                // let result1b = await fetch(postOthersupdater, {\r\n                //     method: 'post',\r\n    \r\n                //     headers: {\r\n                //         'Accept': 'application/json',\r\n                //         'Content-type': 'application/json',\r\n                //     },\r\n    \r\n                //     body: JSON.stringify(\r\n                //         billingTransferSales\r\n                       \r\n                //     )\r\n                    \r\n                // });\r\n                // console.log('result1b>  ' + result1b)\r\n\r\n               \r\n            }\r\n           \r\n\r\n            if(this.state.paymentMethod===\"Complimentary\"){\r\n                var billingComplSales = {\r\n                    docketNum:'BillSales'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:`${this.state.amountPaid}`,\r\n                    roomDebit:0,\r\n                    description:`${this.state.description1}`,\r\n                    group:`${this.state.group}`,\r\n                    groupEmail:`${this.state.email}`,\r\n                    groupPhone:`${this.state.phone}`,\r\n                    refID:`${this.state.orgID}`,\r\n                    department: \"Other Sales\",\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                   \r\n                }\r\n                let result4 = await fetch(postOtherSalesUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        billingComplSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result4>  ' + result4)\r\n\r\n                // let result1b = await fetch(postOthersupdater, {\r\n                //     method: 'post',\r\n    \r\n                //     headers: {\r\n                //         'Accept': 'application/json',\r\n                //         'Content-type': 'application/json',\r\n                //     },\r\n    \r\n                //     body: JSON.stringify(\r\n                //         billingComplSales\r\n                       \r\n                //     )\r\n                    \r\n                // });\r\n                // console.log('result1b>  ' + result1b)\r\n               \r\n            }\r\n\r\n            alert(\"Sales Posted\")\r\n            this.setState({description1:''})\r\n            this.setState({amountPaid:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({orgName:''})\r\n            this.setState({paymentMethod:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            this.setState({org:''})\r\n            this.setState({refID:''})\r\n            this.setState({email:''})\r\n            this.setState({phone:''})\r\n            this.setState({class:''})\r\n            this.setState({shift:''})\r\n\r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleLaundry() {\r\n          \r\n        try {\r\n                     \r\n            var LaundryNow = {\r\n                docketNum:'LaundrySales'+Math.floor(Math.random()*10000),\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                cost:0,\r\n                POSAmount:`${this.state.POSPay}`,\r\n                CashAmount:`${this.state.CashPay}`,\r\n                TransferAmount:`${this.state.TransferPay}`,\r\n                CompDebit:`${this.state.CompPay}`,\r\n                roomDebit:0,\r\n                description:`${this.state.otherDepartments}`,\r\n                department: \"Laundry Sales\",\r\n                paymentMethod:'NA',\r\n                user: localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift'),\r\n               \r\n                \r\n            }\r\n\r\n            var LDSReport = {\r\n                _id:'DSR'+Math.floor(Math.random()*10000),\r\n                description: \"Laundry Sales\",\r\n                department: \"Laundry Sales\",\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                POS:`${this.state.POSPay}`,\r\n                Cash:`${this.state.CashPay}`,\r\n                Room:0,\r\n                Transfer:`${this.state.TransferPay}`,\r\n                Complimentary:`${this.state.CompPay}`,\r\n                user:localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift')\r\n            }\r\n\r\n            let result1 = await fetch(postLaundrySalesUrl, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    LaundryNow\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result1>  ' + result1)\r\n\r\n            let result5 = await fetch(dailysalesPost, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    LDSReport\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result5>  ' + result5)\r\n\r\n            alert(\"Sales Posted\")\r\n            this.setState({otherDepartments:''})\r\n            this.setState({CashPay:0})\r\n            this.setState({POSPay:0})\r\n            this.setState({TransferPay:0})\r\n            this.setState({CompPay:0})\r\n            \r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleGymn() {\r\n          \r\n        try {\r\n            \r\n            var GymnSales = {\r\n                docketNum:'GymnSales'+Math.floor(Math.random()*10000),\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                cost:0,\r\n                POSAmount:`${this.state.POSPay}`,\r\n                CashAmount:`${this.state.CashPay}`,\r\n                TransferAmount:`${this.state.TransferPay}`,\r\n                CompDebit:`${this.state.CompPay}`,\r\n                roomDebit:0,\r\n                description:`${this.state.otherDepartments}`,\r\n                department: \"Gymnasium Sales\",\r\n                paymentMethod:'NA',\r\n                user: localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift'),\r\n               \r\n                \r\n            }\r\n\r\n            var GymnReport = {\r\n                _id:'DSR'+Math.floor(Math.random()*10000),\r\n                description: \"Gymnasium Sales\",\r\n                department: \"Gymnasium Sales\",\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                POS:`${this.state.POSPay}`,\r\n                Cash:`${this.state.CashPay}`,\r\n                Room:0,\r\n                Transfer:`${this.state.TransferPay}`,\r\n                Complimentary:`${this.state.CompPay}`,\r\n                user:localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift')\r\n            }\r\n\r\n            let result1 = await fetch(postGymSalesUrl, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    GymnSales\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result1>  ' + result1)\r\n\r\n            let result5 = await fetch(dailysalesPost, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    GymnReport\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result5>  ' + result5)\r\n\r\n            alert(\"Sales Posted\")\r\n            this.setState({otherDepartments:''})\r\n            this.setState({CashPay:0})\r\n            this.setState({POSPay:0})\r\n            this.setState({TransferPay:0})\r\n            this.setState({CompPay:0})\r\n            \r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleSmoothie() {\r\n          \r\n        try {\r\n            \r\n            var SmoothieSales = {\r\n                docketNum:'SuyaSales'+Math.floor(Math.random()*10000),\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                cost:0,\r\n                POSAmount:`${this.state.POSPay}`,\r\n                CashAmount:`${this.state.CashPay}`,\r\n                TransferAmount:`${this.state.TransferPay}`,\r\n                CompDebit:`${this.state.CompPay}`,\r\n                roomDebit:0,\r\n                description:`${this.state.otherDepartments}`,\r\n                department: \"Suya Sales\",\r\n                paymentMethod:'NA',\r\n                user: localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift'),\r\n               \r\n                \r\n            }\r\n\r\n            var PizzaReport = {\r\n                _id:'DSR'+Math.floor(Math.random()*10000),\r\n                description: \"Suya Sales\",\r\n                department: \"Suya Sales\",\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                POS:`${this.state.POSPay}`,\r\n                Cash:`${this.state.CashPay}`,\r\n                Room:0,\r\n                Transfer:`${this.state.TransferPay}`,\r\n                Complimentary:`${this.state.CompPay}`,\r\n                user:localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift')\r\n            }\r\n\r\n            let result1 = await fetch(postSmoothiesSalesUrl, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    SmoothieSales\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result1>  ' + result1)\r\n\r\n            let postSalesSS = await fetch(dailysalesPost, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    PizzaReport\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('postSalesSS>  ' + postSalesSS)\r\n\r\n\r\n            alert(\"Sales Posted\")\r\n            this.setState({otherDepartments:''})\r\n            this.setState({CashPay:0})\r\n            this.setState({POSPay:0})\r\n            this.setState({TransferPay:0})\r\n            this.setState({CompPay:0})\r\n            \r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleSwimming() {\r\n          \r\n        try {\r\n            \r\n            var SwimmingSales = {\r\n                docketNum:'SwimmingSales'+Math.floor(Math.random()*10000),\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                cost:0,\r\n                POSAmount:`${this.state.POSPay}`,\r\n                CashAmount:`${this.state.CashPay}`,\r\n                TransferAmount:`${this.state.TransferPay}`,\r\n                CompDebit:`${this.state.CompPay}`,\r\n                roomDebit:0,\r\n                description:`${this.state.otherDepartments}`,\r\n                department: \"Swimming Sales\",\r\n                paymentMethod:'NA',\r\n                user: localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift'),\r\n               \r\n                \r\n            }\r\n\r\n            var SwimmingReport = {\r\n                _id:'DSR'+Math.floor(Math.random()*10000),\r\n                description: \"Swimming Sales\",\r\n                department: \"Swimming Sales\",\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                POS:`${this.state.POSPay}`,\r\n                Cash:`${this.state.CashPay}`,\r\n                Room:0,\r\n                Transfer:`${this.state.TransferPay}`,\r\n                Complimentary:`${this.state.CompPay}`,\r\n                user:localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift')\r\n            }\r\n\r\n            let result1 = await fetch(postSwimmingSalesUrl, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    SwimmingSales\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result1>  ' + result1)\r\n\r\n            let result5 = await fetch(dailysalesPost, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    SwimmingReport\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result5>  ' + result5)\r\n\r\n\r\n            alert(\"Sales Posted\")\r\n            this.setState({otherDepartments:''})\r\n            this.setState({CashPay:0})\r\n            this.setState({POSPay:0})\r\n            this.setState({TransferPay:0})\r\n            this.setState({CompPay:0})\r\n            \r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleHallHires() {\r\n          \r\n        try {\r\n            \r\n            var HallMatters = {\r\n                docketNum:'HallHire'+Math.floor(Math.random()*10000),\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                cost:0,\r\n                POSAmount:`${this.state.POSPay}`,\r\n                CashAmount:`${this.state.CashPay}`,\r\n                TransferAmount:`${this.state.TransferPay}`,\r\n                CompDebit:`${this.state.CompPay}`,\r\n                roomDebit:0,\r\n                description:`${this.state.otherDepartments}`,\r\n                department: \"Hall Hire\",\r\n                paymentMethod:'NA',\r\n                user: localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift'),\r\n               \r\n                \r\n            }\r\n\r\n            var HallReport = {\r\n                _id:'DSR'+Math.floor(Math.random()*10000),\r\n                description: \"Hall Hire\",\r\n                department: \"Hall Hire\",\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                POS:`${this.state.POSPay}`,\r\n                Cash:`${this.state.CashPay}`,\r\n                Room:0,\r\n                Transfer:`${this.state.TransferPay}`,\r\n                Complimentary:`${this.state.CompPay}`,\r\n                user:localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift')\r\n            }\r\n\r\n            let result1 = await fetch(postHallHireSalesUrl, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    HallMatters\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result1>  ' + result1)\r\n\r\n            let result5 = await fetch(dailysalesPost, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    HallReport\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result5>  ' + result5)\r\n\r\n            alert(\"Sales Posted\")\r\n            this.setState({otherDepartments:''})\r\n            this.setState({CashPay:0})\r\n            this.setState({POSPay:0})\r\n            this.setState({TransferPay:0})\r\n            this.setState({CompPay:0})\r\n            \r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleShisha() {\r\n          \r\n        try {\r\n            \r\n            var shisha = {\r\n                docketNum:'Games'+Math.floor(Math.random()*10000),\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                cost:0,\r\n                POSAmount:`${this.state.POSPay}`,\r\n                CashAmount:`${this.state.CashPay}`,\r\n                TransferAmount:`${this.state.TransferPay}`,\r\n                CompDebit:`${this.state.CompPay}`,\r\n                roomDebit:0,\r\n                description:`${this.state.otherDepartments}`,\r\n                department: \"Games Sales\",\r\n                paymentMethod:'NA',\r\n                user: localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift'),\r\n               \r\n                \r\n            }\r\n\r\n            var ShishaReport = {\r\n                _id:'DSR'+Math.floor(Math.random()*10000),\r\n                description: \"Games Sales\",\r\n                department: \"Games Sales\",\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                POS:`${this.state.POSPay}`,\r\n                Cash:`${this.state.CashPay}`,\r\n                Room:0,\r\n                Transfer:`${this.state.TransferPay}`,\r\n                Complimentary:`${this.state.CompPay}`,\r\n                user:localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift')\r\n            }\r\n\r\n            let result1 = await fetch(postShishaSalesUrl, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    shisha\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result1>  ' + result1)\r\n\r\n            let result5 = await fetch(dailysalesPost, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    ShishaReport\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result5>  ' + result5)\r\n\r\n            alert(\"Sales Posted\")\r\n            this.setState({otherDepartments:''})\r\n            this.setState({CashPay:0})\r\n            this.setState({POSPay:0})\r\n            this.setState({TransferPay:0})\r\n            this.setState({CompPay:0})\r\n            \r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleBbq() {\r\n          \r\n        try {\r\n            \r\n            var Bbq = {\r\n                docketNum:'Bbq'+Math.floor(Math.random()*10000),\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                cost:0,\r\n                POSAmount:`${this.state.POSPay}`,\r\n                CashAmount:`${this.state.CashPay}`,\r\n                TransferAmount:`${this.state.TransferPay}`,\r\n                CompDebit:`${this.state.CompPay}`,\r\n                roomDebit:0,\r\n                description:`${this.state.otherDepartments}`,\r\n                department: \"Barbeque Sales\",\r\n                paymentMethod:'NA',\r\n                user: localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift'),\r\n               \r\n                \r\n            }\r\n\r\n            var BbqReport = {\r\n                _id:'DSR'+Math.floor(Math.random()*10000),\r\n                description: \"Barbeque Sales\",\r\n                department: \"Barbeque Sales\",\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                POS:`${this.state.POSPay}`,\r\n                Cash:`${this.state.CashPay}`,\r\n                Room:0,\r\n                Transfer:`${this.state.TransferPay}`,\r\n                Complimentary:`${this.state.CompPay}`,\r\n                user:localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift')\r\n            }\r\n\r\n            let result1 = await fetch(postBbqSalesUrl, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    Bbq\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result1>  ' + result1)\r\n\r\n            let result5 = await fetch(dailysalesPost, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    BbqReport\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result5>  ' + result5)\r\n\r\n            alert(\"Sales Posted\")\r\n            this.setState({otherDepartments:''})\r\n            this.setState({CashPay:0})\r\n            this.setState({POSPay:0})\r\n            this.setState({TransferPay:0})\r\n            this.setState({CompPay:0})\r\n            \r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleMiniMart() {\r\n          \r\n        try {\r\n            \r\n            var MiniMartSales = {\r\n                docketNum:'MartSales'+Math.floor(Math.random()*10000),\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                cost:0,\r\n                POSAmount:`${this.state.POSPay}`,\r\n                CashAmount:`${this.state.CashPay}`,\r\n                TransferAmount:`${this.state.TransferPay}`,\r\n                CompDebit:`${this.state.CompPay}`,\r\n                roomDebit:0,\r\n                description:`${this.state.otherDepartments}`,\r\n                department: \"Mart Sales\",\r\n                paymentMethod:'NA',\r\n                user: localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift'),\r\n               \r\n                \r\n            }\r\n\r\n            var MartReport = {\r\n                _id:'DSR'+Math.floor(Math.random()*10000),\r\n                description: \"Mart Sales\",\r\n                department: \"Mart Sales\",\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                POS:`${this.state.POSPay}`,\r\n                Cash:`${this.state.CashPay}`,\r\n                Room:0,\r\n                Transfer:`${this.state.TransferPay}`,\r\n                Complimentary:`${this.state.CompPay}`,\r\n                user:localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift')\r\n            }\r\n\r\n            let result1 = await fetch(postMiniMartSalesUrl, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    MiniMartSales\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result1>  ' + result1)\r\n\r\n            let result5 = await fetch(dailysalesPost, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    MartReport\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result5>  ' + result5)\r\n\r\n            alert(\"Sales Posted\")\r\n            this.setState({otherDepartments:''})\r\n            this.setState({CashPay:0})\r\n            this.setState({POSPay:0})\r\n            this.setState({TransferPay:0})\r\n            this.setState({CompPay:0})\r\n            \r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleRoomDockets() {\r\n          \r\n        try {\r\n\r\n            var billingDockets = {\r\n                _id:Math.floor(Math.random()*10000),\r\n                docketNum:'BillDockt'+Math.floor(Math.random()*10000),\r\n                refID:`${this.state.guestInhouseID}`,\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                amountPaid:`${this.state.amountPaid3}`,\r\n                POSAmount:0,\r\n                CashAmount:0,\r\n                TransferAmount:0,\r\n                CompDebit:0,\r\n                roomDebit:`${this.state.cost3}`,\r\n                cost:`${this.state.cost3}`,\r\n                paymentMethod:`${this.state.paymentMethod}`,\r\n                roomNumbers:`${this.state.roomNumbers3}`,\r\n                description:`${this.state.description3}`,\r\n                group:`${this.state.group}`,\r\n                department: \"Room Sales\",\r\n                user: localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift')\r\n                \r\n            }\r\n            let result = await fetch(postGuestDocket, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    billingDockets\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result>  ' + result)\r\n            \r\n           \r\n            alert(\"Docket Posted to Room \" +this.state.roomNumbers3)\r\n            this.setState({description3:''})\r\n            this.setState({amountPaid3:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({roomNumbers3:''})\r\n            this.setState({paymentMethod3:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            this.setState({guestInhouseID:''})\r\n            this.setState({group:''})\r\n            this.setState({cost3:''})\r\n            this.setState({shift:''})\r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleRoomDeposit() {\r\n        \r\n        try {\r\n            if(this.state.paymentMethod2===\"POS\"){\r\n                var POSroomDeposit = {\r\n                    receiptNum:'BillRec'+Math.floor(Math.random()*1000),\r\n                    _id:Math.floor(Math.random()*1000000),\r\n                    refID:`${this.state.guestInhouseID}`,\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    POSAmount:parseInt(`${this.state.depositAmount}`),\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod2}`,\r\n                    roomNumbers:`${this.state.roomNumbers}`,\r\n                    description:`${this.state.description2}`,\r\n                    department: \"Room Deposit\",\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift'),\r\n                    \r\n                   \r\n                }\r\n                let result1 = await fetch(postGuestDeposit, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        POSroomDeposit\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result1>  ' + result1)\r\n                let result1b = await fetch(TempRoomDepositUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        POSroomDeposit\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result1b>  ' + result1b)\r\n                \r\n\r\n            }\r\n\r\n            if(this.state.paymentMethod2===\"Cash\"){\r\n                var CashroomDeposit = {\r\n                    receiptNum:'BillRec'+Math.floor(Math.random()*1000),\r\n                    _id:Math.floor(Math.random()*1000000),\r\n                    refID:`${this.state.guestInhouseID}`,\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    POSAmount:0,\r\n                    CashAmount:parseInt(`${this.state.depositAmount}`),\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod2}`,\r\n                    roomNumbers:`${this.state.roomNumbers}`,\r\n                    description:`${this.state.description2}`,\r\n                    department: \"Room Deposit\",\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result2 = await fetch(postGuestDeposit, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CashroomDeposit\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2>  ' + result2)\r\n\r\n                let result2b = await fetch(TempRoomDepositUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CashroomDeposit\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2b>  ' + result2b)\r\n                \r\n            }\r\n            \r\n            if(this.state.paymentMethod2===\"Transfer\"){\r\n                var TransferroomDeposit = {\r\n                    receiptNum:'BillRec'+Math.floor(Math.random()*1000),\r\n                    _id:Math.floor(Math.random()*1000000),\r\n                    refID:`${this.state.guestInhouseID}`,\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:parseInt(`${this.state.depositAmount}`),\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod2}`,\r\n                    roomNumbers:`${this.state.roomNumbers}`,\r\n                    description:`${this.state.description2}`,\r\n                    department: \"Room Deposit\",\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result3 = await fetch(postGuestDeposit, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        TransferroomDeposit\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3>  ' + result3)\r\n\r\n                let result3b = await fetch(TempRoomDepositUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        TransferroomDeposit\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3b>  ' + result3b)\r\n                \r\n                \r\n            }\r\n\r\n            if(this.state.paymentMethod2===\"Complimentary\"){\r\n                var ComplroomDeposit = {\r\n                    receiptNum:'BillRec'+Math.floor(Math.random()*1000),\r\n                    _id:Math.floor(Math.random()*1000000),\r\n                    refID:`${this.state.guestInhouseID}`,\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:parseInt(`${this.state.depositAmount}`),\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod2}`,\r\n                    roomNumbers:`${this.state.roomNumbers}`,\r\n                    description:`${this.state.description2}`,\r\n                    department: \"Room Deposit\",\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result3 = await fetch(postGuestDeposit, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        ComplroomDeposit\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3>  ' + result3)\r\n\r\n                let result3b = await fetch(TempRoomDepositUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        ComplroomDeposit\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3b>  ' + result3b)\r\n\r\n                \r\n            }\r\n            fetch(`${delCityLedger}/${this.state.phoneCode}`, {method:'delete'})\r\n            alert(\"Deposit Posted for Room \" +this.state.roomNumbers)\r\n            this.setState({depositAmount:''})\r\n            this.setState({description2:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({roomNumbers:''})\r\n            this.setState({paymentMethod2:''})\r\n            this.setState({guestInhouseID:''})\r\n            this.setState({rate:''})\r\n            this.setState({rmType:''})\r\n            this.setState({displayAllRoomNums:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({displayDeposits:''})\r\n            this.setState({shift:''})\r\n           \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleFunctionDeposit() {\r\n        \r\n        try {\r\n            if(this.state.paymentMethod4===\"POS\"){\r\n                var POSroomDeposit = {\r\n                    receiptNum:'BillRec'+Math.floor(Math.random()*1000),\r\n                    _id:Math.floor(Math.random()*1000000),\r\n                    refID:`${this.state.refID}`,\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    POSAmount:`${this.state.functionDeposit}`,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod2}`,\r\n                    group:`${this.state.group}`,\r\n                    description:`${this.state.description12}`,\r\n                    department: \"Function Deposit\",\r\n                    user: localStorage.getItem('userInfo'),\r\n                    groupEmail:`${this.state.email}`,\r\n                    groupPhone:`${this.state.phone}`,\r\n                    shift:localStorage.getItem('shift')\r\n                    \r\n                   \r\n                }\r\n                let result1 = await fetch(postFunctionBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        POSroomDeposit\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result1>  ' + result1)\r\n                let result1b = await fetch(postTempFunctionBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        POSroomDeposit\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result1b>  ' + result1b)\r\n                // let resulto = await fetch(postOthersupdater, {\r\n                //     method: 'post',\r\n    \r\n                //     headers: {\r\n                //         'Accept': 'application/json',\r\n                //         'Content-type': 'application/json',\r\n                //     },\r\n    \r\n                //     body: JSON.stringify(\r\n                //         POSroomDeposit\r\n                       \r\n                //     )\r\n                    \r\n                // });\r\n                // console.log('resulto>  ' + resulto)\r\n            }\r\n\r\n            if(this.state.paymentMethod4===\"Cash\"){\r\n                var CashroomDeposit = {\r\n                    receiptNum:'BillRec'+Math.floor(Math.random()*10000),\r\n                    _id:Math.floor(Math.random()*10000),\r\n                    refID:`${this.state.refID}`,\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    POSAmount:0,\r\n                    CashAmount:`${this.state.functionDeposit}`,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod2}`,\r\n                    group:`${this.state.group}`,\r\n                    description:`${this.state.description12}`,\r\n                    department: \"Function Deposit\",\r\n                    user: localStorage.getItem('userInfo'),\r\n                    groupEmail:`${this.state.email}`,\r\n                    groupPhone:`${this.state.phone}`,\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result2 = await fetch(postFunctionBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CashroomDeposit\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2>  ' + result2)\r\n\r\n                let result2b = await fetch(postTempFunctionBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CashroomDeposit\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2b>  ' + result2b)\r\n                // let resulto = await fetch(postOthersupdater, {\r\n                //     method: 'post',\r\n    \r\n                //     headers: {\r\n                //         'Accept': 'application/json',\r\n                //         'Content-type': 'application/json',\r\n                //     },\r\n    \r\n                //     body: JSON.stringify(\r\n                //         CashroomDeposit\r\n                       \r\n                //     )\r\n                    \r\n                // });\r\n                // console.log('resulto>  ' + resulto)\r\n            }\r\n            \r\n            if(this.state.paymentMethod4===\"Transfer\"){\r\n                var TransferroomDeposit = {\r\n                    receiptNum:'BillRec'+Math.floor(Math.random()*10000),\r\n                    _id:Math.floor(Math.random()*10000),\r\n                    refID:`${this.state.refID}`,\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:`${this.state.functionDeposit}`,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod2}`,\r\n                    group:`${this.state.group}`,\r\n                    description:`${this.state.description12}`,\r\n                    department: \"Function Deposit\",\r\n                    user: localStorage.getItem('userInfo'),\r\n                    groupEmail:`${this.state.email}`,\r\n                    groupPhone:`${this.state.phone}`,\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result3 = await fetch(postFunctionBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        TransferroomDeposit\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3>  ' + result3)\r\n\r\n                let result3b = await fetch(postTempFunctionBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        TransferroomDeposit\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3b>  ' + result3b)\r\n                // let resulto = await fetch(postOthersupdater, {\r\n                //     method: 'post',\r\n    \r\n                //     headers: {\r\n                //         'Accept': 'application/json',\r\n                //         'Content-type': 'application/json',\r\n                //     },\r\n    \r\n                //     body: JSON.stringify(\r\n                //         TransferroomDeposit\r\n                       \r\n                //     )\r\n                    \r\n                // });\r\n                // console.log('resulto>  ' + resulto)\r\n                \r\n            }\r\n\r\n            if(this.state.paymentMethod4===\"Complimentary\"){\r\n                var ComplroomDeposit = {\r\n                    receiptNum:'BillRec'+Math.floor(Math.random()*10000),\r\n                    _id:Math.floor(Math.random()*10000),\r\n                    refID:`${this.state.refID}`,\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:`${this.state.functionDeposit}`,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod2}`,\r\n                    group:`${this.state.group}`,\r\n                    description:`${this.state.description12}`,\r\n                    department: \"Function Deposit\",\r\n                    user: localStorage.getItem('userInfo'),\r\n                    groupEmail:`${this.state.email}`,\r\n                    groupPhone:`${this.state.phone}`,\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result3 = await fetch(postFunctionBill,{\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        ComplroomDeposit\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3>  ' + result3)\r\n\r\n                let result3b = await fetch(postTempFunctionBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        ComplroomDeposit\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3b>  ' + result3b)\r\n                // let resulto = await fetch(postOthersupdater, {\r\n                //     method: 'post',\r\n    \r\n                //     headers: {\r\n                //         'Accept': 'application/json',\r\n                //         'Content-type': 'application/json',\r\n                //     },\r\n    \r\n                //     body: JSON.stringify(\r\n                //         ComplroomDeposit\r\n                       \r\n                //     )\r\n                    \r\n                // });\r\n                // console.log('resulto>  ' + resulto)\r\n            }\r\n\r\n            alert(this.state.group +\" Function Deposit Posted\")\r\n            this.setState({functionDeposit:''})\r\n            this.setState({description12:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({group:''})\r\n            this.setState({paymentMethod4:''})\r\n            this.setState({refID:''})\r\n            this.setState({email:''})\r\n            this.setState({phone:''})\r\n            this.setState({displayAllRoomNums:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            this.setState({org:''})\r\n            this.setState({displayDeposits:''})\r\n            this.setState({class:''})\r\n            this.setState({shift:''})\r\n           \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    renderPayMeth(data){\r\n        if(data) {\r\n            return data.map((item) => {\r\n                return(\r\n                    <>\r\n                        <option key={item.method} value={item.method}>\r\n                            {item.method}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderDepositTypes(data){\r\n        if(data) {\r\n            return data.map((item) => {\r\n                return(\r\n                    <>\r\n                        <option key={item.id} value={item.method}>\r\n                            {item.method}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n    renderRooms(data){\r\n        if(data) {\r\n           data.sort((a, b) => a.roomNumbers - b.roomNumbers);\r\n            return data.map((item) => {\r\n                return(\r\n                    <>\r\n                        <option key={item.roomNumbers} value={item.roomNumbers}>\r\n                            {item.roomNumbers} - {item.fname} {item.lname} - {item.roomtypeName}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderAllRooms(data){\r\n        if(data) {\r\n           data.sort((a, b) => a.roomNumbers - b.roomNumbers);\r\n            return data.map((item, index) => {\r\n                if(item.roomStatus===\"green\"||item.roomStatus==='black'){\r\n                    return(\r\n                        <>\r\n                            \r\n                        </>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <>\r\n                            <option key={index} value={item.roomNumbers}>\r\n                                {item.roomNumbers} - {item.fname} {item.lname} - {item.roomtypeName}\r\n                            </option>\r\n                        </>\r\n                    )\r\n                }\r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n    renderAllDeptWPC(data){\r\n        if(data) {\r\n           data.sort((a, b) => a.DeptName - b.DeptName);\r\n            return data.map((item) => {\r\n                return(\r\n                    <>\r\n                        <option key={item._id} value={item.DeptName}>\r\n                            {item.DeptName}\r\n                        </option>\r\n                    </>\r\n                )\r\n                \r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n    renderHalls(data){\r\n        if(data) {\r\n           data.sort((a, b) => a.price - b.price);\r\n            return data.map((item) => {\r\n                \r\n                return(\r\n                    <>\r\n                        <option key={item._id} value={item.hallName}>\r\n                            {item.hallName}\r\n                        </option>\r\n                    </>\r\n                )\r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n\r\n        \r\n    render() {\r\n        console.log(\">>> Inside RESrender\", this.state)\r\n        var receptDate = moment(`${this.state.transactionDate}`).format('MMM DD YYYY')\r\n\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Billinglogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return(\r\n            <>  \r\n            \r\n                <div className=\"background1505nw\">\r\n                    \r\n                    <center>\r\n                        <br/>\r\n                        <center><h6 style = {{color:'yellow'}}>Active Shift: {localStorage.getItem('shift')} </h6></center>\r\n                        \r\n                        <div className=\"formdesign15 \">\r\n                            <h4 className=\"mb-3 mt-3\">Room Deposits</h4>\r\n                            <div className=\"row\">\r\n                                <select type =\"button\" className=\"form-select mb-2 btn btn-primary mt-3 col-2 aligntext1\" name=\"description2\" onMouseOver={()=> this.handleDepositData()} onChange={this.handleroomData2}>\r\n                                    <option selected value=''>Deposit Types</option>\r\n                                    {this.renderDepositTypes(this.state.displayDeposits)}\r\n\r\n                                </select>\r\n                                <select type =\"button\" className=\"form-select mb-2 btn btn-primary mt-3 col-2 aligntext\" name=\"roomNumbers\" onChange={this.handleChange2}>\r\n                                    <option selected value=''>Select Room</option>\r\n                                    {this.renderAllRooms(this.state.displayAllRoomNums)}\r\n                                </select>\r\n                                <div className=\"col-2 mb-3\">\r\n                                    <input className=\"form-control mb-3 formsize3 mt-3 aligntext2\" name=\"dailyRate\" value={this.state.rate} require placeholder=\"Daily Rate\" readOnly/>\r\n                                </div>\r\n                                <select type =\"button\" className=\"form-select formsize3 mb-2 btn btn-primary mt-3 aligntext5\" name=\"paymentMethod2\" onChange={this.handleChange}>\r\n                                    <option selected value=''>Payment Method</option>\r\n                                    {this.renderPayMeth(this.state.displayPaymentMethods)}\r\n                                </select>\r\n                                \r\n                                <div className=\"col-2 mb-3\">\r\n                                    <input type=\"number\" className=\"form-control mb-3 formsize3 mt-3 aligntext6\" name=\"depositAmount\" require placeholder=\"Deposit Amount\" value={this.state.depositAmount} onChange={this.handleChange}/>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div>\r\n                            <center>\r\n                                <button disabled={this.state.description2===''||this.state.roomNumbers===''||this.state.paymentMethod2===''||this.state.depositAmount===''} className=\"btn btn-warning mt-3\" onClick={ () => this.onOpenDepModal()}>Post Deposit</button>\r\n                                <button className=\"btn btn-danger flipright mt-3\" onClick={()=> {this.clearReceipt(); this.props.history.push('./BillingMenu');}}>Close</button>\r\n                            </center>\r\n                            \r\n                            <hr style={{color:'silver'}}/>\r\n                        </div>\r\n                        \r\n                        <br/>\r\n\r\n                        <div className=\"formdesign15\">\r\n                            <h4 className=\"mb-3 mt-3\">Other Sales</h4>\r\n                            \r\n                            <div className=\"row\">\r\n                                \r\n                                <select type =\"button\" className=\"form-select mb-2 btn btn-primary mt-3 col-2 aligntext spaceright\" name=\"otherDepartments\" onChange={this.handleChange}>\r\n                                    <option selected value=''>Select Dept</option>\r\n                                    {this.renderAllDeptWPC(this.state.DeptsWdPC)}\r\n                                </select>\r\n\r\n                                <div className=\"col-2 mb-3\">\r\n                                    <label>Cash</label>\r\n                                    <input type=\"number\" className=\"form-control mb-3 formsize4 mt-3\" name=\"CashPay\" value={this.state.CashPay} onChange={this.handleChange99}/>\r\n                                </div>\r\n\r\n                                <div className=\"col-2 mb-3\">\r\n                                    <label>POS</label>\r\n                                    <input type=\"number\" className=\"form-control mb-3 formsize4 mt-3\" name=\"POSPay\" value={this.state.POSPay} onChange={this.handleChange99}/>\r\n                                </div>\r\n\r\n                                <div className=\"col-2 mb-3\">\r\n                                    <label>Transfer</label>\r\n                                    <input type=\"number\" className=\"form-control mb-3 formsize4 mt-3\" name=\"TransferPay\" value={this.state.TransferPay} onChange={this.handleChange99}/>\r\n                                </div>\r\n\r\n                                <div className=\"col-2 mb-3\">\r\n                                    <label>Complimentary</label>\r\n                                    <input type=\"number\" className=\"form-control mb-3 formsize4 mt-3\" name=\"CompPay\" value={this.state.CompPay} onChange={this.handleChange99}/>\r\n                                </div>\r\n                                                                                               \r\n                                \r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div>\r\n                            <center>\r\n                                <button disabled={this.state.otherDepartments===''}className=\"btn btn-warning mt-3\" onClick={ () => this.onOpendeptwoutpcModal()}>Post Payment</button>\r\n                                <button className=\"btn btn-danger flipright mt-3\" onClick={()=> {this.clearReceipt(); this.props.history.push('./BillingMenu');}}>Close</button>\r\n                                \r\n                            </center>\r\n                           \r\n                            \r\n                            \r\n                        </div>\r\n                        <hr style={{color:'silver'}}/>\r\n                        <br/>\r\n\r\n                        <div className=\"formdesign15\">\r\n                            <h4 className=\"mb-3 mt-3\">Miscellaneous Sales</h4>\r\n                            \r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col-3 mb-3\">\r\n                                    <input type=\"text\" className=\"form-control formsize2 mt-3\" name=\"description1\" require placeholder=\"Description\" value={this.state.description1} list=\"halls\" onChange={this.handlePayMethData}/>\r\n                                    \r\n                                </div>\r\n                                \r\n                                <select type =\"button\" className=\"form-select formsize3 mb-2 btn btn-primary mt-3 spaceleft\" name=\"paymentMethod\" onChange={this.handleChange}>\r\n                                    <option selected value=''>Payment Method</option>\r\n                                    {this.renderPayMeth(this.state.displayPaymentMethods)}\r\n                                </select>\r\n\r\n                                <div className=\"col-3 mb-3\">\r\n                                    <input type=\"number\" className=\"form-control mb-3 formsize4 mt-3\" name=\"amountPaid\" require placeholder=\"Amount Paid\" value={this.state.amountPaid} onChange={this.handleChange}/>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div>\r\n                            <center>\r\n                                <button disabled={this.state.description1===''||this.state.amountPaid===''||this.state.paymentMethod===''}className=\"btn btn-warning mt-3\" onClick={ () => this.onOpenOthrsModal()}>Post Payment</button>\r\n                                <button className=\"btn btn-danger flipright mt-3\" onClick={()=> {this.clearReceipt(); this.props.history.push('./BillingMenu');}}>Close</button>\r\n                            </center>\r\n                           \r\n                            \r\n                            \r\n                        </div>\r\n\r\n                        <hr style={{color:'silver'}}/>\r\n                        <br/>\r\n                        \r\n                        <div className=\"formdesign15\">\r\n                            <h4 className=\"mb-3 mt-3\">Room Dockets</h4>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3 mb-3\">\r\n                                    <input type=\"text\" className=\"form-control formsize2 mt-3\" name=\"description3\" require placeholder=\"Description\" value={this.state.description3} onChange={this.handleroomData}/>\r\n                                </div>\r\n                                <select type =\"button\" className=\"form-select mb-2 btn btn-primary mt-3 col-2 aligntext\" name=\"roomNumbers3\" onChange={this.handleChange3}>\r\n                                    <option selected value=''>Select Room</option>\r\n                                    {this.renderRooms(this.state.displayRoomNums)}\r\n                                </select>\r\n                                <div className=\"col-2 mb-3\">\r\n                                    <input className=\"form-control mb-3 formsize3 mt-3 aligntext2\" type=\"number\" name=\"cost3\" value={this.state.cost3} require placeholder=\"Cost\" onChange={this.handleChange}/>\r\n                                </div>\r\n                                <div className=\"col-2 mb-3\">\r\n                                    <input className=\"form-control mb-3 formsize3 mt-3 aligntext3\" type=\"number\" name=\"amountPaid3\" value={this.state.amountPaid3} require placeholder=\"Amount Paid\" readOnly/>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div>\r\n                            <center>\r\n                                <button disabled={this.state.description3===''||this.state.roomNumbers3===''||this.state.cost3===''} className=\"btn btn-warning mt-3\" onClick={ () => this.onOpenDktModal()}>Post Room Dockets</button>\r\n                                <button className=\"btn btn-danger flipright mt-3\" onClick={()=> {this.clearReceipt(); this.props.history.push('./BillingMenu');}}>Close</button>\r\n                            </center>\r\n                            \r\n                        </div>\r\n                        <hr style={{color:'silver'}}/>\r\n                        \r\n                    </center>\r\n                    \r\n                </div>\r\n                \r\n                \r\n                <div className=\"pagebody2\">\r\n                    <input type=\"number\" className=\"form-control mb-3 formsize3 mt-3 aligntext4\" name=\"depositAmount9\" value={this.state.depositAmount9} hidden/>\r\n                </div>\r\n\r\n\r\n                <Modal open={this.state.Dcktedit}>\r\n                    <div className='backgroundRetRep'>\r\n                        <center>\r\n                            <h6>{this.state.Hotelname}</h6>\r\n                            <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                            <h5>Room Docket - {this.state.roomNumbers}</h5>\r\n                            <p className=\"textSize\">Date: {receptDate}</p>\r\n\r\n                        </center>\r\n                        <p className=\"textSize\">Guest Names: {this.state.guestfname} {this.state.guestlname}</p>\r\n                        <p className=\"textSize\">Docket Num: {this.state.receiptnumberz}</p>\r\n\r\n                    </div>\r\n                    <table className=\"table table-hover\">\r\n                        \r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust50\">Description</th>\r\n                                <th className=\"adjust50\">Room Num</th>\r\n                                <th className=\"adjust50\">Cost(NGN)</th>\r\n                                        \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover\">\r\n                            <tr>\r\n                                <td className=\"table-light table-striped adjust2 alignTet\"><b>{this.state.description3}</b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet\"><b>{this.state.roomNumbers3}</b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.cost3)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                \r\n                            </tr>\r\n                            \r\n                        </tbody>\r\n                        \r\n                        \r\n                    </table><br/>\r\n                    <p className=\"textSize\">Posted By: {this.state.name}</p>\r\n                    <div className=\"printing\">\r\n                        <center>\r\n                            <button className=\"btn btn-primary\" style={{height:'40px'}}onClick={()=>{this.sendtoprinterDkt()}}>\r\n                                <p>{this.state.printBTN}</p>\r\n                            </button>\r\n                        </center>\r\n                        \r\n                    </div>\r\n                    \r\n                </Modal>\r\n\r\n                \r\n                \r\n                <Modal open={this.state.depositedit}>\r\n                    <div className='backgroundRetRep'>\r\n                        <center>\r\n                            <h6>{this.state.Hotelname}</h6>\r\n                            <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                            <h5>Room Deposit Receipt - {this.state.roomNumbers}</h5>\r\n                            <p className=\"textSize\">Date: {receptDate}</p>\r\n                            \r\n                            \r\n\r\n                        </center>\r\n                        <p className=\"textSize\">Guest Names: {this.state.guestfname} {this.state.guestlname}</p>\r\n                        <p className=\"textSize\">Receipt Num: {this.state.receiptnumberz}</p>\r\n\r\n                    </div>\r\n                    <table className=\"table table-hover\">\r\n                        \r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust50\">Description</th>\r\n                                <th className=\"adjust50\">Room Num</th>\r\n                                <th className=\"adjust50\">Daily Rate(NGN)</th>\r\n                                <th className=\"adjust50\">Payment Method</th>\r\n                                <th className=\"adjust50\">Deposit Amount(NGN)</th>\r\n                                \r\n                                        \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover\">\r\n                            <tr>\r\n                                <td className=\"table-light table-striped adjust2 alignTet\"><b>{this.state.description2}</b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet\"><b>{this.state.roomNumbers}</b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.rate)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet\"><b>{this.state.paymentMethod2}</b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depositAmount)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                \r\n                            </tr>\r\n                            \r\n                        </tbody>\r\n                       \r\n\r\n\r\n                        \r\n                    </table><br/>\r\n                    <p className=\"textSize\">Posted By: {this.state.name}</p>\r\n                    <div className=\"printing\">\r\n                        <center>\r\n                            <button className=\"btn btn-primary\" style={{height:'40px'}}onClick={()=>{this.sendtoprinterDep()}}>\r\n                                <p>{this.state.printBTN}</p>\r\n                            </button>\r\n                        </center>\r\n                        \r\n                    </div>\r\n                    \r\n                </Modal>\r\n\r\n                <Modal open={this.state.othersedit}>\r\n                    <div className='setthispage'>\r\n                        <div className='backgroundRetRep'>\r\n                            <center>\r\n                                <h6>{this.state.Hotelname}</h6>\r\n                                <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                                <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                                <h5>General Receipt</h5>\r\n                                <p className=\"textSize\">Date: {receptDate}</p>\r\n\r\n                            </center>\r\n                            <p className=\"textSize\">Receipt Num: {this.state.receiptnumberz}</p>\r\n\r\n                        </div>\r\n                        <table className=\"table table-hover\">\r\n                            \r\n                            <thead className=\"table-warning setGR\">\r\n                                <tr>\r\n                                    <th className=\"adjust50ssss\">Description</th>\r\n                                    {/* <th className=\"adjust50\">Organisation</th> */}\r\n                                    <th className=\"adjust50ssss\">Payment Method</th>\r\n                                    <th className=\"adjust50ssss\">Amount Paid(NGN)</th>\r\n                                                                            \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"table table-hover\">\r\n                                <tr>\r\n                                    <td className=\"table-light table-striped adjust2 alignTetssss\"><b>{this.state.description1}</b></td>\r\n                                    {/* <td className=\"table-light table-striped adjust2 alignTet\"><b>{this.state.orgName}</b></td> */}\r\n                                    <td className=\"table-light table-striped adjust2 alignTetssss\"><b>{this.state.paymentMethod}</b></td>\r\n                                    <td className=\"table-light table-striped adjust2 alignTetssss\"><b><NumberFormat value={parseInt(this.state.amountPaid)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                                                    \r\n                                </tr>\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table><br/>\r\n                        <p className=\"textSize\">Posted By: {this.state.name}</p>\r\n                        <div className=\"printing\">\r\n                            <center>\r\n                                <button className=\"btn btn-primary\" style={{height:'40px'}}onClick={()=>{this.sendtoprinterOthrs()}}>\r\n                                    <p>{this.state.printBTN}</p>\r\n                                </button>\r\n                            </center>\r\n                            \r\n                        </div>\r\n\r\n                    </div>\r\n                    \r\n                    \r\n                </Modal>\r\n\r\n                <Modal open={this.state.deptwdpc}>\r\n                    <div className='backgroundRetRep'>\r\n                        <center>\r\n                            <h6>{this.state.Hotelname}</h6>\r\n                            <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                            <h5>General Receipt</h5>\r\n                            <p className=\"textSize\">Date: {receptDate}</p>\r\n\r\n                        </center>\r\n                        <p className=\"textSize\">Receipt Num: {this.state.receiptnumberz}</p>\r\n\r\n                    </div>\r\n                    <table className=\"table table-hover\">\r\n                        \r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust50\">Description</th>\r\n                                <th className=\"adjust50\">Amount Paid(NGN)</th>\r\n                                                                        \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover\">\r\n                            <tr>\r\n                                <td className=\"table-light table-striped adjust2 alignTet\"><b>{this.state.DeptsWdPC}</b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseFloat(this.state.CashPay)+parseFloat(this.state.POSPay)+parseFloat(this.state.TransferPay)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                                                \r\n                            </tr>\r\n                            \r\n                        </tbody>\r\n                        \r\n                        \r\n                    </table><br/>\r\n                    <p className=\"textSize\">Posted By: {this.state.name}</p>\r\n                    <div className=\"printing\">\r\n                        <center>\r\n                            <button className=\"btn btn-primary\" style={{height:'40px'}}onClick={()=>{this.sendtoprinterDeptWP()}}>\r\n                                <p>{this.state.printBTN}</p>\r\n                            </button>\r\n                        </center>\r\n                        \r\n                    </div>\r\n                    \r\n                </Modal>\r\n\r\n                <Modal open={this.state.functionedit}>\r\n                    <div className='backgroundRetRep'>\r\n                        <center>\r\n                            <h6>{this.state.Hotelname}</h6>\r\n                            <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                            <h5>General Receipt</h5>\r\n                            <p className=\"textSize\">Date: {receptDate}</p>\r\n\r\n                        </center>\r\n\r\n                    </div>\r\n                    <table className=\"table table-hover\">\r\n                        \r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust50\">Description</th>\r\n                                <th className=\"adjust50\">Organisation</th>\r\n                                <th className=\"adjust50\">Payment Method</th>\r\n                                <th className=\"adjust50\">Amount Paid(NGN)</th>\r\n                                        \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover\">\r\n                            <tr>\r\n                                <td className=\"table-light table-striped adjust2 alignTet\"><b>{this.state.description12}</b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet\"><b>{this.state.orgName}</b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet\"><b>{this.state.paymentMethod4}</b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.functionDeposit)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                \r\n                                \r\n                            </tr>\r\n                            \r\n                        </tbody>\r\n                        \r\n                    </table>\r\n                    <div className=\"printing\">\r\n                        <center>\r\n                            <button className=\"btn btn-primary\" style={{height:'40px'}}onClick={()=>{this.sendtoprinterFunctn()}}>\r\n                                <p>{this.state.printBTN}</p>\r\n                            </button>\r\n                        </center>\r\n                        \r\n                    </div>\r\n                    \r\n                </Modal>\r\n                \r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n    async componentDidMount(){\r\n        fetch(`${HallUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n            this.setState({\r\n                displayAllHalls:data\r\n            })\r\n        })\r\n\r\n        await fetch(`${getDeptsWitOutPC}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n            this.setState({\r\n                DeptsWdPC:data\r\n            })\r\n        })\r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        await fetch(`${getWorkDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({transactionDate:item.date})\r\n                return 'ok'\r\n            })\r\n            \r\n           \r\n        })\r\n\r\n        this.myTimer = setInterval(() => {\r\n            fetch(`${getWorkDate}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({transactionDate:item.date})\r\n                    return 'ok'\r\n                })\r\n                \r\n               \r\n            })\r\n            \r\n        },1000);\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n\r\n            fetch(`${getDeptsWitOutPC}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n            this.setState({\r\n                DeptsWdPC:data\r\n            })\r\n        })\r\n        },1000);\r\n    \r\n    }\r\n    \r\n}\r\nexport default OtherPosts;","import React, { Component } from 'react';\r\nimport NumberFormat from 'react-number-format';\r\nimport '../Reception.css';\r\n// import './OtherPosts.css';\r\nimport moment from 'moment';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport Billinglogin from '../../Billinglogin';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst delFromCheckinDb = \"https://zarvichdemo.localto.net/delBooking\";\r\nconst delFromFirstNiteDb = \"https://zarvichdemo.localto.net/delFirstNite\";\r\nconst delFromgrchargesDb = \"https://zarvichdemo.localto.net/delBooking2\";\r\nconst delFromroomratehargesDb = \"https://zarvichdemo.localto.net/delBooking3\";\r\nconst updateRoomStatus = \"https://zarvichdemo.localto.net/rmstatus2\";\r\nconst getBillrefIDsUrl = \"https://zarvichdemo.localto.net/posting?GcheckinID=\";\r\nconst getDepositsUrl = \"https://zarvichdemo.localto.net/getRmDeposits?GstbillId=\";\r\nconst getCheckinrefIDUrl = \"https://zarvichdemo.localto.net/checkin?checkinID=\";\r\nconst getRoomRateUrl = \"https://zarvichdemo.localto.net/roomRates?gdetails=\";\r\nconst postToCheckoutDb = \"https://zarvichdemo.localto.net/goodbye\";\r\nconst delfirstChkOut = \"https://zarvichdemo.localto.net/delchkOut\";\r\n// const postGroupRmCharges = \"/groupRoomCharges\";\r\n// const postBillSummary = \"/allBillSummary\";\r\nconst getGuestID = \"https://zarvichdemo.localto.net/checkin?roomNumID=\";\r\n\r\nconst postGuestDeposit = \"https://zarvichdemo.localto.net/rmDeposit\";\r\nconst TempRoomDepositUrl = \"https://zarvichdemo.localto.net/PostTmpRmDep\";\r\nconst getPaymentMethods = \"https://zarvichdemo.localto.net/paymentMethods\";\r\n\r\nconst postToCityLedger = \"https://zarvichdemo.localto.net/addCityLedger\";\r\n\r\nconst getRooms =\"https://zarvichdemo.localto.net/checkin\";\r\nconst editRoomStat =\"https://zarvichdemo.localto.net/guestBalanceChk\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\nconst getWorkDate = \"https://zarvichdemo.localto.net/getActive\";\r\n\r\n\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\n\r\n\r\nclass Guestbill extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside GstConstructor\",props)\r\n\r\n        this.state = {\r\n\r\n            guestDetails:'',\r\n            guestbilldetails:'',\r\n            guestDeposits:'',\r\n            roomCharging:'',\r\n            arrivalDate:'',\r\n            departureDate:'',\r\n            stay:'',\r\n            dailyRateNow:'',\r\n            calcAccommodatn:0,\r\n            calDockets:0,\r\n            calDeposits:0,\r\n            TotalRmRate:0,\r\n            Balance:0,\r\n            color:'',\r\n            CheckOutBtn:'Check Out',\r\n            checkout:'',\r\n            roomNum:'',\r\n            roomType:'',\r\n            datecalculation:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            Oths:0,\r\n            org:[],\r\n            firstName:'',\r\n            lastName:'',\r\n                       \r\n\r\n            edit: false,\r\n            displayPaymentMethods:'',\r\n            paymentMethod2:'',\r\n            depositAmount:'',\r\n            description2:'Bill Settlement',\r\n            guestInhouseID:'',\r\n            transactionDate:'',\r\n\r\n            editcityLedger: false,\r\n            phoneCode:'',\r\n            emailCode:'',\r\n            cityLedgerAmount:'',\r\n            cityLedgerDescription:'City Ledger',\r\n            cityLedgerID: sessionStorage.getItem('gstrefID'),\r\n            cityLedgerDate:new Date(),\r\n\r\n            editdepositTrnfr: false,\r\n            toRoom:'',\r\n            fromRoom:'',\r\n            depTrnfAmount:'',\r\n            depTrnDescription:'Deposit Transfer',\r\n            fromdepTrnID: sessionStorage.getItem('gstrefID'),\r\n            todepTrnID:'',\r\n            depTrnDate:new Date(),\r\n            allRooms:'',\r\n            getAllPayMeth:'',\r\n\r\n            balanceStatus:'',\r\n            balanceRoomType:'',\r\n            balanceFname:'',\r\n            balanceLname:'',\r\n            balanceRoomStatus:'',\r\n            balanceRefID:sessionStorage.getItem('gstrefID'),\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:'',\r\n\r\n            pass:'',\r\n            pword:false,\r\n            pword2:false,\r\n\r\n            chktAddress:'',\r\n            chkGender:'',\r\n            chkID:'',\r\n            chkNationality:'',\r\n            chkNokFname:'',\r\n            chkNokLname:'',\r\n            chkNokMname:'',\r\n            chkNokPhone:'',\r\n            chkNokRelationship:'',\r\n            chkPOV:'',\r\n            chkServiceCharge:'',\r\n            chkTourismLevy:'',\r\n            chkVAT:'',\r\n            chkArrivalDate:'',\r\n            chkCalculatedstay:'',\r\n            chkComingFrom:'',\r\n            chkDailyRate:'',\r\n            chkdepartureDate:'',\r\n            chkdiscounType:'',\r\n            chkdiscountAmount:'',\r\n            chkdob:'',\r\n            chkemail:'',\r\n            chkfname:'',\r\n            chkgointTo:'',\r\n            chkgroup:'',\r\n            chklname:'',\r\n            chkmiddlename:'',\r\n            chkmob:'',\r\n            chkoccupation:'',\r\n            chkpassportNum:'',\r\n            chkphone:'',\r\n            chkpostBillStatus:'',\r\n            chkrefID:'',\r\n            chkroomNumbers:'',\r\n            chkroomRate:'',\r\n            chkroomStatus:'',\r\n            chkroomtypeName:'',\r\n            chkstatus:'',\r\n            chkstay:'',\r\n            chktitle:'',\r\n            chktransactionDate:'',\r\n            chk_id:''\r\n        \r\n        }\r\n        \r\n    }\r\n\r\n    onOpenPword(){\r\n        if(this.state.CheckOutBtn==='Guest Refund'){\r\n            this.setState({\r\n                pword: true\r\n            })\r\n            \r\n        }\r\n        else{\r\n            this.setState({\r\n                pword: false\r\n            });\r\n            this.checkOut()\r\n        }\r\n\r\n        \r\n        \r\n    }\r\n\r\n    onOpenPword2(){\r\n        \r\n        this.setState({\r\n            pword2: true\r\n        })\r\n        \r\n    }\r\n\r\n    onClosePword(){\r\n        this.setState({\r\n            pword: false\r\n            \r\n        })\r\n        \r\n    }\r\n\r\n    AllowRefund(){\r\n        if(this.state.pass==='Deglen2019'){\r\n            this.checkOut();\r\n            this.onClosePword()\r\n            this.setState({pass:''})\r\n\r\n        }\r\n        else{\r\n            alert('Access Denied')\r\n        }\r\n    }\r\n\r\n    AllowCityLedger(){\r\n        if(this.state.pass==='Deglen2019'){\r\n            this.openCityLedger();\r\n            this.onClosePword2();\r\n            this.setState({pass:''})\r\n\r\n        }\r\n        else{\r\n            alert('Access Denied')\r\n        }\r\n    }\r\n\r\n    onClosePword2(){\r\n        this.setState({\r\n            pword2: false\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenModaledit(){\r\n        this.setState({\r\n            edit:true\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseModaltransfer(){\r\n        this.setState({\r\n            editdepositTrnfr:false\r\n        })\r\n        window.location.reload();\r\n        \r\n    }\r\n\r\n    onOpenModaltransfer(){\r\n        fetch(`${getRooms}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                allRooms:data,\r\n                editdepositTrnfr:true\r\n            })\r\n        })\r\n\r\n        fetch(`${getPaymentMethods}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    getAllPayMeth:data,\r\n                    \r\n                })\r\n            })\r\n                \r\n    }\r\n\r\n    onCloseModaledit(){\r\n        this.setState({\r\n            edit:false\r\n        })\r\n        window.location.reload();\r\n        \r\n    }\r\n\r\n    openCityLedger(){\r\n        // var getDptmt=this.state.pass;\r\n        // if(getDptmt==='1977Veektor/1977'){\r\n            this.setState({\r\n                editcityLedger:true\r\n            })\r\n        // }\r\n        // else{\r\n        //     alert('Access Denied')\r\n        // }\r\n        \r\n    }\r\n\r\n    closeCityLedger(){\r\n        this.setState({\r\n            editcityLedger:false\r\n        })\r\n        window.location.reload();\r\n        \r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n    \r\n    }\r\n    \r\n    handleChange2 = (event) => {\r\n        console.log('inside handle', this.props)\r\n        this.setState({\r\n           [event.target.name]:event.target.value\r\n        })\r\n        fetch(`${getGuestID}${event.target.value}`, {method: 'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item) => {\r\n                this.setState({\r\n                    todepTrnID:item.refID,\r\n                    depTrnfAmount:item.dailyRate\r\n                    \r\n                })\r\n                return 'ok'\r\n            })\r\n        })\r\n    \r\n    }\r\n\r\n\r\n    \r\n    async checkOut() {\r\n        if(this.state.CheckOutBtn==='Check Out'){\r\n            try {\r\n                \r\n                var rfID = sessionStorage.getItem('gstrefID');\r\n                var rmNumber = this.state.roomNum;\r\n               \r\n                var roomStatusUpdate = {\r\n                    status:'',\r\n                    roomtypeName:`${this.state.roomType}`,\r\n                    fname: '',\r\n                    lname: '',\r\n                    roomStatus: 'black',\r\n                    BillStatus:0,\r\n                    refID:''\r\n                   \r\n                }\r\n\r\n                // var guestSummary = {\r\n                    \r\n                //     fname:`${this.state.firstName}`,\r\n                //     lname:`${this.state.lastName}`,\r\n                //     roomNum:`${this.state.roomNum}`, \r\n                //     roomtype:`${this.state.roomType}`,\r\n                //     dailyRte:`${this.state.dailyRateNow}`,\r\n                //     stay:`${this.state.stay}`,\r\n                //     arrivalDate:`${this.state.arrivalDate}`,\r\n                //     departureDate:`${new Date()}`,\r\n                //     TotalRoomService:`${this.state.calDockets}`,\r\n                //     TotalAccommodation:`${this.state.calcAccommodatn}`,\r\n                //     TotalDeposits:`${this.state.calDeposits}`,\r\n                //     group:`${this.state.org}`,\r\n                //     searchKey:'SummaryBill',\r\n                //     description: 'Daily Room Rate',\r\n                   \r\n                // }\r\n\r\n                var GuestDeta = {\r\n                    \r\n                    Address:this.state.chktAddress,\r\n                    Gender:this.state.chkGender,\r\n                    ID:this.state.chkID,\r\n                    Nationality:this.state.chkNokFname,\r\n                    NokFname:this.state.chkNokFname,\r\n                    NokLname:this.state.chkNokLname,\r\n                    NokMname:this.state.chkNokMname,\r\n                    NokPhone:this.state.chkNokPhone,\r\n                    NokRelationship:this.state.chkNokRelationship,\r\n                    chkPOV:this.state.chkPOV,\r\n                    ServiceCharge:this.state.chkServiceCharge,\r\n                    TourismLevy:this.state.chkTourismLevy,\r\n                    VAT:this.state.chkVAT,\r\n                    ArrivalDate:this.state.chkArrivalDate,\r\n                    Calculatedstay:this.state.chkCalculatedstay,\r\n                    ComingFrom:this.state.chkComingFrom,\r\n                    DailyRate:this.state.chkDailyRate,\r\n                    departureDate:this.state.chkdepartureDate,\r\n                    discounType:this.state.chkdiscounType,\r\n                    discountAmount:this.state.chkdiscountAmount,\r\n                    dob:this.state.chkdob,\r\n                    email:this.state.chkemail,\r\n                    fname:this.state.chkfname,\r\n                    gointTo:this.state.chkgointTo,\r\n                    group:this.state.chkgroup,\r\n                    lname:this.state.chklname,\r\n                    middlename:this.state.chkmiddlename,\r\n                    mob:this.state.chkmob,\r\n                    occupation:this.state.chkoccupation,\r\n                    passportNum:this.state.chkpassportNum,\r\n                    phone:this.state.chkphone,\r\n                    postBillStatus:this.state.chkpostBillStatus,\r\n                    refID:this.state.chkrefID,\r\n                    roomNumbers:this.state.chkroomNumbers,\r\n                    roomRate:this.state.chkroomRate,\r\n                    roomStatus:this.state.chkroomStatus,\r\n                    roomtypeName:this.state.chkroomtypeName,\r\n                    status:this.state.chkstatus,\r\n                    stay:this.state.chkstay,\r\n                    title:this.state.chktitle,\r\n                    transactionDate:this.state.chktransactionDate\r\n                }\r\n\r\n                let dellast = await fetch(`${delfirstChkOut}/${this.state.chk_id}`, {\r\n                    method: 'delete',\r\n        \r\n                                          \r\n                        \r\n                });\r\n                console.log('dellast>  ' + dellast)\r\n                \r\n                this.myTimer = setTimeout(() => {\r\n                    let delChkOutDb= fetch(postToCheckoutDb, {\r\n                        method: 'post',\r\n            \r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type': 'application/json',\r\n                        },\r\n            \r\n                        body: JSON.stringify(\r\n                            \r\n                            GuestDeta\r\n                                \r\n                        )\r\n                            \r\n                            \r\n                    });\r\n                    console.log('delChkOutDb>  ' + delChkOutDb)\r\n    \r\n                    // let keepBills = await fetch(postGroupRmCharges, {\r\n                    //     method: 'post',\r\n            \r\n                    //     headers: {\r\n                    //         'Accept': 'application/json',\r\n                    //         'Content-type': 'application/json',\r\n                    //     },\r\n            \r\n                    //     body: JSON.stringify(\r\n                    //         this.state.roomCharging.map(item => item)\r\n                            \r\n                    //     )\r\n                            \r\n                            \r\n                    // });\r\n                    // console.log('keepBills>  ' + keepBills)\r\n    \r\n                    // let summaryBills = await fetch(postBillSummary, {\r\n                    //     method: 'post',\r\n            \r\n                    //     headers: {\r\n                    //         'Accept': 'application/json',\r\n                    //         'Content-type': 'application/json',\r\n                    //     },\r\n            \r\n                    //     body: JSON.stringify(\r\n                    //         guestSummary\r\n                            \r\n                    //     )\r\n                            \r\n                            \r\n                    // });\r\n                    // console.log('summaryBills>  ' + summaryBills)\r\n        \r\n                    let updtRmStat = fetch(`${updateRoomStatus}/${rmNumber}`, {\r\n                        method: 'put',\r\n            \r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type': 'application/json',\r\n                        },\r\n            \r\n                        body: JSON.stringify(\r\n                            \r\n                            roomStatusUpdate\r\n                                \r\n                        )\r\n                            \r\n                            \r\n                    });\r\n                    console.log('updtRmStat>  ' + updtRmStat)\r\n        \r\n                    let delChkInDb = fetch(`${delFromCheckinDb}/${rfID}`, {\r\n                        method: 'delete',\r\n            \r\n                        // headers: {\r\n                        //     'Accept': 'application/json',\r\n                        //     'Content-type': 'application/json',\r\n                        // },\r\n            \r\n                        // body: JSON.stringify(\r\n                            \r\n                        //     this.state.guestDetails.map(item => item)\r\n                                \r\n                        // )\r\n                            \r\n                            \r\n                    });\r\n                    console.log('delChkInDb>  ' + delChkInDb)\r\n    \r\n                    let delFirstNite = fetch(`${delFromFirstNiteDb}/${rfID}`, {\r\n                        method: 'delete',\r\n            \r\n                        // headers: {\r\n                        //     'Accept': 'application/json',\r\n                        //     'Content-type': 'application/json',\r\n                        // },\r\n            \r\n                        // body: JSON.stringify(\r\n                            \r\n                        //     GuestDeta\r\n                                \r\n                        // )\r\n                            \r\n                            \r\n                    });\r\n                    console.log('delFirstNite>  ' + delFirstNite)\r\n    \r\n                    \r\n                    let delgrRmChrg = fetch(`${delFromgrchargesDb}/${rfID}`, {\r\n                        method: 'delete',\r\n            \r\n                        // headers: {\r\n                        //     'Accept': 'application/json',\r\n                        //     'Content-type': 'application/json',\r\n                        // },\r\n            \r\n                        // body: JSON.stringify(\r\n                            \r\n                        //     this.state.guestDetails.map(item => item)\r\n                                \r\n                        // )\r\n                            \r\n                            \r\n                    });\r\n                    console.log('delgrRmChrg>  ' + delgrRmChrg)\r\n        \r\n                    let delfrmRmRate = fetch(`${delFromroomratehargesDb}/${rfID}`, {\r\n                        method: 'delete',\r\n            \r\n                        // headers: {\r\n                        //     'Accept': 'application/json',\r\n                        //     'Content-type': 'application/json',\r\n                        // },\r\n            \r\n                        // body: JSON.stringify(\r\n                            \r\n                        //     this.state.guestDetails.map(item => item)\r\n                                \r\n                        // )\r\n                            \r\n                            \r\n                    });\r\n                    console.log('delfrmRmRate>  ' + delfrmRmRate)\r\n\r\n                    alert( \"Room \"+ this.state.roomNum+ \" Check Out Was Successful\")\r\n                    this.props.history.push(\"/BillingMenu\")\r\n\r\n                },1000);\r\n    \r\n               \r\n            } catch(e) {\r\n                console.log(e)\r\n            }\r\n        }\r\n        \r\n        else if(this.state.CheckOutBtn==='Bill Settlement'){\r\n            \r\n            fetch(`${getPaymentMethods}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayPaymentMethods:data,\r\n                    description2:'Bill Settlement'\r\n                })\r\n            })\r\n\r\n            this.setState({\r\n                edit:true\r\n            })\r\n            \r\n            fetch(`${getGuestID}${this.state.roomNum}`, {method: 'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item) => {\r\n                    this.setState({\r\n                        guestInhouseID:item.refID,\r\n                                                                \r\n                    })\r\n                    return 'ok'\r\n                })\r\n            })\r\n        }\r\n        \r\n        else if(this.state.CheckOutBtn==='Guest Refund'){\r\n            // var getdptmnt = this.state.pass;\r\n            // if(getdptmnt==='1977Veektor/1977'){\r\n                \r\n                fetch(`${getPaymentMethods}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        displayPaymentMethods:data,\r\n                        description2:'Guest Refund'\r\n                    })\r\n                })\r\n\r\n                this.setState({\r\n                    edit:true\r\n                })\r\n                \r\n                fetch(`${getGuestID}${this.state.roomNum}`, {method: 'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    data.map((item) => {\r\n                        this.setState({\r\n                            guestInhouseID:item.refID,\r\n                                                                    \r\n                        })\r\n                        return 'ok'\r\n                    })\r\n                })\r\n            // }\r\n\r\n            // else{\r\n            //     alert('Access Denied')\r\n            // }\r\n            \r\n        }\r\n\r\n\r\n    }\r\n\r\n    async handleRoomDeposit() {\r\n        if(this.state.CheckOutBtn==='Bill Settlement'){\r\n            try {\r\n                if(this.state.paymentMethod2===\"POS\"){\r\n                    var POSroomDeposit = {\r\n                        receiptNum:'BillRec'+Math.floor(Math.random()*10000),\r\n                        _id:Math.floor(Math.random()*100000000),\r\n                        refID:`${this.state.guestInhouseID}`,\r\n                        date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                        POSAmount:Math.abs(parseInt(`${this.state.newBal2}`)),\r\n                        CashAmount:0,\r\n                        TransferAmount:0,\r\n                        CompDebit:0,\r\n                        roomDebit:0,\r\n                        paymentMethod:`${this.state.paymentMethod2}`,\r\n                        roomNumbers:`${this.state.roomNum}`,\r\n                        description:`${this.state.description2}`,\r\n                        department: \"Room Deposit\",\r\n                        user: localStorage.getItem('userInfo'),\r\n                        shift:localStorage.getItem('shift')\r\n                       \r\n                    }\r\n                    let result1 = await fetch(postGuestDeposit, {\r\n                        method: 'post',\r\n        \r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type': 'application/json',\r\n                        },\r\n        \r\n                        body: JSON.stringify(\r\n                            POSroomDeposit\r\n                           \r\n                        )\r\n                        \r\n                    });\r\n                    console.log('result1>  ' + result1)\r\n                    let result1b = await fetch(TempRoomDepositUrl, {\r\n                        method: 'post',\r\n        \r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type': 'application/json',\r\n                        },\r\n        \r\n                        body: JSON.stringify(\r\n                            POSroomDeposit\r\n                           \r\n                        )\r\n                        \r\n                    });\r\n                    console.log('result1b>  ' + result1b)\r\n                    \r\n    \r\n                }\r\n    \r\n                if(this.state.paymentMethod2===\"Cash\"){\r\n                    var CashroomDeposit = {\r\n                        receiptNum:'BillRec'+Math.floor(Math.random()*10000),\r\n                        _id:Math.floor(Math.random()*100000000),\r\n                        refID:`${this.state.guestInhouseID}`,\r\n                        date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                        POSAmount:0,\r\n                        CashAmount:Math.abs(parseInt(`${this.state.newBal2}`)),\r\n                        TransferAmount:0,\r\n                        CompDebit:0,\r\n                        roomDebit:0,\r\n                        paymentMethod:`${this.state.paymentMethod2}`,\r\n                        roomNumbers:`${this.state.roomNum}`,\r\n                        description:`${this.state.description2}`,\r\n                        department: \"Room Deposit\",\r\n                        user: localStorage.getItem('userInfo'),\r\n                        shift:localStorage.getItem('shift')\r\n                       \r\n                    }\r\n                    let result2 = await fetch(postGuestDeposit, {\r\n                        method: 'post',\r\n        \r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type': 'application/json',\r\n                        },\r\n        \r\n                        body: JSON.stringify(\r\n                            CashroomDeposit\r\n                           \r\n                        )\r\n                        \r\n                    });\r\n                    console.log('result2>  ' + result2)\r\n    \r\n                    let result2b = await fetch(TempRoomDepositUrl, {\r\n                        method: 'post',\r\n        \r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type': 'application/json',\r\n                        },\r\n        \r\n                        body: JSON.stringify(\r\n                            CashroomDeposit\r\n                           \r\n                        )\r\n                        \r\n                    });\r\n                    console.log('result2b>  ' + result2b)\r\n                    \r\n                }\r\n                \r\n                if(this.state.paymentMethod2===\"Transfer\"){\r\n                    var TransferroomDeposit = {\r\n                        receiptNum:'BillRec'+Math.floor(Math.random()*10000),\r\n                        _id:Math.floor(Math.random()*100000000),\r\n                        refID:`${this.state.guestInhouseID}`,\r\n                        date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                        POSAmount:0,\r\n                        CashAmount:0,\r\n                        TransferAmount:Math.abs(parseInt(`${this.state.newBal2}`)),\r\n                        CompDebit:0,\r\n                        roomDebit:0,\r\n                        paymentMethod:`${this.state.paymentMethod2}`,\r\n                        roomNumbers:`${this.state.roomNum}`,\r\n                        description:`${this.state.description2}`,\r\n                        department: \"Room Deposit\",\r\n                        user: localStorage.getItem('userInfo'),\r\n                        shift:localStorage.getItem('shift')\r\n                       \r\n                    }\r\n                    let result3 = await fetch(postGuestDeposit, {\r\n                        method: 'post',\r\n        \r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type': 'application/json',\r\n                        },\r\n        \r\n                        body: JSON.stringify(\r\n                            TransferroomDeposit\r\n                           \r\n                        )\r\n                        \r\n                    });\r\n                    console.log('result3>  ' + result3)\r\n    \r\n                    let result3b = await fetch(TempRoomDepositUrl, {\r\n                        method: 'post',\r\n        \r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type': 'application/json',\r\n                        },\r\n        \r\n                        body: JSON.stringify(\r\n                            TransferroomDeposit\r\n                           \r\n                        )\r\n                        \r\n                    });\r\n                    console.log('result3b>  ' + result3b)\r\n                    \r\n                    \r\n                }\r\n    \r\n                if(this.state.paymentMethod2===\"Complimentary\"){\r\n                    var ComplroomDeposit = {\r\n                        receiptNum:'BillRec'+Math.floor(Math.random()*10000),\r\n                        _id:Math.floor(Math.random()*100000000),\r\n                        refID:`${this.state.guestInhouseID}`,\r\n                        date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                        POSAmount:0,\r\n                        CashAmount:0,\r\n                        TransferAmount:0,\r\n                        CompDebit:Math.abs(parseInt(`${this.state.newBal2}`)),\r\n                        roomDebit:0,\r\n                        paymentMethod:`${this.state.paymentMethod2}`,\r\n                        roomNumbers:`${this.state.roomNum}`,\r\n                        description:`${this.state.description2}`,\r\n                        department: \"Room Deposit\",\r\n                        user: localStorage.getItem('userInfo'),\r\n                        shift:localStorage.getItem('shift')\r\n                       \r\n                    }\r\n                    let result3 = await fetch(postGuestDeposit, {\r\n                        method: 'post',\r\n        \r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type': 'application/json',\r\n                        },\r\n        \r\n                        body: JSON.stringify(\r\n                            ComplroomDeposit\r\n                           \r\n                        )\r\n                        \r\n                    });\r\n                    console.log('result3>  ' + result3)\r\n    \r\n                    let result3b = await fetch(TempRoomDepositUrl, {\r\n                        method: 'post',\r\n        \r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type': 'application/json',\r\n                        },\r\n        \r\n                        body: JSON.stringify(\r\n                            ComplroomDeposit\r\n                           \r\n                        )\r\n                        \r\n                    });\r\n                    console.log('result3b>  ' + result3b)\r\n    \r\n                    \r\n                }\r\n\r\n                alert(\"Deposit Posted for Room \" +this.state.roomNum)\r\n                \r\n                this.setState({paymentMethod2:''})\r\n                this.setState({edit:false})\r\n                window.location.reload();\r\n               \r\n                \r\n                       \r\n            } catch(e) {\r\n                console.log(e)\r\n            }\r\n        }\r\n        else if(this.state.CheckOutBtn==='Guest Refund'){\r\n            try {\r\n                if(this.state.paymentMethod2===\"POS\"){\r\n                    var POSroomDepositGR = {\r\n                        receiptNum:'BillRec'+Math.floor(Math.random()*10000),\r\n                        _id:Math.floor(Math.random()*100000000),\r\n                        refID:`${this.state.guestInhouseID}`,\r\n                        date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                        POSAmount:-Math.abs(parseInt(`${this.state.newBal2}`)),\r\n                        CashAmount:0,\r\n                        TransferAmount:0,\r\n                        CompDebit:0,\r\n                        roomDebit:0,\r\n                        paymentMethod:`${this.state.paymentMethod2}`,\r\n                        roomNumbers:`${this.state.roomNum}`,\r\n                        description:`${this.state.description2}`,\r\n                        department: \"Room Deposit\",\r\n                        user: localStorage.getItem('userInfo'),\r\n                        shift:localStorage.getItem('shift')\r\n                       \r\n                    }\r\n                    let result1 = await fetch(postGuestDeposit, {\r\n                        method: 'post',\r\n        \r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type': 'application/json',\r\n                        },\r\n        \r\n                        body: JSON.stringify(\r\n                            POSroomDepositGR\r\n                           \r\n                        )\r\n                        \r\n                    });\r\n                    console.log('result1>  ' + result1)\r\n                    // let result1b = await fetch(TempRoomDepositUrl, {\r\n                    //     method: 'post',\r\n        \r\n                    //     headers: {\r\n                    //         'Accept': 'application/json',\r\n                    //         'Content-type': 'application/json',\r\n                    //     },\r\n        \r\n                    //     body: JSON.stringify(\r\n                    //         POSroomDepositGR\r\n                           \r\n                    //     )\r\n                        \r\n                    // });\r\n                    // console.log('result1b>  ' + result1b)\r\n                    \r\n    \r\n                }\r\n                                    \r\n                if(this.state.paymentMethod2===\"Transfer\"){\r\n                    var TransferroomDepositGR = {\r\n                        receiptNum:'BillRec'+Math.floor(Math.random()*10000),\r\n                        _id:Math.floor(Math.random()*100000000),\r\n                        refID:`${this.state.guestInhouseID}`,\r\n                        date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                        POSAmount:0,\r\n                        CashAmount:0,\r\n                        TransferAmount:-Math.abs(parseInt(`${this.state.newBal2}`)),\r\n                        CompDebit:0,\r\n                        roomDebit:0,\r\n                        paymentMethod:`${this.state.paymentMethod2}`,\r\n                        roomNumbers:`${this.state.roomNum}`,\r\n                        description:`${this.state.description2}`,\r\n                        department: \"Room Deposit\",\r\n                        user: localStorage.getItem('userInfo'),\r\n                        shift:localStorage.getItem('shift')\r\n                       \r\n                    }\r\n                    let result3 = await fetch(postGuestDeposit, {\r\n                        method: 'post',\r\n        \r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type': 'application/json',\r\n                        },\r\n        \r\n                        body: JSON.stringify(\r\n                            TransferroomDepositGR\r\n                           \r\n                        )\r\n                        \r\n                    });\r\n                    console.log('result3>  ' + result3)\r\n    \r\n                    // let result3b = await fetch(TempRoomDepositUrl, {\r\n                    //     method: 'post',\r\n        \r\n                    //     headers: {\r\n                    //         'Accept': 'application/json',\r\n                    //         'Content-type': 'application/json',\r\n                    //     },\r\n        \r\n                    //     body: JSON.stringify(\r\n                    //         TransferroomDepositGR\r\n                           \r\n                    //     )\r\n                        \r\n                    // });\r\n                    // console.log('result3b>  ' + result3b)\r\n                    \r\n                    \r\n                }\r\n    \r\n                if(this.state.paymentMethod2===\"Complimentary\"){\r\n                    var ComplroomDepositGR = {\r\n                        receiptNum:'BillRec'+Math.floor(Math.random()*10000),\r\n                        _id:Math.floor(Math.random()*100000000),\r\n                        refID:`${this.state.guestInhouseID}`,\r\n                        date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                        POSAmount:0,\r\n                        CashAmount:0,\r\n                        TransferAmount:0,\r\n                        CompDebit:-Math.abs(parseInt(`${this.state.newBal2}`)),\r\n                        roomDebit:0,\r\n                        paymentMethod:`${this.state.paymentMethod2}`,\r\n                        roomNumbers:`${this.state.roomNum}`,\r\n                        description:`${this.state.description2}`,\r\n                        department: \"Room Deposit\",\r\n                        user: localStorage.getItem('userInfo'),\r\n                        shift:localStorage.getItem('shift')\r\n                       \r\n                    }\r\n                    let result3 = await fetch(postGuestDeposit, {\r\n                        method: 'post',\r\n        \r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type': 'application/json',\r\n                        },\r\n        \r\n                        body: JSON.stringify(\r\n                            ComplroomDepositGR\r\n                           \r\n                        )\r\n                        \r\n                    });\r\n                    console.log('result3>  ' + result3)\r\n    \r\n                    // let result3b = await fetch(TempRoomDepositUrl, {\r\n                    //     method: 'post',\r\n        \r\n                    //     headers: {\r\n                    //         'Accept': 'application/json',\r\n                    //         'Content-type': 'application/json',\r\n                    //     },\r\n        \r\n                    //     body: JSON.stringify(\r\n                    //         ComplroomDepositGR\r\n                           \r\n                    //     )\r\n                        \r\n                    // });\r\n                    // console.log('result3b>  ' + result3b)\r\n    \r\n                    \r\n                }\r\n    \r\n                alert(\"Refund Posted for Room \" +this.state.roomNum)\r\n                \r\n                this.setState({paymentMethod2:''})\r\n                this.setState({edit:false})\r\n                window.location.reload();\r\n               \r\n                \r\n                       \r\n            } catch(e) {\r\n                console.log(e)\r\n            }\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    async handleDepositTransfer() {\r\n        \r\n        try {\r\n            if(this.state.paymentMethod2===\"POS\"){\r\n                var ToRoomPos = {\r\n                    receiptNum:'BillRec'+Math.floor(Math.random()*10000),\r\n                    refID:`${this.state.todepTrnID}`,\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    POSAmount:Math.abs(parseInt(`${this.state.depTrnfAmount}`)),\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod2}`,\r\n                    roomNumbers:`${this.state.toRoom}`,\r\n                    description:`${this.state.depTrnDescription}`,\r\n                    department: \"Room Deposit\",\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                    \r\n                }\r\n                var FromRoomPos = {\r\n                    receiptNum:'BillRec'+Math.floor(Math.random()*10000),\r\n                    refID:`${this.state.fromdepTrnID}`,\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    POSAmount:-Math.abs(parseInt(`${this.state.depTrnfAmount}`)),\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod2}`,\r\n                    roomNumbers:`${this.state.roomNum}`,\r\n                    description:`${this.state.depTrnDescription}`,\r\n                    department: \"Room Deposit\",\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                    \r\n                }\r\n                let posdeposit = await fetch(postGuestDeposit, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        ToRoomPos\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('posdeposit>  ' + posdeposit)\r\n                let postransfer = await fetch(postGuestDeposit, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        FromRoomPos\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('postransfer>  ' + postransfer)\r\n\r\n                let result1b = await fetch(TempRoomDepositUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        ToRoomPos\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('result1b>  ' + result1b)\r\n                let fromPos = await fetch(TempRoomDepositUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        FromRoomPos\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('fromPos>  ' + fromPos)\r\n                \r\n\r\n            }\r\n\r\n            if(this.state.paymentMethod2===\"Cash\"){\r\n                var ToRoomCash = {\r\n                    receiptNum:'BillRec'+Math.floor(Math.random()*10000),\r\n                    refID:`${this.state.todepTrnID}`,\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    POSAmount:0,\r\n                    CashAmount:Math.abs(parseInt(`${this.state.depTrnfAmount}`)),\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod2}`,\r\n                    roomNumbers:`${this.state.toRoom}`,\r\n                    description:`${this.state.depTrnDescription}`,\r\n                    department: \"Room Deposit\",\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                    \r\n                }\r\n\r\n                var FromRoomCash = {\r\n                    receiptNum:'BillRec'+Math.floor(Math.random()*10000),\r\n                    refID:`${this.state.fromdepTrnID}`,\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    POSAmount:0,\r\n                    CashAmount:-Math.abs(parseInt(`${this.state.depTrnfAmount}`)),\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod2}`,\r\n                    roomNumbers:`${this.state.roomNum}`,\r\n                    description:`${this.state.depTrnDescription}`,\r\n                    department: \"Room Deposit\",\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                    \r\n                }\r\n                let toRoomCash = await fetch(postGuestDeposit, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        ToRoomCash\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('toRoomCash>  ' + toRoomCash)\r\n\r\n                let fromRoomCash = await fetch(postGuestDeposit, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        FromRoomCash\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('fromRoomCash>  ' + fromRoomCash)\r\n\r\n                let toRoomCash2 = await fetch(TempRoomDepositUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        ToRoomCash\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('toRoomCash2>  ' + toRoomCash2)\r\n\r\n                let fromRoomCash2 = await fetch(TempRoomDepositUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        FromRoomCash\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('fromRoomCash2>  ' + fromRoomCash2)\r\n                \r\n            }\r\n            \r\n            if(this.state.paymentMethod2===\"Transfer\"){\r\n                var ToRoomTrns = {\r\n                    receiptNum:'BillRec'+Math.floor(Math.random()*10000),\r\n                    refID:`${this.state.todepTrnID}`,\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:Math.abs(parseInt(`${this.state.depTrnfAmount}`)),\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod2}`,\r\n                    roomNumbers:`${this.state.toRoom}`,\r\n                    description:`${this.state.depTrnDescription}`,\r\n                    department: \"Room Deposit\",\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                    \r\n                }\r\n\r\n                var FromRoomTrns = {\r\n                    receiptNum:'BillRec'+Math.floor(Math.random()*10000),\r\n                    refID:`${this.state.fromdepTrnID}`,\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:-Math.abs(parseInt(`${this.state.depTrnfAmount}`)),\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod2}`,\r\n                    roomNumbers:`${this.state.roomNum}`,\r\n                    description:`${this.state.depTrnDescription}`,\r\n                    department: \"Room Deposit\",\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                    \r\n                }\r\n\r\n                let toRmTrns = await fetch(postGuestDeposit, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        ToRoomTrns\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('toRmTrns>  ' + toRmTrns)\r\n\r\n                let fromRmTrns = await fetch(postGuestDeposit, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        FromRoomTrns\r\n                        \r\n                    )\r\n                    \r\n                });\r\n\r\n                console.log('fromRmTrns>  ' + fromRmTrns)\r\n\r\n                let toRmTrns2 = await fetch(TempRoomDepositUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        ToRoomTrns\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('toRmTrns2>  ' + toRmTrns2)\r\n\r\n                let fromRmTrns2 = await fetch(TempRoomDepositUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        FromRoomTrns\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('fromRmTrns2>  ' + fromRmTrns2)\r\n                \r\n                \r\n            }\r\n\r\n            if(this.state.paymentMethod2===\"Complimentary\"){\r\n                var toRoomCompl = {\r\n                    receiptNum:'BillRec'+Math.floor(Math.random()*10000),\r\n                    refID:`${this.state.todepTrnID}`,\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:Math.abs(parseInt(`${this.state.depTrnfAmount}`)),\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod2}`,\r\n                    roomNumbers:`${this.state.toRoom}`,\r\n                    description:`${this.state.depTrnDescription} from ${this.state.roomNum}`,\r\n                    department: \"Room Deposit\",\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                    \r\n                }\r\n\r\n                var fromRoomCompl = {\r\n                    receiptNum:'BillRec'+Math.floor(Math.random()*10000),\r\n                    refID:`${this.state.fromdepTrnID}`,\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:-Math.abs(parseInt(`${this.state.depTrnfAmount}`)),\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod2}`,\r\n                    roomNumbers:`${this.state.roomNum}`,\r\n                    description:`${this.state.depTrnDescription} to ${this.state.toRoom}`,\r\n                    department: \"Room Deposit\",\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                    \r\n                }\r\n\r\n                \r\n                let rmTrnCompl1 = await fetch(postGuestDeposit, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        toRoomCompl\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('rmTrnCompl1>  ' + rmTrnCompl1)\r\n\r\n                let rmTrnCompl2 = await fetch(postGuestDeposit, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        fromRoomCompl\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('rmTrnCompl2>  ' + rmTrnCompl2)\r\n\r\n                let rmTrnCompl3 = await fetch(TempRoomDepositUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        toRoomCompl\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('rmTrnCompl3>  ' + rmTrnCompl3)\r\n\r\n                let rmTrnCompl4 = await fetch(TempRoomDepositUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        fromRoomCompl\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('rmTrnCompl4>  ' + rmTrnCompl4)\r\n\r\n                \r\n            }\r\n\r\n            alert(\"Deposit Transferred to Room \" +this.state.toRoom)\r\n            \r\n            this.setState({paymentMethod2:''})\r\n            this.setState({editdepositTrnfr:false})\r\n            window.location.reload();\r\n            \r\n            \r\n                    \r\n        } catch(e) {\r\n        console.log(e)\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    async handleCityLedger() {\r\n        if(this.state.CheckOutBtn==='Bill Settlement'){\r\n            try {\r\n            \r\n                var cityLedgerPost = {\r\n                    phone:`${this.state.phoneCode}`,\r\n                    date: moment(`${this.state.cityLedgerDate}`).format('MMM DD YYYY'),\r\n                    Amount:parseInt(`${this.state.newBal2}`),\r\n                    description:`${this.state.CheckOutBtn}`,\r\n                    CityLedgerCode:`${this.state.cityLedgerID}`,\r\n                    roomNumbers:`${this.state.roomNum}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                    \r\n                }\r\n    \r\n                var guestAccount2 = {\r\n                    receiptNum:'BillRec'+Math.floor(Math.random()*10000),\r\n                    _id:Math.floor(Math.random()*100000000),\r\n                    refID:`${this.state.cityLedgerID}`,\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:Math.abs(parseInt(`${this.state.newBal2}`)),\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:'Transfer',\r\n                    roomNumbers:`${this.state.roomNum}`,\r\n                    description:`${this.state.cityLedgerDescription}`,\r\n                    department: \"Room Deposit\",\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift') \r\n                }\r\n                let result1 = await fetch(postToCityLedger, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        cityLedgerPost\r\n                        \r\n                    )\r\n                    \r\n                });\r\n              \r\n                console.log('result1>  ' + result1)\r\n                let result1b = await fetch(postGuestDeposit, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        guestAccount2\r\n                        \r\n                    )\r\n                    \r\n                });\r\n              \r\n                console.log('result1b>  ' + result1b)\r\n\r\n                let result1bc = await fetch(TempRoomDepositUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        guestAccount2\r\n                        \r\n                    )\r\n                    \r\n                });\r\n              \r\n                console.log('result1bc>  ' + result1bc)\r\n                \r\n                alert(\"Balance Posted for Room \" +this.state.roomNum)\r\n                \r\n                this.setState({editcityLedger:false})\r\n                window.location.reload();\r\n                \r\n                        \r\n            } catch(e) {\r\n                console.log(e)\r\n            }\r\n            \r\n        }\r\n        else if (this.state.CheckOutBtn==='Guest Refund'){\r\n            try {\r\n            \r\n                var cityLedgerPost2 = {\r\n                    phone:`${this.state.phoneCode}`,\r\n                    date: moment(`${this.state.cityLedgerDate}`).format('MMM DD YYYY'),\r\n                    Amount:parseInt(`${this.state.newBal2}`),\r\n                    description:`${this.state.CheckOutBtn}`,\r\n                    CityLedgerCode:`${this.state.cityLedgerID}`,\r\n                    roomNumbers:`${this.state.roomNum}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                    \r\n                }\r\n    \r\n                \r\n                var guestAccount = {\r\n                    receiptNum:'BillRec'+Math.floor(Math.random()*10000),\r\n                    _id:Math.floor(Math.random()*100000000),\r\n                    refID:`${this.state.cityLedgerID}`,\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:-Math.abs(parseInt(`${this.state.newBal2}`)),\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:'Transfer',\r\n                    roomNumbers:`${this.state.roomNum}`,\r\n                    description:`${this.state.cityLedgerDescription}`,\r\n                    department: \"Room Deposit\",\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift') \r\n                }\r\n    \r\n                let result1 = await fetch(postToCityLedger, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        cityLedgerPost2\r\n                        \r\n                    )\r\n                    \r\n                });\r\n               \r\n                console.log('result1>  ' + result1)\r\n\r\n                let result1b = await fetch(postGuestDeposit, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        guestAccount\r\n                        \r\n                    )\r\n                    \r\n                });\r\n              \r\n                console.log('result1b>  ' + result1b)\r\n\r\n                let result1bc = await fetch(TempRoomDepositUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        guestAccount\r\n                        \r\n                    )\r\n                    \r\n                });\r\n              \r\n                console.log('result1bc>  ' + result1bc)\r\n                \r\n                \r\n                alert(\"Balance Posted for Room \" +this.state.roomNum)\r\n                \r\n                this.setState({editcityLedger:false})\r\n                window.location.reload();\r\n                \r\n                        \r\n            } catch(e) {\r\n                console.log(e)\r\n            }\r\n            \r\n        }\r\n        \r\n\r\n    }\r\n\r\n\r\n    \r\n    offload(){\r\n        this.setState({Balance:0});\r\n        this.setState({calDeposits:0});\r\n        this.setState({calDockets:0});\r\n        this.setState({calcAccommodatn:0});\r\n        this.setState({calcVAT:0});\r\n        this.setState({calcTourismLev:0});\r\n        this.setState({VAT:0});\r\n        this.setState({TourismLevy:0});\r\n        this.setState({Oths:0});\r\n        this.setState({newBal2:0});\r\n        this.setState({TotalRmRate:0});\r\n        this.props.history.push('/BillingMenu');\r\n\r\n        this.guestBalance()\r\n\r\n    }\r\n\r\n    async guestBalance() {\r\n    \r\n        try {\r\n            var getrefID = sessionStorage.getItem('gstrefID')\r\n            var statusUpdate = {\r\n\r\n                status:`${this.state.balanceStatus}`,\r\n                roomtypeName:`${this.state.balanceRoomType}`,\r\n                fname:`${this.state.balanceFname}`,\r\n                lname:`${this.state.balanceLname}`,\r\n                roomStatus:`${this.state.balanceRoomStatus}`,\r\n                BillStatus:parseInt(`${this.state.newBal2}`),\r\n                refID:`${this.state.balanceRefID}`,\r\n\r\n            }\r\n            \r\n            \r\n            let result2 = await fetch(`${editRoomStat}/${getrefID}`, {\r\n                method:'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                 \r\n                },\r\n                body: JSON.stringify(\r\n                    statusUpdate\r\n                )\r\n        \r\n            });\r\n            console.log('result2>  ' + result2)\r\n        \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    renderPayMeth(data){\r\n        if(data) {\r\n            return data.map((item) => {\r\n                return(\r\n                    <>\r\n                        <option key={item.method} value={item.method}>\r\n                            {item.method}\r\n                            \r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderTrnfRooms(data){\r\n        if(data) {\r\n           data.sort((a, b) => a.roomNumbers - b.roomNumbers);\r\n            return data.map((item, index) => {\r\n                return(\r\n                    <>\r\n                        <option key={index} value={item.roomNumbers}>\r\n                            {item.roomNumbers} - {item.fname} {item.lname}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    \r\n    accommodationInfo=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n                if(item.refID ===`${sessionStorage.getItem('gstrefID')}`){\r\n                    return(\r\n                        <>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-4\">\r\n                                <p className=\"textSize\">Names: {item.lname} {item.fname}</p>\r\n                                <p className=\"textSize\">Contact Address: {item.Address}</p>\r\n                                <p className=\"textSize\">Phone Num: {item.phone}</p>\r\n                                <p className=\"textSize\">Folio Num: {item.refID}</p>\r\n                                    \r\n                                </div>\r\n\r\n                                <div className=\"col-4\">\r\n                                <p className=\"textSize\">Room Type: {item.roomtypeName} {item.roomNumbers}</p>\r\n                                <p className=\"textSize\">Room Rate: <NumberFormat value= {item.roomRate}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></p>\r\n                                <p className=\"textSize\">Discount Type: {item.discounType}</p>\r\n                                <p className=\"textSize\">Discount Amount: <NumberFormat value= {item.discountAmount}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                </div>\r\n\r\n                                <div className=\"col-4\">\r\n                                <p className=\"textSize\">Group: {item.group}</p>\r\n                                <p className=\"textSize\">Arrival Date: {this.state.arrivalDate}</p>\r\n                                <p className=\"textSize\">Departure Date: {this.state.departureDate}</p>\r\n                                <p className=\"textSize\">Num. of Nights: {this.state.stay}</p>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            \r\n\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                return(\r\n                    <>\r\n\r\n                    </>\r\n                )\r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n    \r\n\r\n    renderRooms=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a,b)=>new Date(a.tranDate) - new Date(b.tranDate));\r\n                var TDate = moment(item.tranDate).format('MMM DD YYYY')\r\n                if(item.refID ===`${sessionStorage.getItem('gstrefID')}`){\r\n                    \r\n                    return(\r\n                        <>\r\n                            <tr key= {item.refID}>\r\n                                \r\n                                <td className=\"table-light table-striped adjust2b\">{TDate}</td>\r\n                                <td className=\"table-light table-striped adjust2b\">{item.roomNumbers}</td>\r\n                                <td className=\"table-light table-striped adjust2b\">{item.description}</td>\r\n                                <td className=\"table-light table-striped adjust2b\"><NumberFormat value={item.dailyRate}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                                \r\n                                \r\n                            </tr> \r\n                        </>\r\n                    )\r\n                }\r\n\r\n                return(\r\n                    <>\r\n\r\n                    </>\r\n                )\r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n    loadRooms(data){\r\n        if(data) {\r\n           data.sort((a, b) => a.roomNumbers - b.roomNumbers);\r\n            return data.map((item, index) => {\r\n                return(\r\n                    <>\r\n                        <option key={index} value={item.roomNumbers}>\r\n                            {item.roomNumbers} - {item.fname} {item.lname}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderDockets=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n                if(item.refID ===`${sessionStorage.getItem('gstrefID')}`){\r\n                    return(\r\n                        <>\r\n                             <tr key= {item.refID}>\r\n                                \r\n                                <td className=\"table-light table-striped adjust2b\">{item.date}</td>\r\n                                <td className=\"table-light table-striped adjust2b\">{item.docketNum}</td>\r\n                                <td className=\"table-light table-striped adjust2b\">{item.description}</td>\r\n                                <td className=\"table-light table-striped adjust2bc\"><NumberFormat value={item.cost}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                                \r\n                            </tr>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                return(\r\n                    <>\r\n\r\n                    </>\r\n                )\r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    renderDeposits=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n                if(item.refID ===`${sessionStorage.getItem('gstrefID')}`){\r\n                    return(\r\n                        <>\r\n                             <tr key= {item.refID}>\r\n                                \r\n                                <td className=\"table-light table-striped adjust2b\">{item.date}</td>\r\n                                <td className=\"table-light table-striped adjust2b\">{item.receiptNum}</td>\r\n                                <td className=\"table-light table-striped adjust2b\">{item.description}</td>\r\n                                <td className=\"table-light table-striped adjust2b\">{item.paymentMethod}</td>\r\n                                <td className=\"table-light table-striped adjust2bc\"><NumberFormat value={item.POSAmount||item.CashAmount||item.TransferAmount||item.CompDebit||item.roomDebit}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                                \r\n                            </tr>\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                return(\r\n                    <>\r\n\r\n                    </>\r\n                )\r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n        \r\n    \r\n    render() {\r\n        console.log(\">>> Inside Gstrender\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Billinglogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        return(\r\n            \r\n            <div className =\"container\">\r\n                <div>\r\n                        <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                    </div>\r\n                <div>\r\n                    <center>\r\n                        <h6>{this.state.Hotelname}</h6>\r\n                        <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                        <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                    </center>\r\n                </div>\r\n                <center><h5>Guest Bill</h5></center>\r\n                \r\n                <h6>Accommodation Details</h6>\r\n                <hr/>\r\n                {this.accommodationInfo(this.state.guestDetails)}\r\n                <hr/>\r\n                               \r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust5\">Date</th>\r\n                            <th className=\"adjust5\">Room Num</th>\r\n                            <th className=\"adjust5\">Description</th>\r\n                            <th className=\"adjust5\">Daily Rate(NGN)</th>\r\n                           \r\n                            \r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderRooms(this.state.roomCharging)}\r\n                        \r\n                    </tbody>\r\n                </table>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <h6>Accommodation: <NumberFormat value={this.state.calcAccommodatn} thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                    </div>\r\n                    {/* <div className=\"col-3\">\r\n                        <p>VAT (7.5%): <NumberFormat value={this.state.calcVAT}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></p>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                        <p>Tourism Levy (10%): <NumberFormat value={this.state.calcTourismLev}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></p>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                        <h6>Grand Total: <NumberFormat value={this.state.calcAccommodatn + this.state.calcVAT + this.state.calcTourismLev}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                    </div> */}\r\n                </div>\r\n                <hr/>\r\n                \r\n                <h6>Room Service Details</h6>\r\n                \r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust5\">Date</th>\r\n                            <th className=\"adjust5\">Docket Num</th>\r\n                            <th className=\"adjust5\">Description</th>\r\n                            <th className=\"adjust5b\">Amount (NGN)</th>\r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderDockets(this.state.guestbilldetails)}\r\n                        <h6>Room Service Total: <NumberFormat value={this.state.calDockets}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                    </tbody>\r\n                </table>  \r\n                <hr/>\r\n                \r\n                <h6>Guest Deposits</h6>\r\n                \r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust5\">Date</th>\r\n                            <th className=\"adjust5\">Receipt Num</th>\r\n                            <th className=\"adjust5\">Description</th>\r\n                            <th className=\"adjust5\">Payment Method</th>\r\n                            <th className=\"adjust5b\">Deposit Amount(NGN)</th>\r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderDeposits(this.state.guestDeposits)}\r\n                        <h6>Total Deposit: <NumberFormat value={this.state.calDeposits}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                    </tbody>\r\n                </table>    \r\n                <hr/>\r\n            \r\n                <h6 style={{color:(`${this.state.color}`)}}>Bill Summary</h6>\r\n                <hr/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <h6>Total Deposit:</h6><p><NumberFormat value={this.state.calDeposits}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></p>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                        <h6>Accommodation:</h6><p><NumberFormat value={this.state.calcAccommodatn}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></p>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                        <h6>Room Service:</h6><p><NumberFormat value={this.state.calDockets}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></p>    \r\n                    </div>\r\n                   <div className=\"col-3\">\r\n                        <h6 style={{color:(`${this.state.color}`)}}>Balance:</h6><h6 style={{color:(`${this.state.color}`)}}><NumberFormat value={this.state.calDeposits - (this.state.calcAccommodatn + this.state.calDockets)}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>   \r\n                   </div>\r\n                    \r\n                </div>     \r\n                <center>\r\n                    <button className=\"btn btn-danger printing\" onClick={ () => this.offload() }>Close</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ () => window.print() }>Print</button>\r\n                    <button style={{backgroundColor:(`${this.state.color}`)}} className=\"btn btn-danger movebtn printing\" onClick={ () =>this.onOpenPword() }>{this.state.CheckOutBtn}</button>\r\n                    <button disabled={this.state.CheckOutBtn==='Check Out'} className=\"btn btn-warning movebtn printing\" onClick={ () =>this.onOpenPword2() }>Add to City Ledger</button>\r\n                    <button disabled={this.state.CheckOutBtn==='Check Out'||this.state.CheckOutBtn==='Bill Settlement'} className=\"btn btn-warning movebtn printing\" onClick={ () =>this.onOpenModaltransfer() }>Transfer Deposit</button>\r\n                        \r\n                        \r\n                </center>       \r\n                <br/> <br/>\r\n\r\n                <Modal open={this.state.edit} onClose={()=>this.onCloseModaledit()} style={{color:\"silver\"}}>\r\n                    <div className = \"background591100\">\r\n                        <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-70px'}}>{this.state.description2}</h4>\r\n                        <div className=\"formdesign50211\">\r\n                            <center>\r\n                                <div className=\"row\">\r\n                                \r\n                                    <div className=\"col-3 mb-3\">\r\n                                        <p className=\"form-select mb-2 btn btn-primary mt-3\" style={{marginLeft:'5px', width:'160px'}}>{this.state.description2}</p>\r\n                                    </div>\r\n                                    \r\n                                <div className=\"col-3 mb-3\">\r\n                                    <p className=\"form-select mb-2 btn btn-primary mt-3\"style={{marginRight:'30px', width:'160px'}}>{this.state.roomNum}</p>\r\n                                </div>\r\n                                    \r\n                                    <div className=\"col-3 mb-3\">\r\n                                        <select type =\"button\" className=\"form-select mb-2 btn btn-primary mt-3 blinkblink\" style={{marginRight:'30px', width:'160px'}} name=\"paymentMethod2\" onChange={this.handleChange} >\r\n                                            <option selected value=''>Payment Method</option>\r\n                                            {this.renderPayMeth(this.state.displayPaymentMethods)}\r\n                                            \r\n                                        </select>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"col-3 mb-3\">\r\n                                        <input type=\"number\" className=\"form-control mb-3 mt-3\" style={{marginRight:'30px', width:'140px'}} name=\"depositAmount\" value={this.state.newBal2} readOnly/>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </center>\r\n                            \r\n                        </div>\r\n                        <div>\r\n                            <center>\r\n                                <button disabled={this.state.paymentMethod2===''} className=\"btn btn-warning mt-3\" onClick={ () => this.handleRoomDeposit()}>Post Deposit</button>\r\n                                <button className=\"btn btn-danger flipright mt-3\" onClick={()=> {this.onCloseModaledit();this.onClosePword()}}>Close</button>\r\n                            </center>\r\n                            \r\n                            <hr style={{color:'silver'}}/>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal open={this.state.pword} onClose={()=>this.onClosePword()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Access Required</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <input type=\"password\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"pass\" require placeholder=\"Enter Access Code\" value={this.state.pass} onChange={this.handleChange}/>\r\n                                    <button disabled = {this.state.pass===''} className=\"btn btn-warning formsize91\" onClick={()=>this.AllowRefund()}>Login</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal open={this.state.pword2} onClose={()=>this.onClosePword2()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Access Required</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <input type=\"password\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"pass\" require placeholder=\"Enter Access Code\" value={this.state.pass} onChange={this.handleChange}/>\r\n                                    <button disabled = {this.state.pass===''} className=\"btn btn-warning formsize91\" onClick={()=>this.AllowCityLedger()}>Login</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal open={this.state.editdepositTrnfr} onClose={()=>this.onCloseModaltransfer()} style={{color:\"silver\"}}>\r\n                    <div className = \"background591100Tr\">\r\n                        <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-70px'}}>{this.state.depTrnDescription}</h4>\r\n                        <div className=\"formdesign50211Tr\">\r\n                            <center>\r\n                                <div className=\"row\">\r\n                                \r\n                                    <div className=\"col-4 mb-3\">\r\n                                        <p className=\"form-control mb-2 btn btn-primary mt-3\" style={{marginLeft:'5px', width:'160px'}}>{this.state.depTrnDescription}</p>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"col-4 mb-3\">\r\n                                        <p className=\"form-control mb-2 btn btn-primary mt-3\"style={{marginRight:'30px', width:'160px'}}>From: {this.state.roomNum}</p>\r\n                                    </div>\r\n\r\n                                    <div className='col-4 mb-3'>\r\n                                        <select type =\"button\" className=\"form-select mb-2 btn btn-primary mt-3\" name=\"toRoom\" onChange={this.handleChange2}>\r\n                                            <option selected value=''>Rooms</option>\r\n                                            {this.loadRooms(this.state.allRooms)}\r\n                                                                                        \r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"col-4 mb-3\">\r\n                                        <select type =\"button\" className=\"form-select mb-2 btn btn-primary mt-3 blinkblink\" style={{marginLeft:'8px', width:'160px'}} name=\"paymentMethod2\" onChange={this.handleChange}>\r\n                                            <option selected value=''>Payment Method</option>\r\n                                            {this.renderPayMeth(this.state.getAllPayMeth)}\r\n                                            \r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-4 mb-3\">\r\n                                        <p className=\"form-control mb-2 btn btn-primary mt-3\"style={{marginRight:'30px', width:'160px'}}>{this.state.depTrnfAmount}</p>\r\n                                    </div>\r\n                                \r\n                                </div>\r\n                                \r\n                            </center>\r\n                            \r\n                        </div>\r\n                        <div>\r\n                            <center>\r\n                                <button disabled={this.state.depTrnfAmount===''||this.state.paymentMethod2===''} className=\"btn btn-warning mt-3\" onClick={ () => this.handleDepositTransfer()}>Post</button>\r\n                                <button className=\"btn btn-danger flipright mt-3\" onClick={()=> this.onCloseModaltransfer()}>Close</button>\r\n                            </center>\r\n                            \r\n                            <hr style={{color:'silver'}}/>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal open={this.state.editcityLedger} onClose={()=>this.openCityLedger()} style={{color:\"silver\"}}>\r\n                    <div className = \"background591100\">\r\n                        <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-70px'}}>{this.state.cityLedgerDescription}</h4>\r\n                        <div className=\"formdesign50211\">\r\n                            <center>\r\n                                <div className=\"row\">\r\n                                \r\n                                    <div className=\"col-3 mb-2\">\r\n                                        <p className=\"form-select mb-2 btn btn-primary mt-3\" style={{marginLeft:'5px', width:'160px'}}>{this.state.cityLedgerDescription}</p>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"col-3 mb-2\">\r\n                                        <p className=\"form-select mb-2 btn btn-primary mt-3\"style={{marginRight:'30px', width:'160px'}}>{this.state.roomNum}</p>\r\n                                    </div>\r\n                                        \r\n                                    <div className=\"col-3 mb-2\">\r\n                                        <input type=\"number\" className=\"form-control mb-3 mt-3\" style={{marginRight:'30px', width:'140px'}} name=\"phoneCode\" value={this.state.phoneCode} readOnly/>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"col-3 mb-2\">\r\n                                        <input type=\"number\" className=\"form-control mb-3 mt-3\" style={{marginRight:'30px', width:'140px'}} name=\"cityLedgerAmount\" value={this.state.newBal2} readOnly/>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </center>\r\n                            \r\n                        </div>\r\n                        <div>\r\n                            <center>\r\n                                <button disabled={this.state.phoneCode===''} className=\"btn btn-warning mt-3\" onClick={ () => this.handleCityLedger()}>Post</button>\r\n                                <button className=\"btn btn-danger flipright mt-3\" onClick={()=> {this.closeCityLedger();this.onClosePword2()}}>Close</button>\r\n                            </center>\r\n                            \r\n                            <hr style={{color:'silver'}}/>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n            \r\n            \r\n        )\r\n    }\r\n\r\n    async componentDidMount() {\r\n        \r\n        console.log(\">>> Inside GstDidMount\", this.state)\r\n        this.myTimer = setInterval(() => {\r\n            var guestID = sessionStorage.getItem('gstrefID');\r\n                \r\n            fetch(`${getRoomRateUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({roomCharging:data});\r\n\r\n                var allRoomRates = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.dailyRate)\r\n                }, 0);\r\n                this.setState({calRoomRate:allRoomRates})\r\n                sessionStorage.setItem('RoomCalc',allRoomRates)\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var GD = this.state.roomCharging;\r\n                    GD.map((item)=>{\r\n                        this.setState({\r\n                            dailyRateNow:item.dailyRate,\r\n                            \r\n                        })\r\n                        var depDate = new Date()\r\n                        var fmtdepDate = moment(depDate).format('YYYY-DD-MMM');\r\n                        this.setState({departureDate:fmtdepDate})\r\n\r\n                        let arrDate = moment(sessionStorage.getItem('getarrvDt')).format('YYYY-DD-MMM');\r\n                        this.setState({arrivalDate:arrDate});\r\n                        var thisDate = item.tranDate;\r\n                        var endDate = moment(thisDate);\r\n                        sessionStorage.setItem('endate',endDate)\r\n                        var checkinDate = moment(sessionStorage.getItem('getarrvDt'));\r\n                        sessionStorage.setItem('chkindate',checkinDate)\r\n                        var diff = endDate.diff(checkinDate);\r\n                        var comp = Math.ceil(diff/(1000*3600*24));\r\n                        sessionStorage.setItem('difdate',comp);\r\n                        this.setState({stay:parseInt(sessionStorage.getItem('difdate'))})\r\n                        \r\n                        fetch(`${getBillrefIDsUrl}${guestID}`, {method:'GET'})\r\n                        .then((res) => res.json())\r\n                        .then((data) => {\r\n                            this.setState({guestbilldetails:data})\r\n\r\n                            var allDockets = data.map(item => item).reduce((totals, item) =>{\r\n                                return totals + parseInt(item.cost)\r\n                            }, 0);\r\n                            this.setState({calDockets:allDockets})\r\n                            sessionStorage.setItem('Dockets',allDockets)\r\n\r\n\r\n                        })\r\n\r\n\r\n                        \r\n                        var TotalRmRate =0;\r\n                        TotalRmRate = allRoomRates;\r\n                        \r\n                        this.setState({\r\n                            calcAccommodatn:TotalRmRate,\r\n                            TotalRmRate:TotalRmRate,\r\n                                                        \r\n                        })\r\n                        sessionStorage.setItem('TotRmRate',TotalRmRate)\r\n                        return 'ok'\r\n                    })\r\n                },1000)\r\n                \r\n                \r\n            })\r\n\r\n            this.myTimer = setTimeout(() => {\r\n                fetch(`${getRoomRateUrl}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({roomCharging:data});\r\n\r\n                    var allRoomRates = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.dailyRate)\r\n                    }, 0);\r\n                    this.setState({calRoomRate:allRoomRates})\r\n                    sessionStorage.setItem('RoomCalc',allRoomRates)\r\n\r\n                    this.myTimer = setTimeout(() => {\r\n                        var GD = this.state.roomCharging;\r\n                        GD.map((item)=>{\r\n                            this.setState({\r\n                                dailyRateNow:item.dailyRate,\r\n                                \r\n                            })\r\n                            var depDate = new Date()\r\n                            var fmtdepDate = moment(depDate).format('YYYY-DD-MMM');\r\n                            this.setState({departureDate:fmtdepDate})\r\n\r\n                            let arrDate = moment(sessionStorage.getItem('getarrvDt')).format('YYYY-DD-MMM');\r\n                            this.setState({arrivalDate:arrDate});\r\n                            var thisDate = item.tranDate;\r\n                            var endDate = moment(thisDate);\r\n                            sessionStorage.setItem('endate',endDate)\r\n                            var checkinDate = moment(sessionStorage.getItem('getarrvDt'));\r\n                            sessionStorage.setItem('chkindate',checkinDate)\r\n                            var diff = endDate.diff(checkinDate);\r\n                            var comp = Math.ceil(diff/(1000*3600*24));\r\n                            sessionStorage.setItem('difdate',comp);\r\n                            this.setState({stay:parseInt(sessionStorage.getItem('difdate'))})\r\n                            \r\n                            fetch(`${getBillrefIDsUrl}${guestID}`, {method:'GET'})\r\n                            .then((res) => res.json())\r\n                            .then((data) => {\r\n                                this.setState({guestbilldetails:data})\r\n\r\n                                var allDockets = data.map(item => item).reduce((totals, item) =>{\r\n                                    return totals + parseInt(item.cost)\r\n                                }, 0);\r\n                                this.setState({calDockets:allDockets})\r\n                                sessionStorage.setItem('Dockets',allDockets)\r\n\r\n\r\n                            })\r\n\r\n\r\n                            \r\n                            var TotalRmRate =0;\r\n                            TotalRmRate = allRoomRates;\r\n                            \r\n                            this.setState({\r\n                                calcAccommodatn:TotalRmRate,\r\n                                TotalRmRate:TotalRmRate,\r\n                                                            \r\n                            })\r\n                            sessionStorage.setItem('TotRmRate',TotalRmRate)\r\n                            return 'ok'\r\n                        })\r\n                    },1000)\r\n                    \r\n                    \r\n                })\r\n            },1000)\r\n\r\n            \r\n            fetch(`${getCheckinrefIDUrl}${guestID}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({guestDetails:data});\r\n                this.setState({roomNum: data.map((item) => item.roomNumbers)});\r\n                this.setState({roomType: data.map((item) => item.roomtypeName)})\r\n                this.setState({phoneCode: data.map((item) => item.phone)})\r\n                this.setState({emailCode: data.map((item) => item.email)})\r\n                this.setState({firstName: data.map((item) => item.fname)})\r\n                this.setState({lastName: data.map((item) => item.lname)})\r\n                data.map((item)=>{\r\n                    this.setState({\r\n                        balanceStatus:item.status,\r\n                        balanceFname:item.fname,\r\n                        balanceLname:item.lname,\r\n                        balanceRoomType:item.roomtypeName,\r\n                        balanceRoomStatus:item.roomStatus,\r\n                        chktAddress:item.Address,\r\n                        chkGender:item.Gender,\r\n                        chkID:item.ID,\r\n                        chkNokFname:item.NokFname,\r\n                        chkNationality:item.Nationality,\r\n                        chkNokLname:item.NokLname,\r\n                        chkNokMname:item.NokMname,\r\n                        chkNokPhone:item.NokPhone,\r\n                        chkNokRelationship:item.NokRelationship,\r\n                        chkPOV:item.POV,\r\n                        chkServiceCharge:item.ServiceCharge,\r\n                        chkTourismLevy:item.TourismLevy,\r\n                        chkVAT:item.VAT,\r\n                        chkArrivalDate:item.arrivalDate,\r\n                        chkCalculatedstay:item.calculatedstay,\r\n                        chkComingFrom:item.comingFrom,\r\n                        chkDailyRate:item.dailyRate,\r\n                        chkdepartureDate:item.departureDate,\r\n                        chkdiscounType:item.discounType,\r\n                        chkdiscountAmount:item.discountAmount,\r\n                        chkdob:item.dob,\r\n                        chkemail:item.email,\r\n                        chkfname:item.fname,\r\n                        chkgointTo:item.goingTo,\r\n                        chkgroup:item.group,\r\n                        chklname:item.lname,\r\n                        chkmiddlename:item.middlename,\r\n                        chkmob:item.mob,\r\n                        chkoccupation:item.occupation,\r\n                        chkpassportNum:item.passportNum,\r\n                        chkphone:item.phone,\r\n                        chkpostBillStatus:item.postBillStatus,\r\n                        chkrefID:item.refID,\r\n                        chkroomNumbers:item.roomNumbers,\r\n                        chkroomRate:item.roomRate,\r\n                        chkroomStatus:item.roomStatus,\r\n                        chkroomtypeName:item.roomtypeName,\r\n                        chkstatus:item.status,\r\n                        chkstay:item.stay,\r\n                        chktitle:item.title,\r\n                        chktransactionDate:item.transactionDate,\r\n                        chk_id:item._id\r\n\r\n\r\n                    })\r\n                    return 'ok'\r\n                })\r\n                \r\n                data.map((item)=>{\r\n                this.setState({\r\n                        org:item.group\r\n                    })\r\n                    return 'ok'\r\n                })\r\n                \r\n            })\r\n\r\n            fetch(`${getDepositsUrl}${guestID}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({guestDeposits:data})\r\n\r\n                var allPOS = data.map(item => item).reduce((deposits, obj) =>{\r\n                    return deposits + parseInt(obj.POSAmount)\r\n                }, 0);\r\n\r\n                var allCash = data.map(item => item).reduce((deposits, obj) =>{\r\n                    return deposits + parseInt(obj.CashAmount)\r\n                }, 0);\r\n\r\n                var allTransfer = data.map(item => item).reduce((deposits, obj) =>{\r\n                    return deposits + parseInt(obj.TransferAmount)\r\n                }, 0);\r\n\r\n                var allComp = data.map(item => item).reduce((deposits, obj) =>{\r\n                    return deposits + parseInt(obj.CompDebit)\r\n                }, 0);\r\n\r\n                var alDeposits = 0;\r\n                var allDeposits = alDeposits + allPOS + allCash + allTransfer + allComp;\r\n                this.setState({calDeposits:allDeposits})\r\n                sessionStorage.setItem('Deposits',allDeposits)\r\n            })\r\n\r\n            this.myTimer = setTimeout(() => {\r\n                var DO = parseInt(sessionStorage.getItem('Dockets'));\r\n                var DE = parseInt(sessionStorage.getItem('Deposits'));\r\n                var ACC = parseInt(sessionStorage.getItem('TotRmRate'));\r\n\r\n                var comS = 0;\r\n                comS = DO + ACC;\r\n\r\n                var bal = 0;\r\n                bal = DE - comS;\r\n\r\n                this.setState({\r\n                    newBal:Math.sign(bal),\r\n                    newBal2:bal\r\n                })\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    if(this.state.newBal===1&&this.state.org===''){\r\n                        this.setState({\r\n                            color:'blue',\r\n                            CheckOutBtn:'Guest Refund'\r\n                        })\r\n                    }\r\n                                        \r\n                    else if(this.state.newBal===-1&&this.state.org===''){\r\n                        this.setState({\r\n                            color:'red',\r\n                            CheckOutBtn:'Bill Settlement'\r\n                        })\r\n\r\n                    }\r\n\r\n                    else if(this.state.newBal===0&&this.state.org!==''){\r\n                        this.setState({\r\n                            color:'green',\r\n                            CheckOutBtn:'Check Out'\r\n                        })\r\n                    }\r\n\r\n                    else if(this.state.newBal===1&&this.state.org!==''){\r\n                        this.setState({\r\n                            color:'green',\r\n                            CheckOutBtn:'Check Out'\r\n                        })\r\n                    }\r\n\r\n                    else if(this.state.newBal===-1&&this.state.org!==''){\r\n                        this.setState({\r\n                            color:'green',\r\n                            CheckOutBtn:'Check Out'\r\n                        })\r\n                    }\r\n\r\n\r\n                },1000)\r\n                \r\n            },1000);\r\n\r\n            \r\n           \r\n            fetch(`${userName}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    loginDetails:data\r\n                })\r\n                data.map((item)=>{\r\n                    sessionStorage.setItem('dptmnt', item.department)\r\n                    return 'ok'\r\n                })\r\n                \r\n            })\r\n\r\n            this.myTimer = setTimeout(() => {\r\n                \r\n                var loginInfo = this.state.loginDetails;\r\n                var nameDetails = this.state.name;\r\n                if(loginInfo.some(item => item.name === nameDetails)){\r\n                    this.setState({Blogin:true})\r\n                }\r\n                else{\r\n                    this.setState({Blogin:false})\r\n                }\r\n            },1000);\r\n\r\n            fetch(`${getHotelAddress}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({\r\n                        Hotelname:item.HotelName,\r\n                        Hoteladdress:item.Address,\r\n                        Hotelphone:item.Phone\r\n                    \r\n                    })\r\n                    return 'ok'\r\n                })\r\n                \r\n            })\r\n\r\n            fetch(`${getWorkDate}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({transactionDate:item.date})\r\n                    return 'ok'\r\n                })\r\n                \r\n            \r\n            })\r\n\r\n\r\n           \r\n        },1000)\r\n        \r\n        \r\n    }\r\n    \r\n}\r\n\r\nexport default Guestbill;","import React,{Component} from 'react';\r\nimport '../Reception.css';\r\nimport Footer3 from '../../Footer3';\r\nimport Billinglogin from '../../Billinglogin';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport DatePicker from 'react-datepicker';\r\nimport addDays from 'date-fns/addDays';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport NumberFormat from 'react-number-format';\r\n\r\n\r\n\r\n\r\n\r\nconst roomchartUrl = \"https://zarvichdemo.localto.net/getrmstatus\";\r\nconst checkinguestUrl = \"https://zarvichdemo.localto.net/checkin?guest=\";\r\nconst postRmChrgToRooms = \"https://zarvichdemo.localto.net/postRmCharges\";\r\nconst getGlobalChrgesUrl = \"https://zarvichdemo.localto.net/globalRmChrges?getRef=\";\r\nconst getFirstNight = \"https://zarvichdemo.localto.net/getFirstNite?getRefID=\";\r\nconst delGlobalChrgesUrl = \"https://zarvichdemo.localto.net/delCharges\";\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\nconst globalrmChrgUrl = \"https://zarvichdemo.localto.net/globalRmPost\";\r\nconst postDailyOccuppancy = \"https://zarvichdemo.localto.net/postOccuppancy\";\r\nconst delAWD = \"https://zarvichdemo.localto.net/delworkdate\";\r\nconst postActiveDate = \"https://zarvichdemo.localto.net/postActive\";\r\nconst getWorkDate = \"https://zarvichdemo.localto.net/getActive\";\r\nconst getGuestBalances = \"https://zarvichdemo.localto.net/owingGuests\";\r\n\r\n\r\n\r\nclass BillingMenu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside RMConstructor\", props)\r\n\r\n        this.state={\r\n            roomchart:'',\r\n            guestrecord:'',\r\n            roomCharge:'',\r\n            GstID:'',\r\n            arrivDt:'',\r\n            dailyR:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            Time:'',\r\n            Day:'',\r\n            pass9:'',\r\n           \r\n            pword:false,\r\n            pword9:false,\r\n            wdate:false,\r\n            activeWorkDate:'',\r\n            transactionDatex:'',\r\n            TodayOccupancy:'',\r\n            guestBal:''\r\n            \r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n\r\n    }\r\n\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            activeWorkDate: date\r\n        });\r\n    }\r\n\r\n    rendercheckinDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.activeWorkDate}\r\n                    onChange={this.checkinhandleChange}\r\n                    minDate={new Date()}\r\n                    maxDate={addDays(new Date(),1)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    placeholderText='Select Work Date'\r\n                   \r\n                   \r\n                                        \r\n                    \r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    onOpenPword9(){\r\n        this.setState({\r\n            pword9:true\r\n        })\r\n    }\r\n    onClosePword9(){\r\n        this.setState({\r\n            pword9: false\r\n            \r\n        })\r\n        \r\n    }\r\n\r\n    AllowRefund9(){\r\n        if(this.state.pass9==='admin'){\r\n            this.onOpenwdate()\r\n            this.onClosePword9()\r\n           \r\n\r\n        }\r\n        else{\r\n            alert('Access Denied')\r\n        }\r\n    }\r\n\r\n\r\n    onOpenPword(){\r\n       \r\n        fetch(`${checkinguestUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            \r\n            this.setState({\r\n                TodayOccupancy:data,\r\n                \r\n            });\r\n            \r\n        });\r\n\r\n        this.myTimer = setTimeout(() => {\r\n            if(this.state.TodayOccupancy.length>0){\r\n                this.setState({\r\n                    pword: true\r\n    \r\n                });\r\n            }\r\n            else{\r\n                return(\r\n                    <>\r\n                        <Spinner animation=\"border\" variant=\"primary\" />\r\n                        <Spinner animation=\"border\" variant=\"danger\" />\r\n                        <Spinner animation=\"border\" variant=\"warning\" />\r\n                    </>\r\n                )\r\n            }\r\n            \r\n        },1000);\r\n\r\n\r\n       \r\n    }\r\n\r\n    onOpenwdate(){\r\n        this.setState({\r\n             wdate: true,\r\n             pass9:''\r\n             \r\n         })\r\n             \r\n     }\r\n\r\n    onClosePword(){\r\n        this.setState({\r\n             pword: false\r\n         })\r\n             \r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n    \r\n    }\r\n\r\n    onClosewdate(){\r\n        this.setState({\r\n            wdate: false\r\n         })\r\n             \r\n    }\r\n\r\n    AllowRefund(){\r\n        \r\n        this.onClosePword();\r\n        this.dailyOccupancy();\r\n        this.globalRmCharge();\r\n        \r\n    }\r\n\r\n    ExecuteWDate(){\r\n        \r\n        this.onClosewdate();\r\n        this.activateWorkDate();\r\n    }\r\n\r\n    async activateWorkDate(){\r\n        \r\n        try {\r\n            let delActiv = await fetch (`${delAWD}`, {\r\n                method:'delete'\r\n            \r\n            });\r\n            console.log('delActiv>  ' + delActiv);\r\n            \r\n            var workdate = {\r\n                date:`${this.state.activeWorkDate}`\r\n                \r\n            }\r\n            let workDateGo = await fetch(`${postActiveDate}` , {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n                body: JSON.stringify(\r\n                    workdate\r\n                )\r\n\r\n            });\r\n            console.log('workDateGo>  ' + workDateGo)\r\n            this.setState({activateWorkDate:''})\r\n            alert(\"Active Work Date has Changed\");\r\n            \r\n\r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n       \r\n        \r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    globalRmCharge(){\r\n        // var date = new Date();\r\n        // var currentTime = moment(date).hour();\r\n        // this.setState({Time:currentTime});\r\n        // if(currentTime){\r\n        fetch(`${checkinguestUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                var globalrmchrg = {\r\n                    fname:item.fname,\r\n                    lname:item.lname,\r\n                    group:item.group,\r\n                    refID:item.refID,\r\n                    arrivalDate:item.arrivalDate,\r\n                    departureDate:item.departureDate,\r\n                    roomNumbers:item.roomNumbers,\r\n                    dailyRate:item.dailyRate,\r\n                    VAT:item.VAT,\r\n                    TourismLevy:item.TourismLevy,\r\n                    ServiceCharge:item.ServiceCharge,\r\n                    tranDate:new Date(),\r\n                    description: 'Daily Room Rate',\r\n                    searchKey:'GuestBill',\r\n                    roomtypeName:item.roomtypeName\r\n    \r\n                }\r\n                \r\n                let result3 = fetch(`${globalrmChrgUrl}` , {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(\r\n                        globalrmchrg\r\n                    )\r\n    \r\n                });\r\n                console.log('result3>  ' + result3);\r\n                return 'ok'\r\n            })\r\n            alert('All Rooms have been billed Successfully. Click OK to close this Message. ')\r\n            alert('Please Change Active Work Date before starting a new shift')\r\n                \r\n        })\r\n            \r\n        \r\n    }\r\n\r\n    dailyOccupancy(){\r\n\r\n        var exportOccuppancy = {\r\n            OccuppancyDate: moment(this.state.transactionDatex).format('MMM DD YYYY'),\r\n            OccuppancyData: this.state.TodayOccupancy\r\n        };\r\n        let sendOccuppancy = fetch(`${postDailyOccuppancy}` , {\r\n            method: 'post',\r\n\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(\r\n                exportOccuppancy\r\n            )\r\n\r\n        });\r\n        console.log('sendOccuppancy>  ' + sendOccuppancy);\r\n        this.setState({\r\n            TodayOccupancy:''\r\n\r\n        })\r\n                      \r\n    }\r\n\r\n    async handleGlobalRoomCharge() {\r\n       \r\n       \r\n        try {\r\n            let result2 = await fetch(delGlobalChrgesUrl, {\r\n                method: 'delete',\r\n    \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n    \r\n                body: JSON.stringify(\r\n                    \r\n                    this.state.roomCharge.map(item => item)\r\n                        \r\n                )\r\n                    \r\n            });\r\n            console.log('result2>  ' + result2)\r\n            \r\n            let result = await fetch(postRmChrgToRooms, {\r\n                method: 'post',\r\n    \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n    \r\n                body: JSON.stringify(\r\n                    \r\n                    this.state.roomCharge.map(item => item)\r\n                        \r\n                )\r\n                    \r\n            });\r\n            console.log('result>  ' + result)\r\n                        \r\n            \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    renderRoomchart=((data)=>{\r\n        \r\n        if (data){\r\n            return data.map((item) =>{\r\n                const balanceData = this.state.guestBal.find(bal => bal.roomNumbers === item.roomNumbers);\r\n                data.sort((a, b) => a.roomNumbers - b.roomNumbers);\r\n                if(item.roomStatus!==\"green\"&&item.roomStatus!==\"black\"){\r\n                    return(\r\n                        <>\r\n                           \r\n                                <button className=\"btn alignroomsgreendll\" style={{backgroundColor:`${item.roomStatus}`}} onMouseOver={() => \r\n                                    fetch(`${getGlobalChrgesUrl}${item.refID}`, {method:'GET'})\r\n                                    .then((res) => res.json())\r\n                                    .then((data) => {\r\n                                        this.setState({\r\n                                            roomCharge:data\r\n                                            \r\n                                        })\r\n\r\n                                        data.map((item)=>{\r\n                                            sessionStorage.setItem('gstrefID',item.refID);\r\n                                            sessionStorage.setItem('getarrvDt',item.arrivalDate);\r\n                                            sessionStorage.setItem('getDailyRt',item.dailyRate);\r\n\r\n                                            return 'ok'\r\n                                        })\r\n\r\n                                        if(this.state.roomCharge.length===0){\r\n                                            fetch(`${getFirstNight}${item.refID}`, {method:'GET'})\r\n                                            .then((res) => res.json())\r\n                                            .then((data) => {\r\n                                                this.setState({\r\n                                                    roomCharge:data\r\n                                                    \r\n                                                    \r\n                                                })\r\n                                                data.map((item)=>{\r\n                                                    sessionStorage.setItem('gstrefID',item.refID);\r\n                                                    sessionStorage.setItem('getarrvDt',item.arrivalDate);\r\n                                                    sessionStorage.setItem('getDailyRt',item.dailyRate);\r\n    \r\n                                                    return 'ok'\r\n                                                })\r\n                                            })\r\n                                        }\r\n                                            \r\n                                        \r\n                                    })} \r\n                                    onClick={()=> {this.handleGlobalRoomCharge(); this.props.history.push(`/guestBill/${sessionStorage.getItem('gstrefID')}`)}}>\r\n                                   \r\n                                    <h5 className=\"card-title\">{item.roomNumbers}</h5>\r\n                                    <h6 className=\"card-subtitle mb-2 size\">{item.fname} {item.lname}</h6>\r\n                                    <h6 className=\"card-subtitle mb-2 size2\">{item.roomtypeName}</h6>\r\n                                    {balanceData && (\r\n                                        <h6 className=\"card-subtitle mb-2 size\">Bal: <NumberFormat value= {balanceData.guestBalance}thousandSeparator={true}displayType={\"text\"}/></h6>\r\n                                        \r\n                                    )}\r\n                                    \r\n                                </button>\r\n                            \r\n                        </>\r\n                    )\r\n                    \r\n                }\r\n\r\n                \r\n                else{\r\n                    return(\r\n                        <>\r\n                            \r\n                                <button className=\"btn alignroomsgreendll\" style={{backgroundColor:`${item.roomStatus}`}}>\r\n                                    <div className=\"card-body top\">\r\n                                        <h5 className=\"card-title\">{item.roomNumbers}</h5>\r\n                                        <h6 className=\"card-subtitle mb-2 size\">{item.fname} {item.lname}</h6>\r\n                                        <h6 className=\"card-subtitle mb-2 size2\">{item.roomtypeName}</h6>\r\n                                        {balanceData && (\r\n                                            <h6 className=\"card-subtitle mb-2 size\">Bal: <NumberFormat value= {balanceData.guestBalance}thousandSeparator={true}displayType={\"text\"}/></h6>\r\n                                        \r\n                                        )}\r\n                                    </div>\r\n                                </button>\r\n                            \r\n                        </>\r\n                    )\r\n                }\r\n                   \r\n            })\r\n        }\r\n        \r\n    }) \r\n    \r\n\r\n    render(){\r\n        console.log(\">>> Inside RMrender\", this.state)\r\n        var trDate = moment(this.state.transactionDatex).format('MMM DD YYYY');\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Billinglogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        return(\r\n            <>\r\n                <Footer3/>\r\n                \r\n                <div className=\"pagebody12\">\r\n                    <br/>\r\n                    {this.renderRoomchart(this.state.roomchart)}\r\n                    \r\n                </div>\r\n                \r\n                <div className=\"pagebody2\">\r\n                <center>\r\n                    <h6 style={{color:'yellow'}}>Active Work Date is: {trDate}</h6></center>\r\n                    <div>\r\n                   \r\n                        <button className=\"btn btn-danger space\" onClick={ () => this.props.history.push('./otherSales')}>Post Bills</button>\r\n                        <button className=\"btn btn-danger space\" onClick={ () => this.props.history.push('./RetireBar')}>Retire Sales Points</button>\r\n                        <button className=\"btn btn-danger space\" onClick={ () => this.props.history.push('./EndOfDay')}>Billing Reports</button>\r\n                        <button className=\"btn btn-success space\" onClick={ () => this.onOpenPword()}>Charge All Rooms</button>\r\n                        <label type = 'button' className=\"btn space\">{this.rendercheckinDate(this.state.arrivalDate)}</label>\r\n                        <button className=\"btn btn-success space\" onClick={ () => this.onOpenPword9()}>Change Work Date</button>\r\n                        <button className=\"btn btn-warning space\" onClick={ ()=> {this.props.history.push('/roomchart')}}>Goto Reception</button>\r\n                        <button className=\"btn btn-warning gap6\" onClick={ ()=> {this.props.history.push('/Laundry')}}>Goto Laundry</button>\r\n                        <button className=\"btn btn-danger space\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>    \r\n                        \r\n                    </div>\r\n                    <div className=\"row mt-3\">\r\n                        <center>\r\n                            <div className=\"col-3\">\r\n                                <h6 style = {{color:'purple',marginLeft:'480px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                                  \r\n                            </div>\r\n                            \r\n                        </center>\r\n                    </div>\r\n                </div>\r\n\r\n                <Modal open={this.state.pword} onClose={()=>this.onClosePword()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Attention {this.state.name}</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <h6 styles={{color:'red'}}>This Action will Bill all the rooms. Click Yes to Proceed or No to Stop</h6>\r\n                                    <button className=\"btn btn-warning formsize91\" onClick={()=>this.AllowRefund()}>Yes</button>\r\n                                    <button className=\"btn btn-warning formsize91\" onClick={()=>this.onClosePword()}>No</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal open={this.state.wdate} onClose={()=>this.onClosewdate()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Attention {this.state.name}</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <h6 styles={{color:'red'}}>Active Work Date will Change. Click Yes to Proceed or No to Cancel</h6>\r\n                                    <button className=\"btn btn-warning formsize91\" onClick={()=>this.ExecuteWDate()}>Yes</button>\r\n                                    <button className=\"btn btn-warning formsize91\" onClick={()=>this.onClosewdate()}>No</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                <Modal open={this.state.pword9} onClose={()=>this.onClosePword9()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Access Required</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <input type=\"password\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"pass9\" require placeholder=\"Enter Access Code\" value={this.state.pass9} onChange={this.handleChange}/>\r\n                                    <button disabled = {this.state.pass9===''} className=\"btn btn-warning formsize91\" onClick={()=>this.AllowRefund9()}>Login</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                \r\n            </>\r\n        )\r\n        \r\n    }\r\n\r\n    async componentDidMount(){\r\n               \r\n       console.log (\">>> Inside RMdidMount\")\r\n       const response = await axios.get(`${roomchartUrl}`)\r\n        const resp = await axios.get(`${checkinguestUrl}`)\r\n        const res = await axios.get(`${getGuestBalances}`)\r\n        this.setState({roomchart:response.data, guestrecord:resp.data, guestBal:res.data})\r\n\r\n        \r\n        this.myTimer = setInterval(() => {\r\n            fetch(`${roomchartUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({roomchart:data});\r\n\r\n            })\r\n\r\n            fetch(`${checkinguestUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({guestrecord:data});\r\n                \r\n            })\r\n        \r\n        },300000);\r\n        \r\n        \r\n        // this.myTimer = setInterval(() => {\r\n        //     var date = new Date();\r\n        //     var currentTime = moment(date).hour();\r\n        //     this.setState({Time:currentTime});\r\n        //     if(currentTime===0){\r\n        //         this.setState({\r\n        //             globalClock:'start',\r\n        //             retireClock:'start'\r\n        //         })\r\n\r\n        //     }\r\n\r\n            \r\n\r\n        // },1000);\r\n\r\n        // this.myTimer = setInterval(() => {\r\n        //     var date = new Date();\r\n        //     var currentTime = moment(date).hour();\r\n        //     this.setState({Time:currentTime});\r\n        //     if(currentTime===0){\r\n        //         this.setState({\r\n        //             retireClock:'End'\r\n        //         })\r\n\r\n        //     }\r\n\r\n            \r\n\r\n        // },1000);\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n            \r\n                        \r\n        },1000);\r\n\r\n        await fetch(`${getWorkDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({transactionDatex:item.date})\r\n                return 'ok'\r\n            })\r\n            \r\n           \r\n        })\r\n\r\n        this.myTimer = setInterval(() => {\r\n            fetch(`${getWorkDate}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({transactionDatex:item.date})\r\n                    return 'ok'\r\n                })\r\n                \r\n            \r\n            })\r\n            \r\n        },1000);\r\n        \r\n\r\n    }\r\n\r\n}\r\nexport default BillingMenu;","import React, { Component } from 'react';\r\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\r\nimport format from 'date-fns/format';\r\nimport parse from 'date-fns/parse';\r\nimport startOfWeek from 'date-fns/startOfWeek';\r\nimport getDay from 'date-fns/getDay';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport DatePicker from 'react-datepicker';\r\nimport { locales } from 'moment';\r\nimport addDays from 'date-fns/addDays';\r\nimport './Reception.css';\r\nimport {Link} from 'react-router-dom';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport FLogin from '../FLogin';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport moment from 'moment';\r\nimport NumberFormat from 'react-number-format';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst localizer = dateFnsLocalizer({\r\n   format,\r\n   parse,\r\n   startOfWeek,\r\n   getDay,\r\n   locales,\r\n})\r\nconst PostReservation = \"https://zarvichdemo.localto.net/hreserveNow\";\r\nconst GetReservation = \"https://zarvichdemo.localto.net/reservation\";\r\nconst RoomUrl = \"https://zarvichdemo.localto.net/getrmstatus\";\r\nconst OccupiedRoomUrl = \"https://zarvichdemo.localto.net/checkin?guest=\";\r\nconst userName = \"https://zarvichdemo.localto.net/fofUserInfo\";\r\nconst getPaymentMethods = \"https://zarvichdemo.localto.net/paymentMethods\";\r\nconst postOtherSalesUrl = \"https://zarvichdemo.localto.net/club\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\nconst getWorkDate = \"https://zarvichdemo.localto.net/getActive\";\r\n\r\nclass Reservation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\">>> inside RsvCobtructor\", props)\r\n\r\n        console.log(\">>> inside ReservContructor\", props)\r\n        this.state = {\r\n            events: [],\r\n            _id:Math.floor(Math.random()*100000000),\r\n            fname:'',\r\n            lname:'',\r\n            allDay: '',\r\n            start: '',\r\n            end: '',\r\n            room: '',\r\n            title:'',\r\n            phone:'',\r\n            rsvAmount:'',\r\n            displayAllRoomNums:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            displayOccupiedRoomNums:'',\r\n            othersedit:false,\r\n            printBTN:'Print',\r\n            displayPaymentMethods:'',\r\n            paymentMethod:'',\r\n            description1:'Room Reservation',\r\n            memo:'',\r\n            email:'None',\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:'',\r\n            transactionDate:''\r\n            \r\n            \r\n            \r\n        };\r\n        this.starthandleChange = this.starthandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenOthrsModal(){\r\n        this.setState({\r\n            othersedit: true\r\n\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseOthrspModal(){\r\n        this.setState({\r\n            othersedit: false\r\n        })\r\n        \r\n    }\r\n    \r\n    sendtoprinterOthrs(){\r\n        if(this.state.printBTN==='Print'){\r\n            window.print();\r\n            this.setState({printBTN:'Close'})\r\n        }\r\n        else if(this.state.printBTN==='Close'){\r\n            this.setState({othersedit: false})      \r\n            this.setState({printBTN:'Print'})\r\n\r\n            this.handleResvSubmit();\r\n            this.handleSubmit()\r\n            \r\n        }\r\n        \r\n       \r\n    }\r\n\r\n    handlePayMethData=(event)=>{\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n        if(this.state.rsvAmount!==null){\r\n            fetch(`${getPaymentMethods}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayPaymentMethods:data\r\n                })\r\n            })\r\n        }\r\n\r\n       \r\n\r\n    }\r\n\r\n    renderPayMeth(data){\r\n        if(data) {\r\n            return data.map((item) => {\r\n                return(\r\n                    <>\r\n                        <option key={item.method} value={item.method}>\r\n                            {item.method}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n           \r\n        })\r\n        \r\n    }\r\n\r\n    handleChange2 = (event) => {\r\n        this.setState({start:''});\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n           \r\n        })\r\n\r\n        fetch(`${OccupiedRoomUrl}${event.target.value}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({start:new Date(item.departureDate)})\r\n                return 'ok'\r\n            })\r\n        })\r\n\r\n        \r\n        \r\n    }\r\n\r\n    starthandleChange(date) {\r\n        this.setState({\r\n            start: date\r\n        });\r\n        var newtitle =(this.state.room+  ' '   +this.state.fname+  ' '  +this.state.lname+ ' ' +this.state.phone)\r\n        this.setState({title:newtitle})\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            end: date\r\n        });\r\n    }\r\n\r\n    renderstartDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.start}\r\n                    onChange={this.starthandleChange}\r\n                    minDate={new Date()}\r\n                    // maxDate={addDays(new Date(),26)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize51\"\r\n                    placeholderText=\"Arrival Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    renderendDate() {\r\n        return (\r\n            <div >\r\n                <DatePicker\r\n                    selected={this.state.end}\r\n                    onChange={this.endhandleChange}\r\n                    minDate={addDays(this.state.start,1)}\r\n                    // maxDate={addDays(new Date(),31)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize51\"\r\n                    placeholderText=\"Departure Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleroomData2=(event)=>{\r\n        this.setState({\r\n            [event.target.name]:event.target.value,\r\n            allDay:true\r\n        })\r\n        \r\n        if(this.state.fname!==null){\r\n            fetch(`${RoomUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayAllRoomNums:data\r\n                })\r\n            })\r\n            fetch(`${OccupiedRoomUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayOccupiedRoomNums:data\r\n                })\r\n            })\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    async handleSubmit() {\r\n          \r\n        try {\r\n            if(this.state.paymentMethod===\"POS\"){\r\n                var billingPOSSales = {\r\n                    docketNum:'BillSales'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.rsvAmount}`,\r\n                    POSAmount:`${this.state.rsvAmount}`,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    description:`${this.state.description1}`,\r\n                    group:`${this.state.group}`,\r\n                    groupEmail:`${this.state.email}`,\r\n                    groupPhone:`${this.state.phone}`,\r\n                    refID:`${this.state._id}`,\r\n                    department: \"Reservation\",\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result1 = await fetch(postOtherSalesUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        billingPOSSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result1>  ' + result1)\r\n\r\n                               \r\n            }\r\n            \r\n            if(this.state.paymentMethod===\"Cash\"){\r\n                var billingCashSales = {\r\n                    docketNum:'BillSales'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.rsvAmount}`,\r\n                    POSAmount:0,\r\n                    CashAmount:`${this.state.rsvAmount}`,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    description:`${this.state.description1}`,\r\n                    group:`${this.state.group}`,\r\n                    groupEmail:`${this.state.email}`,\r\n                    groupPhone:`${this.state.phone}`,\r\n                    refID:`${this.state._id}`,\r\n                    department: \"Reservation\",\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                   \r\n                }\r\n                let result2 = await fetch(postOtherSalesUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        billingCashSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2>  ' + result2)\r\n                \r\n               \r\n            }\r\n\r\n           \r\n           \r\n\r\n            if(this.state.paymentMethod===\"Transfer\"){\r\n                var billingTransferSales = {\r\n                    docketNum:'BillSales'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.rsvAmount}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:`${this.state.rsvAmount}`,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    description:`${this.state.description1}`,\r\n                    group:`${this.state.group}`,\r\n                    groupEmail:`${this.state.email}`,\r\n                    groupPhone:`${this.state.phone}`,\r\n                    refID:`${this.state._id}`,\r\n                    department: \"Reservation\",\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                   \r\n                }\r\n                let result3 = await fetch(postOtherSalesUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        billingTransferSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3>  ' + result3)\r\n\r\n            }\r\n           \r\n\r\n            if(this.state.paymentMethod===\"Complimentary\"){\r\n                var billingComplSales = {\r\n                    docketNum:'BillSales'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.rsvAmount}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:`${this.state.rsvAmount}`,\r\n                    roomDebit:0,\r\n                    description:`${this.state.description1}`,\r\n                    group:`${this.state.group}`,\r\n                    groupEmail:`${this.state.email}`,\r\n                    groupPhone:`${this.state.phone}`,\r\n                    refID:`${this.state._id}`,\r\n                    department: \"Reservation\",\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                   \r\n                }\r\n                let result4 = await fetch(postOtherSalesUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        billingComplSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result4>  ' + result4)\r\n\r\n                \r\n            }\r\n\r\n            \r\n            this.setState({description1:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            \r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async handleResvSubmit() {\r\n       \r\n        try {\r\n           \r\n            var events = {\r\n                _id:`${this.state._id}`,\r\n                resID:`${this.state._id}`,\r\n                fname:`${this.state.fname}`,\r\n                lname:`${this.state.lname}`,\r\n                allDay: `${this.state.allDay}`,\r\n                start: `${this.state.start}`,\r\n                end: `${this.state.end}`,\r\n                start3: moment(`${this.state.start}`).format('YYYY-DD-MMM'),\r\n                end3: moment(`${this.state.end}`).format('YYYY-DD-MMM'),\r\n                Tdate: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                title: `${this.state.title}`,\r\n                phone: `${this.state.phone}`,\r\n                rsvAmount:`${this.state.rsvAmount}`,\r\n                room: `${this.state.room}`,\r\n                memo: `${this.state.memo}`,\r\n            }\r\n            let result = await fetch(PostReservation, {\r\n                method: 'post',\r\n    \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n    \r\n                body: JSON.stringify(\r\n                    \r\n                    events\r\n                        \r\n                )\r\n                    \r\n            });\r\n            console.log('result>  ' + result)\r\n            alert(\"Reservation made for room \" +this.state.title);\r\n            this.setState({\r\n                fname:'',\r\n                lname:'',\r\n                allDay: '',\r\n                start: '',\r\n                end: '',\r\n                title: '',\r\n                room:'',\r\n                phone:'',\r\n                rsvAmount:'',\r\n                displayAllRoomNums:'',\r\n                _id:'',\r\n                memo:''\r\n                \r\n            })\r\n            fetch(`${GetReservation}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n            this.setState({\r\n                events:data\r\n                \r\n            })\r\n            this.myTimer = setTimeout(() => {\r\n                this.setState({\r\n                    _id:Math.floor(Math.random()*100000000)\r\n                })\r\n            },1000);\r\n           \r\n           \r\n        })\r\n            \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    renderVacantRooms(data){\r\n        if(data) {\r\n           data.sort((a, b) => a.roomNumbers - b.roomNumbers);\r\n            return data.map((item, index) => {\r\n                if(item.roomStatus===\"green\"){\r\n                    \r\n                    return(\r\n                        <>  \r\n                            \r\n                            <option key={index} value={item.roomNumbers}>\r\n                               {item.roomNumbers} - {item.roomtypeName}\r\n                            </option>\r\n                        </>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <>\r\n                           \r\n                        </>\r\n                    )\r\n                }\r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n    renderOccuppiedRooms(data){\r\n        if(data) {\r\n           data.sort((a, b) => a.roomNumbers - b.roomNumbers);\r\n            return data.map((item, index) => {\r\n               \r\n                    \r\n                return(\r\n                    <>  \r\n                        <option key={index} value={item.roomNumbers}>\r\n                        {item.roomNumbers} - {item.roomtypeName}\r\n                        </option>\r\n                    </>\r\n                )\r\n                \r\n                                \r\n            })\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log (\">>> Inside Rsvdetails\", this.state)\r\n        \r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <FLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        return (\r\n            \r\n            <div  className=\"background993\">\r\n                <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-50px'}}>Add Reservation </h4>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h6 style = {{color:'purple',marginLeft:'480px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                        </div>\r\n                </div>\r\n                <h4 style = {{color:'rgb(23, 23, 71)',marginLeft:'50px', marginBottom:'-40px'}}> </h4>\r\n                \r\n                <div className=\"formdesign510\">\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"fname\" require placeholder=\"Firstname\" value={this.state.fname} onChange={this.handleroomData2}/>\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"lname\" require placeholder=\"Surname\" value={this.state.lname} onChange={this.handleChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"col-2\">\r\n                            <input type=\"number\" className=\"form-control mb-3 formsize51\" name=\"phone\" require placeholder=\"Phone\" value={this.state.phone} onChange={this.handleChange}/>\r\n                        </div>\r\n\r\n                        <select className=\"form-select  mb-3 formsize510\" name=\"room\" onChange={this.handleChange2}>\r\n                            <option defaultValue=''>Vacant Room</option>\r\n                            {this.renderVacantRooms(this.state.displayAllRoomNums)}\r\n                            <option defaultValue=''>Occupied Rooms</option>\r\n                            {this.renderOccuppiedRooms(this.state.displayOccupiedRoomNums)}\r\n                            <hr/>\r\n                        </select>\r\n                        \r\n                        <div className=\"col-2\">\r\n                            <label>\r\n                                {this.renderstartDate(this.state.start)}\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <label>\r\n                                {this.renderendDate(this.state.end)}\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <input type=\"number\" className=\"form-control mb-3 formsize51\" name=\"rsvAmount\" require placeholder=\"Enter Amount\" value={this.state.rsvAmount} onChange={this.handlePayMethData}/>\r\n                        </div>\r\n                        <select type =\"button\" className=\"form-select formsize3bb mb-2 btn btn-primary mt-3 spaceleft\" name=\"paymentMethod\" onChange={this.handleChange}>\r\n                            <option selected value=''>Payment Method</option>\r\n                            {this.renderPayMeth(this.state.displayPaymentMethods)}\r\n                        </select>\r\n                        <div className=\"col-2\">\r\n                            <textarea type=\"text\" className=\"form-control mb-3 textareawidth formsize51\" name=\"memo\" rows='2' require placeholder=\"Enter Comment\" value={this.state.memo} onChange={this.handleChange}/>\r\n                        </div>\r\n                        <center>\r\n                            <span>\r\n                                <button disabled={this.state.fname===''||this.state.room===''||this.state.phone===''||this.state.start===''||this.state.end===''||this.state.paymentMethod==='' || this.state.rsvAmount === ''} className=\"btn btn-warning\" onClick={ () => this.onOpenOthrsModal ()} >Reserve</button>\r\n                                <button className=\"btn btn-primary gap\" onClick={ () => this.props.history.push('./EditReservation')}>Goto Reservation</button>\r\n                                <Link to=\"/roomchart\">\r\n                                    <button className=\"btn btn-danger space\">Close</button>\r\n                                </Link>\r\n                            </span>\r\n                        </center>\r\n                        \r\n                    </div>\r\n                    <Modal open={this.state.othersedit}>\r\n                        <div className='backgroundRetRep'>\r\n                            <div>\r\n                                <img src= \"https://i.ibb.co/qm1Bj67/Whats-App-Image-2023-10-04-at-9-32-40-PM.jpg\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                            </div>\r\n                            <center>\r\n                                <h6>{this.state.Hotelname}</h6>\r\n                                <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                                <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                            </center>\r\n\r\n                        </div>\r\n                        <table className=\"table table-hover\">\r\n                            \r\n                            <thead className=\"table-warning\">\r\n                                <tr>\r\n                                    <th className=\"adjust50\">Description</th>\r\n                                    {/* <th className=\"adjust50\">Organisation</th> */}\r\n                                    <th className=\"adjust50\">Payment Method</th>\r\n                                    <th className=\"adjust50\">Amount Paid(NGN)</th>\r\n                                                                            \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"table table-hover\">\r\n                                <tr>\r\n                                    <td className=\"table-light table-striped adjust2 alignTet\"><b>{this.state.description1}</b></td>\r\n                                    {/* <td className=\"table-light table-striped adjust2 alignTet\"><b>{this.state.orgName}</b></td> */}\r\n                                    <td className=\"table-light table-striped adjust2 alignTet\"><b>{this.state.paymentMethod}</b></td>\r\n                                    <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.rsvAmount)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                                                    \r\n                                </tr>\r\n                                \r\n                            </tbody>\r\n                            \r\n                        </table>\r\n                        <div className=\"printing\">\r\n                            <center>\r\n                                <button className=\"btn btn-primary\" style={{height:'40px'}}onClick={()=>{this.sendtoprinterOthrs()}}>\r\n                                    <p>{this.state.printBTN}</p>\r\n                                </button>\r\n                            </center>\r\n                            \r\n                        </div>\r\n                        \r\n                    </Modal>\r\n                    \r\n                        <Calendar \r\n                            localizer={localizer} events={this.state.events} \r\n                            startAccessor=\"start\" endAccessor= \"end\" style={{height: 500, margin: \"50px\"}}\r\n                            selectable={true}\r\n                            onSelectEvent={this.handleEventSelection} \r\n                        />       \r\n                    \r\n                    \r\n                </div>\r\n                 \r\n            </div>\r\n        );\r\n    }\r\n    async componentDidMount(){\r\n        console.log(\">>> Inside RsvDidMount\", this.state)\r\n        fetch(`${GetReservation}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                events:data\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        await fetch(`${getWorkDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({transactionDate:item.date})\r\n                return 'ok'\r\n            })\r\n            \r\n           \r\n        })\r\n\r\n        this.myTimer = setInterval(() => {\r\n            fetch(`${getWorkDate}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({transactionDate:item.date})\r\n                    return 'ok'\r\n                })\r\n                \r\n               \r\n            })\r\n            \r\n        },1000);\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n    }\r\n}\r\n\r\nexport default Reservation;","import React, { Component } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport addDays from 'date-fns/addDays';\r\nimport './Reception.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport moment from 'moment';\r\nimport 'react-responsive-modal/styles.css';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport FLogin from '../FLogin';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nconst GetReservationID = \"https://zarvichdemo.localto.net/reservation?resavtnID=\";\r\nconst PutReservation =\"https://zarvichdemo.localto.net/reservatn\"\r\nconst DelReservation =\"https://zarvichdemo.localto.net/resvntdel\"\r\nconst RoomUrl2 = \"https://zarvichdemo.localto.net/getrmstatus\";\r\nconst RoomUrl3 = \"https://zarvichdemo.localto.net/newRoomStat?wrtRmNum=\";\r\nconst userName = \"https://zarvichdemo.localto.net/fofUserInfo\";\r\nconst getRSVPwrtDt = \"https://zarvichdemo.localto.net/getReservationBydate?selectDate=\";\r\n\r\nclass EditReservation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\">>> inside ERsvCobtructor\", props)\r\n\r\n       \r\n        this.state = {\r\n            eventsedit:[],\r\n            displayeventsedit: [],\r\n            displaysearch: '',\r\n            searchByName: '',\r\n            searchByDate:'',\r\n            searchByNumber: '',\r\n            displayAllRoomNums:'',\r\n            edit: false,\r\n            checkIn: false,\r\n            _id:'',\r\n            resID:'',\r\n            fname:'',\r\n            lname:'',\r\n            allDay:'',\r\n            end:'',\r\n            start:'',\r\n            room:'',\r\n            title:'',\r\n            start2:'',\r\n            end2:'',\r\n            phone:'',\r\n            rsvAmount:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n\r\n\r\n            \r\n            \r\n        };\r\n        this.starthandleChange = this.starthandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenModaledit(){\r\n        this.setState({\r\n            edit: true\r\n        })\r\n        fetch(`${GetReservationID}${sessionStorage.getItem('getRsID')}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            data.map((item) => {\r\n                var startDt = moment(item.start).format('YYYY-DD-MMM')\r\n                var endDt = moment(item.end).format('YYYY-DD-MMM')\r\n                this.setState({\r\n                    _id:item._id,\r\n                    resID:item.resID,\r\n                    fname:item.fname,\r\n                    lname:item.lname,\r\n                    allDay:item.allDay,\r\n                    end:endDt,\r\n                    start:startDt,\r\n                    room:item.room,\r\n                    phone:item.phone\r\n                    \r\n                })\r\n                return 'ok'\r\n            })  \r\n            \r\n        })\r\n        \r\n    }\r\n\r\n    onOpenModalcheckin(){\r\n        var id = sessionStorage.getItem('getRoomNum');\r\n        fetch(`${RoomUrl3}${id}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n           data.map((item) =>{\r\n               if(item.fname||item.lname||item.roomStatus!=='green'){\r\n                   alert(\"Room \"+item.roomNumbers+\" is currently occupied or needs cleaning\");\r\n                    this.props.history.push('/EditReservation')\r\n               }\r\n               \r\n               if(item.roomStatus==='green'){\r\n                this.props.history.push(`/form/${sessionStorage.getItem('getRoomNum')}`)\r\n               }\r\n               return 'ok'\r\n           })\r\n            \r\n        })\r\n        \r\n       \r\n    }\r\n\r\n    onCloseModaledit(){\r\n        this.setState({\r\n            edit: false,\r\n            \r\n        })\r\n        fetch(`${GetReservationID}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                eventsedit:data\r\n            })\r\n            \r\n        })\r\n\r\n    }\r\n\r\n    onCloseModalcheckin(){\r\n        this.setState({\r\n            checkIn: false\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    handleSearchChangeByName = (e) => {\r\n        \r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n\r\n        if(e.target.value === \"\"){\r\n            this.setState({displayeventsedit: ''})\r\n        }\r\n\r\n        else{this.filterItemsByName();}\r\n\r\n        \r\n    }\r\n\r\n    // handleSearchChangeByDate = (e) => {\r\n    //     this.setState({\r\n    //         [e.target.name]: e.target.value\r\n    //     })\r\n\r\n    //     this.filterItemsByDate();\r\n    // }\r\n\r\n    starthandleChange(date) {\r\n        this.setState({\r\n            start2: date\r\n        });\r\n\r\n        if(this.state.searchByDate === \"\") {\r\n            this.setState({displayeventsedit: ''})\r\n        }\r\n\r\n\r\n        else{this.filterItemsByDate();}\r\n        \r\n    }\r\n\r\n    renderstartDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.start2}\r\n                    onChange={this.starthandleChange}\r\n                    minDate={new Date()}\r\n                    maxDate={addDays(new Date(),26)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize53\"\r\n                    placeholderText=\"Edit Arrival\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderstartDateSearch() {\r\n       \r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.searchByDate}\r\n                    onChange={this.handleSearchChangeByDate}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"yyyy-dd-MMM\"\r\n                    className=\"form-control mb-3 formsize53\"\r\n                    placeholderText=\"Search by Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleSearchChangeByNumber = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n\r\n        if(e.target.value === \"\") {\r\n            this.setState({displayeventsedit: ''})\r\n        }\r\n\r\n        else{this.filterItemsByPhone();}\r\n\r\n        \r\n    }\r\n\r\n    handleSearchChangeByDate = (date) => {\r\n        \r\n        this.setState({\r\n            searchByDate: date\r\n            \r\n        });\r\n\r\n        setTimeout(() => {\r\n            if(this.state.searchByDate === \"\") {\r\n                this.setState({displayeventsedit: ''})\r\n            }\r\n            else{\r\n                const findDt = moment(this.state.searchByDate).format('YYYY-DD-MMM')\r\n                fetch(`${getRSVPwrtDt}${findDt}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({displayeventsedit:data});\r\n            \r\n\r\n                });\r\n            }\r\n            \r\n        }, 1000);\r\n\r\n        \r\n\r\n       \r\n\r\n        \r\n    }\r\n\r\n    filterItemsByName(){\r\n        const searchItems = this.state.eventsedit;\r\n        const searchName = this.state.searchByName;\r\n\r\n        const filterN = searchItems.filter(\r\n            item => item.fname.toLowerCase().includes(searchName.toLowerCase()) ||\r\n            item.lname.toLowerCase().includes(searchName.toLowerCase())\r\n        );\r\n        this.setState({displayeventsedit: filterN})\r\n        \r\n        \r\n    }\r\n\r\n\r\n    \r\n    filterItemsByPhone(){\r\n        const searchItems = this.state.eventsedit;\r\n        const searchPhone = this.state.searchByNumber;\r\n        const filterN = searchItems.filter(item => item.phone.toLowerCase().includes(searchPhone.toLowerCase()));\r\n    \r\n        this.setState({displayeventsedit: filterN})\r\n    }\r\n\r\n    handleChange2(){\r\n        if(this.state.room!==''||this.state.fname!==''){\r\n            var newtitle =(this.state.room+  ' '   +this.state.fname+  ' '  +this.state.lname+ ' ' +this.state.phone)\r\n            this.setState({title:newtitle})\r\n        }\r\n        \r\n        if(this.state.start2===''&&this.state.end2===''){\r\n            var start3 = new Date(this.state.start);\r\n            var end3 = new Date(this.state.end);\r\n            this.setState({\r\n                start2:start3,\r\n                end2:end3\r\n            })\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    \r\n\r\n    handleroomData2=(event)=>{\r\n        this.setState({\r\n            [event.target.name]:event.target.value,\r\n            allDay:true\r\n        })\r\n       \r\n        \r\n    }\r\n\r\n    \r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            end2: date\r\n        });\r\n    }\r\n\r\n    \r\n    \r\n    renderendDate() {\r\n        return (\r\n            <div >\r\n                <DatePicker\r\n                    selected={this.state.end2}\r\n                    onChange={this.endhandleChange}\r\n                    minDate={addDays(this.state.start2,1)}\r\n                    maxDate={addDays(new Date(),31)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize53 moveagain\"\r\n                    placeholderText=\"Edit Departure\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n    async handleResvUpdate() {\r\n       \r\n        try {\r\n            var id = sessionStorage.getItem('getRsID')\r\n           \r\n            var resUpdate = {\r\n                \r\n                resID:`${this.state.resID}`,\r\n                fname:`${this.state.fname}`,\r\n                lname:`${this.state.lname}`,\r\n                allDay:`${this.state.allDay}`,\r\n                end:moment(`${this.state.end2}`).format('YYYY-DD-MMM'),\r\n                start:moment(`${this.state.start2}`).format('YYYY-DD-MMM'),\r\n                title:`${this.state.title}`,\r\n                phone:`${this.state.phone}`,\r\n                room:`${this.state.room}`\r\n            }\r\n            let result = await fetch(`${PutReservation}/${id}`, {\r\n                method: 'put',\r\n    \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n    \r\n                body: JSON.stringify(\r\n                    \r\n                    resUpdate\r\n                        \r\n                )\r\n                    \r\n            });\r\n            console.log('result>  ' + result)\r\n            alert(\"Reservation updated for Room \" +this.state.title);\r\n            this.setState({\r\n                fname:'',\r\n                _id:'',\r\n                lname:'',\r\n                allDay: true,\r\n                start: '',\r\n                end: '',\r\n                end2:'',\r\n                start2:'',\r\n                room: '',\r\n                title:'',\r\n                phone:'',\r\n                displayAllRoomNums:'',\r\n                eventsedit:''\r\n            })\r\n          \r\n            \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    renderVacantRooms(data){\r\n        if(data) {\r\n           data.sort((a, b) => a.roomNumbers - b.roomNumbers);\r\n            return data.map((item, index) => {\r\n                if(item.roomStatus===\"green\"){\r\n                    return(\r\n                        <>\r\n                            <option key={index} value={item.roomNumbers}>\r\n                                {item.roomNumbers} - {item.roomtypeName}\r\n                            </option>\r\n                        </>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <>\r\n                           \r\n                        </>\r\n                    )\r\n                }\r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n    deletRSV(){\r\n        let delcodersv = sessionStorage.getItem('getRsID')\r\n        fetch(`${DelReservation}/${delcodersv}`, {\r\n            method: 'delete',\r\n\r\n                            \r\n        });\r\n        alert('Reservation Cancelled')\r\n    }\r\n\r\n    renderEvents=(data)=>{\r\n        if(data){\r\n            \r\n            data.sort((a, b) => new Date(a.start) - new Date(b.start));\r\n            return data.map((item)=>{\r\n                var startfmt = moment(item.start).format('YYYY-DD-MMM')\r\n                var endfmt = moment(item.end).format('YYYY-DD-MMM')\r\n                var Tdatefmt = moment(item.Tdate).format('YYYY-DD-MMM')\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                                \r\n                            <td className=\"table-light table-striped adjust2xxxx\">{startfmt}</td>\r\n                            <td className=\"table-light table-striped adjust2xxxx\">{endfmt}</td>\r\n                            <td className=\"table-light table-striped adjust2xxxx\">{Tdatefmt}</td>\r\n                            <td className=\"table-light table-striped adjust2xxxx\">{item.fname}</td>\r\n                            <td className=\"table-light table-striped adjust2xxxx\">{item.lname}</td>\r\n                            <td className=\"table-light table-striped adjust2xxxx\">{item.phone}</td>\r\n                            <td className=\"table-light table-striped adjust2xxxx\">{item.room}</td>\r\n                            <td className=\"table-light table-striped adjust2xxxx\">{item.rsvAmount}</td>\r\n                            <td className=\"table-light table-striped adjust2xxxx\">{item.memo}</td>\r\n                            <td className=\"table-light table-stripedadjust10\"><button className=\"btn btn-primary textcolor\" onMouseOver={()=>sessionStorage.setItem('getRsID', item.resID)} onClick={()=>{this.onOpenModaledit()}}>Edit</button></td>\r\n                            <td className=\"table-light table-stripedadjust10\"><button className=\"btn btn-primary textcolor\" onMouseOver={()=>sessionStorage.setItem('getRsID', item.resID)} onClick={()=>{this.deletRSV()}}>Cancel</button></td>\r\n                            <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-primary textcolor\" onMouseOver={()=>{sessionStorage.setItem('getRoomNum', item.room);sessionStorage.setItem('getrsvAmount', item.rsvAmount);sessionStorage.setItem('getrsvCode', item.resID)}} onClick={()=>{this.onOpenModalcheckin()}}>Check in</button></td>\r\n                                \r\n                        </tr>\r\n                    </>\r\n                )\r\n                \r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log (\">>> Inside ERsvdetails\", this.state)\r\n\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <FLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <div  className=\"background993\">\r\n                <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-50px'}}>Hotel Reservation </h4>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h6 style = {{color:'purple',marginLeft:'480px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                        </div>\r\n                </div>\r\n                <h4 style = {{color:'rgb(23, 23, 71)',marginLeft:'50px', marginBottom:'-40px'}}> </h4>\r\n                \r\n                <div className=\"formdesign510\">\r\n                    \r\n                    <div className=\"row\">\r\n                        \r\n                        <div className=\"col-2\">\r\n                            <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"searchByName\" require placeholder=\"Search By Name\" value={this.state.searchByName} onChange={this.handleSearchChangeByName}/>\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <input type=\"number\" className=\"form-control mb-3 formsize51\" name=\"searchByNumber\" require placeholder=\"Search By Phone\" value={this.state.searchByNumber} onChange={this.handleSearchChangeByNumber}/>\r\n                        </div>\r\n\r\n                        {/* <div className=\"col-2\">\r\n                            <input type=\"date\" className=\"form-control mb-3 formsize51\" name=\"searchByDate\" require placeholder=\"Search By Date\" value={this.state.searchByDate} onChange={this.handleSearchChangeByNumber}/>\r\n                        </div> */}\r\n\r\n                        <div className=\"col-2\">\r\n                            <label>\r\n                                {this.renderstartDateSearch(this.state.searchByDate)}\r\n                            </label>\r\n                        </div>\r\n                        {/* <div className=\"col-2\">\r\n                            <label>\r\n                                {this.renderendDate(this.state.end)}\r\n                            </label>\r\n                        </div> */}\r\n                        {/* <div className=\"col-2\">\r\n                            <input type=\"number\" className=\"form-control mb-3 formsize51\" name=\"rsvAmount\" require placeholder=\"Enter Amount\" value={this.state.rsvAmount} onChange={this.handlePayMethData}/>\r\n                        </div>\r\n                        <select type =\"button\" className=\"form-select formsize3bb mb-2 btn btn-primary mt-3 spaceleft\" name=\"paymentMethod\" onChange={this.handleChange}>\r\n                            <option selected value=''>Payment Method</option>\r\n                            {this.renderPayMeth(this.state.displayPaymentMethods)}\r\n                        </select>\r\n                        <div className=\"col-2\">\r\n                            <textarea type=\"text\" className=\"form-control mb-3 textareawidth formsize51\" name=\"memo\" rows='2' require placeholder=\"Enter Comment\" value={this.state.memo} onChange={this.handleChange}/>\r\n                        </div>\r\n                        <center>\r\n                            <span>\r\n                                <button disabled={this.state.fname===''||this.state.room===''||this.state.phone===''||this.state.start===''||this.state.end===''||this.state.paymentMethod==='' || this.state.rsvAmount === ''} className=\"btn btn-warning\" onClick={ () => this.onOpenOthrsModal ()} >Reserve</button>\r\n                                <button className=\"btn btn-primary gap\" onClick={ () => this.props.history.push('./EditReservation')}>Goto Reservation</button>\r\n                                <Link to=\"/roomchart\">\r\n                                    <button className=\"btn btn-danger space\">Close</button>\r\n                                </Link>\r\n                            </span>\r\n                        </center> */}\r\n                        \r\n                        \r\n                    </div>\r\n                    \r\n                    \r\n                    <div>\r\n                        <table className=\"table table-hover\">\r\n                        \r\n                            <thead className=\"table-warning\">\r\n                                <tr>\r\n                                    <th className=\"adjust5\">Arrival Date</th>\r\n                                    <th className=\"adjust5\">Departure Date</th>\r\n                                    <th className=\"adjust5\">Reservation Date</th>\r\n                                    <th className=\"adjust5\">Firstname</th>\r\n                                    <th className=\"adjust5\">Surname</th>\r\n                                    <th className=\"adjust5\">Phone Num</th>\r\n                                    <th className=\"adjust5\">Room Num</th>\r\n                                    <th className=\"adjust5\">Amount</th>\r\n                                    <th className=\"adjust5nwww\">Comment</th>\r\n                                    <th className=\"adjust5\">Edit</th>\r\n                                    <th className=\"adjust5\">Cancel</th>\r\n                                   <th className=\"adjust5\">Check in</th>\r\n                                    \r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"table table-hover\">\r\n                                {this.renderEvents(this.state.displayeventsedit)}\r\n                            \r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <center><button className=\"btn btn-danger\" onClick={()=>{sessionStorage.removeItem('getrsvAmount'); localStorage.removeItem('rsvpNwDte');  this.props.history.push(\"/Reservation\")}}>Close</button></center>\r\n                    \r\n                <Modal open={this.state.edit} onClose={()=>this.onCloseModaledit()}>\r\n                    \r\n                    <div className = \"background591\">\r\n                        <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-70px'}}>Edit Reservation</h4>\r\n                        <div className=\"formdesign511\">\r\n                        \r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize53\" name=\"fname\" value={this.state.fname} onChange={this.handleroomData2}/>\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize53\" name=\"lname\" value={this.state.lname} onChange={this.handleChange}/>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"number\" className=\"form-control mb-3 formsize53\" name=\"phone\" value={this.state.phone} onChange={this.handleChange}/>\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"number\" className=\"form-control mb-3 formsize53\" name=\"rsvAmount\" value={this.state.rsvAmount} onChange={this.handleChange}/>\r\n                                </div>\r\n\r\n                                <select className=\"form-select  mb-3 formsize53\" name=\"room\" onChange={this.handleChange}>\r\n                                    <option defaultValue=''>{this.state.room}</option>\r\n                                    {this.renderVacantRooms(this.state.displayAllRoomNums)}\r\n                                </select>\r\n                                \r\n                \r\n                                <div className=\"col-3\">\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize53 adjustText\" name=\"start\" value={moment(this.state.start).format('YYYY-DD-MMM')} readOnly/>\r\n                                        \r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize53 adjustText\" name=\"end\" value={moment(this.state.end).format('YYYY-DD-MMM')} readOnly/>\r\n                                        \r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    <label>\r\n                                        {this.renderstartDate(this.state.start2)}\r\n                                    </label>  \r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    <label>\r\n                                         {this.renderendDate(this.state.end2)}\r\n                                    </label>  \r\n                                </div>\r\n                                                              \r\n                               \r\n                            </div>\r\n                        </div> \r\n                        <br/><br/>\r\n                        <center>\r\n                            <span>\r\n                                <button className=\"btn btn-warning space2\" onMouseOver={()=>this.handleChange2()} onClick={()=>this.handleResvUpdate()}>Save</button>\r\n                                        \r\n                                <button className=\"btn btn-danger space3\" onClick={()=>{this.onCloseModaledit(); this.props.history.push(\"/EditReservation\")}}>close</button>\r\n                                        \r\n                            </span>\r\n                                    \r\n                        </center>\r\n                        <br/>\r\n                                    \r\n                       \r\n                    </div>     \r\n                    \r\n                </Modal>\r\n \r\n            </div>\r\n        );\r\n    }\r\n    componentDidMount(){\r\n        console.log(\">>> Inside ERsvDidMount\", this.state)\r\n        \r\n        if(localStorage.getItem('rsvpNwDte')){\r\n            this.setState({searchByDate: new Date(localStorage.getItem('rsvpNwDte'))})\r\n        }\r\n        else{\r\n            this.setState({ searchByDate: ''})\r\n        }\r\n\r\n        fetch(`${GetReservationID}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                eventsedit:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setInterval(() => {\r\n            fetch(`${GetReservationID}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    eventsedit:data\r\n                })\r\n                \r\n            })\r\n        },60000);\r\n\r\n        fetch(`${RoomUrl2}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                displayAllRoomNums:data\r\n            })\r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n       \r\n    }\r\n}\r\n\r\nexport default EditReservation;","import React, { Component } from 'react';\r\nimport '../Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment';\r\nimport FLogin from '../../FLogin';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport addDays from 'date-fns/addDays';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst occuppancyUrl = \"https://zarvichdemo.localto.net/checkin\";\r\nconst checkInDataUrl = \"https://zarvichdemo.localto.net/getrmstatus\";\r\nconst occuppancySearchData = \"https://zarvichdemo.localto.net/getDailyOccuppancy?\";\r\nconst userName = \"https://zarvichdemo.localto.net/fofUserInfo\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\n\r\nclass RoomOccupancy extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside ROConstructor\")\r\n\r\n        this.state = {\r\n            occuppancyData:'',\r\n            occuppancySearch:'',\r\n            date:'',\r\n            percentOcc:'',\r\n            NumOccuppied:'',\r\n            NumAllRms:'',\r\n            AllRms:'',\r\n            percentCalculated:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n        }\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n        \r\n\r\n    }\r\n\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            date: date,\r\n           \r\n\r\n        });\r\n    }\r\n\r\n    renderDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.date}\r\n                    onChange={this.checkinhandleChange}\r\n                    maxDate={addDays(new Date(),0)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText='Select Start Date'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    findOccuppancySearch(){\r\n\r\n        var searchDate = moment(this.state.date).format('MMM DD YYYY')\r\n\r\n        this.setState({occuppancyData:''})\r\n\r\n        fetch(`${occuppancySearchData}occuppancyToday=${searchDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            \r\n            data.map((item) =>{\r\n                this.setState({\r\n                    occuppancyData:item.OccuppancyData\r\n                })\r\n                return 'ok'\r\n            })\r\n        \r\n        });\r\n\r\n\r\n    }\r\n\r\n    resetOccupancy(){\r\n\r\n        // var searchDate = moment(this.state.date).format('MMM DD YYYY')\r\n\r\n        this.setState({occuppancyData:'',date:''})\r\n\r\n        fetch(`${occuppancyUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                occuppancyData:data\r\n            })\r\n            \r\n        });\r\n\r\n\r\n    }\r\n\r\n    renderOccupancyData(data){\r\n        if (data){\r\n            data.sort((a, b) => (a.roomNumbers) - (b.roomNumbers));\r\n            return data.map((item) => {\r\n                var arrDt = moment(item.arrivalDate).format('YYYY-DD-MMM')\r\n                var depDt = moment(item.departureDate).format('YYYY-DD-MMM')\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            <td className=\"table-light table-striped adjust225\">{item.fname} {item.lname}</td>\r\n                            <td className=\"table-light table-striped adjust222\">{item.roomNumbers}</td>\r\n                            <td className=\"table-light table-striped adjust225\">{item.roomtypeName}</td>\r\n                            <td className=\"table-light table-striped adjust20\"><NumberFormat value= {item.roomRate}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust222\">{item.discounType}</td>\r\n                            <td className=\"table-light table-striped adjust20\"><NumberFormat value= {item.discountAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust20\"><NumberFormat value= {item.dailyRate}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2\">{arrDt}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{depDt}</td>\r\n                                    \r\n                        </tr>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n        else{\r\n            return(\r\n                <>\r\n                    <Spinner animation=\"border\" variant=\"primary\" />\r\n                    <Spinner animation=\"border\" variant=\"danger\" />\r\n                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                </>\r\n            )\r\n        }\r\n    }\r\n   \r\n\r\n    render() {\r\n        console.log(\">>> Inside ROtrender\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <FLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        \r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <div>\r\n                        <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                    </div>\r\n                    <center>\r\n                        <h6>{this.state.Hotelname}</h6>\r\n                        <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                        <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                    </center>\r\n                    <br/>\r\n                    <center><h5>Room Occupancy Report</h5>\r\n                        <div>\r\n                            <span>\r\n                                <label>\r\n                                    {this.renderDate(this.state.startdate)}\r\n                                </label>\r\n                            </span>\r\n                        \r\n                            <span>\r\n                                \r\n                                <button className=\"btn btn-primary space btnadjuster printing\" onClick={ () => this.findOccuppancySearch()}>Find Past</button>\r\n                                <button className=\"btn btn-primary space btnadjuster printing\" onClick={ () => this.resetOccupancy()}>Reset</button>\r\n                                \r\n                            </span>\r\n                        </div>\r\n                    </center>\r\n                    <br/>\r\n                    <table className=\"table table-hover\">\r\n                    \r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust5\">Names</th>\r\n                                <th className=\"adjust5\">Room Num</th>\r\n                                <th className=\"adjust5\">Room Type</th>\r\n                                <th className=\"adjust5\">Room Rate(NGN)</th>\r\n                                <th className=\"adjust5\">Discount Type</th>\r\n                                <th className=\"adjust5\">Discount Amount</th>\r\n                                <th className=\"adjust5\">Daily Rate(NGN)</th>\r\n                                <th className=\"adjust5\">Arrival Date</th>\r\n                                <th className=\"adjust5\">Departure Date</th>\r\n                                \r\n                                        \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover\">\r\n                            {this.renderOccupancyData(this.state.occuppancyData)}\r\n                        \r\n                        </tbody>\r\n                        <br/>\r\n                    \r\n                    </table>\r\n                    <div className=\"row\">\r\n                        <h6>Occupancy Summary:</h6>\r\n                        <hr/>\r\n                        <div className=\"col-4\">\r\n                            <p><span className=\"textSize30\">No. of Occupied Rooms:</span><span className=\"textSize31\"> {this.state.NumOccuppied}</span></p>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <p><span className=\"textSize30\">Total Num of Rooms:</span><span className=\"textSize31\"> {this.state.NumAllRms}</span></p>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <p><span className=\"textSize30\">Percentage Occupancy:</span><span className=\"textSize31\"> {this.state.percentCalculated} %</span></p>\r\n                        </div>\r\n                        <hr/>\r\n                    </div>\r\n\r\n                    <center>\r\n                        <button className=\"btn btn-warning printing\" onClick={ () => window.print()}>Print</button>\r\n                        <button className=\"btn btn-danger printing space\" onClick={ () => this.props.history.push('/ReceptionMenu')}>Close</button>\r\n                    </center>\r\n                   \r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        console.log (\">>> Inside ROdidMount\")\r\n        \r\n        fetch(`${occuppancyUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) =>{\r\n            this.setState({\r\n                occuppancyData:data,\r\n               \r\n            \r\n            })\r\n            \r\n        })\r\n        fetch(`${checkInDataUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) =>{\r\n            this.setState({\r\n                percentOcc:data.map(item => item.roomStatus).filter(item=> item !=='green'&& item !=='black'),\r\n                AllRms:data.map(item => item.roomStatus).filter(item=> item) \r\n            \r\n            })\r\n            var occuppiedRooms=this.state.percentOcc;\r\n            var occuppied = occuppiedRooms.length;\r\n            this.setState({NumOccuppied:occuppied});\r\n\r\n            var AllRooms=this.state.AllRms;\r\n            var AllRms = parseInt(AllRooms.length);\r\n            this.setState({NumAllRms:AllRms});\r\n            \r\n\r\n            var percOcc = 0;\r\n            percOcc = percOcc + parseFloat(this.state.NumOccuppied) / parseFloat(this.state.NumAllRms) * 100;\r\n            this.setState({percentCalculated:percOcc.toFixed(2)})\r\n            \r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n       \r\n\r\n    }\r\n}\r\n\r\nexport default RoomOccupancy;","import React, { Component } from 'react';\r\nimport '../Reception.css';\r\n// import NumberFormat from 'react-number-format';\r\n// import moment from 'moment';\r\nimport FLogin from '../../FLogin';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst occuppancyUrl = \"https://zarvichdemo.localto.net/checkin\";\r\nconst checkInDataUrl = \"https://zarvichdemo.localto.net/getrmstatus\";\r\nconst userName = \"https://zarvichdemo.localto.net/fofUserInfo\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\n\r\nclass HouseKeepingPrint extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside ROConstructor\")\r\n\r\n        this.state = {\r\n            occuppancyData:'',\r\n            percentOcc:'',\r\n            NumOccuppied:'',\r\n            NumAllRms:'',\r\n            AllRms:'',\r\n            percentCalculated:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n        }\r\n\r\n    }\r\n\r\n    renderOccupancyData(data){\r\n        if (data){\r\n            data.sort((a, b) => new Date(a.roomNumbers) - new Date(b.roomNumbers));\r\n            return data.map((item) => {\r\n                // var arrDt = moment(item.arrivalDate).format('YYYY-DD-MMM')\r\n                // var depDt = moment(item.departureDate).format('YYYY-DD-MMM')\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            {/* <td className=\"table-light table-striped adjust225\">{item.fname} {item.lname}</td> */}\r\n                            <td className=\"table-light table-striped adjust2\">{item.roomNumbers}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.roomtypeName}</td>\r\n                            {/* <td className=\"table-light table-striped adjust20\"><NumberFormat value= {item.roomRate}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust222\">{item.discounType}</td>\r\n                            <td className=\"table-light table-striped adjust20\"><NumberFormat value= {item.discountAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust20\"><NumberFormat value= {item.dailyRate}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2\">{arrDt}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{depDt}</td> */}\r\n                                    \r\n                        </tr>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n   \r\n\r\n    render() {\r\n        console.log(\">>> Inside ROtrender\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <FLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        \r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <div>\r\n                        <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                    </div>\r\n                    <center>\r\n                        <h6>{this.state.Hotelname}</h6>\r\n                        <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                        <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                    </center>\r\n                    <br/>\r\n                    <center><h5>Housekeeping Print</h5></center>\r\n                    <br/>\r\n                    <table className=\"table table-hover\">\r\n                    \r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                {/* <th className=\"adjust5\">Names</th> */}\r\n                                <th className=\"adjust5\">Room Num</th>\r\n                                <th className=\"adjust5\">Room Type</th>\r\n                                {/* <th className=\"adjust5\">Room Rate(NGN)</th>\r\n                                <th className=\"adjust5\">Discount Type</th>\r\n                                <th className=\"adjust5\">Discount Amount</th>\r\n                                <th className=\"adjust5\">Daily Rate(NGN)</th>\r\n                                <th className=\"adjust5\">Arrival Date</th>\r\n                                <th className=\"adjust5\">Departure Date</th> */}\r\n                                \r\n                                        \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover\">\r\n                            {this.renderOccupancyData(this.state.occuppancyData)}\r\n                        \r\n                        </tbody>\r\n                        <br/>\r\n                    \r\n                    </table>\r\n                    <div className=\"row\">\r\n                        <h6>Occupancy Summary:</h6>\r\n                        <hr/>\r\n                        <div className=\"col-4\">\r\n                            <p><span className=\"textSize30\">No. of Occupied Rooms:</span><span className=\"textSize31\"> {this.state.NumOccuppied}</span></p>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <p><span className=\"textSize30\">Total Num of Rooms:</span><span className=\"textSize31\"> {this.state.NumAllRms}</span></p>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <p><span className=\"textSize30\">Percentage Occupancy:</span><span className=\"textSize31\"> {this.state.percentCalculated} %</span></p>\r\n                        </div>\r\n                        <hr/>\r\n                    </div>\r\n\r\n                    <center>\r\n                        <button className=\"btn btn-warning printing\" onClick={ () => window.print()}>Print</button>\r\n                        <button className=\"btn btn-danger printing space\" onClick={ () => this.props.history.push('/ReceptionMenu')}>Close</button>\r\n                    </center>\r\n                   \r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        console.log (\">>> Inside ROdidMount\")\r\n        \r\n        fetch(`${occuppancyUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) =>{\r\n            this.setState({\r\n                occuppancyData:data,\r\n               \r\n            \r\n            })\r\n            \r\n        })\r\n        fetch(`${checkInDataUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) =>{\r\n            this.setState({\r\n                percentOcc:data.map(item => item.roomStatus).filter(item=> item !=='green'&& item !=='black'),\r\n                AllRms:data.map(item => item.roomStatus).filter(item=> item) \r\n            \r\n            })\r\n            var occuppiedRooms=this.state.percentOcc;\r\n            var occuppied = occuppiedRooms.length;\r\n            this.setState({NumOccuppied:occuppied});\r\n\r\n            var AllRooms=this.state.AllRms;\r\n            var AllRms = parseInt(AllRooms.length);\r\n            this.setState({NumAllRms:AllRms});\r\n            \r\n\r\n            var percOcc = 0;\r\n            percOcc = percOcc + parseFloat(this.state.NumOccuppied) / parseFloat(this.state.NumAllRms) * 100;\r\n            this.setState({percentCalculated:percOcc.toFixed(2)})\r\n            \r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n       \r\n\r\n    }\r\n}\r\n\r\nexport default HouseKeepingPrint;","import React, { Component } from 'react';\r\nimport '../Reception.css';\r\nimport moment from 'moment';\r\nimport FLogin from '../../FLogin';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst getroomchangereport = \"https://zarvichdemo.localto.net/getRoomChangeReason\";\r\nconst userName = \"https://zarvichdemo.localto.net/fofUserInfo\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\n\r\n\r\nclass RoomChangeReport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside ROConstructor\")\r\n\r\n        this.state = {\r\n            roomchangereportdata:'',\r\n            CountRooms:'',\r\n            counted:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n           \r\n        }\r\n\r\n    }\r\n\r\n    renderRoomChReport(data){\r\n        if (data){\r\n            data.sort((a, b) => a.OldRoomNum - b.OldRoomNum);\r\n            return data.map((item) => {\r\n                var reportdate = moment(item.date).format('YYYY-DD-MMM')\r\n                \r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            <td className=\"table-light table-striped adjust2\">{reportdate}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.OldRoomNum}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.NewRoomNum}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.Reason}</td>\r\n                                    \r\n                        </tr>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n   \r\n\r\n    render() {\r\n        console.log(\">>> Inside ROtrender\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <FLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        \r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <div>\r\n                        <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                    </div>\r\n                    <center>\r\n                        <h6>{this.state.Hotelname}</h6>\r\n                        <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                        <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n                    </center>\r\n                    <br/>\r\n                    <center><h5>Room Change Report</h5></center>\r\n                    <br/>\r\n                    <table className=\"table table-hover\">\r\n                    \r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust5\">Date</th>\r\n                                <th className=\"adjust5\">Old Room</th>\r\n                                <th className=\"adjust5\">New Room</th>\r\n                                <th className=\"adjust5\">Reason</th>\r\n                                        \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover\">\r\n                            {this.renderRoomChReport(this.state.roomchangereportdata)}\r\n                        \r\n                        </tbody>\r\n                        <br/>\r\n                    \r\n                    </table>\r\n                    <div>\r\n                        <div>\r\n                            <p><span className=\"textSize30\">Room Change Summary:  No. of Rooms Changed:</span><span className=\"textSize31\">   {this.state.counted}</span></p>\r\n                          \r\n                        </div>\r\n                        <hr/>\r\n                       \r\n                    </div>\r\n\r\n                    <center>\r\n                        <button className=\"btn btn-warning printing\" onClick={ () => window.print()}>Print</button>\r\n                        <button className=\"btn btn-danger printing space\" onClick={ () => this.props.history.push('/ReceptionMenu')}>Close</button>\r\n                    </center>\r\n                   \r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        console.log (\">>> Inside ROdidMount\")\r\n        \r\n        fetch(`${getroomchangereport}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) =>{\r\n            this.setState({\r\n                roomchangereportdata:data,\r\n                CountRooms:data.map(item => item.NewRoomNum).filter(item=> item)\r\n               \r\n            })\r\n            var changedRooms=this.state.CountRooms;\r\n            var changed = changedRooms.length;\r\n            this.setState({counted:changed});\r\n            \r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n        \r\n        \r\n    }\r\n}\r\n\r\nexport default RoomChangeReport;","import React, { Component } from 'react';\r\nimport '../Reception.css';\r\nimport moment from 'moment';\r\nimport FLogin from '../../FLogin';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport addDays from 'date-fns/addDays';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nconst policeReportUrl = \"https://zarvichdemo.localto.net/checkin\";\r\nconst userName = \"https://zarvichdemo.localto.net/fofUserInfo\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\nconst occuppancySearchData = \"https://zarvichdemo.localto.net/getDailyOccuppancy?\";\r\n\r\n\r\nclass PoliceReport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside ROConstructor\")\r\n\r\n        this.state = {\r\n            PoliceRepData:'',\r\n            occuppancySearch:'',\r\n            date:'',\r\n            total:'',\r\n            counted:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n            \r\n        }\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n\r\n    }\r\n\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            date: date,\r\n           \r\n\r\n        });\r\n    }\r\n\r\n    renderDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.date}\r\n                    onChange={this.checkinhandleChange}\r\n                    maxDate={addDays(new Date(),0)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText='Select Start Date'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    findOccuppancySearch(){\r\n\r\n        var searchDate = moment(this.state.date).format('MMM DD YYYY')\r\n\r\n        this.setState({PoliceRepData:''})\r\n\r\n        fetch(`${occuppancySearchData}occuppancyToday=${searchDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            \r\n            data.map((item) =>{\r\n                this.setState({\r\n                    PoliceRepData:item.OccuppancyData,\r\n                    \r\n                    \r\n                })\r\n\r\n                return 'ok'\r\n            })\r\n        \r\n        });\r\n\r\n\r\n    }\r\n\r\n    resetOccupancy(){\r\n\r\n        // var searchDate = moment(this.state.date).format('MMM DD YYYY')\r\n\r\n        this.setState({PoliceRepData:'',date:''})\r\n\r\n        fetch(`${policeReportUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                PoliceRepData:data,\r\n                \r\n            })\r\n            \r\n            \r\n        });\r\n\r\n\r\n    }\r\n\r\n    renderpoliceReport(data){\r\n        if (data){\r\n            return data.map((item) => {\r\n                var arrDt = moment(item.arrivalDate).format('YYYY-DD-MMM')\r\n                var depDt = moment(item.departureDate).format('YYYY-DD-MMM')\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            <td className=\"table-light table-striped adjust2\">{item.title}. {item.fname} {item.lname}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.phone}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.email}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.occupation}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{arrDt}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{depDt}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.comingFrom}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.goingTo}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.POV}</td>\r\n                                    \r\n                        </tr>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n\r\n        else{\r\n            return(\r\n                <>\r\n                    <Spinner animation=\"border\" variant=\"primary\" />\r\n                    <Spinner animation=\"border\" variant=\"danger\" />\r\n                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                </>\r\n            )\r\n        }\r\n    }\r\n   \r\n\r\n    render() {\r\n        console.log(\">>> Inside ROtrender\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <FLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        var rooms = this.state.PoliceRepData;\r\n        var occuppied = rooms.length;\r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <div>\r\n                        <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                    </div>\r\n                    <center>\r\n                        <h6>{this.state.Hotelname}</h6>\r\n                        <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                        <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                    </center>\r\n                    <br/>\r\n                    <center>\r\n                        <h5>Police Report</h5>\r\n\r\n                        <div>\r\n                            <span>\r\n                                <label>\r\n                                    {this.renderDate(this.state.startdate)}\r\n                                </label>\r\n                            </span>\r\n                        \r\n                            <span>\r\n                                \r\n                                <button className=\"btn btn-primary space btnadjuster printing\" onClick={ () => this.findOccuppancySearch()}>Find Past</button>\r\n                                <button className=\"btn btn-primary space btnadjuster printing\" onClick={ () => this.resetOccupancy()}>Reset</button>\r\n                                \r\n                            </span>\r\n                        </div>\r\n                    \r\n                    </center>\r\n                    <br/>\r\n                    <table className=\"table table-hover\">\r\n                    \r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust5\">Names</th>\r\n                                <th className=\"adjust5\">Phone</th>\r\n                                <th className=\"adjust5\">Email</th>\r\n                                <th className=\"adjust5\">Occupation</th>\r\n                                <th className=\"adjust5\">Arrival Date</th>\r\n                                <th className=\"adjust5\">Departure Date</th>\r\n                                <th className=\"adjust5\">Coming From</th>\r\n                                <th className=\"adjust5\">Going To</th>\r\n                                <th className=\"adjust5\">Purpose of Visit</th>\r\n                                \r\n                                        \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover\">\r\n                            {this.renderpoliceReport(this.state.PoliceRepData)}\r\n                        \r\n                        </tbody>\r\n                        <br/>\r\n                    \r\n                    </table>\r\n                    <div className=\"row\">\r\n                        <h6>Police Report Summary:</h6>\r\n                        <hr/>\r\n                        <div className=\"col-4\">\r\n                            <p><span className=\"textSize30\">No. of Guests:</span><span className=\"textSize31\"> {occuppied} Guests</span></p>\r\n                        </div>\r\n                       \r\n                        <hr/>\r\n                    </div>\r\n\r\n                    <center>\r\n                        <button className=\"btn btn-warning printing\" onClick={ () => window.print()}>Print</button>\r\n                        <button className=\"btn btn-danger printing space\" onClick={ () => this.props.history.push('/ReceptionMenu')}>Close</button>\r\n                    </center>\r\n                   \r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        console.log (\">>> Inside ROdidMount\")\r\n        \r\n        fetch(`${policeReportUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) =>{\r\n            this.setState({\r\n                PoliceRepData:data,\r\n                \r\n               \r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n       \r\n        \r\n        \r\n\r\n    }\r\n}\r\n\r\nexport default PoliceReport;","import React, { Component } from 'react';\r\nimport '../Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment';\r\nimport FLogin from '../../FLogin';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst occuppancyUrl = \"https://zarvichdemo.localto.net/checkedout\";\r\nconst userName = \"https://zarvichdemo.localto.net/fofUserInfo\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\n\r\n\r\n\r\nclass RoomOccupancy extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside ROConstructor\")\r\n\r\n        this.state = {\r\n            checkoutData:'',\r\n            total:'',\r\n            counted:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    rendercheckout(data){\r\n        if (data){\r\n            data.sort((a, b) => a.roomNumbers - b.roomNumbers);\r\n            return data.map((item) => {\r\n                var arrDt = moment(item.arrivalDate).format('YYYY-DD-MMM')\r\n                var depDt = moment(item.departureDate).format('YYYY-DD-MMM')\r\n                if(depDt===sessionStorage.getItem('chkOutDate')){\r\n                    return(\r\n                        <>\r\n                            <tr key= {item._id}>\r\n                                <td className=\"table-light table-striped adjust2\">{item.title}. {item.fname} {item.lname}</td>\r\n                                <td className=\"table-light table-striped adjust2\">{item.roomNumbers}</td>\r\n                                <td className=\"table-light table-striped adjust2\">{item.roomtypeName}</td>\r\n                                <td className=\"table-light table-striped adjust20\"><NumberFormat value= {item.roomRate}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                                <td className=\"table-light table-striped adjust2\">{item.discounType}</td>\r\n                                <td className=\"table-light table-striped adjust20\"><NumberFormat value= {item.discountAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                                <td className=\"table-light table-striped adjust20\"><NumberFormat value= {item.dailyRate}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                                <td className=\"table-light table-striped adjust2\">{arrDt}</td>\r\n                                <td className=\"table-light table-striped adjust2\">{depDt}</td>\r\n                                        \r\n                            </tr>\r\n                        </>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <>\r\n                        \r\n                        </>\r\n                    )\r\n                }\r\n                \r\n            })\r\n        }\r\n    }\r\n   \r\n\r\n    render() {\r\n        console.log(\">>> Inside ROtrender\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <FLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        var rooms = this.state.total;\r\n        var occuppied = rooms.length;\r\n        \r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <div>\r\n                        <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                    </div>\r\n                    <center>\r\n                        <h6>{this.state.Hotelname}</h6>\r\n                        <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                        <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                    </center>\r\n                    <br/>\r\n                    <center><h5>Daily Check Out Report</h5></center>\r\n                    <center><p className=\"textSize\">As at {sessionStorage.getItem('chkOutDate')}</p></center>\r\n                    <br/>\r\n                    <table className=\"table table-hover\">\r\n                    \r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust5\">Names</th>\r\n                                <th className=\"adjust5\">Room Num</th>\r\n                                <th className=\"adjust5\">Room Type</th>\r\n                                <th className=\"adjust5\">Room Rate(NGN)</th>\r\n                                <th className=\"adjust5\">Discount Type</th>\r\n                                <th className=\"adjust5\">Discount Amount</th>\r\n                                <th className=\"adjust5\">Daily Rate(NGN)</th>\r\n                                <th className=\"adjust5\">Arrival Date</th>\r\n                                <th className=\"adjust5\">Departure Date</th>\r\n                                \r\n                                        \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover\">\r\n                            {this.rendercheckout(this.state.checkoutData)}\r\n                        \r\n                        </tbody>\r\n                        <br/>\r\n                    \r\n                    </table>\r\n                    <div className=\"row\">\r\n                        <h6>Check Out Summary:</h6>\r\n                        <hr/>\r\n                        <div className=\"col-4\">\r\n                            <p><span className=\"textSize30\">Total Check Out Rooms:</span><span className=\"textSize31\"> {occuppied} Rooms</span></p>\r\n                        </div>\r\n                        \r\n                        <hr/>\r\n                    </div>\r\n\r\n                    <center>\r\n                        <button className=\"btn btn-warning printing\" onClick={ () => window.print()}>Print</button>\r\n                        <button className=\"btn btn-danger printing space\" onClick={ () => this.props.history.push('/ReceptionMenu')}>Close</button>\r\n                    </center>\r\n                   \r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        console.log (\">>> Inside ROdidMount\")\r\n        fetch(`${occuppancyUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) =>{\r\n            this.setState({\r\n                checkoutData:data,\r\n                total:data.map(item => item._id).filter(item=> item) ,\r\n               \r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n        //var out = sessionStorage.getItem('chkOutDate');\r\n        \r\n        //fetch(`${dailycheckoutUrl}${out}`, {method:'GET'})\r\n        //.then((res) => res.json())\r\n        //.then((data) =>{\r\n           // this.setState({\r\n              //  checkoutData:data,\r\n               \r\n            //})\r\n            \r\n        //})\r\n        \r\n       \r\n\r\n    }\r\n}\r\n\r\nexport default RoomOccupancy;","import React, { Component } from 'react';\r\nimport 'react-responsive-modal/styles.css';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport FLogin from '../FLogin';\r\nimport './Reception.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nconst groupUrl= \"https://zarvichdemo.localto.net/org\";\r\nconst getgroupID= \"https://zarvichdemo.localto.net/org?groupID=\";\r\nconst postGroup= \"https://zarvichdemo.localto.net/postOrg\";\r\nconst putGroup= \"https://zarvichdemo.localto.net/putOrg\";\r\nconst delGroup= \"https://zarvichdemo.localto.net/delorg\";\r\nconst userName = \"https://zarvichdemo.localto.net/fofUserInfo\";\r\n\r\n\r\nclass AddGroup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>> inside GrpCobtructor\", props)\r\n\r\n        this.state = {\r\n            groupData:'',\r\n            class:'Corporate',\r\n            orgAddress:'',\r\n            orgEmail:'',\r\n            orgName:'',\r\n            orgPhone:'',\r\n            _id:Math.floor(Math.random()*10000),\r\n            edit: false,\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n            \r\n\r\n        }\r\n\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenModaledit(){\r\n        this.setState({\r\n            edit:true\r\n        })\r\n        fetch(`${getgroupID}${sessionStorage.getItem('getorgID')}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            data.map((item) => {\r\n               this.setState({\r\n                    _id:item._id,\r\n                    orgAddress:item.orgAddress,\r\n                    orgEmail:item.orgEmail,\r\n                    orgName:item.orgName,\r\n                    orgPhone:item.orgPhone,\r\n                    class:item.class\r\n                    \r\n                })\r\n                return 'ok'\r\n            })  \r\n            \r\n        })\r\n\r\n    }\r\n\r\n    deleteOrg(){\r\n        fetch(`${delGroup}/${sessionStorage.getItem('getgrpID')}`, {method:'delete'})\r\n        \r\n        this.myTimer = setTimeout(() => {\r\n            fetch(`${groupUrl}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    groupData:data\r\n                })\r\n                \r\n            })\r\n        },1000)\r\n    }\r\n\r\n    onCloseModaledit(){\r\n        this.setState({\r\n            class:'Corporate',\r\n            orgAddress:'',\r\n            orgEmail:'',\r\n            orgName:'',\r\n            orgPhone:'',\r\n            _id:''\r\n        })\r\n        fetch(`${groupUrl}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                groupData:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.setState({\r\n            edit: false,\r\n            \r\n        })\r\n        \r\n\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    async handleSubmit() {\r\n       \r\n        try {\r\n           \r\n            var groupData = {\r\n                \r\n                class:`${this.state.class}`,\r\n                orgName:`${this.state.orgName}`,\r\n                orgAddress:`${this.state.orgAddress}`,\r\n                orgEmail:`${this.state.orgEmail}`,\r\n                orgPhone:`${this.state.orgPhone}`,\r\n                _id:`${this.state._id}`,\r\n                orgID:`${this.state._id}`,\r\n                \r\n            }\r\n            let result = await fetch(`${postGroup}`, {\r\n                method: 'post',\r\n    \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n    \r\n                body: JSON.stringify(\r\n                    \r\n                    groupData\r\n                        \r\n                )\r\n                    \r\n            });\r\n            console.log('result>  ' + result)\r\n            alert(\"Group Add\");\r\n            this.setState({\r\n                class:'Corporate',\r\n                orgAddress:'',\r\n                orgEmail:'',\r\n                orgName:'',\r\n                orgPhone:'',\r\n                _id:''\r\n            })\r\n            fetch(`${groupUrl}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    groupData:data\r\n                    \r\n                })\r\n\r\n            })\r\n            this.myTimer = setTimeout(() => {\r\n                this.setState({\r\n                    _id:Math.floor(Math.random()*10000)\r\n                })\r\n            },1000)\r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async groupUpdate() {\r\n       \r\n        try {\r\n            var id = sessionStorage.getItem('getorgID')\r\n           \r\n            var grpUpdated = {\r\n                \r\n                class:'Corporate',\r\n                orgName:`${this.state.orgName}`,\r\n                orgAddress:`${this.state.orgAddress}`,\r\n                orgEmail:`${this.state.orgEmail}`,\r\n                orgPhone:`${this.state.orgPhone}`,\r\n                orgID:`${this.state._id}`,\r\n            }\r\n            let result = await fetch(`${putGroup}/${id}`, {\r\n                method: 'put',\r\n    \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n    \r\n                body: JSON.stringify(\r\n                    \r\n                    grpUpdated\r\n                        \r\n                )\r\n                    \r\n            });\r\n            console.log('result>  ' + result)\r\n            this.setState({\r\n                class:'Corporate',\r\n                orgAddress:'',\r\n                orgEmail:'',\r\n                orgName:'',\r\n                orgPhone:'',\r\n                _id:''\r\n            })\r\n\r\n            fetch(`${groupUrl}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    groupData:data\r\n                    \r\n                })\r\n\r\n            })\r\n            this.myTimer = setTimeout(() => {\r\n                this.setState({\r\n                    _id:Math.floor(Math.random()*10000),\r\n                    \r\n                })\r\n            },1000)\r\n\r\n            alert(\"Group Data updated\");\r\n            this.setState({edit:false})\r\n            \r\n          \r\n            \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    renderGroup(data){\r\n        if(data){\r\n            \r\n            return data.map((item)=>{\r\n                \r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                                \r\n                            <td className=\"table-light table-striped adjust2\">{item.orgAddress}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.orgEmail}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.orgName}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.orgPhone}</td>\r\n                            <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-primary textcolor\" onMouseOver={()=>sessionStorage.setItem('getorgID', item.orgID)} onClick={()=>{this.onOpenModaledit()}}>Edit</button></td>\r\n                            <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-danger textcolor\" onMouseOver={()=>sessionStorage.setItem('getgrpID', item._id)} onDoubleClick={()=>{this.deleteOrg()}}>Delete</button></td>\r\n                                \r\n                        </tr>\r\n                    </>\r\n                )\r\n                \r\n            })\r\n            \r\n        }\r\n\r\n\r\n    }\r\n  \r\n\r\n    render() {\r\n        console.log (\">>> Inside Grpdetails\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <FLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div  className=\"background990\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-50px'}}>Register Group </h4>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h6 style = {{color:'purple',marginLeft:'480px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                        </div>\r\n                    </div>\r\n                    <h4 style = {{color:'rgb(23, 23, 71)',marginLeft:'50px', marginBottom:'-40px'}}> </h4>\r\n\r\n                    <div className=\"formdesign510b\">\r\n                        <div className=\"row\">\r\n                            \r\n                            <div className=\"col-3\">\r\n                                <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"orgName\" require placeholder=\"Name\" value={this.state.orgName} onChange={this.handleChange}/>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                               <textarea row=\"4\" className=\"form-control mb-3 formsize51\" name=\"orgAddress\" require placeholder=\"Address\" value={this.state.orgAddress} onChange={this.handleChange}/>\r\n                            </div>\r\n\r\n                            <div className=\"col-3\">\r\n                                <input type=\"email\" className=\"form-control mb-3 formsize51\" name=\"orgEmail\" require placeholder=\"Email\" value={this.state.orgEmail} onChange={this.handleChange}/>\r\n                            </div>\r\n\r\n                            <div className=\"col-3\">\r\n                                <input type=\"number\" className=\"form-control mb-3 formsize51\" name=\"orgPhone\" require placeholder=\"Phone\" value={this.state.orgPhone} onChange={this.handleChange}/>\r\n                            </div>\r\n                            \r\n                           \r\n                            <center>\r\n                            <br/>\r\n                                <span>\r\n                                    <button disabled={this.state.orgName===''||this.state.orgPhone===''} className=\"btn btn-warning\" onClick={ () => this.handleSubmit () } >Add Group</button>\r\n                                    <button className=\"btn btn-danger gap\" onClick={ () => this.props.history.push('/roomchart')}>Close</button>\r\n                                    \r\n                                </span>\r\n                            </center>\r\n                           \r\n                            \r\n                        </div>\r\n                        <br/>\r\n                        <div>\r\n                            <table className=\"table table-hover\">\r\n                            \r\n                                <thead className=\"table-warning\">\r\n                                    <tr>\r\n                                        <th className=\"adjust5\">Address</th>\r\n                                        <th className=\"adjust5\">Email</th>\r\n                                        <th className=\"adjust5\">Name</th>\r\n                                        <th className=\"adjust5\">Phone</th>\r\n                                        <th className=\"adjust5\">Action</th>\r\n                                        <th className=\"adjust5\"> </th>\r\n                                                \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className=\"table table-hover\">\r\n                                    {this.renderGroup(this.state.groupData)}\r\n                                \r\n                                </tbody>\r\n                            </table>\r\n                            <center><button className=\"btn btn-danger gap mb-3\" onClick={ () => this.props.history.push('/roomchart')}>Close</button></center>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal open={this.state.edit} onClose={()=>this.onCloseModaledit()}>\r\n                    \r\n                    <div className = \"background591\">\r\n                        <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-70px'}}>Edit Group</h4>\r\n                        <div className=\"formdesign511\">\r\n                        \r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize53\" name=\"orgName\" value={this.state.orgName} onChange={this.handleChange}/>\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize53\" name=\"orgAddress\" value={this.state.orgAddress} onChange={this.handleChange}/>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"email\" className=\"form-control mb-3 formsize53\" name=\"orgEmail\" value={this.state.orgEmail} onChange={this.handleChange}/>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"number\" className=\"form-control mb-3 formsize53\" name=\"orgPhone\" value={this.state.orgPhone} onChange={this.handleChange}/>\r\n                                </div>\r\n\r\n                                \r\n                            </div>\r\n                        </div> \r\n                        <br/><br/>\r\n                        <center>\r\n                            <span>\r\n                                <button className=\"btn btn-warning space2\" onClick={()=>this.groupUpdate()}>Save</button>\r\n                                        \r\n                                <button className=\"btn btn-danger space3\" onClick={()=>{this.onCloseModaledit()}}>close</button>\r\n                                        \r\n                            </span>\r\n                                    \r\n                        </center>\r\n                        <br/>\r\n                                    \r\n                       \r\n                    </div>     \r\n                    \r\n                </Modal>\r\n            </>\r\n            \r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\">>> Inside GrpDidMount\", this.state);\r\n\r\n        fetch(`${groupUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                groupData:data,\r\n\r\n            })\r\n           \r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default AddGroup;","import React, { Component } from 'react';\r\nimport '../Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment';\r\nimport FLogin from '../../FLogin';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst occuppancyUrl = \":https://zarvichdemo.localto.net/checkin\";\r\nconst userName = \"https://zarvichdemo.localto.net/fofUserInfo\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\n\r\n\r\n\r\nclass CheckInReport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside ROConstructor\")\r\n\r\n        this.state = {\r\n            checkoutData:'',\r\n            total:'',\r\n            counted:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    rendercheckout(data){\r\n        if (data){\r\n            data.sort((a, b) => a.roomNumbers - b.roomNumbers);\r\n            return data.map((item) => {\r\n                var arrDt = moment(item.arrivalDate).format('YYYY-DD-MMM')\r\n                var depDt = moment(item.departureDate).format('YYYY-DD-MMM')\r\n                if(arrDt===sessionStorage.getItem('chkOutDate')){\r\n                    return(\r\n                        <>\r\n                            <tr key= {item._id}>\r\n                                <td className=\"table-light table-striped adjust2\">{item.title}. {item.fname} {item.lname}</td>\r\n                                <td className=\"table-light table-striped adjust2\">{item.roomNumbers}</td>\r\n                                <td className=\"table-light table-striped adjust2\">{item.roomtypeName}</td>\r\n                                <td className=\"table-light table-striped adjust20\"><NumberFormat value= {item.roomRate}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                                <td className=\"table-light table-striped adjust2\">{item.discounType}</td>\r\n                                <td className=\"table-light table-striped adjust20\"><NumberFormat value= {item.discountAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                                <td className=\"table-light table-striped adjust20\"><NumberFormat value= {item.dailyRate}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                                <td className=\"table-light table-striped adjust2\">{arrDt}</td>\r\n                                <td className=\"table-light table-striped adjust2\">{depDt}</td>\r\n                                        \r\n                            </tr>\r\n                        </>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <>\r\n                        \r\n                        </>\r\n                    )\r\n                }\r\n                \r\n            })\r\n        }\r\n    }\r\n   \r\n\r\n    render() {\r\n        console.log(\">>> Inside ROtrender\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <FLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        var rooms = this.state.total;\r\n        var occuppied = rooms.length;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <div>\r\n                        <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                    </div>\r\n                    <center>\r\n                        <h6>{this.state.Hotelname}</h6>\r\n                        <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                        <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                    </center>\r\n                    <br/>\r\n                    <center><h5>Daily Check In Report</h5></center>\r\n                    <center><p className=\"textSize\">As at {sessionStorage.getItem('chkOutDate')}</p></center>\r\n                    <br/>\r\n                    <table className=\"table table-hover\">\r\n                    \r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust5\">Names</th>\r\n                                <th className=\"adjust5\">Room Num</th>\r\n                                <th className=\"adjust5\">Room Type</th>\r\n                                <th className=\"adjust5\">Room Rate(NGN)</th>\r\n                                <th className=\"adjust5\">Discount Type</th>\r\n                                <th className=\"adjust5\">Discount Amount</th>\r\n                                <th className=\"adjust5\">Daily Rate(NGN)</th>\r\n                                <th className=\"adjust5\">Arrival Date</th>\r\n                                <th className=\"adjust5\">Departure Date</th>\r\n                                \r\n                                        \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover\">\r\n                            {this.rendercheckout(this.state.checkoutData)}\r\n                        \r\n                        </tbody>\r\n                        <br/>\r\n                    \r\n                    </table>\r\n                    <div className=\"row\">\r\n                        <h6>Check In Summary:</h6>\r\n                        <hr/>\r\n                        <div className=\"col-4\">\r\n                            <p><span className=\"textSize30\">Total Check In:</span><span className=\"textSize31\"> {occuppied} Rooms</span></p>\r\n                        </div>\r\n                        \r\n                        <hr/>\r\n                    </div>\r\n\r\n                    <center>\r\n                        <button className=\"btn btn-warning printing\" onClick={ () => window.print()}>Print</button>\r\n                        <button className=\"btn btn-danger printing space\" onClick={ () => this.props.history.push('/ReceptionMenu')}>Close</button>\r\n                    </center>\r\n                   \r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        console.log (\">>> Inside ROdidMount\")\r\n        fetch(`${occuppancyUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) =>{\r\n            this.setState({\r\n                checkoutData:data,\r\n                total:data.map(item => item._id).filter(item=> item) ,\r\n               \r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n        //var out = sessionStorage.getItem('chkOutDate');\r\n        \r\n        //fetch(`${dailycheckoutUrl}${out}`, {method:'GET'})\r\n        //.then((res) => res.json())\r\n        //.then((data) =>{\r\n           // this.setState({\r\n              //  checkoutData:data,\r\n               \r\n            //})\r\n            \r\n        //})\r\n        \r\n       \r\n\r\n    }\r\n}\r\n\r\nexport default CheckInReport;","import React, { Component } from 'react';\r\nimport Billinglogin from '../../Billinglogin';\r\nimport '../Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\nconst getbarSales = \"https://zarvichdemo.localto.net/barSales?staff=\";\r\nconst getpoolbarSales = \"https://zarvichdemo.localto.net/poolbarSales?Pstaff=\";\r\nconst getRestSales = \"https://zarvichdemo.localto.net/restaurantSales?Rstaff=\";\r\nconst getLaundrySales = \"https://zarvichdemo.localto.net/alllaundrySales?Lstaff=\";\r\nconst getClubSales = \"https://zarvichdemo.localto.net/clubSales?Cstaff=\";\r\nconst dailysalesPost = \"https://zarvichdemo.localto.net/add\";\r\nconst barWarehousePost = \"https://zarvichdemo.localto.net/retireBar\";\r\nconst poolbarWarehousePost = \"https://zarvichdemo.localto.net/retirepoolBar\";\r\nconst clubWarehousePost = \"https://zarvichdemo.localto.net/retireClub\";\r\nconst restWarehousePost = \"https://zarvichdemo.localto.net/retireRest\";\r\nconst laundryWarehousePost = \"https://zarvichdemo.localto.net/retireLaundry\";\r\nconst delBarDataWRTUser = \"https://zarvichdemo.localto.net/delBar\";\r\nconst delpoolBarDataWRTUser = \"https://zarvichdemo.localto.net/delpoolBar\";\r\nconst delClubDataWRTUser = \"https://zarvichdemo.localto.net/delClub\";\r\nconst delRestDataWRTUser = \"https://zarvichdemo.localto.net/delRest\";\r\nconst delLaudDataWRTUser = \"https://zarvichdemo.localto.net/delLaund\";\r\nconst getrevenueData = \"https://zarvichdemo.localto.net/otherSalesPoints?Fostaff=\";\r\nconst posttorevenueWarehouse = \"https://zarvichdemo.localto.net/postRWarehouse\";\r\nconst delrevenueData = \"https://zarvichdemo.localto.net/delOtherrevenue\";\r\nconst getDepositsUrl = \"https://zarvichdemo.localto.net/GetTmpRmDep?Bstaff=\";\r\nconst getTempFunctionBill = \"https://zarvichdemo.localto.net/functionDep?Fnstaff=\";\r\nconst delTempFunctionBill = \"https://zarvichdemo.localto.net/delTempFunctionBills\";\r\nconst postAllpoolTemp = \"https://zarvichdemo.localto.net/addMany\";\r\nconst postAllClubTemp = \"https://zarvichdemo.localto.net/addManyClub\";\r\nconst getAllpoolbarSales = \"https://zarvichdemo.localto.net/poolbarSales\";\r\nconst getAllClubSales = \"https://zarvichdemo.localto.net/clubSales\";\r\nconst getAllTemppoolbarSales = \"https://zarvichdemo.localto.net/GetpoolBarTemp\";\r\nconst getAllTempClubSales = \"https://zarvichdemo.localto.net/GetclubTemp\";\r\nconst delTempPool = \"https://zarvichdemo.localto.net/delpoolBarTemp\";\r\nconst delTempClub = \"https://zarvichdemo.localto.net/delclubTemp\";\r\nconst delTempRoomDeposit = \"https://zarvichdemo.localto.net/delTmpRmDep\";\r\n\r\nconst users = \"https://zarvichdemo.localto.net/barUserInfo\";\r\nconst Fousers = \"https://zarvichdemo.localto.net/fofUserInfo\";\r\nconst Poolusers = \"https://zarvichdemo.localto.net/poolUserInfo\";\r\nconst Restusers = \"https://zarvichdemo.localto.net/restUserInfo\";\r\nconst Billingusers = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\nconst FandBusers = \"https://zarvichdemo.localto.net/fandbUserInfo\";\r\nconst Clubusers = \"https://zarvichdemo.localto.net/clubUserInfo\";\r\n\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\nconst getWorkDate = \"https://zarvichdemo.localto.net/getActive\";\r\n\r\n\r\nclass RetireBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside GstConstructor\",props)\r\n        this.state = {\r\n            bar:'',\r\n            staff:'',\r\n            \r\n            barstaff:'',\r\n            receptionStaff:'',\r\n            poolbarStaff:'',\r\n            restaurantStaff:'',\r\n            billingStaff:'',\r\n            fandbstaff:'',\r\n            clubStaff:'',\r\n\r\n            name:'',\r\n            Cash:'',\r\n            POS:'',\r\n            Room:'',\r\n            Transfer:'',\r\n            Complimentary:'',\r\n            TotalSales:'',\r\n            date:'',\r\n            checkPool:'',\r\n            checkDeposit:'',\r\n            PoolRemaininPosts:'',\r\n            PoolTempSales:'',\r\n            ClubRemaininPosts:'',\r\n            ClubTempSales:'',\r\n            loginDetails:'',\r\n            name2:localStorage.getItem('userInfo'),\r\n            shift:'',\r\n            login:'',\r\n            Blogin:'',\r\n\r\n            printBTN:'Print',\r\n            Baredit:false,\r\n            PoolBaredit:false,\r\n            Clubedit:false,\r\n            Restedit:false,\r\n            Laundryedit:false,\r\n            depositedit:false,\r\n            othersedit:false,\r\n            functionedit:false,\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n           \r\n          \r\n        }\r\n\r\n    }\r\n\r\n    onOpenBarModal(){\r\n        this.setState({\r\n            Baredit: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onOpenRestModal(){\r\n        this.setState({\r\n            Restedit: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onOpenLaundryModal(){\r\n        this.setState({\r\n            Laundryedit: true\r\n        })\r\n    }\r\n\r\n    onCloseRestModal(){\r\n        this.setState({\r\n            Restedit: false\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseLaundryModal(){\r\n        this.setState({\r\n            Laundryedit: false\r\n        })\r\n    }\r\n\r\n    onOpenPoolBarModal(){\r\n        this.setState({\r\n            PoolBaredit: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onOpenClubModal(){\r\n        this.setState({\r\n            Clubedit: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseBarModal(){\r\n        this.setState({\r\n            Baredit: false\r\n        })\r\n        \r\n    }\r\n\r\n    onClosePoolBarModal(){\r\n        this.setState({\r\n            PoolBaredit: false\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseClubModal(){\r\n        this.setState({\r\n            Clubedit: false\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseDepModal(){\r\n        this.setState({\r\n            depositedit: false\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenDepModal(){\r\n        this.setState({\r\n            depositedit: true\r\n\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseOthrspModal(){\r\n        this.setState({\r\n            othersedit: false\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenOthrsModal(){\r\n        this.setState({\r\n            othersedit: true\r\n\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseFunctnModal(){\r\n        this.setState({\r\n            functionedit: false\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenFunctnModal(){\r\n        this.setState({\r\n            functionedit: true\r\n\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n\r\n    sendtoprinter2(){\r\n        if(this.state.printBTN==='Print'){\r\n            window.print();\r\n            this.setState({printBTN:'Close'})\r\n        }\r\n        else if(this.state.printBTN==='Close'){\r\n            this.setState({Baredit: false})      \r\n            this.setState({printBTN:'Print'})\r\n\r\n            this.handleSubmitForBar()\r\n            \r\n        }\r\n        \r\n       \r\n    }\r\n\r\n    sendtoprinterPool(){\r\n        if(this.state.printBTN==='Print'){\r\n            window.print();\r\n            this.setState({printBTN:'Close'})\r\n        }\r\n        else if(this.state.printBTN==='Close'){\r\n            this.setState({PoolBaredit: false})      \r\n            this.setState({printBTN:'Print'})\r\n\r\n            this.handlePoolSubmit()\r\n            \r\n        }\r\n        \r\n       \r\n    }\r\n\r\n    sendtoprinterClub(){\r\n        if(this.state.printBTN==='Print'){\r\n            window.print();\r\n            this.setState({printBTN:'Close'})\r\n        }\r\n        else if(this.state.printBTN==='Close'){\r\n            this.setState({Clubedit: false})      \r\n            this.setState({printBTN:'Print'})\r\n\r\n            this.handleClubSubmit()\r\n            \r\n        }\r\n        \r\n       \r\n    }\r\n\r\n    sendtoprinterRest(){\r\n        if(this.state.printBTN==='Print'){\r\n            window.print();\r\n            this.setState({printBTN:'Close'})\r\n        }\r\n        else if(this.state.printBTN==='Close'){\r\n            this.setState({Restedit: false})      \r\n            this.setState({printBTN:'Print'})\r\n\r\n            this.handleRestSubmit()\r\n            \r\n        }\r\n        \r\n       \r\n    }\r\n\r\n    sendtoprinterLaundry(){\r\n        if(this.state.printBTN==='Print'){\r\n            window.print();\r\n            this.setState({printBTN:'Close'})\r\n        }\r\n        else if(this.state.printBTN==='Close'){\r\n            this.setState({Laundryedit: false})      \r\n            this.setState({printBTN:'Print'})\r\n\r\n            this.handleLaundrySubmit()\r\n            \r\n        }\r\n        \r\n       \r\n    }\r\n\r\n    sendtoprinterDep(){\r\n        if(this.state.printBTN==='Print'){\r\n            window.print();\r\n            this.setState({printBTN:'Close'})\r\n        }\r\n        else if(this.state.printBTN==='Close'){\r\n            this.setState({depositedit: false})      \r\n            this.setState({printBTN:'Print'})\r\n\r\n            this.handleRoomDepositSubmit()\r\n            \r\n        }\r\n        \r\n       \r\n    }\r\n\r\n    sendtoprinterOthrs(){\r\n        if(this.state.printBTN==='Print'){\r\n            window.print();\r\n            this.setState({printBTN:'Close'})\r\n        }\r\n        else if(this.state.printBTN==='Close'){\r\n            this.setState({othersedit: false})      \r\n            this.setState({printBTN:'Print'})\r\n\r\n            this.handleOtherSalesSubmit()\r\n            \r\n        }\r\n        \r\n       \r\n    }\r\n\r\n    sendtoprinterFunctn(){\r\n        if(this.state.printBTN==='Print'){\r\n            window.print();\r\n            this.setState({printBTN:'Close'})\r\n        }\r\n        else if(this.state.printBTN==='Close'){\r\n            this.setState({functionedit: false})      \r\n            this.setState({printBTN:'Print'})\r\n\r\n            this.handleFunctionDepositSubmit()\r\n            \r\n        }\r\n        \r\n       \r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    getSales(){\r\n        \r\n\r\n        fetch(`${getbarSales}${this.state.name}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({bar:data});\r\n\r\n            \r\n                \r\n            if(this.state.bar.length>0){\r\n                data.map((item)=>{\r\n                    var shiftNow = [];\r\n                    shiftNow.push(item.shift);\r\n                    this.setState({shift:shiftNow})\r\n                    return 'ok'\r\n                })\r\n\r\n            }\r\n\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({POS:allPOS})\r\n\r\n            var allCash2 = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({Cash:parseInt(allCash2)})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({Transfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({Complimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({Room:allRoom})\r\n            \r\n            var Sales = 0;\r\n            var dailySales = Sales + this.state.Cash + this.state.POS + this.state.Transfer + this.state.Room \r\n            this.setState({TotalSales:dailySales})\r\n            \r\n        });\r\n        \r\n    }\r\n\r\n    getRestSales(){\r\n        \r\n        fetch(`${getRestSales}${this.state.name}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({bar:data});\r\n\r\n            if(this.state.bar.length>0){\r\n                data.map((item)=>{\r\n                    var shiftNow = [];\r\n                    shiftNow.push(item.shift);\r\n                    this.setState({shift:shiftNow})\r\n                    return 'ok'\r\n                })\r\n\r\n            }\r\n\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({POS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({Cash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({Transfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({Complimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({Room:allRoom})\r\n            \r\n            var Sales = 0;\r\n            var dailySales = Sales + this.state.Cash + this.state.POS + this.state.Transfer + this.state.Room \r\n            this.setState({TotalSales:dailySales})\r\n            \r\n        });\r\n\r\n    }\r\n\r\n\r\n    getLaundrySales(){\r\n        \r\n        fetch(`${getLaundrySales}${this.state.name}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({bar:data});\r\n\r\n            if(this.state.bar.length>0){\r\n                data.map((item)=>{\r\n                    var shiftNow = [];\r\n                    shiftNow.push(item.shift);\r\n                    this.setState({shift:shiftNow})\r\n                    return 'ok'\r\n                })\r\n\r\n            }\r\n\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({POS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({Cash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({Transfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({Complimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({Room:allRoom})\r\n            \r\n            var Sales = 0;\r\n            var dailySales = Sales + this.state.Cash + this.state.POS + this.state.Transfer + this.state.Room \r\n            this.setState({TotalSales:dailySales})\r\n            \r\n        });\r\n\r\n    }\r\n\r\n    getPoolSales(){\r\n        \r\n        fetch(`${getpoolbarSales}${this.state.name}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({bar:data});\r\n\r\n            if(this.state.bar.length>0){\r\n                data.map((item)=>{\r\n                    var shiftNow = [];\r\n                    shiftNow.push(item.shift);\r\n                    this.setState({shift:shiftNow})\r\n                    return 'ok'\r\n                })\r\n\r\n            }\r\n\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({POS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({Cash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({Transfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({Complimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({Room:allRoom})\r\n            \r\n            var Sales = 0;\r\n            var dailySales = Sales + this.state.Cash + this.state.POS + this.state.Transfer + this.state.Room \r\n            this.setState({TotalSales:dailySales})\r\n            \r\n        });\r\n    }\r\n\r\n    getClubSales(){\r\n        \r\n        fetch(`${getClubSales}${this.state.name}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({bar:data});\r\n\r\n            if(this.state.bar.length>0){\r\n                data.map((item)=>{\r\n                    var shiftNow = [];\r\n                    shiftNow.push(item.shift);\r\n                    this.setState({shift:shiftNow})\r\n                    return 'ok'\r\n                })\r\n\r\n            }\r\n\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({POS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({Cash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({Transfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({Complimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({Room:allRoom})\r\n            \r\n            var Sales = 0;\r\n            var dailySales = Sales + this.state.Cash + this.state.POS + this.state.Transfer + this.state.Room \r\n            this.setState({TotalSales:dailySales})\r\n            \r\n        });\r\n    }\r\n\r\n    getOtherSales(){\r\n        fetch(`${getrevenueData}${this.state.name}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                bar:data,\r\n                \r\n            });\r\n\r\n            if(this.state.bar.length>0){\r\n                data.map((item)=>{\r\n                    var shiftNow = [];\r\n                    shiftNow.push(item.shift);\r\n                    this.setState({shift:shiftNow})\r\n                    return 'ok'\r\n                })\r\n\r\n            }\r\n\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({POS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({Cash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({Transfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({Complimentary:allComp})\r\n\r\n            this.setState({Room:0})\r\n\r\n            var Sales = 0;\r\n            var dailySales = Sales + this.state.Cash + this.state.POS + this.state.Transfer + this.state.Room \r\n            this.setState({TotalSales:dailySales})\r\n            \r\n        })\r\n    }\r\n\r\n    getDeposits(){\r\n       \r\n        fetch(`${getDepositsUrl}${this.state.name}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                bar:data,\r\n                \r\n            });\r\n\r\n            if(this.state.bar.length>0){\r\n                data.map((item)=>{\r\n                    var shiftNow = [];\r\n                    shiftNow.push(item.shift);\r\n                    this.setState({shift:shiftNow})\r\n                    return 'ok'\r\n                })\r\n\r\n            }\r\n\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({POS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({Cash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({Transfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({Complimentary:allComp})\r\n\r\n            this.setState({Room:0})\r\n\r\n            var Sales = 0;\r\n            var dailySales = Sales + this.state.Cash + this.state.POS + this.state.Transfer + this.state.Room \r\n            this.setState({TotalSales:dailySales})\r\n           \r\n        })\r\n    }\r\n\r\n    getFunctionDeposits(){\r\n       \r\n        fetch(`${getTempFunctionBill}${this.state.name}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                bar:data,\r\n                \r\n            });\r\n\r\n            if(this.state.bar.length>0){\r\n                data.map((item)=>{\r\n                    var shiftNow = [];\r\n                    shiftNow.push(item.shift);\r\n                    this.setState({shift:shiftNow})\r\n                    return 'ok'\r\n                })\r\n\r\n            }\r\n            \r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({POS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({Cash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({Transfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({Complimentary:allComp})\r\n\r\n            this.setState({Room:0})\r\n\r\n            var Sales = 0;\r\n            var dailySales = Sales + this.state.Cash + this.state.POS + this.state.Transfer + this.state.Room\r\n            this.setState({TotalSales:dailySales})\r\n           \r\n        })\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        localStorage.removeItem('shift')\r\n        \r\n    }\r\n\r\n   renderUsers(data){\r\n        if(data){\r\n            return data.map((item) =>{\r\n                return(\r\n                    <>\r\n                        <option key={item._id} value={item.name}>\r\n                            {item.name}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    async handleSubmitForBar() {\r\n          \r\n        try {\r\n            var barSalesWRTUser = this.state.bar;\r\n\r\n            var BarSales = {\r\n                _id:'DSR'+Math.floor(Math.random()*10000),\r\n                description: \"Bar Sales\",\r\n                department: \"Bar Sales\",\r\n                date: moment(`${this.state.date}`).format('MMM DD YYYY'),\r\n                POS:`${this.state.POS}`,\r\n                Cash:`${this.state.Cash}`,\r\n                Room:`${this.state.Room}`,\r\n                Transfer:`${this.state.Transfer}`,\r\n                Complimentary:`${this.state.Complimentary}`,\r\n                user:`${this.state.name}`,\r\n                shift:`${this.state.shift}`\r\n                \r\n            }\r\n            if((barSalesWRTUser).length===0){\r\n                alert(\"Bar Data is not available\")\r\n            }\r\n           \r\n            else{\r\n                let dailyPost = await fetch(dailysalesPost, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        BarSales\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('dailyPost>  ' + dailyPost)\r\n               \r\n                let warePost = await fetch(barWarehousePost, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        barSalesWRTUser.map(item => item)\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('warePost>  ' + warePost)\r\n                \r\n                let delBarD = fetch(`${delBarDataWRTUser}/${this.state.name}`, {\r\n                    method: 'delete',\r\n                \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n            \r\n                    body: JSON.stringify(\r\n                            \r\n                        this.state.bar\r\n                                \r\n                    )\r\n                                \r\n                                \r\n                });\r\n                console.log('delBarD>  ' + delBarD)\r\n    \r\n                alert(\"Sales Retired\")\r\n                this.setState({name:''})\r\n                this.setState({Cash:''})\r\n                this.setState({POS:''})\r\n                this.setState({Room:''})\r\n                this.setState({Transfer:''})\r\n                this.setState({Complimentary:''})\r\n                this.setState({TotalSales:''})\r\n                this.setState({bar:''})\r\n                this.setState({staff:''})\r\n                this.setState({shift:''})\r\n\r\n                fetch(`${users}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({barstaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Fousers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({receptionStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Poolusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({poolbarStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Clubusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({clubStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Restusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({restaurantStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Billingusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({billingStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${FandBusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({fandbstaff:data});\r\n                    \r\n                });\r\n                    this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.barstaff;\r\n                    var receptionStaff=this.state.receptionStaff;\r\n                    var poolbarStaff=this.state.poolbarStaff;\r\n                    var clubStaff=this.state.clubStaff;\r\n                    var restaurantStaff=this.state.restaurantStaff;\r\n                    var billingStaff=this.state.billingStaff;\r\n                    var fandbstaff=this.state.fandbstaff;\r\n                    this.setState({staff:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff,...clubStaff]})\r\n    \r\n                },2000);\r\n            }\r\n            \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleRestSubmit() {\r\n          \r\n        try {\r\n            var barSalesWRTUser = this.state.bar;\r\n\r\n            var RestSales = {\r\n                _id:'DSR'+Math.floor(Math.random()*10000),\r\n                description: \"Restaurant Sales\",\r\n                department: \"Restaurant Sales\",\r\n                date: moment(`${this.state.date}`).format('MMM DD YYYY'),\r\n                POS:`${this.state.POS}`,\r\n                Cash:`${this.state.Cash}`,\r\n                Room:`${this.state.Room}`,\r\n                Transfer:`${this.state.Transfer}`,\r\n                Complimentary:`${this.state.Complimentary}`,\r\n                user:`${this.state.name}`,\r\n                shift:`${this.state.shift}`\r\n                \r\n            }\r\n\r\n            if((barSalesWRTUser).length===0){\r\n                alert(\"Restaurant Data is not available\")\r\n            }\r\n\r\n            else{\r\n                let result5 = await fetch(dailysalesPost, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        RestSales\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('result5>  ' + result5)\r\n               \r\n                let result4 = await fetch(restWarehousePost, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        barSalesWRTUser.map(item => item)\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('result4>  ' + result4)\r\n                \r\n                let result3 = fetch(`${delRestDataWRTUser}/${this.state.name}`, {\r\n                    method: 'delete',\r\n                \r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type': 'application/json',\r\n                        },\r\n                \r\n                        body: JSON.stringify(\r\n                                \r\n                            this.state.bar\r\n                                    \r\n                        )\r\n                                \r\n                                \r\n                });\r\n                console.log('result3>  ' + result3)\r\n    \r\n                alert(\"Sales Retired\")\r\n                this.setState({name:''})\r\n                this.setState({Cash:''})\r\n                this.setState({POS:''})\r\n                this.setState({Room:''})\r\n                this.setState({Transfer:''})\r\n                this.setState({Complimentary:''})\r\n                this.setState({TotalSales:''})\r\n                this.setState({bar:''})\r\n                this.setState({staff:''})\r\n                this.setState({shift:''})\r\n\r\n\r\n                fetch(`${users}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({barstaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Fousers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({receptionStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Poolusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({poolbarStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Clubusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({clubStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Restusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({restaurantStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Billingusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({billingStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${FandBusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({fandbstaff:data});\r\n                    \r\n                });\r\n                    this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.barstaff;\r\n                    var receptionStaff=this.state.receptionStaff;\r\n                    var poolbarStaff=this.state.poolbarStaff;\r\n                    var clubStaff=this.state.clubStaff;\r\n                    var restaurantStaff=this.state.restaurantStaff;\r\n                    var billingStaff=this.state.billingStaff;\r\n                    var fandbstaff=this.state.fandbstaff;\r\n                    this.setState({staff:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff,...clubStaff]})\r\n    \r\n                },2000);\r\n            }\r\n            \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleLaundrySubmit() {\r\n          \r\n        try {\r\n            var barSalesWRTUser = this.state.bar;\r\n\r\n            var LaundSales = {\r\n                _id:'DSR'+Math.floor(Math.random()*10000),\r\n                description: \"Laundry Sales\",\r\n                department: \"Laundry Sales\",\r\n                date: moment(`${this.state.date}`).format('MMM DD YYYY'),\r\n                POS:`${this.state.POS}`,\r\n                Cash:`${this.state.Cash}`,\r\n                Room:`${this.state.Room}`,\r\n                Transfer:`${this.state.Transfer}`,\r\n                Complimentary:`${this.state.Complimentary}`,\r\n                user:`${this.state.name}`,\r\n                shift:`${this.state.shift}`\r\n                \r\n            }\r\n\r\n            if((barSalesWRTUser).length===0){\r\n                alert(\"Laundry Data is not available\")\r\n            }\r\n\r\n            else{\r\n                let result5 = await fetch(dailysalesPost, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        LaundSales\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('result5>  ' + result5)\r\n               \r\n                let result4 = await fetch(laundryWarehousePost, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        barSalesWRTUser.map(item => item)\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('result4>  ' + result4)\r\n                \r\n                let result3 = fetch(`${delLaudDataWRTUser}/${this.state.name}`, {\r\n                    method: 'delete',\r\n                \r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type': 'application/json',\r\n                        },\r\n                \r\n                        body: JSON.stringify(\r\n                                \r\n                            this.state.bar\r\n                                    \r\n                        )\r\n                                \r\n                                \r\n                });\r\n                console.log('result3>  ' + result3)\r\n    \r\n                alert(\"Sales Retired\")\r\n                this.setState({name:''})\r\n                this.setState({Cash:''})\r\n                this.setState({POS:''})\r\n                this.setState({Room:''})\r\n                this.setState({Transfer:''})\r\n                this.setState({Complimentary:''})\r\n                this.setState({TotalSales:''})\r\n                this.setState({bar:''})\r\n                this.setState({staff:''})\r\n                this.setState({shift:''})\r\n\r\n\r\n                fetch(`${users}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({barstaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Fousers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({receptionStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Poolusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({poolbarStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Clubusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({clubStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Restusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({restaurantStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Billingusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({billingStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${FandBusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({fandbstaff:data});\r\n                    \r\n                });\r\n                    this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.barstaff;\r\n                    var receptionStaff=this.state.receptionStaff;\r\n                    var poolbarStaff=this.state.poolbarStaff;\r\n                    var clubStaff=this.state.clubStaff;\r\n                    var restaurantStaff=this.state.restaurantStaff;\r\n                    var billingStaff=this.state.billingStaff;\r\n                    var fandbstaff=this.state.fandbstaff;\r\n                    this.setState({staff:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff,...clubStaff]})\r\n    \r\n                },2000);\r\n            }\r\n            \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handlePoolSubmit() {\r\n          \r\n        try {\r\n            var barSalesWRTUser = this.state.bar;\r\n\r\n            var PoolSales = {\r\n                _id:'DSR'+Math.floor(Math.random()*100000000),\r\n                description: \"Pool Bar Sales\",\r\n                department: \"Pool Bar Sales\",\r\n                date: moment(`${this.state.date}`).format('MMM DD YYYY'),\r\n                POS:`${this.state.POS}`,\r\n                Cash:`${this.state.Cash}`,\r\n                Room:`${this.state.Room}`,\r\n                Transfer:`${this.state.Transfer}`,\r\n                Complimentary:`${this.state.Complimentary}`,\r\n                user:`${this.state.name}`,\r\n                shift:`${this.state.shift}`\r\n            }\r\n            \r\n            if((barSalesWRTUser).length===0){\r\n                alert(\"Pool Data is not available\")\r\n            }\r\n\r\n            else{\r\n                let result4 = await fetch(poolbarWarehousePost, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        barSalesWRTUser.map(item => item)\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('result4>  ' + result4)\r\n    \r\n                let result2 = await fetch(dailysalesPost, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        PoolSales\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2>  ' + result2)\r\n                \r\n                let result3 = fetch(`${delpoolBarDataWRTUser}/${this.state.name}`, {\r\n                    method: 'delete',\r\n                \r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type': 'application/json',\r\n                        },\r\n                \r\n                        body: JSON.stringify(\r\n                                \r\n                            this.state.bar\r\n                                    \r\n                        )\r\n                                \r\n                                \r\n                });\r\n                console.log('result3>  ' + result3)\r\n               \r\n                this.setState({name:''})\r\n                this.setState({Cash:''})\r\n                this.setState({POS:''})\r\n                this.setState({Room:''})\r\n                this.setState({Transfer:''})\r\n                this.setState({Complimentary:''})\r\n                this.setState({TotalSales:''})\r\n                this.setState({bar:''})\r\n                this.setState({staff:''})\r\n                this.setState({shift:''})\r\n\r\n\r\n                fetch(`${users}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({barstaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Fousers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({receptionStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Poolusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({poolbarStaff:data});\r\n                    \r\n                });\r\n                fetch(`${Clubusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({clubStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Restusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({restaurantStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Billingusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({billingStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${FandBusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({fandbstaff:data});\r\n                    \r\n                });\r\n                    this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.barstaff;\r\n                    var receptionStaff=this.state.receptionStaff;\r\n                    var poolbarStaff=this.state.poolbarStaff;\r\n                    var clubStaff=this.state.clubStaff;\r\n                    var restaurantStaff=this.state.restaurantStaff;\r\n                    var billingStaff=this.state.billingStaff;\r\n                    var fandbstaff=this.state.fandbstaff;\r\n                    this.setState({staff:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff,...clubStaff]})\r\n    \r\n                },2000);\r\n\r\n\r\n                fetch(`${getAllTemppoolbarSales}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({PoolTempSales:data});\r\n                    \r\n                });\r\n                fetch(`${getAllpoolbarSales}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({PoolRemaininPosts:data});\r\n        \r\n                    this.myTimer = setTimeout(() => {\r\n        \r\n                        if((this.state.PoolRemaininPosts).length===0){\r\n                            this.setState({checkPool:0})\r\n                        }\r\n                                                \r\n                    },3000)\r\n                \r\n                });\r\n                alert(\"Pool Sales Added Successfully\");\r\n            }\r\n           \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleClubSubmit() {\r\n          \r\n        try {\r\n            var barSalesWRTUser = this.state.bar;\r\n\r\n            var ClubSales = {\r\n                _id:'DSR'+Math.floor(Math.random()*100000000),\r\n                description: \"Reservation\",\r\n                department: \"Reservation\",\r\n                date: moment(`${this.state.date}`).format('MMM DD YYYY'),\r\n                POS:`${this.state.POS}`,\r\n                Cash:`${this.state.Cash}`,\r\n                Room:`${this.state.Room}`,\r\n                Transfer:`${this.state.Transfer}`,\r\n                Complimentary:`${this.state.Complimentary}`,\r\n                user:`${this.state.name}`,\r\n                shift:`${this.state.shift}`\r\n            }\r\n            \r\n            if((barSalesWRTUser).length===0){\r\n                alert(\"Reservation Data is not available\")\r\n            }\r\n\r\n            else{\r\n                let result4 = await fetch(clubWarehousePost, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        barSalesWRTUser.map(item => item)\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('result4>  ' + result4)\r\n    \r\n                let result2 = await fetch(dailysalesPost, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        ClubSales\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2>  ' + result2)\r\n                \r\n                let result3 = fetch(`${delClubDataWRTUser}/${this.state.name}`, {\r\n                    method: 'delete',\r\n                \r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type': 'application/json',\r\n                        },\r\n                \r\n                        body: JSON.stringify(\r\n                                \r\n                            this.state.bar\r\n                                    \r\n                        )\r\n                                \r\n                                \r\n                });\r\n                console.log('result3>  ' + result3)\r\n               \r\n                this.setState({name:''})\r\n                this.setState({Cash:''})\r\n                this.setState({POS:''})\r\n                this.setState({Room:''})\r\n                this.setState({Transfer:''})\r\n                this.setState({Complimentary:''})\r\n                this.setState({TotalSales:''})\r\n                this.setState({bar:''})\r\n                this.setState({staff:''})\r\n                this.setState({shift:''})\r\n\r\n\r\n                fetch(`${users}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({barstaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Fousers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({receptionStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Poolusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({poolbarStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Clubusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({clubStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Restusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({restaurantStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Billingusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({billingStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${FandBusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({fandbstaff:data});\r\n                    \r\n                });\r\n                    this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.barstaff;\r\n                    var receptionStaff=this.state.receptionStaff;\r\n                    var poolbarStaff=this.state.poolbarStaff;\r\n                    var clubStaff=this.state.clubStaff;\r\n                    var restaurantStaff=this.state.restaurantStaff;\r\n                    var billingStaff=this.state.billingStaff;\r\n                    var fandbstaff=this.state.fandbstaff;\r\n                    this.setState({staff:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff,...clubStaff]})\r\n    \r\n                },2000);\r\n\r\n\r\n                fetch(`${getAllTempClubSales}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({ClubTempSales:data});\r\n                    \r\n                });\r\n                fetch(`${getAllClubSales}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({ClubRemaininPosts:data});\r\n        \r\n                    this.myTimer = setTimeout(() => {\r\n        \r\n                        if((this.state.ClubRemaininPosts).length===0){\r\n                            this.setState({checkPool:0})\r\n                        }\r\n                                                \r\n                    },3000)\r\n                \r\n                });\r\n                alert(\"Reservation Sales Added Successfully\");\r\n            }\r\n           \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleRetirePoolSubmit() {\r\n          \r\n        try {\r\n            if((this.state.PoolTempSales).length===0){\r\n                alert (\"Pool Data is not available\")\r\n            }\r\n            else{\r\n                var poolData = this.state.PoolTempSales;\r\n                let result5 = fetch(postAllpoolTemp, {\r\n                    method: 'post',\r\n\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n\r\n                    body: JSON.stringify(\r\n                        poolData.map(item =>item)\r\n                        \r\n                    )\r\n                \r\n                });\r\n                console.log('result5>  ' + result5)\r\n\r\n                let result13 = fetch(`${delTempPool}`, {\r\n                    method: 'delete',\r\n            \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n            \r\n                    body: JSON.stringify(\r\n                            \r\n                        this.state.PoolTempSales\r\n                                \r\n                    )\r\n                            \r\n                            \r\n                });\r\n                console.log('result13>  ' + result13)\r\n                    \r\n                alert(\"Sales Retired\")\r\n                this.setState({name:''})\r\n                this.setState({Cash:''})\r\n                this.setState({POS:''})\r\n                this.setState({Room:''})\r\n                this.setState({Transfer:''})\r\n                this.setState({Complimentary:''})\r\n                this.setState({TotalSales:''})\r\n                this.setState({bar:''})\r\n                this.setState({staff:''})\r\n                this.setState({checkPool:''})\r\n\r\n                fetch(`${users}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({barstaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Fousers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({receptionStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Poolusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({poolbarStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Clubusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({clubStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Restusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({restaurantStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Billingusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({billingStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${FandBusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({fandbstaff:data});\r\n                    \r\n                });\r\n                    this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.barstaff;\r\n                    var receptionStaff=this.state.receptionStaff;\r\n                    var poolbarStaff=this.state.poolbarStaff;\r\n                    var clubStaff=this.state.clubStaff;\r\n                    var restaurantStaff=this.state.restaurantStaff;\r\n                    var billingStaff=this.state.billingStaff;\r\n                    var fandbstaff=this.state.fandbstaff;\r\n                    this.setState({staff:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff,...clubStaff]})\r\n    \r\n                },2000);\r\n            }\r\n            \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleRetireClubSubmit() {\r\n          \r\n        try {\r\n            if((this.state.ClubTempSales).length===0){\r\n                alert (\"Pool Data is not available\")\r\n            }\r\n            else{\r\n                var clubData = this.state.ClubTempSales;\r\n                let result5 = fetch(postAllClubTemp, {\r\n                    method: 'post',\r\n\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n\r\n                    body: JSON.stringify(\r\n                        clubData.map(item =>item)\r\n                        \r\n                    )\r\n                \r\n                });\r\n                console.log('result5>  ' + result5)\r\n\r\n                let result13 = fetch(`${delTempClub}`, {\r\n                    method: 'delete',\r\n            \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n            \r\n                    body: JSON.stringify(\r\n                            \r\n                        this.state.ClubTempSales\r\n                                \r\n                    )\r\n                            \r\n                            \r\n                });\r\n                console.log('result13>  ' + result13)\r\n                    \r\n                alert(\"Sales Retired\")\r\n                this.setState({name:''})\r\n                this.setState({Cash:''})\r\n                this.setState({POS:''})\r\n                this.setState({Room:''})\r\n                this.setState({Transfer:''})\r\n                this.setState({Complimentary:''})\r\n                this.setState({TotalSales:''})\r\n                this.setState({bar:''})\r\n                this.setState({staff:''})\r\n                this.setState({checkPool:''})\r\n\r\n                fetch(`${users}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({barstaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Fousers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({receptionStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Poolusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({poolbarStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Clubusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({clubStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Restusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({restaurantStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Billingusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({billingStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${FandBusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({fandbstaff:data});\r\n                    \r\n                });\r\n                    this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.barstaff;\r\n                    var receptionStaff=this.state.receptionStaff;\r\n                    var poolbarStaff=this.state.poolbarStaff;\r\n                    var clubStaff=this.state.clubStaff;\r\n                    var restaurantStaff=this.state.restaurantStaff;\r\n                    var billingStaff=this.state.billingStaff;\r\n                    var fandbstaff=this.state.fandbstaff;\r\n                    this.setState({staff:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff,...clubStaff]})\r\n    \r\n                },2000);\r\n            }\r\n            \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleOtherSalesSubmit() {\r\n          \r\n        try {\r\n            var barSalesWRTUser = this.state.bar;\r\n\r\n            var OtherSales = {\r\n                _id:'DSR'+Math.floor(Math.random()*10000),\r\n                description: \"Other Sales\",\r\n                department: \"Other Sales\",\r\n                date: moment(`${this.state.date}`).format('MMM DD YYYY'),\r\n                POS:`${this.state.POS}`,\r\n                Cash:`${this.state.Cash}`,\r\n                Room:`${this.state.Room}`,\r\n                Transfer:`${this.state.Transfer}`,\r\n                Complimentary:`${this.state.Complimentary}`,\r\n                user:`${this.state.name}`,\r\n                shift:`${this.state.shift}`\r\n            }\r\n\r\n            if((barSalesWRTUser).length===0){\r\n                alert(\"Other Sales Data is not available\")\r\n            }\r\n\r\n            else{\r\n                let result5 = await fetch(dailysalesPost, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        OtherSales\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('result5>  ' + result5)\r\n               \r\n                let result4 = await fetch(posttorevenueWarehouse, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        barSalesWRTUser.map(item => item)\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('result4>  ' + result4)\r\n                \r\n                let result3 = fetch(`${delrevenueData}/${this.state.name}`, {\r\n                    method: 'delete',\r\n                \r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type': 'application/json',\r\n                        },\r\n                \r\n                        body: JSON.stringify(\r\n                                \r\n                            this.state.bar\r\n                                    \r\n                        )\r\n                                \r\n                                \r\n                });\r\n                console.log('result3>  ' + result3)\r\n    \r\n                alert(\"Sales Retired\")\r\n                this.setState({name:''})\r\n                this.setState({Cash:''})\r\n                this.setState({POS:''})\r\n                this.setState({Room:''})\r\n                this.setState({Transfer:''})\r\n                this.setState({Complimentary:''})\r\n                this.setState({TotalSales:''})\r\n                this.setState({bar:''})\r\n                this.setState({staff:''})\r\n                this.setState({shift:''})\r\n\r\n                fetch(`${users}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({barstaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Fousers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({receptionStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Poolusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({poolbarStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Clubusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({clubStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Restusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({restaurantStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Billingusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({billingStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${FandBusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({fandbstaff:data});\r\n                    \r\n                });\r\n                    this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.barstaff;\r\n                    var receptionStaff=this.state.receptionStaff;\r\n                    var poolbarStaff=this.state.poolbarStaff;\r\n                    var clubStaff=this.state.clubStaff;\r\n                    var restaurantStaff=this.state.restaurantStaff;\r\n                    var billingStaff=this.state.billingStaff;\r\n                    var fandbstaff=this.state.fandbstaff;\r\n                    this.setState({staff:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff,...clubStaff]})\r\n    \r\n                },2000);\r\n            }\r\n            \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleRoomDepositSubmit() {\r\n          \r\n        try {\r\n            var barSalesWRTUser = this.state.bar;\r\n\r\n            var roomDeposits = {\r\n                _id:'DSR'+Math.floor(Math.random()*10000),\r\n                description: \"Accommodation Deposits\",\r\n                department: \"Accommodation Deposits\",\r\n                date: moment(`${this.state.date}`).format('MMM DD YYYY'),\r\n                POS:`${this.state.POS}`,\r\n                Cash:`${this.state.Cash}`,\r\n                Room:`${this.state.Room}`,\r\n                Transfer:`${this.state.Transfer}`,\r\n                Complimentary:`${this.state.Complimentary}`,\r\n                user:`${this.state.name}`,\r\n                shift:`${this.state.shift}`\r\n                \r\n            }\r\n\r\n            if((barSalesWRTUser).length===0){\r\n                alert(\"Room Deposit Data is not available\")\r\n            }\r\n            else{\r\n                let result5 = await fetch(dailysalesPost, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        roomDeposits\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('result5>  ' + result5)\r\n               \r\n                let result4 = await fetch(posttorevenueWarehouse, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        barSalesWRTUser.map(item => item)\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('result4>  ' + result4)\r\n    \r\n                let result9 = await fetch(delTempRoomDeposit, {\r\n                    method: 'delete',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        barSalesWRTUser.map(item => item)\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('result9>  ' + result9)\r\n    \r\n                alert(\"Sales Retired\")\r\n                this.setState({name:''})\r\n                this.setState({Cash:''})\r\n                this.setState({POS:''})\r\n                this.setState({Room:''})\r\n                this.setState({Transfer:''})\r\n                this.setState({Complimentary:''})\r\n                this.setState({TotalSales:''})\r\n                this.setState({bar:''})\r\n                this.setState({staff:''})\r\n                this.setState({shift:''})\r\n                \r\n                fetch(`${users}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({barstaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Fousers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({receptionStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Poolusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({poolbarStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Clubusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({clubStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Restusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({restaurantStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Billingusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({billingStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${FandBusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({fandbstaff:data});\r\n                    \r\n                });\r\n                    this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.barstaff;\r\n                    var receptionStaff=this.state.receptionStaff;\r\n                    var poolbarStaff=this.state.poolbarStaff;\r\n                    var clubStaff=this.state.clubStaff;\r\n                    var restaurantStaff=this.state.restaurantStaff;\r\n                    var billingStaff=this.state.billingStaff;\r\n                    var fandbstaff=this.state.fandbstaff;\r\n                    this.setState({staff:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff,...clubStaff]})\r\n    \r\n                },2000);\r\n            }\r\n            \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleFunctionDepositSubmit() {\r\n          \r\n        try {\r\n            var barSalesWRTUser = this.state.bar;\r\n\r\n            var roomDeposits = {\r\n                _id:'DSR'+Math.floor(Math.random()*10000),\r\n                description: \"Function Deposits\",\r\n                department: \"Function Deposits\",\r\n                date: moment(`${this.state.date}`).format('MMM DD YYYY'),\r\n                POS:`${this.state.POS}`,\r\n                Cash:`${this.state.Cash}`,\r\n                Room:`${this.state.Room}`,\r\n                Transfer:`${this.state.Transfer}`,\r\n                Complimentary:`${this.state.Complimentary}`,\r\n                user:`${this.state.name}`,\r\n                shift:`${this.state.shift}`\r\n                \r\n            }\r\n\r\n            if((barSalesWRTUser).length===0){\r\n                alert(\"Function Deposit Data is not available\")\r\n            }\r\n            else{\r\n                let result6 = await fetch(dailysalesPost, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        roomDeposits\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('result6>  ' + result6)\r\n               \r\n                let result9 = await fetch(delTempFunctionBill, {\r\n                    method: 'delete',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        barSalesWRTUser.map(item => item)\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('result9>  ' + result9)\r\n    \r\n                alert(\"Sales Retired\")\r\n                this.setState({name:''})\r\n                this.setState({Cash:''})\r\n                this.setState({POS:''})\r\n                this.setState({Room:''})\r\n                this.setState({Transfer:''})\r\n                this.setState({Complimentary:''})\r\n                this.setState({TotalSales:''})\r\n                this.setState({bar:''})\r\n                this.setState({staff:''})\r\n                this.setState({shift:''})\r\n               \r\n                \r\n                fetch(`${users}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({barstaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Fousers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({receptionStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Poolusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({poolbarStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Clubusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({clubStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Restusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({restaurantStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${Billingusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({billingStaff:data});\r\n                    \r\n                });\r\n\r\n                fetch(`${FandBusers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({fandbstaff:data});\r\n                    \r\n                });\r\n                    this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.barstaff;\r\n                    var receptionStaff=this.state.receptionStaff;\r\n                    var poolbarStaff=this.state.poolbarStaff;\r\n                    var clubStaff=this.state.clubStaff;\r\n                    var restaurantStaff=this.state.restaurantStaff;\r\n                    var billingStaff=this.state.billingStaff;\r\n                    var fandbstaff=this.state.fandbstaff;\r\n                    this.setState({staff:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff,...clubStaff]})\r\n    \r\n                },2000);\r\n            }\r\n            \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        console.log (\">>> Inside Grpdetails\", this.state)\r\n        var receptDate = moment(`${this.state.date}`).format('MMM DD YYYY');\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Billinglogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div  className=\"background990 printing\">\r\n                    <br/>\r\n                    <div className=\"row\">\r\n                    \r\n                        <div className=\"col-3\">\r\n                            <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-50px'}}>Retire All Sales Points </h4>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h6 style = {{color:'purple',marginLeft:'480px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                            \r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                        </div>\r\n                    </div>\r\n                    <h4 style = {{color:'rgb(23, 23, 71)',marginLeft:'50px', marginBottom:'-40px'}}> </h4>\r\n\r\n                    <div className=\"formdesign510b\">\r\n                        <>\r\n                            <span>\r\n                                \r\n                                <select className=\"form-select formsizezzzAA mb-3 headingspace\" name=\"name\" onChange={this.handleChange}>\r\n                                    <option defaultValue=''>Select User</option>\r\n                                    {this.renderUsers(this.state.staff)}\r\n                                </select>\r\n                            </span>\r\n                            <span>\r\n                                <button disabled={this.state.name===''} className=\"btn btn-primary setthis4\" onClick={ () => this.getSales()}>Get Bar</button>\r\n                                <button disabled={this.state.name===''} className=\"btn btn-primary setthis3\" onClick={ () => this.getPoolSales()}>Get Pool</button>\r\n                                <button disabled={this.state.name===''} className=\"btn btn-primary setthis3\" onClick={ () => this.getClubSales()}>Get Reservations</button>\r\n                                <button disabled={this.state.name===''} className=\"btn btn-primary setthis5\" onClick={ () => this.getRestSales() }>Get Rest</button>\r\n                                <button disabled={this.state.name===''} className=\"btn btn-primary setthis6\" onClick={ () => this.getOtherSales() }>Get Others</button>\r\n                                <button disabled={this.state.name===''} className=\"btn btn-primary setthis6\" onClick={ () => this.getDeposits() }>Get Deposits</button>\r\n                                <button disabled={this.state.name===''} className=\"btn btn-primary setthis6\" onClick={ () => this.getLaundrySales() }>Get Laundry</button>\r\n                                \r\n                            \r\n                            </span>\r\n                        </>\r\n                        \r\n                        <div className=\"row\">\r\n                            <div className=\"col-4\">\r\n                                <label className='form-label bodyspace'>Cash</label>\r\n                                <p className=\"form-control mb-3 formsizeAA bodyspace\"><NumberFormat value={this.state.Cash}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\" }/></p>\r\n                               \r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <label className='form-label innerspace'>POS</label>\r\n                                <p className=\"form-control mb-3 formsizeAA innerspace\"><NumberFormat value={this.state.POS}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\" }/></p>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <label className='form-label innerspace'>Transfer</label>\r\n                                <p className=\"form-control mb-3 formsizeAA innerspace\"><NumberFormat value={this.state.Transfer}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\" }/></p>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className=\"row\">\r\n                            \r\n                            <div className=\"col-4\">\r\n                                <label className='form-label bodyspace'>Room</label>\r\n                                <p className=\"form-control mb-3 formsizeAA bodyspace\"><NumberFormat value={this.state.Room}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\" }/></p>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <label className='form-label innerspace'>Complimentary/Reservation Transfer</label>\r\n                                <p className=\"form-control mb-3 formsizeAA innerspace\"><NumberFormat value={this.state.Complimentary}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\" }/></p>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <label className='form-label innerspace'>TOTAL SALES</label>\r\n                                <p className=\"form-control mb-3 formsizeAA innerspace\"><NumberFormat value={this.state.TotalSales}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\" }/></p>\r\n                            </div>\r\n                            \r\n                            \r\n                        </div>\r\n                        <center>\r\n                            <br/>\r\n                            <span>\r\n                                <button className=\"btn btn-primary\" onClick={ () => {this.onOpenBarModal()}}>Retire Bar</button>\r\n                                <button className=\"btn btn-primary space\" onClick={ () => this.onOpenPoolBarModal()}>Retire Pool</button>\r\n                                <button className=\"btn btn-primary space\" onClick={ () => this.onOpenClubModal()}>Retire Reservation</button>\r\n                                <button className=\"btn btn-primary space\" onClick={ () => this.onOpenRestModal()}>Retire Restaurant</button>\r\n                                <button className=\"btn btn-primary space\" onClick={ () => this.onOpenOthrsModal()}>Retire Other Sales</button>\r\n                                <button className=\"btn btn-primary space\" onClick={ () => this.onOpenDepModal()}>Retire Room Deposits</button>\r\n                                <button className=\"btn btn-primary space\" onClick={ () => this.onOpenLaundryModal()}>Retire Laundry</button>\r\n                               \r\n                            </span>\r\n                            \r\n                        </center>\r\n                        <div>\r\n                            <center>\r\n                                <button className=\"btn btn-danger mt-3\" onClick={ () => this.props.history.push('/BillingMenu')}>Close</button>\r\n                            </center>\r\n                        </div>\r\n                        \r\n                        \r\n                        <br/>\r\n                        \r\n                        \r\n                    </div>\r\n                    <br/>\r\n                    <center><h6 style = {{color:'yellow'}}>Active Shift: {localStorage.getItem('shift')} </h6></center>\r\n                </div>\r\n                <Modal open={this.state.Baredit}>\r\n                    <div className='backgroundRetRep'>\r\n                        <center>\r\n                            <h6>{this.state.Hotelname}</h6>\r\n                            <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                            <h5>Bar Collection Receipt</h5>\r\n                            <p className=\"textSize\">Date: {receptDate}</p>\r\n\r\n                        </center>\r\n\r\n                    </div>\r\n                    <table className=\"table table-hover\">\r\n                        \r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust50\">NAME</th>\r\n                                <th className=\"adjust50\">POS (NGN)</th>\r\n                                <th className=\"adjust50\">Cash(NGN)</th>\r\n                                <th className=\"adjust50\">Transfer(NGN)</th>\r\n                                <th className=\"adjust50\">Compl(NGN)</th>\r\n                                <th className=\"adjust50\">Room(NGN)</th>\r\n                                <th className=\"adjust50\">Total(NGN)</th>\r\n                                        \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover\">\r\n                            <tr>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b>{this.state.name}</b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.POS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Cash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Complimentary)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Room)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b> <NumberFormat value={this.state.TotalSales}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                \r\n                            </tr>\r\n                            \r\n                        </tbody>\r\n                        \r\n                    </table>\r\n                    <div className=\"printing\">\r\n                        <center>\r\n                            <button className=\"btn btn-primary\" style={{height:'40px'}}onClick={()=>{this.sendtoprinter2()}}>\r\n                                <p>{this.state.printBTN}</p>\r\n                            </button>\r\n                        </center>\r\n                        \r\n                    </div>\r\n                    \r\n                </Modal>\r\n\r\n                <Modal open={this.state.PoolBaredit}>\r\n                    <div className='backgroundRetRep'>\r\n                        <center>\r\n                            <h6>{this.state.Hotelname}</h6>\r\n                            <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                            <h5>PoolBar Collection Receipt</h5>\r\n                            <p className=\"textSize\">Date: {receptDate}</p>\r\n\r\n                        </center>\r\n\r\n                    </div>\r\n                    <table className=\"table table-hover\">\r\n                        \r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust50\">NAME</th>\r\n                                <th className=\"adjust50\">POS (NGN)</th>\r\n                                <th className=\"adjust50\">Cash(NGN)</th>\r\n                                <th className=\"adjust50\">Transfer(NGN)</th>\r\n                                <th className=\"adjust50\">Compl(NGN)</th>\r\n                                <th className=\"adjust50\">Room(NGN)</th>\r\n                                <th className=\"adjust50\">Total(NGN)</th>\r\n                                        \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover\">\r\n                            <tr>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b>{this.state.name}</b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.POS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Cash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Complimentary)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Room)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b> <NumberFormat value={this.state.TotalSales}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                \r\n                            </tr>\r\n                            \r\n                        </tbody>\r\n                        \r\n                    </table>\r\n                    <div className=\"printing\">\r\n                        <center>\r\n                            <button className=\"btn btn-primary\" style={{height:'40px'}}onClick={()=>{this.sendtoprinterPool()}}>\r\n                                <p>{this.state.printBTN}</p>\r\n                            </button>\r\n                        </center>\r\n                        \r\n                    </div>\r\n                    \r\n                </Modal>\r\n\r\n                <Modal open={this.state.Clubedit}>\r\n                    <div className='backgroundRetRep'>\r\n                        <center>\r\n                            <h6>{this.state.Hotelname}</h6>\r\n                            <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                            <h5>Reservation Collection Receipt</h5>\r\n                            <p className=\"textSize\">Date: {receptDate}</p>\r\n\r\n                        </center>\r\n\r\n                    </div>\r\n                    <table className=\"table table-hover\">\r\n                        \r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust50\">NAME</th>\r\n                                <th className=\"adjust50\">POS (NGN)</th>\r\n                                <th className=\"adjust50\">Cash(NGN)</th>\r\n                                <th className=\"adjust50\">Transfer(NGN)</th>\r\n                                <th className=\"adjust50\">Compl(NGN)</th>\r\n                                <th className=\"adjust50\">Room(NGN)</th>\r\n                                <th className=\"adjust50\">Total(NGN)</th>\r\n                                        \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover\">\r\n                            <tr>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b>{this.state.name}</b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.POS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Cash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Complimentary)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Room)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b> <NumberFormat value={this.state.TotalSales}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                \r\n                            </tr>\r\n                            \r\n                        </tbody>\r\n                        \r\n                    </table>\r\n                    <div className=\"printing\">\r\n                        <center>\r\n                            <button className=\"btn btn-primary\" style={{height:'40px'}}onClick={()=>{this.sendtoprinterClub()}}>\r\n                                <p>{this.state.printBTN}</p>\r\n                            </button>\r\n                        </center>\r\n                        \r\n                    </div>\r\n                    \r\n                </Modal>\r\n\r\n                <Modal open={this.state.Restedit}>\r\n                    <div className='backgroundRetRep'>\r\n                        <center>\r\n                            <h6>{this.state.Hotelname}</h6>\r\n                            <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                            <h5>Restaurant Collection Receipt</h5>\r\n                            <p className=\"textSize\">Date: {receptDate}</p>\r\n\r\n                        </center>\r\n\r\n                    </div>\r\n                    <table className=\"table table-hover\">\r\n                        \r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust50\">NAME</th>\r\n                                <th className=\"adjust50\">POS (NGN)</th>\r\n                                <th className=\"adjust50\">Cash(NGN)</th>\r\n                                <th className=\"adjust50\">Transfer(NGN)</th>\r\n                                <th className=\"adjust50\">Compl(NGN)</th>\r\n                                <th className=\"adjust50\">Room(NGN)</th>\r\n                                <th className=\"adjust50\">Total(NGN)</th>\r\n                                        \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover\">\r\n                            <tr>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b>{this.state.name}</b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.POS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Cash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Complimentary)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Room)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b> <NumberFormat value={this.state.TotalSales}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                \r\n                            </tr>\r\n                            \r\n                        </tbody>\r\n                        \r\n                    </table>\r\n                    <div className=\"printing\">\r\n                        <center>\r\n                            <button className=\"btn btn-primary\" style={{height:'40px'}}onClick={()=>{this.sendtoprinterRest()}}>\r\n                                <p>{this.state.printBTN}</p>\r\n                            </button>\r\n                        </center>\r\n                        \r\n                    </div>\r\n                    \r\n                </Modal>\r\n\r\n\r\n                <Modal open={this.state.Laundryedit}>\r\n                    <div className='backgroundRetRep'>\r\n                        <center>\r\n                            <h6>{this.state.Hotelname}</h6>\r\n                            <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                            <h5>Laundry Collection Receipt</h5>\r\n                            <p className=\"textSize\">Date: {receptDate}</p>\r\n\r\n                        </center>\r\n\r\n                    </div>\r\n                    <table className=\"table table-hover\">\r\n                        \r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust50\">NAME</th>\r\n                                <th className=\"adjust50\">POS (NGN)</th>\r\n                                <th className=\"adjust50\">Cash(NGN)</th>\r\n                                <th className=\"adjust50\">Transfer(NGN)</th>\r\n                                <th className=\"adjust50\">Compl(NGN)</th>\r\n                                <th className=\"adjust50\">Room(NGN)</th>\r\n                                <th className=\"adjust50\">Total(NGN)</th>\r\n                                        \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover\">\r\n                            <tr>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b>{this.state.name}</b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.POS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Cash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Complimentary)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Room)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b> <NumberFormat value={this.state.TotalSales}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                \r\n                            </tr>\r\n                            \r\n                        </tbody>\r\n                        \r\n                    </table>\r\n                    <div className=\"printing\">\r\n                        <center>\r\n                            <button className=\"btn btn-primary\" style={{height:'40px'}}onClick={()=>{this.sendtoprinterLaundry()}}>\r\n                                <p>{this.state.printBTN}</p>\r\n                            </button>\r\n                        </center>\r\n                        \r\n                    </div>\r\n                    \r\n                </Modal>\r\n\r\n                <Modal open={this.state.depositedit}>\r\n                    <div className='backgroundRetRep'>\r\n                        <center>\r\n                            <h6>{this.state.Hotelname}</h6>\r\n                            <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                            <h5>Deposits Collection Receipt</h5>\r\n                            <p className=\"textSize\">Date: {receptDate}</p>\r\n\r\n                        </center>\r\n\r\n                    </div>\r\n                    <table className=\"table table-hover\">\r\n                        \r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust50\">NAME</th>\r\n                                <th className=\"adjust50\">POS (NGN)</th>\r\n                                <th className=\"adjust50\">Cash(NGN)</th>\r\n                                <th className=\"adjust50\">Transfer(NGN)</th>\r\n                                <th className=\"adjust50\">Compl(NGN)</th>\r\n                                <th className=\"adjust50\">Room(NGN)</th>\r\n                                <th className=\"adjust50\">Total(NGN)</th>\r\n                                        \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover\">\r\n                            <tr>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b>{this.state.name}</b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.POS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Cash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Complimentary)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Room)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b> <NumberFormat value={this.state.TotalSales}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                \r\n                            </tr>\r\n                            \r\n                        </tbody>\r\n                        \r\n                    </table>\r\n                    <div className=\"printing\">\r\n                        <center>\r\n                            <button className=\"btn btn-primary\" style={{height:'40px'}}onClick={()=>{this.sendtoprinterDep()}}>\r\n                                <p>{this.state.printBTN}</p>\r\n                            </button>\r\n                        </center>\r\n                        \r\n                    </div>\r\n                    \r\n                </Modal>\r\n\r\n                <Modal open={this.state.othersedit}>\r\n                    <div className='backgroundRetRep'>\r\n                        <center>\r\n                            <h6>{this.state.Hotelname}</h6>\r\n                            <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                            <h5>Other Sales Collection Receipt</h5>\r\n                            <p className=\"textSize\">Date: {receptDate}</p>\r\n\r\n                        </center>\r\n\r\n                    </div>\r\n                    <table className=\"table table-hover\">\r\n                        \r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust50\">NAME</th>\r\n                                <th className=\"adjust50\">POS (NGN)</th>\r\n                                <th className=\"adjust50\">Cash(NGN)</th>\r\n                                <th className=\"adjust50\">Transfer(NGN)</th>\r\n                                <th className=\"adjust50\">Compl(NGN)</th>\r\n                                <th className=\"adjust50\">Room(NGN)</th>\r\n                                <th className=\"adjust50\">Total(NGN)</th>\r\n                                        \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover\">\r\n                            <tr>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b>{this.state.name}</b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.POS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Cash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Complimentary)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Room)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b> <NumberFormat value={this.state.TotalSales}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                \r\n                            </tr>\r\n                            \r\n                        </tbody>\r\n                        \r\n                    </table>\r\n                    <div className=\"printing\">\r\n                        <center>\r\n                            <button className=\"btn btn-primary\" style={{height:'40px'}}onClick={()=>{this.sendtoprinterOthrs()}}>\r\n                                <p>{this.state.printBTN}</p>\r\n                            </button>\r\n                        </center>\r\n                        \r\n                    </div>\r\n                    \r\n                </Modal>\r\n\r\n                <Modal open={this.state.functionedit}>\r\n                    <div className='backgroundRetRep'>\r\n                        <center>\r\n                            <h6>{this.state.Hotelname}</h6>\r\n                            <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                            <h5>Other Sales Collection Receipt</h5>\r\n                            <p className=\"textSize\">Date: {receptDate}</p>\r\n\r\n                        </center>\r\n\r\n                    </div>\r\n                    <table className=\"table table-hover\">\r\n                        \r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust50\">NAME</th>\r\n                                <th className=\"adjust50\">POS (NGN)</th>\r\n                                <th className=\"adjust50\">Cash(NGN)</th>\r\n                                <th className=\"adjust50\">Transfer(NGN)</th>\r\n                                <th className=\"adjust50\">Compl(NGN)</th>\r\n                                <th className=\"adjust50\">Room(NGN)</th>\r\n                                <th className=\"adjust50\">Total(NGN)</th>\r\n                                        \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover\">\r\n                            <tr>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b>{this.state.name}</b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.POS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Cash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Complimentary)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.Room)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                <td className=\"table-light table-striped adjust2 alignTet2\"><b> <NumberFormat value={this.state.TotalSales}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                \r\n                            </tr>\r\n                            \r\n                        </tbody>\r\n                        \r\n                    </table>\r\n                    <div className=\"printing\">\r\n                        <center>\r\n                            <button className=\"btn btn-primary\" style={{height:'40px'}}onClick={()=>{this.sendtoprinterFunctn()}}>\r\n                                <p>{this.state.printBTN}</p>\r\n                            </button>\r\n                        </center>\r\n                        \r\n                    </div>\r\n                    \r\n                </Modal>\r\n                \r\n            </>\r\n            \r\n        );\r\n    }\r\n  \r\n    async componentDidMount() {\r\n        console.log(\">>> Inside GstDidMount\", this.state)\r\n        \r\n        fetch(`${users}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({barstaff:data});\r\n            \r\n        });\r\n\r\n        fetch(`${Fousers}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({receptionStaff:data});\r\n            \r\n        });\r\n\r\n        fetch(`${Poolusers}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({poolbarStaff:data});\r\n            \r\n        });\r\n\r\n        fetch(`${Clubusers}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({clubStaff:data});\r\n            \r\n        });\r\n\r\n        fetch(`${Restusers}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({restaurantStaff:data});\r\n            \r\n        });\r\n\r\n        fetch(`${Billingusers}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({billingStaff:data});\r\n            \r\n        });\r\n\r\n        fetch(`${FandBusers}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({fandbstaff:data});\r\n            \r\n        });\r\n              \r\n        this.myTimer = setTimeout(() => {\r\n            var barstaff=this.state.barstaff;\r\n            var receptionStaff=this.state.receptionStaff;\r\n            var poolbarStaff=this.state.poolbarStaff;\r\n            var restaurantStaff=this.state.restaurantStaff;\r\n            var billingStaff=this.state.billingStaff;\r\n            var fandbstaff=this.state.fandbstaff;\r\n            var clubStaff=this.state.clubStaff;\r\n            this.setState({staff:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff,...clubStaff]})\r\n\r\n        },2000);\r\n\r\n        \r\n        fetch(`${getAllTemppoolbarSales}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({PoolTempSales:data});\r\n            \r\n        });\r\n\r\n        fetch(`${getAllTempClubSales}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({ClubTempSales:data});\r\n            \r\n        });\r\n\r\n        fetch(`${getAllpoolbarSales}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({PoolRemaininPosts:data});\r\n\r\n            this.myTimer = setTimeout(() => {\r\n\r\n                if((this.state.PoolRemaininPosts).length===0){\r\n                    this.setState({checkPool:0})\r\n                }\r\n                \r\n                \r\n            },3000)\r\n            \r\n        });\r\n\r\n        fetch(`${getAllClubSales}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({ClubRemaininPosts:data});\r\n\r\n            this.myTimer = setTimeout(() => {\r\n\r\n                if((this.state.ClubRemaininPosts).length===0){\r\n                    this.setState({checkPool:0})\r\n                }\r\n                \r\n                \r\n            },3000)\r\n            \r\n        });\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        await fetch(`${getWorkDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({date:item.date})\r\n                return 'ok'\r\n            })\r\n            \r\n           \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n            fetch(`${getWorkDate}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({date:item.date})\r\n                    return 'ok'\r\n                })\r\n                \r\n            \r\n            })\r\n            \r\n        },1000);\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name2;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n       \r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default RetireBar;","import React,{Component} from 'react';\r\nimport './Bar.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment';\r\nimport Poollogin from '../Poollogin';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst restMenugrpUrl = \"https://zarvichdemo.localto.net/drinkCategories\";\r\n\r\nconst menuUrl = \"https://zarvichdemo.localto.net/drinkitems?drinktypes=\";\r\nconst postRestBill = \"https://zarvichdemo.localto.net/poolbar\";\r\nconst posttoRest = \"https://zarvichdemo.localto.net/restaurant\";\r\nconst getRooms =\"https://zarvichdemo.localto.net/checkin?docket=Yes\";\r\nconst getGuestID = \"https://zarvichdemo.localto.net/checkin?roomNumID=\";\r\nconst postDocketToRoom = \"https://zarvichdemo.localto.net/bill\";\r\nconst getPaymentMethods = \"https://zarvichdemo.localto.net/paymentMethods\";\r\nconst postToTable = \"https://zarvichdemo.localto.net/poolbarTablePost\";\r\nconst getTable = \"https://zarvichdemo.localto.net/poolbarTable\";\r\nconst getTableID = \"https://zarvichdemo.localto.net/poolbarTable?tableID=\";\r\nconst getWaitersTableData = \"https://zarvichdemo.localto.net/poolbarWaitersTable?waitersName=\";\r\nconst getWaitersTableDatawrtID = \"https://zarvichdemo.localto.net/poolbarWaitersTable?waiterTabID=\";\r\nconst getwaitersCost = \"https://zarvichdemo.localto.net/poolWaitersCost?TotwaiterTabID=\";\r\nconst delwaitersCost = \"https://zarvichdemo.localto.net/poolwaitersSD\";\r\nconst getStoreData = \"https://zarvichdemo.localto.net/getPoolBarStore2\";\r\nconst postBarSalesQty = \"https://zarvichdemo.localto.net/postPoolBarSalesQty\";\r\nconst getBarSalesQty = \"https://zarvichdemo.localto.net/getPoolBarSalesQty\";\r\nconst userName = \"https://zarvichdemo.localto.net/poolUserInfo\";\r\nconst Postwaiters = \"https://zarvichdemo.localto.net/poolWaiterslist\";\r\nconst waitersSales = \"https://zarvichdemo.localto.net/postWaitersSales\";\r\nconst postsplits = \"https://zarvichdemo.localto.net/splitPayments\";\r\nconst delsplits = \"https://zarvichdemo.localto.net/delsplitpay\";\r\nconst getSplitpays = \"https://zarvichdemo.localto.net/getSplits\";\r\nconst DelWaiters = \"https://zarvichdemo.localto.net/delWaiters\";\r\nconst DelWaitersSales = \"https://zarvichdemo.localto.net/delWaitersSales\";\r\nconst getWaiters = \"https://zarvichdemo.localto.net/getWaiters\";\r\nconst getwaitersData = \"https://zarvichdemo.localto.net/poolWaitersData\";\r\n\r\n\r\nconst postRestCredit = \"https://zarvichdemo.localto.net/poolCredit\";\r\nconst getRestCredit = \"https://zarvichdemo.localto.net/poolCreditSales?PCstaff=\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\nconst getWorkDate = \"https://zarvichdemo.localto.net/getActive\";\r\n\r\n\r\nconst menuLink = \"https://zarvichdemo.localto.net/menuitems?mealtypes=\";\r\nconst RestaurantMenugrpUrl = \"https://zarvichdemo.localto.net/menuCategories\";\r\n\r\nclass PoolBar extends Component {\r\n\r\n    constructor(props) {\r\n        super (props);\r\n        console.log(\">>>Inside RESConstructor\",props)\r\n\r\n        this.state = {\r\n            Newmeal:'',\r\n            Newprice:'',\r\n            Newqty:0,\r\n            Newid:'',\r\n            edit:false,\r\n            edit2: false,\r\n            waitersTD: false,\r\n            editreceipt:false,\r\n            compModal:false,\r\n            report:false,\r\n            printStop:0,\r\n            docketFirst:0,\r\n            printBTN:'Print',\r\n            print:0,\r\n            blockTable:0,\r\n            IDfound:[],\r\n           \r\n            menu:'',\r\n            RestMenu:'',\r\n            meal:'',\r\n            mealPrice:'',\r\n            mealQuantity:'',\r\n            mealId:Math.floor(Math.random()*10000),\r\n            guestInhouseID:'',\r\n            selected:[],\r\n            printSelection:[],\r\n            menuID:'',\r\n            menulist:'',\r\n            Restmenulist:'',\r\n            cost:0,\r\n            amountPaid:'',\r\n            roomNumbers:'',\r\n            paymentMethod:'',\r\n            displayPaymentMethods:'',\r\n            displayRoomNums:'',\r\n            transactionDate:'',\r\n            tables:'',\r\n            newTable:'',\r\n            NewtableNum:0,\r\n            group:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            Blogin:'',\r\n            login:'',\r\n            shiftcolor:'',\r\n            shift:localStorage.getItem('shift'),\r\n\r\n            waitersFName: '',\r\n            waiterLName: '',\r\n            LoadWaiters:'',\r\n            findWaiter: '',\r\n            WaitersData:'',\r\n            waitersCost:'',\r\n            waiterTableData: '',\r\n            totalbicost: 0,\r\n            \r\n            \r\n\r\n            DrinkstoreData:[],\r\n            DrinkSalesQtyData:[],\r\n            DrinkStore:0,\r\n            DrinkSalesQty:0,\r\n            stockBal:0,\r\n\r\n        \r\n            \r\n            \r\n            DrinkSalesQtyReportData:'',\r\n            useReportName:'',\r\n            useReportShift:'',\r\n            useReportDate:'',\r\n            totalSales:0,\r\n            Stockbtn:'Add',\r\n\r\n            creditSales:'',\r\n            TotalCredit:0,\r\n            creditPaid:0,\r\n            payNwMeth:'',\r\n            TotalCreditPaid:0,\r\n            splitBal: [],\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:'',\r\n\r\n            pass:'',\r\n            pword:false,\r\n            pword2:false,\r\n\r\n            waiters: false,\r\n            selectWaiter:false,\r\n            selectWaiterNew: false,\r\n            \r\n            split: false,\r\n\r\n            showRestaurant: 'hidden',\r\n            showPoolBar: 'visible',\r\n            showPoolPos: 'visible',\r\n            showRestaurantPos: 'hidden',\r\n\r\n            showSalesTable: 'visible',\r\n            showWaitersTable: 'hidden',\r\n            toggle: 'hidden',\r\n            posting: 0,\r\n\r\n            Resteditreceipt: false,\r\n            editsplitreceipt: false,\r\n\r\n            Resteditreceipt2: false,\r\n            RestRmcompModal: false\r\n            \r\n\r\n            \r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    onOpenPword(){\r\n        if(this.state.paymentMethod===\"Credit\"){\r\n            this.setState({\r\n                pword: true\r\n            })\r\n            \r\n        }\r\n        else{\r\n            this.setState({\r\n                pword: false\r\n            });\r\n            this.onOpenModalreceipt();\r\n            this.postQty()\r\n        }\r\n\r\n    }\r\n\r\n    showRest(){\r\n        \r\n        this.setState({\r\n            showRestaurant: 'visible',\r\n            showPoolBar: 'hidden',\r\n            showPoolPos: 'hidden',\r\n            showRestaurantPos: 'visible'\r\n           \r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    showPool(){\r\n        \r\n        this.setState({\r\n            showRestaurant: 'hidden',\r\n            showPoolBar: 'visible',\r\n            showPoolPos: 'visible',\r\n            showRestaurantPos: 'hidden'\r\n           \r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    showAllTab(){\r\n        \r\n        this.setState({\r\n            showSalesTable: 'visible',\r\n            showWaitersTable: 'hidden',\r\n            toggle: 'hidden',\r\n            posting: 0\r\n            \r\n           \r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    showAllTab2(){\r\n        window.location.reload();\r\n        this.setState({\r\n            waitersCost: 0,\r\n            posting: 0\r\n        })\r\n    \r\n    }\r\n\r\n    showWaitrsTab(){\r\n        \r\n        this.setState({\r\n            showSalesTable: 'hidden',\r\n            showWaitersTable: 'visible',\r\n            toggle: 'visible',\r\n            posting: 1\r\n            \r\n           \r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onClosePword(){\r\n        this.setState({\r\n            pword: false\r\n        })\r\n        \r\n    }\r\n\r\n    AllowRefund(){\r\n        if(this.state.pass==='6849'){\r\n            this.onOpenModalreceipt();\r\n            this.postQty();\r\n            this.onClosePword()\r\n\r\n        }\r\n        else{\r\n            alert('Access Denied')\r\n        }\r\n    }\r\n\r\n    onOpenModaltoprint(){\r\n        this.setState({\r\n            edit: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onOpenModaltoprint2(){\r\n        this.setState({\r\n            edit2: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onOpenModalsplitreceipt(){\r\n        this.setState({editsplitreceipt: true})\r\n    }\r\n\r\n    onCloseModalsplitreceipt(){\r\n        this.setState({editsplitreceipt: false})\r\n    }\r\n\r\n    \r\n\r\n    onCloseModaltoprint2(){\r\n        this.setState({\r\n            edit2: false\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    \r\n    onOpenCompModal(){\r\n        this.setState({\r\n            compModal: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseModalCredit(){\r\n        this.setState({\r\n            credit: false,\r\n            creditPaid:0\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseCompModal(){\r\n        this.setState({\r\n            compModal: false\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenCompRestRoomModal(){\r\n        this.setState({\r\n            RestRmcompModal: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseCompRestRoomModal(){\r\n        this.setState({\r\n            RestRmcompModal: false\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseRestModalreceipt(){\r\n        this.setState({\r\n            Resteditreceipt: false\r\n        })\r\n        \r\n    }   \r\n    \r\n    onOpenRestModalreceipt(){\r\n        this.setState({\r\n            Resteditreceipt: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onOpenRestModalreceipt2(){\r\n        this.setState({\r\n            Resteditreceipt2: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseRestModalreceipt2(){\r\n        this.setState({\r\n            Resteditreceipt2: false\r\n        })\r\n        \r\n    } \r\n\r\n\r\n    onCloseModaltoprint(){\r\n        this.setState({\r\n            edit: false\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenModalreceipt(){\r\n        this.setState({\r\n            editreceipt: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onOpenSplit(){\r\n        this.setState({\r\n            split: true\r\n        })\r\n    }\r\n\r\n\r\n    onCloseSplit(){\r\n\r\n        this.setState({selected:[]});\r\n        this.setState({cost:0})\r\n        this.setState({amountPaid:''})\r\n        this.setState({displayRoomNums:''})\r\n        this.setState({roomNumbers:''})\r\n        this.setState({paymentMethod:''})\r\n        this.setState({displayPaymentMethods:''})\r\n        this.setState({\r\n            group:'',\r\n            NewtableNum:0,\r\n            shift:'',\r\n            Newmeal:'',\r\n            Newprice:'',\r\n            Newqty:0,\r\n            Newid:'',\r\n            DrinkstoreData:[],\r\n            DrinkSalesQtyData:[]\r\n        })\r\n        sessionStorage.removeItem('stockBal');\r\n        localStorage.removeItem('delcntrl');\r\n        localStorage.setItem('btnCntrl',true);\r\n        sessionStorage.removeItem('tableNumber3');\r\n\r\n        fetch(`${getStoreData}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                DrinkstoreData:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getBarSalesQty}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                DrinkSalesQtyData:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getTable}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({tables:data})\r\n        })\r\n        \r\n        fetch(`${getTable}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({tables:data})\r\n        })\r\n        \r\n        this.setState({\r\n            split: false\r\n        })\r\n\r\n        fetch(`${delsplits}`, {method:'delete'});\r\n        \r\n        \r\n    }\r\n\r\n    onCloseModalreceipt(){\r\n        this.setState({\r\n            editreceipt: false\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenModalreport(){\r\n        this.setState({\r\n            report: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseModalreport(){\r\n        this.setState({\r\n            report: false\r\n        })\r\n        \r\n    }\r\n\r\n    handleReport(){\r\n\r\n        var todayDate = moment(new Date()).format('MMM DD YYYY');\r\n        var username = localStorage.getItem('userInfo');\r\n        var findQty = `${getBarSalesQty}?useDate=${todayDate}&&useshift=${this.state.shift}&&userstaff=${username}`\r\n        \r\n        fetch(`${findQty}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                DrinkSalesQtyReportData:data\r\n            })\r\n            \r\n        })\r\n        this.myTimer = setTimeout(() => {\r\n            if(this.state.DrinkSalesQtyReportData.length>0){\r\n                var useData = this.state.DrinkSalesQtyReportData\r\n                var findUser = useData.find(element=>element.user===username)\r\n                var useDt = [];\r\n                useDt.push(findUser);\r\n                this.setState({useReportName:useDt.map(item=>item.user)})\r\n                this.setState({useReportShift:useDt.map(item=>item.shift)})\r\n                this.setState({useReportDate:useDt.map(item=>item.tranDate)})\r\n                \r\n                var TotSal = useData.reduce((total, item)=>{\r\n                    return total + parseInt (item.productPrice * item.Quantity)\r\n                }, 0);\r\n                this.setState({totalSales:TotSal});\r\n    \r\n                this.onOpenModalreport()\r\n            }\r\n            else{\r\n    \r\n                alert('No Sales was posted by '+username)\r\n    \r\n            }\r\n        },1000)\r\n        \r\n        \r\n    }\r\n\r\n\r\n    handleStock(){\r\n        if(this.state.DrinkstoreData.length>0){\r\n            var stockItem = sessionStorage.getItem('meal');\r\n           \r\n            //check available stock\r\n            const stockData=this.state.DrinkstoreData;\r\n            var totalStock = stockData.filter(stock => stock.productName.includes(stockItem)).reduce((total, item)=>{\r\n                return total + parseInt(item.piecesOut)\r\n            }, 0);\r\n            this.setState({DrinkStore:totalStock})\r\n\r\n            //check quantity sold\r\n            const qtyData=this.state.DrinkSalesQtyData;\r\n            var totalQty = qtyData.filter(qty => qty.productName.includes(stockItem)).reduce((total, item)=>{\r\n                return total + parseInt(item.Quantity)\r\n            }, 0);\r\n            this.setState({DrinkSalesQty:totalQty})\r\n            \r\n            //show stock balance\r\n            this.myTimer = setTimeout(() => {\r\n\r\n                var Total = 0;\r\n                var ST = Total + this.state.DrinkStore-this.state.DrinkSalesQty;\r\n                this.setState({stockBal:ST})\r\n                if(ST<0||ST<-1){\r\n                    this.setState({stockBal:0})\r\n                };\r\n\r\n                if(this.state.stockBal===0){\r\n                    this.setState({Stockbtn:'Finished'})\r\n                }\r\n                else{this.setState({Stockbtn:'Add'})}\r\n\r\n                \r\n            },1000);\r\n                \r\n        }\r\n       \r\n        \r\n        \r\n\r\n    }\r\n\r\n    \r\n    handleCost=(selected)=>{\r\n        if(this.state.selected!==null){\r\n           const totalSale = selected.reduce((total, item) => {\r\n               return total + item.mealPrice * item.qty\r\n           }, 0);\r\n           this.setState({cost:totalSale})\r\n        }\r\n        if(this.state.cost!==null){\r\n            fetch(`${getRooms}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayRoomNums:data\r\n                })\r\n            })\r\n            fetch(`${getPaymentMethods}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayPaymentMethods:data\r\n                })\r\n            })\r\n            localStorage.removeItem('btnCntrl');\r\n            localStorage.removeItem('delcntrl')\r\n        }\r\n        \r\n        \r\n    }  \r\n   \r\n    addqty = () => {\r\n        const del = this.state.selected.map((item) => parseInt(item.qty + 1));\r\n        this.setState({selected:del})\r\n       \r\n    }\r\n        \r\n    removeAll = (id) => {\r\n        const del = this.state.selected.filter(item => item.id === id);\r\n        this.setState({selected:del})\r\n        this.setState({cost:0})\r\n        this.setState({roomNumbers:''})\r\n        this.setState({amountPaid:''})\r\n        this.setState({displayRoomNums:''})\r\n        this.setState({paymentMethod:''})\r\n        this.setState({displayPaymentMethods:''})\r\n        this.setState({\r\n            displayPaymentMethods:'',\r\n            DrinkStore:0,\r\n            DrinkSalesQty:0,\r\n            stockBal:0\r\n        })\r\n        \r\n       \r\n    }\r\n\r\n    ComputeAmtPaid(){\r\n\r\n        fetch(`${getSplitpays}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n\r\n            let allSplitPmnts = data.map(item => item).reduce((totals, item) =>{\r\n                return  totals + parseFloat(item.Amounts)\r\n            }, 0);\r\n            this.setState({\r\n                splitBal:allSplitPmnts,\r\n                amountPaid: '',\r\n            })\r\n\r\n        })\r\n\r\n\r\n        // let splitpayments = [];\r\n        // let totalsplits = {};\r\n        \r\n        \r\n        // let pd = this.state.amountPaid;\r\n        // totalsplits.payments = pd;\r\n        \r\n        // splitpayments.push(totalsplits);\r\n        \r\n\r\n        \r\n\r\n       \r\n    }\r\n\r\n    async addToTable() {\r\n\r\n        \r\n        try {\r\n            \r\n\r\n            var tableID = sessionStorage.getItem('tableNumber3');\r\n\r\n            var orderItems = this.state.selected;\r\n            var data = {\r\n                selected:orderItems.map(item => item),\r\n                billCost:this.state.cost,\r\n                tableNum:sessionStorage.getItem('tableNumber3'),\r\n                user:localStorage.getItem('userInfo')\r\n            }\r\n           \r\n           \r\n            var orderList = this.state.printSelection;\r\n            \r\n            const thisSales = orderList.reduce((total, item) => {\r\n                return total + item.mealPrice * item.qty\r\n            }, 0);\r\n            \r\n            \r\n            var Orderdata = {\r\n                _id: Math.floor(Math.random()*10000),\r\n                waiterselection:orderList.map(item => item),\r\n                billCost:thisSales,\r\n                tableNum:sessionStorage.getItem('tableNumber3'),\r\n                waiter:this.state.findWaiter\r\n            }\r\n           \r\n            \r\n            let waiterresult = await fetch(`${waitersSales}`, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    Orderdata\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('waiterresult>  ' + waiterresult)\r\n            this.onOpenModaltoprint();\r\n            \r\n            \r\n\r\n            let result = await fetch(`${postToTable}/${tableID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result>  ' + result)\r\n            this.setState({selected:[]})\r\n            localStorage.setItem('btnCntrl',true);\r\n            this.setState({cost:0})\r\n            this.setState({roomNumbers:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            this.setState({paymentMethod:''})\r\n            this.setState({printStop:0})\r\n            localStorage.removeItem('delcntrl');\r\n            sessionStorage.removeItem('tableNumber3')\r\n            \r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            });\r\n\r\n            this.handleGetWaitListClose();\r\n            this.getWaitersC();\r\n\r\n            \r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n    \r\n\r\n    handleCredit(){\r\n        var userCredit = localStorage.getItem('userInfo');\r\n        fetch(`${getRestCredit}${userCredit}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                creditSales:data\r\n            })\r\n            data.map((item)=>{\r\n                var allCredit = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.creditAmount)\r\n                }, 0);\r\n\r\n                this.setState({TotalCredit:allCredit,});\r\n                var allCreditPaid = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.creditPaid)\r\n                }, 0);\r\n                this.setState({TotalCreditPaid:allCreditPaid});\r\n                return 'ok'\r\n            })\r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            this.setState({\r\n                credit: true\r\n            })\r\n    \r\n        },1000);\r\n        \r\n        \r\n    }\r\n\r\n    handleGetWaitListOpen(){\r\n\r\n        this.getWaitersNow();\r\n\r\n        this.myTimer = setTimeout(() => {\r\n            this.setState({selectWaiter: true})\r\n\r\n        },1000)\r\n\r\n    }\r\n\r\n    handleGetWaitListClose(){\r\n        this.setState({selectWaiter: false})\r\n\r\n    }\r\n\r\n    handleGetWaitListOpenNew(){\r\n        if(this.state.cost === 0){\r\n            alert (\"If you click table Number again without an order, I will slap you!\")\r\n        }\r\n\r\n        else{\r\n            this.getWaitersNow();\r\n\r\n            this.myTimer = setTimeout(() => {\r\n                this.setState({selectWaiterNew: true})\r\n                \r\n            },1000)\r\n\r\n        }\r\n        \r\n        \r\n\r\n    }\r\n\r\n    handleGetWaitListCloseNew(){\r\n        this.setState({selectWaiterNew: false})\r\n\r\n    }\r\n\r\n    async NewTable() {\r\n          \r\n        try {\r\n            \r\n            var NewtableID = sessionStorage.getItem('tableNumber3');\r\n\r\n            var orderItems = this.state.selected;\r\n            var data = {\r\n                selected:orderItems.map(item => item),\r\n                billCost:this.state.cost,\r\n                tableNum:NewtableID\r\n            }\r\n\r\n            var orderList = this.state.printSelection;\r\n            var Orderdata = {\r\n                _id: Math.floor(Math.random()*10000),\r\n                waiterselection:orderList.map(item => item),\r\n                billCost:this.state.cost,\r\n                tableNum:sessionStorage.getItem('tableNumber3'),\r\n                waiter:this.state.findWaiter\r\n            }\r\n           \r\n            \r\n            let waiterresult2 = await fetch(`${waitersSales}`, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    Orderdata\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('waiterresult2>  ' + waiterresult2)\r\n            \r\n            \r\n           \r\n            if(this.state.cost===0){\r\n                alert (\"If you click table Number again without an order, I will slap you!\")\r\n                sessionStorage.removeItem('tableNumber')\r\n            }\r\n            else{\r\n                let result = await fetch(`${postToTable}/${NewtableID}`, {\r\n                    method: 'put',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        data\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('result>  ' + result)\r\n                this.setState({selected:[]})\r\n                localStorage.setItem('btnCntrl',true);\r\n                this.setState({cost:0})\r\n                this.setState({roomNumbers:''})\r\n                this.setState({displayRoomNums:''})\r\n                this.setState({displayPaymentMethods:''})\r\n                this.setState({paymentMethod:''})\r\n                localStorage.removeItem('delcntrl');\r\n                this.setState({newTable:''})\r\n\r\n                \r\n                this.handleGetWaitListCloseNew();\r\n            \r\n                \r\n    \r\n                fetch(`${getTable}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({tables:data})\r\n                });\r\n\r\n                this.onOpenModaltoprint();\r\n\r\n\r\n            }\r\n            \r\n\r\n            \r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async getTableP() {\r\n          \r\n        try {\r\n            \r\n            var tableID = sessionStorage.getItem('tableNumber3');\r\n           \r\n            fetch(`${getTableID}${tableID}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n            data.map((item)=>{\r\n            this.setState({\r\n                selected:item.selected,\r\n                cost:item.billCost,\r\n                NewtableNum:1\r\n                        \r\n            })\r\n            return 'ok'\r\n                   \r\n            })\r\n                localStorage.removeItem('btnCntrl')\r\n            })\r\n\r\n            fetch(`${getRooms}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayRoomNums:data\r\n                })\r\n            })\r\n        \r\n            fetch(`${getPaymentMethods}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayPaymentMethods:data\r\n                })\r\n            })\r\n            localStorage.setItem('delcntrl',true)\r\n            this.setState({printStop:1})\r\n           \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    getWSC(){\r\n        this.setState({waitersCost: 0});\r\n        let getWFN = sessionStorage.getItem('waitersTabNum');\r\n        \r\n\r\n        fetch(`${getwaitersCost}${getWFN}`, {method: 'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let totalbicost = data.map(item => item).reduce((totals, item) =>{\r\n                return  totals + parseFloat(item.billCost)\r\n            }, 0);\r\n        \r\n            this.setState({\r\n                \r\n                waitersCost: totalbicost\r\n                \r\n            })\r\n\r\n            data.map((item) =>{\r\n                sessionStorage.setItem('getWSID', item._id)\r\n\r\n                return 'ok'\r\n            })\r\n\r\n            \r\n\r\n            \r\n        \r\n        })\r\n    }\r\n\r\n    async getTablewrtW() {\r\n          \r\n        try {\r\n            \r\n            var getTWRTWNm = sessionStorage.getItem('wtwrtid');\r\n                        \r\n            fetch(`${getWaitersTableDatawrtID}${getTWRTWNm}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n            data.map((item)=>{\r\n            this.setState({\r\n                selected:item.waiterselection,\r\n                cost:item.billCost\r\n                \r\n                        \r\n            })\r\n            return 'ok'\r\n                \r\n            })\r\n                localStorage.removeItem('btnCntrl')\r\n            })\r\n\r\n            fetch(`${getRooms}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayRoomNums:data\r\n                })\r\n            })\r\n        \r\n            fetch(`${getPaymentMethods}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayPaymentMethods:data\r\n                })\r\n            })\r\n            localStorage.setItem('delcntrl',true)\r\n            this.setState({printStop:1})\r\n\r\n\r\n            \r\n           \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    postQty(){\r\n       \r\n        try {\r\n            \r\n            this.state.selected.map((item)=>{\r\n                var prodName = item.meal;\r\n                var prodPrice = item.mealPrice;\r\n                var Qty = item.qty;\r\n                var ID = item.tranID;\r\n                \r\n                var salesQty = {\r\n                    id:ID,\r\n                    productName:prodName,\r\n                    productPrice:prodPrice,\r\n                    Quantity:parseInt(Qty),\r\n                    user: localStorage.getItem('userInfo'),\r\n                    tranDate:moment(new Date()).format('MMM DD YYYY'),\r\n                    shift:localStorage.getItem('shift'),\r\n                                \r\n                }\r\n                let result = fetch(`${postBarSalesQty}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        salesQty\r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                this.setState({\r\n                    Newmeal:'',\r\n                    Newprice:'',\r\n                    Newqty:0,\r\n                    Newid:'',\r\n                    DrinkstoreData:[],\r\n                    DrinkSalesQtyData:[]\r\n                })\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    fetch(`${getStoreData}`, {method:'GET'})\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        this.setState({\r\n                            DrinkstoreData:data\r\n                        })\r\n                    })\r\n\r\n                    fetch(`${getBarSalesQty}`, {method:'GET'})\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        this.setState({\r\n                            DrinkSalesQtyData:data\r\n                        })\r\n                    })\r\n                \r\n                },1000)\r\n                \r\n                return 'ok'\r\n            })    \r\n        \r\n\r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\n    buttonClick (){\r\n        fetch(`${menuUrl}${this.state.menuID}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                menulist:data\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    RestbuttonClick (){\r\n        fetch(`${menuLink}${this.state.menuID}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                Restmenulist:data\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    sendtoprinter(){\r\n        \r\n        window.print();\r\n                \r\n       \r\n    }\r\n\r\n    sendtoprinter2(){\r\n        if(this.state.printBTN==='Print'){\r\n            window.print();\r\n            this.setState({\r\n                printSelection:[]\r\n                \r\n            });\r\n            this.setState({printBTN:'Close'});\r\n            this.getWaitersC();\r\n        }\r\n        else if(this.state.printBTN==='Close'){\r\n            this.setState({edit: false})      \r\n            this.setState({printBTN:'Print'})\r\n            this.setState({\r\n                print:0,\r\n                printStop:0,\r\n                // DrinkStore:0,\r\n                DrinkSalesQty:0,\r\n                stockBal:0,\r\n                blockTable:0\r\n\r\n            }) \r\n            \r\n            \r\n            \r\n        }\r\n       \r\n    }\r\n\r\n    sendtoprinterNew(){\r\n        if(this.state.printBTN==='Print'){\r\n            window.print();\r\n            this.setState({\r\n                \r\n                selected: []\r\n            });\r\n            this.setState({printBTN:'Close'});\r\n            this.getWaitersC();\r\n        }\r\n        else if(this.state.printBTN==='Close'){\r\n            this.setState({edit2: false})      \r\n            this.setState({printBTN:'Print'})\r\n            this.setState({\r\n                print:0,\r\n                printStop:0,\r\n                // DrinkStore:0,\r\n                DrinkSalesQty:0,\r\n                stockBal:0,\r\n                blockTable:0\r\n\r\n            }) \r\n            \r\n            \r\n            \r\n        }\r\n       \r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n    \r\n    }\r\n\r\n    handleChangeComp = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n\r\n        // this.ComputeAmtPaid();\r\n    \r\n    }\r\n\r\n    handleChange3 = (event) => {\r\n        if(this.state.Newmeal!==''||this.state.Newprice!==''||this.state.Newid!==''){\r\n            this.setState({\r\n                [event.target.name]:event.target.value\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    handleChange2 = (event) => {\r\n        console.log('inside handle', this.props)\r\n        this.setState({\r\n           [event.target.name]:event.target.value\r\n        })\r\n        fetch(`${getGuestID}${event.target.value}`, {method: 'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item) => {\r\n                this.setState({\r\n                    guestInhouseID:item.refID,\r\n                    group:item.group\r\n                })\r\n                return 'ok'\r\n            })\r\n        })\r\n    \r\n    }\r\n    \r\n\r\n    async handleSubmit() {\r\n          \r\n        \r\n        try {\r\n            var tableID = sessionStorage.getItem('tableNumber3');\r\n            let wtabdata = sessionStorage.getItem('wtwrtid')\r\n\r\n            var data = {\r\n                selected:[],\r\n                billCost:\"\",\r\n                tableNum:sessionStorage.getItem('tableNumber3')\r\n            }\r\n\r\n            if(this.state.paymentMethod===\"POS\"){\r\n                var POSSales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    POSAmount:`${this.state.amountPaid}`,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"PoolBar Sales\",\r\n                    department: \"PoolBar Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result5 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        POSSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result5>  ' + result5)\r\n                \r\n            }\r\n            if(this.state.paymentMethod===\"Cash\"){\r\n                var CashSales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    CashAmount:`${this.state.amountPaid}`,\r\n                    POSAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"PoolBar Sales\",\r\n                    department: \"PoolBar Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result4 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CashSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result4>  ' + result4)\r\n                \r\n            }\r\n\r\n\r\n            if(this.state.paymentMethod===\"Transfer\"){\r\n                var transferSales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    TransferAmount:`${this.state.amountPaid}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"PoolBar Sales\",\r\n                    department: \"PoolBar Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result3 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        transferSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3>  ' + result3)\r\n                \r\n        \r\n            }\r\n\r\n            if(this.state.paymentMethod===\"Complimentary\"){\r\n                var complimentarySales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    amountPaid:`${this.state.amountPaid}`,\r\n                    CompDebit:`${this.state.cost}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"PoolBar Sales\",\r\n                    department: \"PoolBar Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n\r\n                let result2 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        complimentarySales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2>  ' + result2)\r\n\r\n                \r\n            }\r\n\r\n            if(this.state.paymentMethod===\"Credit\"){\r\n                var CreditSales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    creditAmount:`${this.state.amountPaid}`,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"PoolBar Credit\",\r\n                    department: \"PoolBar Credit\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift'),\r\n                    creditPaid:`${this.state.creditPaid}`\r\n                   \r\n                }\r\n\r\n                let result2 = await fetch(postRestCredit, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CreditSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2>  ' + result2)\r\n\r\n            }\r\n            \r\n            let result12 = await fetch(`${postToTable}/${tableID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result12>  ' + result12)\r\n\r\n            let wscdata = await fetch(`${delwaitersCost}/${wtabdata}`, {\r\n                method: 'delete',\r\n\r\n                                \r\n            });\r\n            console.log('wscdata>  ' + wscdata)\r\n\r\n            this.getWT();\r\n\r\n            alert(\"Sales Posted\")\r\n            this.setState({selected:[]});\r\n            this.setState({cost:0})\r\n            this.setState({amountPaid:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({roomNumbers:''})\r\n            this.setState({paymentMethod:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            this.setState({\r\n                group:'',\r\n                NewtableNum:0,\r\n                shift:'',\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:'',\r\n                DrinkstoreData:[],\r\n                DrinkSalesQtyData:[]\r\n            })\r\n            sessionStorage.removeItem('stockBal');\r\n            localStorage.removeItem('delcntrl');\r\n            localStorage.setItem('btnCntrl',true);\r\n            sessionStorage.removeItem('tableNumber');\r\n\r\n            fetch(`${getStoreData}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    DrinkstoreData:data\r\n                })\r\n            })\r\n\r\n            fetch(`${getBarSalesQty}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    DrinkSalesQtyData:data\r\n                })\r\n            })\r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            })\r\n            \r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            })\r\n           \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleRestSubmit() {\r\n          \r\n        \r\n        try {\r\n            var tableID = sessionStorage.getItem('tableNumber3');\r\n            \r\n            var data = {\r\n                selected:[],\r\n                billCost:\"\",\r\n                tableNum:sessionStorage.getItem('tableNumber3')\r\n            }\r\n\r\n            var split = {\r\n                Amounts: this.state.amountPaid\r\n            }\r\n\r\n            let splitPs = await fetch(postsplits, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    split\r\n                   \r\n                )\r\n                \r\n            });\r\n            console.log('splitPs>  ' + splitPs)\r\n\r\n            if(this.state.paymentMethod===\"POS\"){\r\n                var POSSales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    POSAmount:`${this.state.amountPaid}`,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Restaurant Sales\",\r\n                    department: \"Restaurant Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result5 = await fetch(posttoRest, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        POSSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result5>  ' + result5)\r\n\r\n            }\r\n            if(this.state.paymentMethod===\"Cash\"){\r\n                var CashSales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    CashAmount:`${this.state.amountPaid}`,\r\n                    POSAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Restaurant Sales\",\r\n                    department: \"Restaurant Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result4 = await fetch(posttoRest, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CashSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result4>  ' + result4)\r\n                \r\n            }\r\n            if(this.state.paymentMethod===\"Transfer\"){\r\n                var transferSales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    TransferAmount:`${this.state.amountPaid}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Restaurant Sales\",\r\n                    department: \"Restaurant Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result3 = await fetch(posttoRest, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        transferSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3>  ' + result3)\r\n                \r\n            }\r\n\r\n            if(this.state.paymentMethod===\"Complimentary\"){\r\n                var complimentarySales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    amountPaid:`${this.state.amountPaid}`,\r\n                    CompDebit:`${this.state.cost}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Restaurant Sales\",\r\n                    department: \"Restaurant Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n\r\n                let result2 = await fetch(posttoRest, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        complimentarySales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2>  ' + result2)\r\n\r\n            }\r\n\r\n            if(this.state.paymentMethod===\"Credit\"){\r\n                var CreditSales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    creditAmount:`${this.state.amountPaid}`,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Restaurant Credit\",\r\n                    department: \"Restaurant Credit\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift'),\r\n                    creditPaid:`${this.state.creditPaid}`\r\n                   \r\n                }\r\n\r\n                let result2 = await fetch(postRestCredit, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CreditSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2>  ' + result2)\r\n\r\n            }\r\n            \r\n            let result12 = await fetch(`${postToTable}/${tableID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result12>  ' + result12)\r\n\r\n            this.ComputeAmtPaid();\r\n\r\n            alert(\"Sales Posted\")\r\n            \r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            })\r\n           \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleRestSubmit2() {\r\n          \r\n        \r\n        try {\r\n            var tableID = sessionStorage.getItem('tableNumber3');\r\n            let wtabdata = sessionStorage.getItem('wtwrtid')\r\n            var data = {\r\n                selected:[],\r\n                billCost:\"\",\r\n                tableNum:sessionStorage.getItem('tableNumber3')\r\n            }\r\n\r\n            var split = {\r\n                Amounts: this.state.amountPaid\r\n            }\r\n\r\n            let splitPs = await fetch(postsplits, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    split\r\n                   \r\n                )\r\n                \r\n            });\r\n            console.log('splitPs>  ' + splitPs)\r\n\r\n            if(this.state.paymentMethod===\"POS\"){\r\n                var POSSales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    POSAmount:`${this.state.amountPaid}`,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Restaurant Sales\",\r\n                    department: \"Restaurant Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result5 = await fetch(posttoRest, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        POSSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result5>  ' + result5)\r\n\r\n            }\r\n            if(this.state.paymentMethod===\"Cash\"){\r\n                var CashSales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    CashAmount:`${this.state.amountPaid}`,\r\n                    POSAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Restaurant Sales\",\r\n                    department: \"Restaurant Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result4 = await fetch(posttoRest, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CashSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result4>  ' + result4)\r\n                \r\n            }\r\n            if(this.state.paymentMethod===\"Transfer\"){\r\n                var transferSales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    TransferAmount:`${this.state.amountPaid}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Restaurant Sales\",\r\n                    department: \"Restaurant Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result3 = await fetch(posttoRest, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        transferSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3>  ' + result3)\r\n                \r\n            }\r\n\r\n            if(this.state.paymentMethod===\"Complimentary\"){\r\n                var complimentarySales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    amountPaid:`${this.state.amountPaid}`,\r\n                    CompDebit:`${this.state.cost}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Restaurant Sales\",\r\n                    department: \"Restaurant Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n\r\n                let result2 = await fetch(posttoRest, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        complimentarySales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2>  ' + result2)\r\n\r\n            }\r\n\r\n            if(this.state.paymentMethod===\"Credit\"){\r\n                var CreditSales = {\r\n                    docketNum:'Rest'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    creditAmount:`${this.state.amountPaid}`,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Restaurant Credit\",\r\n                    department: \"Restaurant Credit\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift'),\r\n                    creditPaid:`${this.state.creditPaid}`\r\n                   \r\n                }\r\n\r\n                let result2 = await fetch(postRestCredit, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CreditSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2>  ' + result2)\r\n\r\n            }\r\n            \r\n            let result12 = await fetch(`${postToTable}/${tableID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result12>  ' + result12)\r\n\r\n            \r\n\r\n            alert(\"Sales Posted\")\r\n\r\n            let wscdata = await fetch(`${delwaitersCost}/${wtabdata}`, {\r\n                method: 'delete',\r\n\r\n                                \r\n            });\r\n            console.log('wscdata>  ' + wscdata)\r\n\r\n            this.getWT();\r\n\r\n            this.setState({selected:[]});\r\n            this.setState({cost:0})\r\n            this.setState({amountPaid:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({roomNumbers:''})\r\n            this.setState({paymentMethod:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            this.setState({group:''})\r\n            this.setState({\r\n                shift:'',\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:'',\r\n                DrinkstoreData:[],\r\n                DrinkSalesQtyData:[],\r\n                NewtableNum:0\r\n            })\r\n            localStorage.removeItem('delcntrl');\r\n            sessionStorage.removeItem('tableNumber3')\r\n            \r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            })\r\n           \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleSplitSubmit() {\r\n          \r\n        \r\n        try {\r\n\r\n\r\n            var tableID = sessionStorage.getItem('tableNumber3');\r\n\r\n            var data = {\r\n                selected:[],\r\n                billCost:\"\",\r\n                tableNum:sessionStorage.getItem('tableNumber3')\r\n            }\r\n\r\n            var split = {\r\n                Amounts: this.state.amountPaid\r\n            }\r\n\r\n            let splitPs = await fetch(postsplits, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    split\r\n                   \r\n                )\r\n                \r\n            });\r\n            console.log('splitPs>  ' + splitPs)\r\n\r\n            if(this.state.paymentMethod===\"POS\"){\r\n                var POSSales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    POSAmount:`${this.state.amountPaid}`,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"PoolBar Sales\",\r\n                    department: \"PoolBar Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result5 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        POSSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result5>  ' + result5)\r\n\r\n                \r\n                \r\n            }\r\n            if(this.state.paymentMethod===\"Cash\"){\r\n                var CashSales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    CashAmount:`${this.state.amountPaid}`,\r\n                    POSAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"PoolBar Sales\",\r\n                    department: \"PoolBar Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result4 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CashSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result4>  ' + result4)\r\n                \r\n            }\r\n\r\n\r\n            if(this.state.paymentMethod===\"Transfer\"){\r\n                var transferSales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    TransferAmount:`${this.state.amountPaid}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"PoolBar Sales\",\r\n                    department: \"PoolBar Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result3 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        transferSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3>  ' + result3)\r\n                \r\n        \r\n            }\r\n\r\n            if(this.state.paymentMethod===\"Complimentary\"){\r\n                var complimentarySales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    amountPaid:`${this.state.amountPaid}`,\r\n                    CompDebit:`${this.state.cost}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"PoolBar Sales\",\r\n                    department: \"PoolBar Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n\r\n                let result2 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        complimentarySales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2>  ' + result2)\r\n\r\n                \r\n            }\r\n\r\n            if(this.state.paymentMethod===\"Credit\"){\r\n                var CreditSales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    creditAmount:`${this.state.amountPaid}`,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"PoolBar Credit\",\r\n                    department: \"PoolBar Credit\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift'),\r\n                    creditPaid:`${this.state.creditPaid}`\r\n                   \r\n                }\r\n\r\n                let result2 = await fetch(postRestCredit, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CreditSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2>  ' + result2)\r\n\r\n            }\r\n            \r\n            let result12 = await fetch(`${postToTable}/${tableID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result12>  ' + result12)\r\n\r\n            this.ComputeAmtPaid();\r\n\r\n            alert(\"Sales Posted\")\r\n\r\n            \r\n            \r\n           \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    handleWaitersOpen(){\r\n        this.setState({waiters: true});\r\n    }\r\n\r\n    handleWaitersClose(){\r\n        this.setState({waiters: false});\r\n    }\r\n\r\n\r\n    getWaitersNow(){\r\n        fetch(`${getWaiters}`, {method: 'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n           \r\n        this.setState({\r\n            LoadWaiters:data,\r\n            \r\n        })\r\n        return 'ok'\r\n            \r\n        })\r\n    }\r\n\r\n    getWaitersData(){\r\n        fetch(`${getwaitersData}`, {method: 'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n           \r\n            this.setState({\r\n                WaitersData:data,\r\n                \r\n            })\r\n            return 'ok'\r\n            \r\n        })\r\n    }\r\n\r\n    getWaitersC(){\r\n        fetch(`${getwaitersCost}`, {method: 'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let totalbicost = data.map(item => item).reduce((totals, item) =>{\r\n                return  totals + parseFloat(item.billCost)\r\n            }, 0);\r\n        \r\n            this.setState({\r\n                \r\n                waitersCost: totalbicost\r\n                \r\n            })\r\n            return 'ok'\r\n            \r\n        })\r\n    }\r\n\r\n\r\n    async handleWaiters() {\r\n          \r\n        try {\r\n            \r\n            \r\n            var Waiters = {\r\n                WaiterID:'Waiters'+Math.floor(Math.random()*1000),\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                FirstName:`${this.state.waitersFName}`,\r\n                LastName:`${this.state.waiterLName}`,\r\n                \r\n            }\r\n            let resultWaiter = await fetch(Postwaiters, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    Waiters\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('resultWaiter>  ' + resultWaiter)\r\n            \r\n            alert(`${this.state.waitersFName} was registered successfully`)\r\n            \r\n            this.setState({\r\n                waitersFName:'',\r\n                waiterLName:'',\r\n                waitersID:'',\r\n                waiters: false\r\n                \r\n            })\r\n\r\n            this.myTimer = setTimeout(() => {\r\n                this.getWaitersNow();\r\n                this.getWaitersData();\r\n    \r\n            },1000)\r\n\r\n\r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleRemoveWaiters() {\r\n          \r\n        try {\r\n            \r\n            \r\n            let resultdelWaiter = await fetch(DelWaiters, {\r\n                method: 'delete',\r\n\r\n            });\r\n\r\n            \r\n            console.log('resultdelWaiter>  ' + resultdelWaiter)\r\n\r\n            let resultdelWaiterSales = await fetch(DelWaitersSales, {\r\n                method: 'delete',\r\n\r\n            });\r\n\r\n            \r\n            console.log('resultdelWaiterSales>  ' + resultdelWaiterSales)\r\n            \r\n            this.getWaitersC();\r\n            this.getWT();\r\n            \r\n            alert(\"Waiters List was  deleted successfully\")\r\n\r\n            this.setState({LoadWaiters: ''})\r\n            window.location.reload();\r\n            \r\n        \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async postCredit() {\r\n          \r\n        \r\n        try {\r\n            \r\n            var CreditSales = {\r\n                docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                date:moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                cost:0,\r\n                creditAmount:0,\r\n                paymentMethod:`${this.state.paymentMethod}`,\r\n                description: \"PoolBar Credit\",\r\n                department: \"PoolBar Credit\",\r\n                docketDetails: this.state.selected,\r\n                group:`${this.state.group}`,\r\n                user: localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift'),\r\n                creditPaid:`${this.state.creditPaid}`\r\n                \r\n            }\r\n            let creditPay = await fetch(postRestCredit, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    CreditSales\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('creditPay>  ' + creditPay)\r\n\r\n            if(this.state.paymentMethod===\"POS\"){\r\n                var POSSales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    POSAmount:`${this.state.creditPaid}`,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"PoolBar Credit\",\r\n                    department: \"PoolBar Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result5 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        POSSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result5>  ' + result5)\r\n\r\n            }\r\n            if(this.state.paymentMethod===\"Cash\"){\r\n                var CashSales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    CashAmount:`${this.state.creditPaid}`,\r\n                    POSAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"PoolBar Credit\",\r\n                    department: \"PoolBar Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result4 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CashSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result4>  ' + result4)\r\n                \r\n            }\r\n            if(this.state.paymentMethod===\"Transfer\"){\r\n                var transferSales = {\r\n                    docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                    date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    TransferAmount:`${this.state.creditPaid}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"PoolBar Credit\",\r\n                    department: \"PoolBar Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result3 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        transferSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3>  ' + result3)\r\n                \r\n            }\r\n\r\n            alert(\"Credit Posted\")\r\n            this.setState({\r\n                creditSales:'',\r\n                TotalCredit:0,\r\n                creditPaid:0,\r\n                TotalCreditPaid:0\r\n            })\r\n                               \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleRoomSubmit2() {\r\n        \r\n        try {\r\n            var tableID = sessionStorage.getItem('tableNumber3');\r\n            let wtabdata = sessionStorage.getItem('wtwrtid')\r\n\r\n            var data = {\r\n                selected:[],\r\n                billCost:\"\",\r\n                tableNum:sessionStorage.getItem('tableNumber3')\r\n            }\r\n            var restaurantSales = {\r\n                _id:Math.floor(Math.random()*10000),\r\n                docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                refID:`${this.state.guestInhouseID}`,\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                cost:`${this.state.cost}`,\r\n                amountPaid:`${this.state.amountPaid}`,\r\n                roomDebit:`${this.state.cost}`,\r\n                POSAmount:0,\r\n                CashAmount:0,\r\n                TransferAmount:0,\r\n                CompDebit:0,\r\n                paymentMethod:`${this.state.paymentMethod}`,\r\n                roomNumbers:`${this.state.roomNumbers}`,\r\n                description:\"Restaurant Docket\",\r\n                department: \"Restaurant Sales\",\r\n                docketDetails: this.state.selected,\r\n                group:`${this.state.group}`,\r\n                user: localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift')\r\n               \r\n            }\r\n            let result = await fetch(postDocketToRoom, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    restaurantSales\r\n                   \r\n                )\r\n                \r\n            });\r\n            console.log('result>  ' + result)\r\n\r\n            let result2 = await fetch(posttoRest, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    restaurantSales\r\n                   \r\n                )\r\n                \r\n            });\r\n            console.log('result2>  ' + result2)\r\n\r\n            let result14 = await fetch(`${postToTable}/${tableID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result14>  ' + result14)\r\n\r\n            let wscdata = await fetch(`${delwaitersCost}/${wtabdata}`, {\r\n                method: 'delete',\r\n\r\n                                \r\n            });\r\n            console.log('wscdata>  ' + wscdata)\r\n\r\n            this.getWT();\r\n\r\n\r\n            alert(\"Docket Posted to Room \" +this.state.roomNumbers)\r\n            this.setState({selected:[]});\r\n            this.setState({cost:0})\r\n            this.setState({amountPaid:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({roomNumbers:''})\r\n            this.setState({paymentMethod:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            this.setState({group:''})\r\n            this.setState({\r\n                NewtableNum:0,\r\n                shift:'',\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:''\r\n                \r\n            })\r\n            sessionStorage.removeItem('stockBal');\r\n            localStorage.removeItem('delcntrl');\r\n            localStorage.setItem('btnCntrl',true);\r\n            sessionStorage.removeItem('tableNumber');\r\n\r\n                       \r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            })\r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    \r\n\r\n    async handleRoomSubmit() {\r\n        \r\n        try {\r\n            var tableID = sessionStorage.getItem('tableNumber3');\r\n            let wtabdata = sessionStorage.getItem('wtwrtid')\r\n\r\n            var data = {\r\n                selected:[],\r\n                billCost:\"\",\r\n                tableNum:sessionStorage.getItem('tableNumber3')\r\n            }\r\n            var restaurantSales = {\r\n                _id:Math.floor(Math.random()*10000),\r\n                docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n                refID:`${this.state.guestInhouseID}`,\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                cost:`${this.state.cost}`,\r\n                amountPaid:`${this.state.amountPaid}`,\r\n                roomDebit:`${this.state.cost}`,\r\n                POSAmount:0,\r\n                CashAmount:0,\r\n                TransferAmount:0,\r\n                CompDebit:0,\r\n                paymentMethod:`${this.state.paymentMethod}`,\r\n                roomNumbers:`${this.state.roomNumbers}`,\r\n                description:\"PoolBar Docket\",\r\n                department: \"PoolBar Sales\",\r\n                docketDetails: this.state.selected,\r\n                group:`${this.state.group}`,\r\n                user: localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift')\r\n               \r\n            }\r\n            let result = await fetch(postDocketToRoom, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    restaurantSales\r\n                   \r\n                )\r\n                \r\n            });\r\n            console.log('result>  ' + result)\r\n\r\n            let result2 = await fetch(postRestBill, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    restaurantSales\r\n                   \r\n                )\r\n                \r\n            });\r\n            console.log('result2>  ' + result2)\r\n\r\n            let result14 = await fetch(`${postToTable}/${tableID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result14>  ' + result14)\r\n\r\n            let wscdata = await fetch(`${delwaitersCost}/${wtabdata}`, {\r\n                method: 'delete',\r\n\r\n                                \r\n            });\r\n            console.log('wscdata>  ' + wscdata)\r\n\r\n            this.getWT();\r\n\r\n\r\n            alert(\"Docket Posted to Room \" +this.state.roomNumbers)\r\n            this.setState({selected:[]});\r\n            this.setState({cost:0})\r\n            this.setState({amountPaid:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({roomNumbers:''})\r\n            this.setState({paymentMethod:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            this.setState({group:''})\r\n            this.setState({\r\n                NewtableNum:0,\r\n                shift:'',\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:'',\r\n                DrinkstoreData:[],\r\n                DrinkSalesQtyData:[]\r\n            })\r\n            sessionStorage.removeItem('stockBal');\r\n            localStorage.removeItem('delcntrl');\r\n            localStorage.setItem('btnCntrl',true);\r\n            sessionStorage.removeItem('tableNumber');\r\n\r\n            fetch(`${getStoreData}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    DrinkstoreData:data\r\n                })\r\n            })\r\n\r\n           \r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            })\r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        localStorage.removeItem('shift')\r\n    }\r\n\r\n\r\n    renderTables(data){\r\n        if(data) {\r\n            data.sort((a, b) => a.tableNum - b.tableNum);\r\n           \r\n            return data.map((item) => {\r\n                if(item.billCost===\"\"){\r\n                    return(\r\n                        <div key={item._id}>\r\n                            <button className=\"btn btn-success cartBtn3 alignroomsgreen2\" disabled = {this.state.NewtableNum===1} onClick={() => {sessionStorage.setItem('tableNumber3', item.tableNum);this.handleGetWaitListOpenNew();this.setState({docketFirst:0})}}>\r\n                                <p className=\"texted\">{item.tableNum}</p>\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <div key={item._id}>\r\n                            <button className=\"btn btn-warning cartBtn3 alignroomsgreen2\" onClick={() => {sessionStorage.setItem('tableNumber3', item.tableNum);this.getTableP();this.setState({print:1})}}>\r\n                                <p className=\"texted\">{item.tableNum}</p>\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n               \r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    renderWaitersTables(data){\r\n        if(data) {\r\n            data.sort((a, b) => a.tableNum - b.tableNum);\r\n           \r\n            return data.map((item) => {\r\n                if(item.billCost!==\"\" || item.billCost !==0){\r\n                    return(\r\n                        <div key={item._id}>\r\n                            <button className=\"btn btn-warning cartBtn3 alignroomsgreen2\" onClick={() => {sessionStorage.setItem('wtwrtid', item._id); this.getTablewrtW(); this.setState({print:1})}}>\r\n                                <p className=\"texted\">{item.tableNum}</p>\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return null\r\n                }\r\n               \r\n            })\r\n        }\r\n    }\r\n    \r\n\r\n    renderPayMeth(data){\r\n        if(data) {\r\n            return data.map((item, index) => {\r\n                return(\r\n                    <>\r\n                        <option key={index} value={item.method}>\r\n                            {item.method}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderRooms(data){\r\n        if(data) {\r\n           data.sort((a, b) => a.roomNumbers - b.roomNumbers);\r\n            return data.map((item, index) => {\r\n                return(\r\n                    <>\r\n                        <option key={index} value={item.roomNumbers}>\r\n                            {item.roomNumbers} - {item.fname} {item.lname}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    renderWaitersList(data){\r\n        if(data) {\r\n        //    data.sort((a, b) => a.waitersFName - b.waitersFName);\r\n            return data.map((item, index) => {\r\n                return(\r\n                    <>\r\n                        <option key={index} value={item.FirstName}>\r\n                            {item.FirstName} {item.LastName}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    addMeal(){\r\n        var menuselect=this.state.menulist;\r\n        menuselect.map((item)=>{\r\n            this.setState({\r\n                Newmeal:item.mealName,\r\n                Newprice:item.mealPrice,\r\n                Newqty:parseInt(item.mealQt),\r\n                Newid:item._id\r\n\r\n            })\r\n            return 'ok'\r\n        })\r\n        \r\n    }\r\n\r\n    RestaurantaddMeal(){\r\n        var restmenuselect=this.state.Restmenulist;\r\n        restmenuselect.map((item)=>{\r\n            this.setState({\r\n                Newmeal:item.mealName,\r\n                Newprice:item.mealPrice,\r\n                Newqty:parseInt(item.mealQt),\r\n                Newid:item._id\r\n\r\n            })\r\n            return 'ok'\r\n        })\r\n        \r\n    }\r\n\r\n    increament(){\r\n        if(this.state.Newqty!==0){\r\n            this.setState({\r\n                Newqty:this.state.Newqty +1\r\n            })\r\n        }\r\n       \r\n    }\r\n\r\n    decreament(){\r\n        if(this.state.Newqty!==0){\r\n            this.setState({\r\n                Newqty:this.state.Newqty -1\r\n            })\r\n        }\r\n    }\r\n\r\n    pushorder(){\r\n\r\n        this.pushToPrinter();\r\n\r\n        var selected = this.state.selected;\r\n        var selectedMeals = {};\r\n\r\n        if(this.state.selected.length>0){\r\n            this.setState({blockTable:1});\r\n    \r\n            selectedMeals.id=this.state.Newid;\r\n            selectedMeals.meal=this.state.Newmeal;\r\n            selectedMeals.mealPrice=this.state.Newprice;\r\n            selectedMeals.qty=this.state.Newqty;\r\n            selectedMeals.tranID=Math.floor(Math.random()*10000)\r\n            \r\n            selected.push(selectedMeals);\r\n                      \r\n            this.setState({\r\n                selected,\r\n                printStop:0,\r\n                DrinkStore:0,\r\n                DrinkSalesQty:0,\r\n                stockBal:0,\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:''\r\n            })\r\n                \r\n           \r\n        }\r\n        else if(this.state.selected.length===0){\r\n            this.setState({blockTable:0});\r\n\r\n            selectedMeals.id=this.state.Newid;\r\n            selectedMeals.meal=this.state.Newmeal;\r\n            selectedMeals.mealPrice=this.state.Newprice;\r\n            selectedMeals.qty=this.state.Newqty;\r\n            selectedMeals.tranID=Math.floor(Math.random()*10000)\r\n            \r\n            selected.push(selectedMeals);\r\n                      \r\n            this.setState({\r\n                selected,\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:'',\r\n                printStop:0,\r\n                DrinkStore:0,\r\n                DrinkSalesQty:0,\r\n                stockBal:0\r\n            })\r\n        }\r\n\r\n        \r\n\r\n        this.myTimer = setTimeout(() => {\r\n            if(this.state.selected.length>0){\r\n                const totalSale = selected.reduce((total, item) => {\r\n                    return total + item.mealPrice * item.qty\r\n                }, 0);\r\n                this.setState({\r\n                    cost:totalSale,\r\n                    \r\n                })\r\n            }\r\n\r\n            if(this.state.cost!==0){\r\n                fetch(`${getRooms}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        displayRoomNums:data\r\n                    })\r\n                })\r\n                fetch(`${getPaymentMethods}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        displayPaymentMethods:data\r\n                    })\r\n                })\r\n                // localStorage.removeItem('btnCntrl');\r\n                localStorage.removeItem('delcntrl')\r\n            }\r\n            \r\n        },1000);\r\n\r\n \r\n    }\r\n\r\n\r\n    pushToPrinter(){\r\n        var printOut = this.state.printSelection;\r\n        var printMeals = {};\r\n\r\n        printMeals.id=this.state.Newid;\r\n        printMeals.meal=this.state.Newmeal;\r\n        printMeals.mealPrice=this.state.Newprice;\r\n        printMeals.qty=this.state.Newqty;\r\n        printMeals.tranID=Math.floor(Math.random()*10000)\r\n        \r\n        printOut.push(printMeals);\r\n                    \r\n    }\r\n    \r\n\r\n     \r\n    renderMenu(data){\r\n        if (data){\r\n            \r\n            return data.map((item) =>{\r\n                \r\n                return(\r\n                    <>\r\n                        <div>\r\n                            <center>\r\n                                \r\n                                <div className=\"card alignroomsgreen3\"style={{backgroundColor:'orangered'}} key={item.mealTypeID}>\r\n                                    <button className=\"btn btn-orangered buttnheightbtn\" onMouseOver={()=>sessionStorage.setItem('meal',item.mealName)} onClick={ () =>{this.setState({Newmeal:item.mealName,Newprice:item.mealPrice,Newqty:parseInt(item.mealQt),Newid:item._id,tranID2:Math.floor(Math.random()*10000)});this.handleStock()}}>\r\n                                            \r\n                                    <p className=\"card-title formatnew2\">{item.mealName}</p> \r\n                                    </button>\r\n                                </div>\r\n                                \r\n                            </center>\r\n                        </div>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderRestaurant(data){\r\n        if (data){\r\n            \r\n            return data.map((item) =>{\r\n                \r\n                return(\r\n                    <>\r\n                        <div>\r\n                            <center>\r\n                                \r\n                                <div className=\"card alignroomsgreen3\"style={{backgroundColor:'orangered'}} key={item.mealTypeID}>\r\n                                    <button className=\"btn btn-orangered buttnheightbtn\" onMouseOver={()=>sessionStorage.setItem('meal',item.mealName)} onClick={ () =>{this.setState({Newmeal:item.mealName,Newprice:item.mealPrice,Newqty:parseInt(item.mealQt),Newid:item._id,tranID2:Math.floor(Math.random()*10000)});this.handleStock()}}>\r\n                                            \r\n                                    <p className=\"card-title formatnew2\">{item.mealName}</p> \r\n                                    </button>\r\n                                </div>\r\n                                \r\n                            </center>\r\n                        </div>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderRestaurantPos(food){\r\n        if(food) {\r\n            return food.map((item) =>{\r\n               \r\n                return(\r\n                    <>\r\n                        <div>\r\n                            <center>\r\n                                \r\n                                <div className=\"card alignroomsgreen3\"style={{backgroundColor:'blueviolet'}} key={item.mealTypeID}>\r\n                                    <button className=\"btn btn-blueviolet buttnheightbtn\" onMouseOver={() => this.setState({menuID:item.mealTypeID})} onClick={ () => this.RestbuttonClick () }>\r\n                                        <p className=\"card-title formatnew2\">{item.mealType}</p> \r\n                                    </button>\r\n                                </div>\r\n                                \r\n                            </center>\r\n                        </div>\r\n                        \r\n                    </>\r\n                )\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    getWT(){\r\n        let waitersTableNum = sessionStorage.getItem('waitersTabNum');\r\n\r\n        fetch(`${getWaitersTableData}${waitersTableNum}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                waiterTableData:data\r\n            })\r\n        })\r\n\r\n        \r\n\r\n        this.myTimer = setInterval(() => {\r\n            \r\n            this.showWaitrsTab();\r\n            \r\n\r\n        },1000)\r\n\r\n        this.getWSC();\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n    \r\n    \r\n/////// Mark Here ///////\r\n    renderWaitersData(data){\r\n        \r\n        \r\n        if (data){\r\n            \r\n            return data.map((item) =>{\r\n                \r\n                                \r\n                return(\r\n                    <>\r\n                        <div>\r\n                            <center>\r\n                                \r\n                                <div className=\"card alignroomsgreen3\"style={{backgroundColor:'orangered'}} key={item._id}>\r\n                                    <button className=\"btn btn-orangered buttnheightbtn\" onMouseOver={()=>{sessionStorage.setItem('waitersTabNum', item.FirstName)}} onClick={()=>{this.getWT()}}>\r\n                                            \r\n                                    <p className=\"card-title formatnew2\">{item.FirstName}</p> \r\n                                    </button>\r\n                                </div>\r\n                                \r\n                            </center>\r\n                        </div>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n       \r\n    renderOders(data){\r\n        \r\n        if(data) {\r\n            return data.map((item) =>{\r\n               \r\n                return(\r\n                    <>\r\n                        \r\n                        <tr key= {item.id}>\r\n                            {/* <td className=\"table-light table-striped adjust texted8\">{item.id}</td> */}\r\n                            <td className=\"texted8NwDescr\">{item.meal}</td>\r\n                            <td className=\"texted8NwQty\">{item.qty}</td>\r\n                            <td className=\"texted8NwPri\"><NumberFormat value={item.mealPrice} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"texted8NwPri\"><NumberFormat value={item.mealPrice*item.qty} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderSalesReport(data){\r\n        \r\n        if(data) {\r\n            return data.map((item) =>{\r\n                \r\n                return(\r\n                    <>\r\n                        \r\n                        <tr key= {item.id}>\r\n                            {/* <td className=\"table-light table-striped adjust texted8\">{item.id}</td> */}\r\n                            <td className=\"table-light table-striped adjust texted8\">{item.productName}</td>\r\n                            <td className=\"table-light table-striped adjust texted8\">{item.Quantity}</td>\r\n                            <td className=\"table-light table-striped adjust texted8\"><NumberFormat value={item.productPrice} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust texted8\"><NumberFormat value={item.productPrice*item.Quantity} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust texted8\"> </td>\r\n                            \r\n                        </tr>\r\n                        \r\n                        \r\n                        \r\n                    </>\r\n                )\r\n                \r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    renderPos(food){\r\n        if(food) {\r\n            return food.map((item) =>{\r\n               \r\n                return(\r\n                    <>\r\n                        <div>\r\n                            <center>\r\n                                \r\n                                <div className=\"card alignroomsgreen3\"style={{backgroundColor:'blueviolet'}} key={item.mealTypeID}>\r\n                                    <button className=\"btn btn-blueviolet buttnheightbtn\" onMouseOver={() => this.setState({menuID:item.mealTypeID})} onClick={ () => this.buttonClick () }>\r\n                                        <p className=\"card-title formatnew2\">{item.mealType}</p> \r\n                                    </button>\r\n                                </div>\r\n                                \r\n                                \r\n                            </center>\r\n                        </div>\r\n                        \r\n                    </>\r\n                )\r\n            })\r\n        }\r\n\r\n    }\r\n    \r\n    render() {\r\n        console.log(\">>> Inside RESrender\", this.state)\r\n        \r\n        var tranDt = moment(`${this.state.transactionDate}`).format('MMM DD YYYY');\r\n        var docketNum ='Bar'+Math.floor(Math.random()*10000);\r\n        var add = this.state.amountPaid;\r\n        if(this.state.amountPaid===''){\r\n            add = 0\r\n        }\r\n\r\n        if(localStorage.getItem('userInfo')==null || this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Poollogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return(\r\n            <div className=\"posterminal\">  \r\n                               \r\n                <br/>     \r\n                <div className =\"row quantity displayback\" >\r\n                               \r\n                    <center>\r\n                        <h6 style={{color:'white'}}>Add Quantity</h6>\r\n                    </center>\r\n                            \r\n                    <div>\r\n                        <div className=\"row\">\r\n                            <p className=\"prices\">Price: {this.state.Newprice}</p>\r\n                            <p className=\"prices2\">Avail.Stock: {this.state.stockBal}</p>\r\n                            <span className=\"dcrbtn\">\r\n                                <button className=\"form-control mb-3 formsizeX1\" onClick={() =>this.decreament()}><p className=\"sign\">-</p></button>\r\n                            </span>\r\n                            <span className=\"qtybtn\">\r\n                                <input type=\"number\" className=\"form-control2 mb-3 formsizeX\" style={{textAlign:'center',fontStyle:'bold',color:'white',fontSize:'24px'}}name=\"Newqty\" value={this.state.Newqty} onChange={this.handleChange3}/>\r\n                            </span>\r\n                            <span className=\"incbtn\">\r\n                                <button className=\"form-control mb-3 formsizeX1\" onClick={() => this.increament()}><p className=\"sign\">+</p></button>\r\n                            </span>\r\n                            \r\n                            <div className ={this.state.showPoolPos}>\r\n                                <button className=\"btn btn-warning addbtn \" disabled={this.state.Newqty===0||this.state.stockBal===0} onClick={() =>{this.pushorder();this.setState({docketFirst:1})}}>{this.state.Stockbtn}</button>\r\n                            </div>\r\n                            <div className = {this.state.showRestaurant}>\r\n                                <button className=\"btn btn-warning addbtn\" disabled={this.state.Newqty===0} onClick={() =>{this.pushorder();this.setState({docketFirst:1})}}>Add</button>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n                \r\n\r\n                <div className=\"salesTable displayback\">\r\n                \r\n                    <table className=\"table table-hover\">\r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                {/* <th className=\"adjust2\">ID</th> */}\r\n                                <th className=\"adjust2\">Menu</th>\r\n                                <th className=\"adjust2\">Qty</th>\r\n                                <th className=\"adjust2\">Price(=N)</th>\r\n                                <th className=\"adjust2\">Amount(=N)</th>\r\n                               \r\n                                \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover tableheight\">\r\n                            {this.renderOders(this.state.selected)}\r\n                            \r\n       \r\n                            \r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                </div>\r\n\r\n                \r\n                    \r\n                <div className=\"amountP displayback\">\r\n                    <input type=\"text\" className=\"form-control mb-3 formsizeA1 textedM\" name=\"amountPaid\" require placeholder= \"Enter Payment\" value={this.state.amountPaid} onChange={this.handleChange}/>\r\n                </div>\r\n\r\n                <div className=\"method displayback\">\r\n                    <select className=\"form-select formsizeA1 textedM\" name=\"paymentMethod\" onChange={this.handleChange}>\r\n                        <option selected value=''>Payment Method</option>\r\n                        {this.renderPayMeth(this.state.displayPaymentMethods)}\r\n                    </select>\r\n                </div>\r\n\r\n                <button disabled={this.state.cost===0||this.state.amountPaid===''||this.state.paymentMethod==='Complimentary'||this.state.docketFirst===1} className=\"btn btn-primary cartBtn2 method222\" onClick={() => {this.onOpenSplit();this.postQty()}}>\r\n                        <p className=\"texted\">Split</p>\r\n                </button>\r\n                \r\n                \r\n                <div className=\"textAmount displayback\">\r\n                    <p className=\"fmtcost2\" style={{color:'white'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                </div>\r\n                <div className=\"textAmount2 displayback\">\r\n                    <p className=\"fmtcost2\" style={{color:'white'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                </div>\r\n\r\n                <div className=\"operations displayback\">\r\n                    \r\n                    <h4 className=\"texted4\" style={{color:'white'}}>Operations</h4>\r\n                    \r\n                    <button disabled={localStorage.getItem('delcntrl')} className=\"btn btn-primary cartBtn2\" onClick={() => {this.removeAll();this.setState({docketFirst:0})}}>\r\n                        <p className=\"texted\">Delete</p>\r\n                    </button>\r\n                    \r\n                    \r\n                    <button disabled={this.state.cost===0||this.state.amountPaid===''||this.state.amountPaid<this.state.cost||this.state.amountPaid>this.state.cost||this.state.paymentMethod===''||this.state.paymentMethod==='Complimentary'||this.state.docketFirst===1 || this.state.posting == 0} className=\"btn btn-primary cartBtn2jjj\" onClick={() => {this.onOpenModalreceipt();this.postQty()}}>\r\n                        <p className=\"texted\">Post Drinks</p>\r\n                    </button>\r\n                    \r\n\r\n                    \r\n                        <button disabled={this.state.cost===0||this.state.amountPaid===''||this.state.amountPaid<this.state.cost||this.state.amountPaid>this.state.cost||this.state.paymentMethod===''||this.state.paymentMethod==='Complimentary'||this.state.docketFirst===1 || this.state.posting == 0} className=\"btn btn-primary cartBtn2jjj placerestbutton \" onClick={() => {this.onOpenRestModalreceipt2()}}>\r\n                            <p className=\"texted\">Post Food</p>\r\n                        </button>\r\n                    \r\n                    <select type =\"button\" disabled={this.state.docketFirst===1} className=\"form-select formsizeB mb-2 btn btn-primary texted\" name=\"roomNumbers\" onChange={this.handleChange2}>\r\n                        <option selected value=''>Rooms</option>\r\n                        {this.renderRooms(this.state.displayRoomNums)}\r\n                                                                    \r\n                    </select>\r\n                                            \r\n                    <button disabled={this.state.roomNumbers===''||this.state.amountPaid!=='' ||this.state.docketFirst===1 || this.state.posting == 0} className=\"btn btn-primary cartBtn4444\" onClick={() => {this.onOpenCompModal();this.postQty()}}>\r\n                        <p className=\"texted\">Room Drinks Post</p>\r\n                    </button>\r\n\r\n                    <button disabled={this.state.roomNumbers===''||this.state.amountPaid!=='' ||this.state.docketFirst===1 || this.state.posting == 0} className=\"btn btn-primary cartBtn4444\" onClick={() => {this.onOpenCompRestRoomModal();this.postQty()}}>\r\n                        <p className=\"texted\">Room Food Post</p>\r\n                    </button>\r\n\r\n                    <button disabled={this.state.paymentMethod!=='Complimentary'||this.state.amountPaid!==''||this.state.docketFirst===1} className=\"btn btn-primary cartBtn2\" onClick={() =>{this.onOpenModalreceipt();this.postQty()}}>\r\n                        <p className=\"texted\">Comp</p>\r\n                    </button>\r\n                    <button disabled={this.state.docketFirst===1} className=\"btn btn-primary cartBtn2x2\" onClick={ ()=>{this.handleReport()}}>\r\n                        <p className=\"texted\">Reports</p>\r\n                    </button>\r\n                    \r\n                    <button disabled={localStorage.getItem('btnCntrl')} className=\"btn btn-warning cartBtn12aaaa\" onClick={() => {this.handleGetWaitListOpen();this.setState({NewtableNum:0})}}>\r\n                        <p className=\"texted\">Add to Table {sessionStorage.getItem('tableNumber3')}</p>\r\n                    </button>\r\n                    \r\n                    \r\n                    <button className=\"btn btn-danger cartBtn20bbbb\" onClick={ ()=> this.logout()}>\r\n                        <p className=\"texted\">Log Out {localStorage.getItem('userInfo').split(' ')[0]}</p>\r\n                    </button>\r\n\r\n                    <button className=\"btn btn-primary cartBtn112\" onClick={ ()=>{this.handleWaitersOpen()}}>\r\n                        <p className=\"texted\">Register Waiters</p>\r\n                    </button>\r\n                    \r\n                    <button className=\"btn btn-warning cartBtn112aa\" onClick={ () => this.handleRemoveWaiters()}>\r\n                        <p className=\"texted\">Remove Waiters</p>\r\n                    </button>\r\n                    <button disabled ={this.state.selected.length===0}className=\"btn btn-warning setdktprnt\" onClick={()=>{this.onOpenModaltoprint2();localStorage.setItem('delcntrl',true)}}>\r\n                        <p className=\"texted\">Prnt Docket</p>\r\n                    </button>\r\n\r\n                    <div className = {this.state.toggle}>\r\n                        <button className = 'btn btn-danger cartBtn112xxx' onClick={()=>{this.showAllTab2()}}>\r\n                            <p className=\"texted\">Goto Sales</p>\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className = {this.state.toggle}>\r\n                        <button className = 'btn btn-warning cartBtn112xxx2' onClick={()=>{this.showAllTab2()}}>\r\n                            <p>Total: <NumberFormat value={this.state.waitersCost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        </button>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                <div className= {this.state.showSalesTable}>\r\n                    <div className=\"tables displayback\">\r\n                        <h5 className=\"texted2\" style={{color:'white'}}>Get Table</h5>\r\n                        <h5 className='texted2'style={{color:'yellow'}}>Work Date: {tranDt}</h5>\r\n                        <div>\r\n                            {this.renderTables(this.state.tables)}\r\n                        \r\n                        </div>\r\n                        <h6 style={{color:'silver', textAlign:'right'}}>PoolBar App</h6>\r\n                        <button className=\"btn btn-danger texted\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n                <div className= {this.state.showWaitersTable}>\r\n                    <div className=\"tables displayback\">\r\n                        <h5 className=\"texted2\" style={{color:'white'}}>Get Table</h5>\r\n                        <h5 className='texted2'style={{color:'yellow'}}>Work Date: {tranDt}</h5>\r\n                        <div>\r\n                            {this.renderWaitersTables(this.state.waiterTableData)}\r\n                        \r\n                        </div>\r\n                        <h6 style={{color:'silver', textAlign:'right'}}>PoolBar App</h6>\r\n                        <button className=\"btn btn-danger texted\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n                <div className = {this.state.showPoolPos}>\r\n                    <div className =\"mainmenu displayback\">\r\n                        {this.renderPos(this.state.menu)}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className = {this.state.showPoolBar}>\r\n                    <div className =\"menulistItems displayback\">\r\n                        {this.renderMenu(this.state.menulist)}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className = {this.state.showRestaurant}>\r\n                    <div className =\"RestmenulistItems displayback\">\r\n                        {this.renderRestaurant(this.state.Restmenulist)}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className = {this.state.showRestaurantPos}>\r\n                    <div className =\"mainmenu displayback\">\r\n                        {this.renderRestaurantPos(this.state.RestMenu)}\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n                <div className =\"waitersData displayback\">\r\n                    {this.renderWaitersData(this.state.WaitersData)}\r\n                </div>\r\n\r\n                <div className =\"RestaurantData displayback\">\r\n                    <button className='btn btn-primary' onClick={()=>{this.showRest()}}>Restaurant Menu</button>\r\n                </div>\r\n\r\n                <div className =\"PoolData displayback\">\r\n                    <button className='btn btn-primary' onClick={()=>{this.showPool()}}>Pool Bar Menu</button>\r\n                </div>\r\n\r\n                <Modal open={this.state.edit}>\r\n                    \r\n                    <div className = \"papersizeNew\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSizedNumber\">+234 802 288 8776</p>\r\n                            <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Pool Bar Docket</p>\r\n                            <p className=\"textSized\">Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"tableSettingsNow\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nwrest\">Menu</th>\r\n                                    <th className=\"adjust2Nwrest\">Qty</th>\r\n                                    <th className=\"adjust2Nwrest\">Rate</th>\r\n                                    <th className=\"adjust2Nwrest\">Amt</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tableSettingsNow\">\r\n                                {this.renderOders(this.state.printSelection)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Total:<NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Amount Paid:<NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Waiter: {this.state.findWaiter}</p>\r\n                            <p className=\"textSized\">Supervisor: {localStorage.getItem('userInfo')}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter2()}}>\r\n                                    <p className=\"texted\">{this.state.printBTN}</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                <Modal open={this.state.edit2}>\r\n                    \r\n                    <div className = \"papersizeNew\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSizedNumber\">+234 802 288 8776</p>\r\n                            <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Pool Bar Docket</p>\r\n                            <p className=\"textSized\">Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"tableSettingsNow\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nwrest\">Menu</th>\r\n                                    <th className=\"adjust2Nwrest\">Qty</th>\r\n                                    <th className=\"adjust2Nwrest\">Rate</th>\r\n                                    <th className=\"adjust2Nwrest\">Amt</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tableSettingsNow\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Total:<NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Amount Paid:<NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Waiter: {this.state.findWaiter}</p>\r\n                            <p className=\"textSized\">Supervisor: {localStorage.getItem('userInfo')}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinterNew()}}>\r\n                                    <p className=\"texted\">{this.state.printBTN}</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n\r\n                <Modal open={this.state.pword} onClose={()=>this.onClosePword()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Access Required</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <input type=\"password\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"pass\" require placeholder=\"Enter Access Code\" value={this.state.pass} onChange={this.handleChange}/>\r\n                                    <button disabled = {this.state.pass===''} className=\"btn btn-warning formsize91\" onClick={()=>this.AllowRefund()}>Login</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n                \r\n                <Modal open={this.state.waiters} onClose={()=>this.handleWaitersClose()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Register A Waiter</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <input type=\"text\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"waitersFName\" require placeholder=\"Enter First Name\" value={this.state.waitersFName} onChange={this.handleChange}/>\r\n                                    <input type=\"text\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"waiterLName\" require placeholder=\"Enter Last Name\" value={this.state.waiterLName} onChange={this.handleChange}/>\r\n                                    <button disabled = {this.state.waitersFName && this.state.waiterLName ===''} className=\"btn btn-warning formsize91\" onClick={()=>this.handleWaiters()}>Register</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n                \r\n                <Modal open={this.state.selectWaiter} onClose={()=>this.handleGetWaitListClose()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Select A Waiter</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <select type =\"button\" className=\"form-select mb-2 btn btn-primary\" name=\"findWaiter\" onChange={this.handleChange}>\r\n                                        <option selected value=''>Click to Select</option>\r\n                                        {this.renderWaitersList(this.state.LoadWaiters)}\r\n                                                                                    \r\n                                    </select>\r\n                                    <button disabled = {this.state.LoadWaiters===''} className=\"btn btn-warning formsize91\" onClick={()=>this.addToTable()}>Post</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal open={this.state.selectWaiterNew} onClose={()=>this.handleGetWaitListCloseNew()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Select A Waiter</h6>\r\n                            <div>\r\n                                <center>\r\n                                        \r\n                                    <select type =\"button\" className=\"form-select btn mb-2 btn-primary\" name=\"findWaiter\" onChange={this.handleChange}>\r\n                                        <option selected value=''>Click to Select</option>\r\n                                        {this.renderWaitersList(this.state.LoadWaiters)}\r\n                                                                                    \r\n                                    </select>\r\n                                    <button disabled = {this.state.LoadWaiters===''} className=\"btn btn-warning formsize91\" onClick={()=>this.NewTable()}>Post</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal open={this.state.split} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Split Payment</h6>\r\n                                <div>\r\n                                    <center>\r\n                                        \r\n                                        <div className=\"displayback\">\r\n                                            <p>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                                        </div>\r\n                                        <div className=\"displayback\">\r\n                                            <p>Bal: <NumberFormat value={this.state.cost- this.state.splitBal - parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"displayback\">\r\n                                            <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"amountPaid\" require placeholder= \"Enter Payment\" value={this.state.amountPaid} onChange={this.handleChangeComp}/>\r\n                                        </div>\r\n                                        \r\n                                        <select type =\"button\" className=\"form-select mb-2 btn btn-primary\" name=\"paymentMethod\" onChange={this.handleChange}>\r\n                                            <option selected value=''>Payment Method</option>\r\n                                            {this.renderPayMeth(this.state.displayPaymentMethods)}\r\n                                                                                        \r\n                                        </select>\r\n                                        <button disabled = {this.state.paymentMethod === ''} className=\"btn btn-warning formsize91\" onClick={()=>this.onOpenModalsplitreceipt()}>Post Drinks</button>\r\n                                        <button disabled = {this.state.paymentMethod === ''} className=\"btn btn-warning formsize91\" onClick={()=>this.onOpenRestModalreceipt()}>Post Food</button>\r\n                                        <button disabled = {this.state.cost- this.state.splitBal - parseFloat(add) !== 0}className=\"btn btn-warning formsize91\" onClick={()=>this.onCloseSplit()}>Close</button>\r\n                                        \r\n                                    </center>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal open={this.state.editsplitreceipt} onClose={()=>{this.onCloseModalsplitreceipt();this.handleSplitSubmit()}}>\r\n                    \r\n                    <div className = \"papersizeNew\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSizedNumber\">+234 802 288 8776</p>\r\n                            <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Pool Bar Receipt</p>\r\n                            <p className=\"textSized\">Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"tableSettingsNow\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Rate</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Amt</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tableSettingsNow\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Amount Paid: <NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted\">Print</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseModalsplitreceipt();this.handleSplitSubmit()}}>\r\n                                    <p className=\"texted\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                <Modal open={this.state.Resteditreceipt} onClose={()=>{this.onCloseRestModalreceipt();this.handleRestSubmit()}}>\r\n                    \r\n                    <div className = \"papersizeNew\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSizedNumber\">+234 802 288 8776</p>\r\n                            <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Pool Bar Food Receipt</p>\r\n                            <p className=\"textSized\">Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"tableSettingsNow\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Rate</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Amt</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tableSettingsNow\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Amount Paid: <NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted\">Print</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseRestModalreceipt();this.handleRestSubmit()}}>\r\n                                    <p className=\"texted\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                <Modal open={this.state.Resteditreceipt2} onClose={()=>{this.onCloseRestModalreceipt();this.handleRestSubmit2()}}>\r\n                    \r\n                    <div className = \"papersizeNew\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSizedNumber\">+234 802 288 8776</p>\r\n                            <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Pool Bar Food Receipt</p>\r\n                            <p className=\"textSized\">Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"tableSettingsNow\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Rate</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Amt</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tableSettingsNow\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Amount Paid: <NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted\">Print</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseRestModalreceipt2();this.handleRestSubmit2()}}>\r\n                                    <p className=\"texted\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n\r\n                <Modal open={this.state.editreceipt} onClose={()=>{this.onCloseModalreceipt();this.handleSubmit()}}>\r\n                    \r\n                    <div className = \"papersizeNew\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSizedNumber\">+234 802 288 8776</p>\r\n                            <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Pool Bar Receipt</p>\r\n                            <p className=\"textSized\">Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"tableSettingsNow\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Rate</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Amt</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tableSettingsNow\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Amount Paid: <NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted\">Print</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseModalreceipt();this.handleSubmit()}}>\r\n                                    <p className=\"texted\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                \r\n\r\n                <Modal open={this.state.compModal} onClose={()=>{this.onCloseCompModal();this.handleRoomSubmit()}}>\r\n                    \r\n                    <div className = \"papersizeNew\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSizedNumber\">+234 802 288 8776</p>\r\n                        <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Pool Bar Docket</p>\r\n                            <p className=\"textSized\">Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"tableSettingsNow\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Rate</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Amt</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tableSettingsNow\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Amount Paid: <NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted\">{this.state.printBTN}</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseCompModal();this.handleRoomSubmit()}}>\r\n                                    <p className=\"texted\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                <Modal open={this.state.RestRmcompModal} onClose={()=>{this.onCloseCompRestRoomModal();this.handleRoomSubmit2()}}>\r\n                    \r\n                    <div className = \"papersizeNew\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSizedNumber\">+234 802 288 8776</p>\r\n                        <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Pool Bar Food Docket</p>\r\n                            <p className=\"textSized\">Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"tableSettingsNow\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Rate</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Amt</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tableSettingsNow\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Amount Paid: <NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted\">{this.state.printBTN}</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseCompRestRoomModal();this.handleRoomSubmit2()}}>\r\n                                    <p className=\"texted\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                {/* view daily sales report */}\r\n                <Modal open={this.state.report} onClose={()=>{this.onCloseModalreport()}}>\r\n                    \r\n                    <div className = \"posPrint\">\r\n                        <hr/>\r\n                        <center>\r\n                        <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hotelphone}</p>\r\n                        <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Pool Bar Daily Sales Report</p>\r\n                            <p className=\"textSized\">Report Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Shift: {this.state.useReportShift}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"table-warning\">\r\n                                <tr>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>ID</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Price(=N)</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Amount(=N)</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"table table-hover tableheight\">\r\n                                {this.renderSalesReport(this.state.DrinkSalesQtyReportData)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Total Sales: <NumberFormat value={this.state.totalSales} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        \r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Staff: {this.state.useReportName}</p>\r\n                            <p className=\"textSized\">Shift: {this.state.useReportShift}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted\">{this.state.printBTN}</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseModalreport()}}>\r\n                                    <p className=\"texted\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                <Modal open={this.state.credit} onClose={()=>this.onCloseModalCredit()} style={{color:\"silver\"}}>\r\n                    <div className = \"background591stockin\">\r\n                        <h6 style = {{color:'silver',marginLeft:'50px', marginBottom:'-70px'}}>Recover Credit</h6>\r\n                        <div className=\"formdesign511\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <h6>Summary</h6>\r\n                                    <div className=\"col-3\">\r\n                                        <label>Total Credit</label>\r\n                                        <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\"><NumberFormat value={parseInt(this.state.TotalCredit)} thousandSeparator={true} displayType={\"text\"}/></p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-3\">\r\n                                        <label>Total Recovered</label>\r\n                                        <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\"><NumberFormat value={parseInt(this.state.TotalCreditPaid)} thousandSeparator={true} displayType={\"text\"}/></p>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"col-3\">\r\n                                        <label>Credit Balance</label>\r\n                                        <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\"><NumberFormat value={parseInt(this.state.TotalCredit)-parseInt(this.state.TotalCreditPaid)} thousandSeparator={true} displayType={\"text\"}/></p>\r\n                                    </div>\r\n                                    \r\n                                    \r\n                                </div>\r\n                                <div className='row'>\r\n                                    <div className=\"col-4\">\r\n                                            <input type=\"number\" className=\"form-control mb-3 formsize51 ikem\" name=\"creditPaid\" require placeholder=\"Enter Amount\" value={this.state.creditPaid} onChange={this.handleChange}/>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-4\">\r\n                                        <select className=\"form-select formsize51 ikem\" name=\"paymentMethod\" onChange={this.handleChange}>\r\n                                            <option selected value=''>Payment Method</option>\r\n                                            {this.renderPayMeth(this.state.payNwMeth)}\r\n                                        </select>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                \r\n                                <br/><br/>\r\n                                <center>\r\n                                    <span>\r\n                                        <button disabled ={this.state.creditPaid===''} className=\"btn btn-warning gap\" onClick={()=>this.postCredit()}>Post</button>\r\n                                        <button className=\"btn btn-danger gap\" onClick={ () => this.onCloseModalCredit()}>Close</button>\r\n                                                \r\n                                    </span>\r\n                                            \r\n                                </center>\r\n                                <br/>\r\n                        \r\n                            </div>\r\n                            \r\n                        </div> \r\n                        \r\n                    </div>  \r\n\r\n                </Modal>\r\n                \r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n    async componentDidMount(){\r\n        console.log (\">>> Inside RESdidMount\")\r\n       \r\n\r\n        fetch(`${restMenugrpUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                menu:data\r\n            })\r\n        })\r\n\r\n        \r\n        fetch(`${RestaurantMenugrpUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                RestMenu:data\r\n            })\r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n                \r\n    \r\n        },30000)\r\n\r\n        fetch(`${getwaitersData}`, {method: 'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n                       \r\n            this.setState({\r\n                WaitersData:data,\r\n                \r\n                \r\n            })\r\n            return 'ok'\r\n            \r\n        })\r\n\r\n        fetch(`${getwaitersCost}`, {method: 'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let totalbicost = data.map(item => item).reduce((totals, item) =>{\r\n                return  totals + parseFloat(item.billCost)\r\n            }, 0);\r\n           \r\n            this.setState({\r\n                \r\n                waitersCost: totalbicost\r\n                \r\n            })\r\n            return 'ok'\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n            fetch(`${getwaitersData}`, {method: 'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                        \r\n                this.setState({\r\n                    WaitersData:data,\r\n                    \r\n                    \r\n                })\r\n                return 'ok'\r\n                \r\n            })\r\n\r\n            fetch(`${getwaitersCost}`, {method: 'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let totalbicost = data.map(item => item).reduce((totals, item) =>{\r\n                    return  totals + parseFloat(item.billCost)\r\n                }, 0);\r\n            \r\n                this.setState({\r\n                    \r\n                    waitersCost: totalbicost\r\n                    \r\n                })\r\n                return 'ok'\r\n                \r\n            })\r\n    \r\n        },30000)\r\n\r\n        fetch(`${getStoreData}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                DrinkstoreData:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        await fetch(`${getWorkDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({transactionDate:item.date})\r\n                return 'ok'\r\n            })\r\n            \r\n           \r\n        })\r\n\r\n        this.myTimer = setInterval(() => {\r\n            fetch(`${getWorkDate}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({transactionDate:item.date})\r\n                    return 'ok'\r\n                })\r\n                \r\n            \r\n            })\r\n            \r\n\r\n        },1000)\r\n\r\n        fetch(`${getPaymentMethods}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                payNwMeth:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getBarSalesQty}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                DrinkSalesQtyData:data\r\n            })\r\n        })\r\n\r\n\r\n        fetch(`${getTable}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({tables:data})\r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            });\r\n\r\n            localStorage.setItem('btnCntrl',true)\r\n\r\n\r\n        },2000)\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n        if(localStorage.getItem('shift')==='Morning Shift'){\r\n            this.setState({shiftcolor:\"btn btn-primary cartBtn20\"})\r\n        }\r\n        else if(localStorage.getItem('shift')==='Night Shift'){\r\n            this.setState({shiftcolor:\"btn btn-dark cartBtn20\"})\r\n        }\r\n        else if(localStorage.getItem('shift')==='All Day'){\r\n            this.setState({shiftcolor:\"btn btn-warning cartBtn20\"})\r\n        }\r\n        \r\n    }\r\n}\r\nexport default PoolBar;","import React,{Component} from 'react';\r\nimport './MobPoolBar.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment';\r\nimport Poollogin from '../Poollogin';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst restMenugrpUrl = \"https://zarvichdemo.localto.net/drinkCategories\";\r\nconst menuUrl = \"https://zarvichdemo.localto.net/drinkitems?drinktypes=\";\r\nconst getRooms =\"https://zarvichdemo.localto.net/checkin?docket=Yes\";\r\nconst getGuestID = \"https://zarvichdemo.localto.net/checkin?roomNumID=\";\r\nconst getPaymentMethods = \"https://zarvichdemo.localto.net/paymentMethods\";\r\nconst postToTable = \"https://zarvichdemo.localto.net/poolbarTablePost\";\r\nconst getTable = \"https://zarvichdemo.localto.net/poolbarTable\";\r\nconst getTableID = \"https://zarvichdemo.localto.net/poolbarTable?tableID=\";\r\nconst getStoreData = \"https://zarvichdemo.localto.net/getPoolBarStore2\";\r\nconst postBarSalesQty = \"https://zarvichdemo.localto.net/postPoolBarSalesQty\";\r\nconst getBarSalesQty = \"https://zarvichdemo.localto.net/getPoolBarSalesQty\";\r\nconst userName = \"https://zarvichdemo.localto.net/poolUserInfo\";\r\nconst waitersSales = \"https://zarvichdemo.localto.net/postWaitersSales\";\r\nconst getRestCredit = \"https://zarvichdemo.localto.net/poolCreditSales?PCstaff=\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\nconst getWorkDate = \"https://zarvichdemo.localto.net/getActive\";\r\nconst menuLink = \"https://zarvichdemo.localto.net/menuitems?mealtypes=\";\r\nconst RestaurantMenugrpUrl = \"https://zarvichdemo.localto.net/menuCategories\";\r\nconst getWaiters = \"https://zarvichdemo.localto.net/getWaiters\";\r\nconst getwaitersCost = \"https://zarvichdemo.localto.net/poolWaitersCost?TotwaiterTabID=\";\r\n\r\nclass MobilePoolBar extends Component {\r\n\r\n    constructor(props) {\r\n        super (props);\r\n        console.log(\">>>Inside RESConstructor\",props)\r\n\r\n        this.state = {\r\n            Newmeal:'',\r\n            Newprice:'',\r\n            Newqty:0,\r\n            Newid:'',\r\n            edit:false,\r\n            edit2: false,\r\n            waitersTD: false,\r\n            editreceipt:false,\r\n            compModal:false,\r\n            report:false,\r\n            printStop:0,\r\n            docketFirst:0,\r\n            printBTN:'Print',\r\n            print:0,\r\n            blockTable:0,\r\n            IDfound:[],\r\n           \r\n            menu:'',\r\n            RestMenu:'',\r\n            meal:'',\r\n            mealPrice:'',\r\n            mealQuantity:'',\r\n            mealId:Math.floor(Math.random()*10000),\r\n            guestInhouseID:'',\r\n            selected:[],\r\n            printSelection:[],\r\n            menuID:'',\r\n            menulist:'',\r\n            Restmenulist:'',\r\n            cost:0,\r\n            amountPaid:'',\r\n            roomNumbers:'',\r\n            paymentMethod:'',\r\n            displayPaymentMethods:'',\r\n            displayRoomNums:'',\r\n            transactionDate:'',\r\n            tables:'',\r\n            newTable:'',\r\n            NewtableNum:0,\r\n            group:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            Blogin:'',\r\n            login:'',\r\n            shiftcolor:'',\r\n            shift:localStorage.getItem('shift'),\r\n\r\n            waitersFName: '',\r\n            waiterLName: '',\r\n            LoadWaiters:'',\r\n            findWaiter: '',\r\n            WaitersData:'',\r\n            waitersCost:'',\r\n            waiterTableData: '',\r\n            totalbicost: 0,\r\n            \r\n            \r\n\r\n            DrinkstoreData:[],\r\n            DrinkSalesQtyData:[],\r\n            DrinkStore:0,\r\n            DrinkSalesQty:0,\r\n            stockBal:0,\r\n\r\n        \r\n            \r\n            \r\n            DrinkSalesQtyReportData:'',\r\n            useReportName:'',\r\n            useReportShift:'',\r\n            useReportDate:'',\r\n            totalSales:0,\r\n            Stockbtn:'Add',\r\n\r\n            creditSales:'',\r\n            TotalCredit:0,\r\n            creditPaid:0,\r\n            payNwMeth:'',\r\n            TotalCreditPaid:0,\r\n            splitBal: [],\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:'',\r\n\r\n            pass:'',\r\n            pword:false,\r\n            pword2:false,\r\n\r\n            waiters: false,\r\n            selectWaiter:false,\r\n            selectWaiterNew: false,\r\n            \r\n            split: false,\r\n\r\n            showRestaurant: 'hidden',\r\n            showPoolBar: 'visible',\r\n            showPoolPos: 'visible',\r\n            showRestaurantPos: 'hidden',\r\n\r\n            showSalesTable: 'visible',\r\n            showWaitersTable: 'hidden',\r\n            toggle: 'hidden',\r\n            posting: 0,\r\n\r\n            Resteditreceipt: false,\r\n            editsplitreceipt: false,\r\n\r\n            Resteditreceipt2: false,\r\n            RestRmcompModal: false\r\n                        \r\n        }\r\n        \r\n    }\r\n\r\n    showRest(){\r\n        \r\n        this.setState({\r\n            showRestaurant: 'visible',\r\n            showPoolBar: 'hidden',\r\n            showPoolPos: 'hidden',\r\n            showRestaurantPos: 'visible'\r\n           \r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    showPool(){\r\n        \r\n        this.setState({\r\n            showRestaurant: 'hidden',\r\n            showPoolBar: 'visible',\r\n            showPoolPos: 'visible',\r\n            showRestaurantPos: 'hidden'\r\n           \r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    showAllTab(){\r\n        \r\n        this.setState({\r\n            showSalesTable: 'visible',\r\n            showWaitersTable: 'hidden',\r\n            toggle: 'hidden',\r\n            posting: 0\r\n            \r\n           \r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    showAllTab2(){\r\n        window.location.reload();\r\n        this.setState({\r\n            waitersCost: 0,\r\n            posting: 0\r\n        })\r\n    \r\n    }\r\n\r\n    showWaitrsTab(){\r\n        \r\n        this.setState({\r\n            showSalesTable: 'hidden',\r\n            showWaitersTable: 'visible',\r\n            toggle: 'visible',\r\n            posting: 1\r\n            \r\n           \r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onOpenPword(){\r\n        if(this.state.paymentMethod===\"Credit\"){\r\n            this.setState({\r\n                pword: true\r\n            })\r\n            \r\n        }\r\n        else{\r\n            this.setState({\r\n                pword: false\r\n            });\r\n            this.onOpenModalreceipt();\r\n            this.postQty()\r\n        }\r\n\r\n    }\r\n\r\n    getWaitersC(){\r\n        fetch(`${getwaitersCost}`, {method: 'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            let totalbicost = data.map(item => item).reduce((totals, item) =>{\r\n                return  totals + parseFloat(item.billCost)\r\n            }, 0);\r\n        \r\n            this.setState({\r\n                \r\n                waitersCost: totalbicost\r\n                \r\n            })\r\n            return 'ok'\r\n            \r\n        })\r\n    }\r\n\r\n    sendtoprinterNew(){\r\n        if(this.state.printBTN==='Print'){\r\n            window.print();\r\n            this.setState({\r\n                \r\n                selected: []\r\n            });\r\n            this.setState({printBTN:'Close'});\r\n            this.getWaitersC();\r\n        }\r\n        else if(this.state.printBTN==='Close'){\r\n            this.setState({edit2: false})      \r\n            this.setState({printBTN:'Print'})\r\n            this.setState({\r\n                print:0,\r\n                printStop:0,\r\n                // DrinkStore:0,\r\n                DrinkSalesQty:0,\r\n                stockBal:0,\r\n                blockTable:0\r\n\r\n            }) \r\n            \r\n            \r\n            \r\n        }\r\n       \r\n    }\r\n\r\n    onClosePword(){\r\n        this.setState({\r\n            pword: false\r\n        })\r\n        \r\n    }\r\n\r\n    AllowRefund(){\r\n        if(this.state.pass==='6849'){\r\n            this.onOpenModalreceipt();\r\n            this.postQty();\r\n            this.onClosePword()\r\n\r\n        }\r\n        else{\r\n            alert('Access Denied')\r\n        }\r\n    }\r\n\r\n    onOpenModaltoprint2(){\r\n        this.setState({\r\n            edit2: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n\r\n    onOpenModalsplitreceipt(){\r\n        this.setState({editsplitreceipt: true})\r\n    }\r\n\r\n    onCloseModalsplitreceipt(){\r\n        this.setState({editsplitreceipt: false})\r\n    }\r\n\r\n    onCloseModaltoprint2(){\r\n        this.setState({\r\n            edit2: false\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onOpenModaltoprint(){\r\n        this.setState({\r\n            edit: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onOpenCompModal(){\r\n        this.setState({\r\n            compModal: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseModalCredit(){\r\n        this.setState({\r\n            credit: false,\r\n            creditPaid:0\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseCompModal(){\r\n        this.setState({\r\n            compModal: false\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenCompRestRoomModal(){\r\n        this.setState({\r\n            RestRmcompModal: true\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseCompRestRoomModal(){\r\n        this.setState({\r\n            RestRmcompModal: false\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseRestModalreceipt(){\r\n        this.setState({\r\n            Resteditreceipt: false\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenRestModalreceipt2(){\r\n        this.setState({\r\n            Resteditreceipt2: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onOpenRestModalreceipt(){\r\n        this.setState({\r\n            Resteditreceipt: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseRestModalreceipt2(){\r\n        this.setState({\r\n            Resteditreceipt2: false\r\n        })\r\n        \r\n    } \r\n\r\n\r\n    onCloseModaltoprint(){\r\n        this.setState({\r\n            edit: false\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenModalreceipt(){\r\n        this.setState({\r\n            editreceipt: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseModalreceipt(){\r\n        this.setState({\r\n            editreceipt: false\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenModalreport(){\r\n        this.setState({\r\n            report: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseModalreport(){\r\n        this.setState({\r\n            report: false\r\n        })\r\n        \r\n    }\r\n\r\n    handleReport(){\r\n\r\n        var todayDate = moment(new Date()).format('MMM DD YYYY');\r\n        var username = localStorage.getItem('userInfo');\r\n        var findQty = `${getBarSalesQty}?useDate=${todayDate}&&useshift=${this.state.shift}&&userstaff=${username}`\r\n        \r\n        fetch(`${findQty}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                DrinkSalesQtyReportData:data\r\n            })\r\n            \r\n        })\r\n        this.myTimer = setTimeout(() => {\r\n            if(this.state.DrinkSalesQtyReportData.length>0){\r\n                var useData = this.state.DrinkSalesQtyReportData\r\n                var findUser = useData.find(element=>element.user===username)\r\n                var useDt = [];\r\n                useDt.push(findUser);\r\n                this.setState({useReportName:useDt.map(item=>item.user)})\r\n                this.setState({useReportShift:useDt.map(item=>item.shift)})\r\n                this.setState({useReportDate:useDt.map(item=>item.tranDate)})\r\n                \r\n                var TotSal = useData.reduce((total, item)=>{\r\n                    return total + parseInt (item.productPrice * item.Quantity)\r\n                }, 0);\r\n                this.setState({totalSales:TotSal});\r\n    \r\n                this.onOpenModalreport()\r\n            }\r\n            else{\r\n    \r\n                alert('No Sales was posted by '+username)\r\n    \r\n            }\r\n        },1000)\r\n        \r\n        \r\n    }\r\n\r\n\r\n    handleStock(){\r\n        if(this.state.DrinkstoreData.length>0){\r\n            var stockItem = sessionStorage.getItem('meal');\r\n           \r\n            //check available stock\r\n            const stockData=this.state.DrinkstoreData;\r\n            var totalStock = stockData.filter(stock => stock.productName.includes(stockItem)).reduce((total, item)=>{\r\n                return total + parseInt(item.piecesOut)\r\n            }, 0);\r\n            this.setState({DrinkStore:totalStock})\r\n\r\n            //check quantity sold\r\n            const qtyData=this.state.DrinkSalesQtyData;\r\n            var totalQty = qtyData.filter(qty => qty.productName.includes(stockItem)).reduce((total, item)=>{\r\n                return total + parseInt(item.Quantity)\r\n            }, 0);\r\n            this.setState({DrinkSalesQty:totalQty})\r\n            \r\n            //show stock balance\r\n            this.myTimer = setTimeout(() => {\r\n\r\n                var Total = 0;\r\n                var ST = Total + this.state.DrinkStore-this.state.DrinkSalesQty;\r\n                this.setState({stockBal:ST})\r\n                if(ST<0||ST<-1){\r\n                    this.setState({stockBal:0})\r\n                };\r\n\r\n                if(this.state.stockBal===0){\r\n                    this.setState({Stockbtn:'Finished'})\r\n                }\r\n                else{this.setState({Stockbtn:'Add'})}\r\n\r\n                \r\n            },1000);\r\n                \r\n        }\r\n       \r\n        \r\n        \r\n\r\n    }\r\n\r\n    \r\n    handleCost=(selected)=>{\r\n        if(this.state.selected!==null){\r\n           const totalSale = selected.reduce((total, item) => {\r\n               return total + item.mealPrice * item.qty\r\n           }, 0);\r\n           this.setState({cost:totalSale})\r\n        }\r\n        if(this.state.cost!==null){\r\n            fetch(`${getRooms}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayRoomNums:data\r\n                })\r\n            })\r\n            fetch(`${getPaymentMethods}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayPaymentMethods:data\r\n                })\r\n            })\r\n            localStorage.removeItem('btnCntrl');\r\n            localStorage.removeItem('delcntrl')\r\n        }\r\n        \r\n        \r\n    }  \r\n   \r\n    addqty = () => {\r\n        const del = this.state.selected.map((item) => parseInt(item.qty + 1));\r\n        this.setState({selected:del})\r\n       \r\n    }\r\n        \r\n    removeAll = (id) => {\r\n        const del = this.state.selected.filter(item => item.id === id);\r\n        this.setState({selected:del})\r\n        this.setState({cost:0})\r\n        this.setState({roomNumbers:''})\r\n        this.setState({amountPaid:''})\r\n        this.setState({displayRoomNums:''})\r\n        this.setState({paymentMethod:''})\r\n        this.setState({displayPaymentMethods:''})\r\n        this.setState({\r\n            displayPaymentMethods:'',\r\n            DrinkStore:0,\r\n            DrinkSalesQty:0,\r\n            stockBal:0\r\n        })\r\n        \r\n       \r\n    }\r\n\r\n    async addToTable() {\r\n\r\n        \r\n        try {\r\n            \r\n\r\n            var tableID = sessionStorage.getItem('tableNumber3');\r\n\r\n            var orderItems = this.state.selected;\r\n            var data = {\r\n                selected:orderItems.map(item => item),\r\n                billCost:this.state.cost,\r\n                tableNum:sessionStorage.getItem('tableNumber3'),\r\n                user:localStorage.getItem('userInfo')\r\n            }\r\n           \r\n           \r\n            var orderList = this.state.printSelection;\r\n            \r\n            const thisSales = orderList.reduce((total, item) => {\r\n                return total + item.mealPrice * item.qty\r\n            }, 0);\r\n            \r\n            \r\n            var Orderdata = {\r\n                _id: Math.floor(Math.random()*10000),\r\n                waiterselection:orderList.map(item => item),\r\n                billCost:thisSales,\r\n                tableNum:sessionStorage.getItem('tableNumber3'),\r\n                waiter:this.state.findWaiter\r\n            }\r\n           \r\n            \r\n            let waiterresult = await fetch(`${waitersSales}`, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    Orderdata\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('waiterresult>  ' + waiterresult)\r\n            this.onOpenModaltoprint();\r\n            \r\n            \r\n\r\n            let result = await fetch(`${postToTable}/${tableID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result>  ' + result)\r\n            this.setState({selected:[]})\r\n            localStorage.setItem('btnCntrl',true);\r\n            this.setState({cost:0})\r\n            this.setState({roomNumbers:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            this.setState({paymentMethod:''})\r\n            this.setState({printStop:0})\r\n            localStorage.removeItem('delcntrl');\r\n            sessionStorage.removeItem('tableNumber3')\r\n            \r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            });\r\n\r\n            this.handleGetWaitListClose();\r\n            this.getWaitersC();\r\n\r\n            \r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    handleCredit(){\r\n        var userCredit = localStorage.getItem('userInfo');\r\n        fetch(`${getRestCredit}${userCredit}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                creditSales:data\r\n            })\r\n            data.map((item)=>{\r\n                var allCredit = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.creditAmount)\r\n                }, 0);\r\n\r\n                this.setState({TotalCredit:allCredit,});\r\n                var allCreditPaid = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.creditPaid)\r\n                }, 0);\r\n                this.setState({TotalCreditPaid:allCreditPaid});\r\n                return 'ok'\r\n            })\r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            this.setState({\r\n                credit: true\r\n            })\r\n    \r\n        },1000);\r\n        \r\n        \r\n    }\r\n\r\n    async NewTable() {\r\n          \r\n        try {\r\n            \r\n            var NewtableID = sessionStorage.getItem('tableNumber3');\r\n\r\n            var orderItems = this.state.selected;\r\n            var data = {\r\n                selected:orderItems.map(item => item),\r\n                billCost:this.state.cost,\r\n                tableNum:NewtableID\r\n            }\r\n           \r\n            if(this.state.cost===0){\r\n                alert (\"If you click table Number again without an order, I will slap you!\")\r\n                sessionStorage.removeItem('tableNumber')\r\n            }\r\n            else{\r\n                let result = await fetch(`${postToTable}/${NewtableID}`, {\r\n                    method: 'put',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        data\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('result>  ' + result)\r\n                this.setState({selected:[]})\r\n                localStorage.setItem('btnCntrl',true);\r\n                this.setState({cost:0})\r\n                this.setState({roomNumbers:''})\r\n                this.setState({displayRoomNums:''})\r\n                this.setState({displayPaymentMethods:''})\r\n                this.setState({paymentMethod:''})\r\n                localStorage.removeItem('delcntrl');\r\n                this.setState({newTable:''})\r\n\r\n                this.handleGetWaitListCloseNew();\r\n                \r\n    \r\n                fetch(`${getTable}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({tables:data})\r\n                });\r\n\r\n                this.onOpenModaltoprint();\r\n            }\r\n            \r\n\r\n            \r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async getTableP() {\r\n          \r\n        try {\r\n            \r\n            var tableID = sessionStorage.getItem('tableNumber3');\r\n           \r\n            fetch(`${getTableID}${tableID}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n            data.map((item)=>{\r\n            this.setState({\r\n                selected:item.selected,\r\n                cost:item.billCost,\r\n                NewtableNum:1\r\n                        \r\n            })\r\n            return 'ok'\r\n                   \r\n            })\r\n                localStorage.removeItem('btnCntrl')\r\n            })\r\n\r\n            fetch(`${getRooms}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayRoomNums:data\r\n                })\r\n            })\r\n        \r\n            fetch(`${getPaymentMethods}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayPaymentMethods:data\r\n                })\r\n            })\r\n            localStorage.setItem('delcntrl',true)\r\n            this.setState({printStop:1})\r\n           \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    postQty(){\r\n       \r\n        try {\r\n            \r\n            this.state.selected.map((item)=>{\r\n                var prodName = item.meal;\r\n                var prodPrice = item.mealPrice;\r\n                var Qty = item.qty;\r\n                var ID = item.tranID;\r\n                \r\n                var salesQty = {\r\n                    id:ID,\r\n                    productName:prodName,\r\n                    productPrice:prodPrice,\r\n                    Quantity:parseInt(Qty),\r\n                    user: localStorage.getItem('userInfo'),\r\n                    tranDate:moment(new Date()).format('MMM DD YYYY'),\r\n                    shift:localStorage.getItem('shift'),\r\n                                \r\n                }\r\n                let result = fetch(`${postBarSalesQty}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        salesQty\r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                this.setState({\r\n                    Newmeal:'',\r\n                    Newprice:'',\r\n                    Newqty:0,\r\n                    Newid:'',\r\n                    DrinkstoreData:[],\r\n                    DrinkSalesQtyData:[]\r\n                })\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    fetch(`${getStoreData}`, {method:'GET'})\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        this.setState({\r\n                            DrinkstoreData:data\r\n                        })\r\n                    })\r\n\r\n                    fetch(`${getBarSalesQty}`, {method:'GET'})\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        this.setState({\r\n                            DrinkSalesQtyData:data\r\n                        })\r\n                    })\r\n                \r\n                },1000)\r\n                \r\n                return 'ok'\r\n            })    \r\n        \r\n\r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\n    buttonClick (){\r\n        fetch(`${menuUrl}${this.state.menuID}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                menulist:data\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    RestbuttonClick (){\r\n        fetch(`${menuLink}${this.state.menuID}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                Restmenulist:data\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    sendtoprinter(){\r\n        \r\n        window.print();\r\n        \r\n       \r\n    }\r\n\r\n    sendtoprinter2(){\r\n        if(this.state.printBTN==='Print'){\r\n            window.print();\r\n            this.setState({printBTN:'Close'})\r\n        }\r\n        else if(this.state.printBTN==='Close'){\r\n            this.setState({edit: false})      \r\n            this.setState({printBTN:'Print'})\r\n            this.setState({\r\n                print:0,\r\n                printStop:0,\r\n                // DrinkStore:0,\r\n                DrinkSalesQty:0,\r\n                stockBal:0,\r\n                blockTable:0\r\n\r\n            }) \r\n            \r\n            \r\n            \r\n        }\r\n       \r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n    \r\n    }\r\n\r\n    handleChange3 = (event) => {\r\n        if(this.state.Newmeal!==''||this.state.Newprice!==''||this.state.Newid!==''){\r\n            this.setState({\r\n                [event.target.name]:event.target.value\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    handleChange2 = (event) => {\r\n        console.log('inside handle', this.props)\r\n        this.setState({\r\n           [event.target.name]:event.target.value\r\n        })\r\n        fetch(`${getGuestID}${event.target.value}`, {method: 'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item) => {\r\n                this.setState({\r\n                    guestInhouseID:item.refID,\r\n                    group:item.group\r\n                })\r\n                return 'ok'\r\n            })\r\n        })\r\n    \r\n    }\r\n\r\n    handleGetWaitListOpen(){\r\n\r\n        this.getWaitersNow();\r\n\r\n        this.myTimer = setTimeout(() => {\r\n            this.setState({selectWaiter: true})\r\n\r\n        },1000)\r\n\r\n    }\r\n\r\n    getWaitersNow(){\r\n        fetch(`${getWaiters}`, {method: 'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n           \r\n        this.setState({\r\n            LoadWaiters:data,\r\n            \r\n        })\r\n        return 'ok'\r\n            \r\n        })\r\n    }\r\n\r\n\r\n    handleGetWaitListClose(){\r\n        this.setState({selectWaiter: false})\r\n\r\n    }\r\n\r\n    handleGetWaitListOpenNew(){\r\n        if(this.state.cost === 0){\r\n            alert (\"If you click table Number again without an order, I will slap you!\")\r\n        }\r\n\r\n        else{\r\n            this.getWaitersNow();\r\n\r\n            this.myTimer = setTimeout(() => {\r\n                this.setState({selectWaiterNew: true})\r\n                \r\n            },1000)\r\n\r\n        }\r\n        \r\n        \r\n\r\n    }\r\n\r\n    handleGetWaitListCloseNew(){\r\n        this.setState({selectWaiterNew: false})\r\n\r\n    }\r\n    \r\n\r\n    // async handleSubmit() {\r\n          \r\n        \r\n    //     try {\r\n    //         var tableID = sessionStorage.getItem('tableNumber3');\r\n\r\n    //         var data = {\r\n    //             selected:[],\r\n    //             billCost:\"\",\r\n    //             tableNum:sessionStorage.getItem('tableNumber3')\r\n    //         }\r\n\r\n    //         if(this.state.paymentMethod===\"POS\"){\r\n    //             var POSSales = {\r\n    //                 docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n    //                 date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n    //                 cost:`${this.state.cost}`,\r\n    //                 POSAmount:`${this.state.amountPaid}`,\r\n    //                 CashAmount:0,\r\n    //                 TransferAmount:0,\r\n    //                 CompDebit:0,\r\n    //                 roomDebit:0,\r\n    //                 paymentMethod:`${this.state.paymentMethod}`,\r\n    //                 description: \"PoolBar Sales\",\r\n    //                 department: \"PoolBar Sales\",\r\n    //                 docketDetails: this.state.selected,\r\n    //                 group:`${this.state.group}`,\r\n    //                 user: localStorage.getItem('userInfo'),\r\n    //                 shift:localStorage.getItem('shift')\r\n                   \r\n    //             }\r\n    //             let result5 = await fetch(postRestBill, {\r\n    //                 method: 'post',\r\n    \r\n    //                 headers: {\r\n    //                     'Accept': 'application/json',\r\n    //                     'Content-type': 'application/json',\r\n    //                 },\r\n    \r\n    //                 body: JSON.stringify(\r\n    //                     POSSales\r\n                       \r\n    //                 )\r\n                    \r\n    //             });\r\n    //             console.log('result5>  ' + result5)\r\n                \r\n    //         }\r\n    //         if(this.state.paymentMethod===\"Cash\"){\r\n    //             var CashSales = {\r\n    //                 docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n    //                 date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n    //                 cost:`${this.state.cost}`,\r\n    //                 CashAmount:`${this.state.amountPaid}`,\r\n    //                 POSAmount:0,\r\n    //                 TransferAmount:0,\r\n    //                 CompDebit:0,\r\n    //                 roomDebit:0,\r\n    //                 paymentMethod:`${this.state.paymentMethod}`,\r\n    //                 description: \"PoolBar Sales\",\r\n    //                 department: \"PoolBar Sales\",\r\n    //                 docketDetails: this.state.selected,\r\n    //                 group:`${this.state.group}`,\r\n    //                 user: localStorage.getItem('userInfo'),\r\n    //                 shift:localStorage.getItem('shift')\r\n                   \r\n    //             }\r\n    //             let result4 = await fetch(postRestBill, {\r\n    //                 method: 'post',\r\n    \r\n    //                 headers: {\r\n    //                     'Accept': 'application/json',\r\n    //                     'Content-type': 'application/json',\r\n    //                 },\r\n    \r\n    //                 body: JSON.stringify(\r\n    //                     CashSales\r\n                       \r\n    //                 )\r\n                    \r\n    //             });\r\n    //             console.log('result4>  ' + result4)\r\n                \r\n    //         }\r\n\r\n\r\n    //         if(this.state.paymentMethod===\"Transfer\"){\r\n    //             var transferSales = {\r\n    //                 docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n    //                 date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n    //                 cost:`${this.state.cost}`,\r\n    //                 TransferAmount:`${this.state.amountPaid}`,\r\n    //                 POSAmount:0,\r\n    //                 CashAmount:0,\r\n    //                 CompDebit:0,\r\n    //                 roomDebit:0,\r\n    //                 paymentMethod:`${this.state.paymentMethod}`,\r\n    //                 description: \"PoolBar Sales\",\r\n    //                 department: \"PoolBar Sales\",\r\n    //                 docketDetails: this.state.selected,\r\n    //                 group:`${this.state.group}`,\r\n    //                 user: localStorage.getItem('userInfo'),\r\n    //                 shift:localStorage.getItem('shift')\r\n                   \r\n    //             }\r\n    //             let result3 = await fetch(postRestBill, {\r\n    //                 method: 'post',\r\n    \r\n    //                 headers: {\r\n    //                     'Accept': 'application/json',\r\n    //                     'Content-type': 'application/json',\r\n    //                 },\r\n    \r\n    //                 body: JSON.stringify(\r\n    //                     transferSales\r\n                       \r\n    //                 )\r\n                    \r\n    //             });\r\n    //             console.log('result3>  ' + result3)\r\n                \r\n        \r\n    //         }\r\n\r\n    //         if(this.state.paymentMethod===\"Complimentary\"){\r\n    //             var complimentarySales = {\r\n    //                 docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n    //                 date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n    //                 cost:`${this.state.cost}`,\r\n    //                 amountPaid:`${this.state.amountPaid}`,\r\n    //                 CompDebit:`${this.state.cost}`,\r\n    //                 POSAmount:0,\r\n    //                 CashAmount:0,\r\n    //                 TransferAmount:0,\r\n    //                 roomDebit:0,\r\n    //                 paymentMethod:`${this.state.paymentMethod}`,\r\n    //                 description: \"PoolBar Sales\",\r\n    //                 department: \"PoolBar Sales\",\r\n    //                 docketDetails: this.state.selected,\r\n    //                 group:`${this.state.group}`,\r\n    //                 user: localStorage.getItem('userInfo'),\r\n    //                 shift:localStorage.getItem('shift')\r\n                   \r\n    //             }\r\n\r\n    //             let result2 = await fetch(postRestBill, {\r\n    //                 method: 'post',\r\n    \r\n    //                 headers: {\r\n    //                     'Accept': 'application/json',\r\n    //                     'Content-type': 'application/json',\r\n    //                 },\r\n    \r\n    //                 body: JSON.stringify(\r\n    //                     complimentarySales\r\n                       \r\n    //                 )\r\n                    \r\n    //             });\r\n    //             console.log('result2>  ' + result2)\r\n\r\n                \r\n    //         }\r\n\r\n    //         if(this.state.paymentMethod===\"Credit\"){\r\n    //             var CreditSales = {\r\n    //                 docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n    //                 date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n    //                 cost:`${this.state.cost}`,\r\n    //                 creditAmount:`${this.state.amountPaid}`,\r\n    //                 paymentMethod:`${this.state.paymentMethod}`,\r\n    //                 description: \"PoolBar Credit\",\r\n    //                 department: \"PoolBar Credit\",\r\n    //                 docketDetails: this.state.selected,\r\n    //                 group:`${this.state.group}`,\r\n    //                 user: localStorage.getItem('userInfo'),\r\n    //                 shift:localStorage.getItem('shift'),\r\n    //                 creditPaid:`${this.state.creditPaid}`\r\n                   \r\n    //             }\r\n\r\n    //             let result2 = await fetch(postRestCredit, {\r\n    //                 method: 'post',\r\n    \r\n    //                 headers: {\r\n    //                     'Accept': 'application/json',\r\n    //                     'Content-type': 'application/json',\r\n    //                 },\r\n    \r\n    //                 body: JSON.stringify(\r\n    //                     CreditSales\r\n                       \r\n    //                 )\r\n                    \r\n    //             });\r\n    //             console.log('result2>  ' + result2)\r\n\r\n    //         }\r\n            \r\n    //         let result12 = await fetch(`${postToTable}/${tableID}`, {\r\n    //             method: 'put',\r\n\r\n    //             headers: {\r\n    //                 'Accept': 'application/json',\r\n    //                 'Content-type': 'application/json',\r\n    //             },\r\n\r\n    //             body: JSON.stringify(\r\n    //                 data\r\n                    \r\n    //             )\r\n                \r\n    //         });\r\n    //         console.log('result12>  ' + result12)\r\n\r\n    //         alert(\"Sales Posted\")\r\n    //         this.setState({selected:[]});\r\n    //         this.setState({cost:0})\r\n    //         this.setState({amountPaid:''})\r\n    //         this.setState({displayRoomNums:''})\r\n    //         this.setState({roomNumbers:''})\r\n    //         this.setState({paymentMethod:''})\r\n    //         this.setState({displayPaymentMethods:''})\r\n    //         this.setState({\r\n    //             group:'',\r\n    //             NewtableNum:0,\r\n    //             shift:'',\r\n    //             Newmeal:'',\r\n    //             Newprice:'',\r\n    //             Newqty:0,\r\n    //             Newid:'',\r\n    //             DrinkstoreData:[],\r\n    //             DrinkSalesQtyData:[]\r\n    //         })\r\n    //         sessionStorage.removeItem('stockBal');\r\n    //         localStorage.removeItem('delcntrl');\r\n    //         localStorage.setItem('btnCntrl',true);\r\n    //         sessionStorage.removeItem('tableNumber');\r\n\r\n    //         fetch(`${getStoreData}`, {method:'GET'})\r\n    //         .then((res) => res.json())\r\n    //         .then((data) => {\r\n    //             this.setState({\r\n    //                 DrinkstoreData:data\r\n    //             })\r\n    //         })\r\n\r\n    //         fetch(`${getBarSalesQty}`, {method:'GET'})\r\n    //         .then((res) => res.json())\r\n    //         .then((data) => {\r\n    //             this.setState({\r\n    //                 DrinkSalesQtyData:data\r\n    //             })\r\n    //         })\r\n\r\n    //         fetch(`${getTable}`, {method:'GET'})\r\n    //         .then((res) => res.json())\r\n    //         .then((data) => {\r\n    //             this.setState({tables:data})\r\n    //         })\r\n            \r\n    //         fetch(`${getTable}`, {method:'GET'})\r\n    //         .then((res) => res.json())\r\n    //         .then((data) => {\r\n    //             this.setState({tables:data})\r\n    //         })\r\n           \r\n                   \r\n    //     } catch(e) {\r\n    //         console.log(e)\r\n    //     }\r\n\r\n    // }\r\n\r\n    // async postCredit() {\r\n          \r\n        \r\n    //     try {\r\n            \r\n    //         var CreditSales = {\r\n    //             docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n    //             date:moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n    //             cost:0,\r\n    //             creditAmount:0,\r\n    //             paymentMethod:`${this.state.paymentMethod}`,\r\n    //             description: \"PoolBar Credit\",\r\n    //             department: \"PoolBar Credit\",\r\n    //             docketDetails: this.state.selected,\r\n    //             group:`${this.state.group}`,\r\n    //             user: localStorage.getItem('userInfo'),\r\n    //             shift:localStorage.getItem('shift'),\r\n    //             creditPaid:`${this.state.creditPaid}`\r\n                \r\n    //         }\r\n    //         let creditPay = await fetch(postRestCredit, {\r\n    //             method: 'post',\r\n\r\n    //             headers: {\r\n    //                 'Accept': 'application/json',\r\n    //                 'Content-type': 'application/json',\r\n    //             },\r\n\r\n    //             body: JSON.stringify(\r\n    //                 CreditSales\r\n                    \r\n    //             )\r\n                \r\n    //         });\r\n    //         console.log('creditPay>  ' + creditPay)\r\n\r\n    //         if(this.state.paymentMethod===\"POS\"){\r\n    //             var POSSales = {\r\n    //                 docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n    //                 date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n    //                 cost:`${this.state.cost}`,\r\n    //                 POSAmount:`${this.state.creditPaid}`,\r\n    //                 CashAmount:0,\r\n    //                 TransferAmount:0,\r\n    //                 CompDebit:0,\r\n    //                 roomDebit:0,\r\n    //                 paymentMethod:`${this.state.paymentMethod}`,\r\n    //                 description: \"PoolBar Credit\",\r\n    //                 department: \"PoolBar Sales\",\r\n    //                 docketDetails: this.state.selected,\r\n    //                 group:`${this.state.group}`,\r\n    //                 user: localStorage.getItem('userInfo'),\r\n    //                 shift:localStorage.getItem('shift')\r\n                   \r\n    //             }\r\n    //             let result5 = await fetch(postRestBill, {\r\n    //                 method: 'post',\r\n    \r\n    //                 headers: {\r\n    //                     'Accept': 'application/json',\r\n    //                     'Content-type': 'application/json',\r\n    //                 },\r\n    \r\n    //                 body: JSON.stringify(\r\n    //                     POSSales\r\n                       \r\n    //                 )\r\n                    \r\n    //             });\r\n    //             console.log('result5>  ' + result5)\r\n\r\n    //         }\r\n    //         if(this.state.paymentMethod===\"Cash\"){\r\n    //             var CashSales = {\r\n    //                 docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n    //                 date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n    //                 cost:`${this.state.cost}`,\r\n    //                 CashAmount:`${this.state.creditPaid}`,\r\n    //                 POSAmount:0,\r\n    //                 TransferAmount:0,\r\n    //                 CompDebit:0,\r\n    //                 roomDebit:0,\r\n    //                 paymentMethod:`${this.state.paymentMethod}`,\r\n    //                 description: \"PoolBar Credit\",\r\n    //                 department: \"PoolBar Sales\",\r\n    //                 docketDetails: this.state.selected,\r\n    //                 group:`${this.state.group}`,\r\n    //                 user: localStorage.getItem('userInfo'),\r\n    //                 shift:localStorage.getItem('shift')\r\n                   \r\n    //             }\r\n    //             let result4 = await fetch(postRestBill, {\r\n    //                 method: 'post',\r\n    \r\n    //                 headers: {\r\n    //                     'Accept': 'application/json',\r\n    //                     'Content-type': 'application/json',\r\n    //                 },\r\n    \r\n    //                 body: JSON.stringify(\r\n    //                     CashSales\r\n                       \r\n    //                 )\r\n                    \r\n    //             });\r\n    //             console.log('result4>  ' + result4)\r\n                \r\n    //         }\r\n    //         if(this.state.paymentMethod===\"Transfer\"){\r\n    //             var transferSales = {\r\n    //                 docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n    //                 date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n    //                 cost:`${this.state.cost}`,\r\n    //                 TransferAmount:`${this.state.creditPaid}`,\r\n    //                 POSAmount:0,\r\n    //                 CashAmount:0,\r\n    //                 CompDebit:0,\r\n    //                 roomDebit:0,\r\n    //                 paymentMethod:`${this.state.paymentMethod}`,\r\n    //                 description: \"PoolBar Credit\",\r\n    //                 department: \"PoolBar Sales\",\r\n    //                 docketDetails: this.state.selected,\r\n    //                 group:`${this.state.group}`,\r\n    //                 user: localStorage.getItem('userInfo'),\r\n    //                 shift:localStorage.getItem('shift')\r\n                   \r\n    //             }\r\n    //             let result3 = await fetch(postRestBill, {\r\n    //                 method: 'post',\r\n    \r\n    //                 headers: {\r\n    //                     'Accept': 'application/json',\r\n    //                     'Content-type': 'application/json',\r\n    //                 },\r\n    \r\n    //                 body: JSON.stringify(\r\n    //                     transferSales\r\n                       \r\n    //                 )\r\n                    \r\n    //             });\r\n    //             console.log('result3>  ' + result3)\r\n                \r\n    //         }\r\n\r\n    //         alert(\"Credit Posted\")\r\n    //         this.setState({\r\n    //             creditSales:'',\r\n    //             TotalCredit:0,\r\n    //             creditPaid:0,\r\n    //             TotalCreditPaid:0\r\n    //         })\r\n                               \r\n    //     } catch(e) {\r\n    //         console.log(e)\r\n    //     }\r\n\r\n    // }\r\n\r\n    // async handleRoomSubmit() {\r\n        \r\n    //     try {\r\n    //         var tableID = sessionStorage.getItem('tableNumber3');\r\n\r\n    //         var data = {\r\n    //             selected:[],\r\n    //             billCost:\"\",\r\n    //             tableNum:sessionStorage.getItem('tableNumber3')\r\n    //         }\r\n    //         var restaurantSales = {\r\n    //             _id:Math.floor(Math.random()*10000),\r\n    //             docketNum:'Bar'+Math.floor(Math.random()*10000),\r\n    //             refID:`${this.state.guestInhouseID}`,\r\n    //             date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n    //             cost:`${this.state.cost}`,\r\n    //             amountPaid:`${this.state.amountPaid}`,\r\n    //             roomDebit:`${this.state.cost}`,\r\n    //             POSAmount:0,\r\n    //             CashAmount:0,\r\n    //             TransferAmount:0,\r\n    //             CompDebit:0,\r\n    //             paymentMethod:`${this.state.paymentMethod}`,\r\n    //             roomNumbers:`${this.state.roomNumbers}`,\r\n    //             description:\"PoolBar Docket\",\r\n    //             department: \"PoolBar Sales\",\r\n    //             docketDetails: this.state.selected,\r\n    //             group:`${this.state.group}`,\r\n    //             user: localStorage.getItem('userInfo'),\r\n    //             shift:localStorage.getItem('shift')\r\n               \r\n    //         }\r\n    //         let result = await fetch(postDocketToRoom, {\r\n    //             method: 'post',\r\n\r\n    //             headers: {\r\n    //                 'Accept': 'application/json',\r\n    //                 'Content-type': 'application/json',\r\n    //             },\r\n\r\n    //             body: JSON.stringify(\r\n    //                 restaurantSales\r\n                   \r\n    //             )\r\n                \r\n    //         });\r\n    //         console.log('result>  ' + result)\r\n\r\n    //         let result2 = await fetch(postRestBill, {\r\n    //             method: 'post',\r\n\r\n    //             headers: {\r\n    //                 'Accept': 'application/json',\r\n    //                 'Content-type': 'application/json',\r\n    //             },\r\n\r\n    //             body: JSON.stringify(\r\n    //                 restaurantSales\r\n                   \r\n    //             )\r\n                \r\n    //         });\r\n    //         console.log('result2>  ' + result2)\r\n\r\n    //         let result14 = await fetch(`${postToTable}/${tableID}`, {\r\n    //             method: 'put',\r\n\r\n    //             headers: {\r\n    //                 'Accept': 'application/json',\r\n    //                 'Content-type': 'application/json',\r\n    //             },\r\n\r\n    //             body: JSON.stringify(\r\n    //                 data\r\n                    \r\n    //             )\r\n                \r\n    //         });\r\n    //         console.log('result14>  ' + result14)\r\n    //         alert(\"Docket Posted to Room \" +this.state.roomNumbers)\r\n    //         this.setState({selected:[]});\r\n    //         this.setState({cost:0})\r\n    //         this.setState({amountPaid:''})\r\n    //         this.setState({displayRoomNums:''})\r\n    //         this.setState({roomNumbers:''})\r\n    //         this.setState({paymentMethod:''})\r\n    //         this.setState({displayPaymentMethods:''})\r\n    //         this.setState({group:''})\r\n    //         this.setState({\r\n    //             NewtableNum:0,\r\n    //             shift:'',\r\n    //             Newmeal:'',\r\n    //             Newprice:'',\r\n    //             Newqty:0,\r\n    //             Newid:'',\r\n    //             DrinkstoreData:[],\r\n    //             DrinkSalesQtyData:[]\r\n    //         })\r\n    //         sessionStorage.removeItem('stockBal');\r\n    //         localStorage.removeItem('delcntrl');\r\n    //         localStorage.setItem('btnCntrl',true);\r\n    //         sessionStorage.removeItem('tableNumber');\r\n\r\n    //         fetch(`${getStoreData}`, {method:'GET'})\r\n    //         .then((res) => res.json())\r\n    //         .then((data) => {\r\n    //             this.setState({\r\n    //                 DrinkstoreData:data\r\n    //             })\r\n    //         })\r\n\r\n           \r\n    //         fetch(`${getTable}`, {method:'GET'})\r\n    //         .then((res) => res.json())\r\n    //         .then((data) => {\r\n    //             this.setState({tables:data})\r\n    //         })\r\n                   \r\n    //     } catch(e) {\r\n    //         console.log(e)\r\n    //     }\r\n\r\n    // }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        localStorage.removeItem('shift')\r\n    }\r\n\r\n\r\n    renderTables(data){\r\n        if(data) {\r\n            data.sort((a, b) => a.tableNum - b.tableNum);\r\n           \r\n            return data.map((item) => {\r\n                if(item.billCost===\"\"){\r\n                    return(\r\n                        <div key={item._id}>\r\n                            <button className=\"btn btn-success cartBtn3 alignroomsgreen2\" disabled = {this.state.NewtableNum===1} onClick={() => {sessionStorage.setItem('tableNumber3', item.tableNum);this.handleGetWaitListOpenNew();this.setState({docketFirst:0})}}>\r\n                                <p className=\"texted\">{item.tableNum}</p>\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <div key={item._id}>\r\n                            <button className=\"btn btn-warning cartBtn3 alignroomsgreen2\" onClick={() => {sessionStorage.setItem('tableNumber3', item.tableNum);this.getTableP();this.setState({print:1})}}>\r\n                                <p className=\"texted\">{item.tableNum}</p>\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n               \r\n            })\r\n        }\r\n    }\r\n    \r\n\r\n    renderPayMeth(data){\r\n        if(data) {\r\n            return data.map((item, index) => {\r\n                return(\r\n                    <>\r\n                        <option key={index} value={item.method}>\r\n                            {item.method}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderRooms(data){\r\n        if(data) {\r\n           data.sort((a, b) => a.roomNumbers - b.roomNumbers);\r\n            return data.map((item, index) => {\r\n                return(\r\n                    <>\r\n                        <option key={index} value={item.roomNumbers}>\r\n                            {item.roomNumbers} - {item.fname} {item.lname}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderWaitersList(data){\r\n        if(data) {\r\n        //    data.sort((a, b) => a.waitersFName - b.waitersFName);\r\n            return data.map((item, index) => {\r\n                return(\r\n                    <>\r\n                        <option key={index} value={item.FirstName}>\r\n                            {item.FirstName} {item.LastName}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    addMeal(){\r\n        var menuselect=this.state.menulist;\r\n        menuselect.map((item)=>{\r\n            this.setState({\r\n                Newmeal:item.mealName,\r\n                Newprice:item.mealPrice,\r\n                Newqty:parseInt(item.mealQt),\r\n                Newid:item._id\r\n\r\n            })\r\n            return 'ok'\r\n        })\r\n        \r\n    }\r\n\r\n    RestaurantaddMeal(){\r\n        var restmenuselect=this.state.Restmenulist;\r\n        restmenuselect.map((item)=>{\r\n            this.setState({\r\n                Newmeal:item.mealName,\r\n                Newprice:item.mealPrice,\r\n                Newqty:parseInt(item.mealQt),\r\n                Newid:item._id\r\n\r\n            })\r\n            return 'ok'\r\n        })\r\n        \r\n    }\r\n\r\n    increament(){\r\n        if(this.state.Newqty!==0){\r\n            this.setState({\r\n                Newqty:this.state.Newqty +1\r\n            })\r\n        }\r\n       \r\n    }\r\n\r\n    decreament(){\r\n        if(this.state.Newqty!==0){\r\n            this.setState({\r\n                Newqty:this.state.Newqty -1\r\n            })\r\n        }\r\n    }\r\n\r\n    pushorder(){\r\n        var selected = this.state.selected;\r\n        var selectedMeals = {};\r\n\r\n        if(this.state.selected.length>0){\r\n            this.setState({blockTable:1});\r\n    \r\n            selectedMeals.id=this.state.Newid;\r\n            selectedMeals.meal=this.state.Newmeal;\r\n            selectedMeals.mealPrice=this.state.Newprice;\r\n            selectedMeals.qty=this.state.Newqty;\r\n            selectedMeals.tranID=Math.floor(Math.random()*10000)\r\n            \r\n            selected.push(selectedMeals);\r\n                      \r\n            this.setState({\r\n                selected,\r\n                printStop:0,\r\n                DrinkStore:0,\r\n                DrinkSalesQty:0,\r\n                stockBal:0,\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:''\r\n            })\r\n                \r\n           \r\n        }\r\n        else if(this.state.selected.length===0){\r\n            this.setState({blockTable:0});\r\n\r\n            selectedMeals.id=this.state.Newid;\r\n            selectedMeals.meal=this.state.Newmeal;\r\n            selectedMeals.mealPrice=this.state.Newprice;\r\n            selectedMeals.qty=this.state.Newqty;\r\n            selectedMeals.tranID=Math.floor(Math.random()*10000)\r\n            \r\n            selected.push(selectedMeals);\r\n                      \r\n            this.setState({\r\n                selected,\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:'',\r\n                printStop:0,\r\n                DrinkStore:0,\r\n                DrinkSalesQty:0,\r\n                stockBal:0\r\n            })\r\n        }\r\n\r\n        \r\n\r\n        this.myTimer = setTimeout(() => {\r\n            if(this.state.selected.length>0){\r\n                const totalSale = selected.reduce((total, item) => {\r\n                    return total + item.mealPrice * item.qty\r\n                }, 0);\r\n                this.setState({\r\n                    cost:totalSale,\r\n                    \r\n                })\r\n            }\r\n\r\n            if(this.state.cost!==0){\r\n                fetch(`${getRooms}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        displayRoomNums:data\r\n                    })\r\n                })\r\n                fetch(`${getPaymentMethods}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        displayPaymentMethods:data\r\n                    })\r\n                })\r\n                // localStorage.removeItem('btnCntrl');\r\n                localStorage.removeItem('delcntrl')\r\n            }\r\n            \r\n        },1000);\r\n\r\n \r\n    }\r\n\r\n    pushToPrinter(){\r\n        var printOut = this.state.printSelection;\r\n        var printMeals = {};\r\n\r\n        printMeals.id=this.state.Newid;\r\n        printMeals.meal=this.state.Newmeal;\r\n        printMeals.mealPrice=this.state.Newprice;\r\n        printMeals.qty=this.state.Newqty;\r\n        printMeals.tranID=Math.floor(Math.random()*10000)\r\n        \r\n        printOut.push(printMeals);\r\n                    \r\n    }\r\n\r\n    renderRestaurant(data){\r\n        if (data){\r\n            \r\n            return data.map((item) =>{\r\n                \r\n                return(\r\n                    <>\r\n                        <div>\r\n                            <center>\r\n                                \r\n                                <div className=\"card alignroomsgreen3\"style={{backgroundColor:'orangered'}} key={item.mealTypeID}>\r\n                                    <button className=\"btn btn-orangered buttnheightbtn\" onMouseOver={()=>sessionStorage.setItem('meal',item.mealName)} onClick={ () =>{this.setState({Newmeal:item.mealName,Newprice:item.mealPrice,Newqty:parseInt(item.mealQt),Newid:item._id,tranID2:Math.floor(Math.random()*10000)});this.handleStock()}}>\r\n                                            \r\n                                    <p className=\"card-title formatnew2\">{item.mealName}</p> \r\n                                    </button>\r\n                                </div>\r\n                                \r\n                            </center>\r\n                        </div>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    renderRestaurantPos(food){\r\n        if(food) {\r\n            return food.map((item) =>{\r\n               \r\n                return(\r\n                    <>\r\n                        <div>\r\n                            <center>\r\n                                \r\n                                <div className=\"card alignroomsgreen3\"style={{backgroundColor:'blueviolet'}} key={item.mealTypeID}>\r\n                                    <button className=\"btn btn-blueviolet buttnheightbtn\" onMouseOver={() => this.setState({menuID:item.mealTypeID})} onClick={ () => this.RestbuttonClick () }>\r\n                                        <p className=\"card-title formatnew2\">{item.mealType}</p> \r\n                                    </button>\r\n                                </div>\r\n                                \r\n                            </center>\r\n                        </div>\r\n                        \r\n                    </>\r\n                )\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    renderMenu(data){\r\n        if (data){\r\n            \r\n            return data.map((item) =>{\r\n                \r\n                return(\r\n                    <>\r\n                        <div>\r\n                            <center>\r\n                                \r\n                                <div className=\"card alignroomsgreen3\"style={{backgroundColor:'orangered'}} key={item.mealTypeID}>\r\n                                    <button className=\"btn btn-orangered buttnheightbtn\" onMouseOver={()=>sessionStorage.setItem('meal',item.mealName)} onClick={ () =>{this.setState({Newmeal:item.mealName,Newprice:item.mealPrice,Newqty:parseInt(item.mealQt),Newid:item._id,tranID2:Math.floor(Math.random()*10000)});this.handleStock()}}>\r\n                                            \r\n                                    <p className=\"card-title formatnew2NewDt\">{item.mealName}</p> \r\n                                    </button>\r\n                                </div>\r\n                                \r\n                            </center>\r\n                        </div>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n    \r\n    renderOders(data){\r\n        \r\n        if(data) {\r\n            return data.map((item) =>{\r\n               \r\n                return(\r\n                    <>\r\n                        \r\n                        <tr key= {item.id}>\r\n                            {/* <td className=\"table-light table-striped adjust texted8\">{item.id}</td> */}\r\n                            <td className=\"table-light table-striped adjust texted8\">{item.meal}</td>\r\n                            <td className=\"table-light table-striped adjust texted8\">{item.qty}</td>\r\n                            <td className=\"table-light table-striped adjust texted8\"><NumberFormat value={item.mealPrice} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust texted8\"><NumberFormat value={item.mealPrice*item.qty} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                        </tr>\r\n\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderSalesReport(data){\r\n        \r\n        if(data) {\r\n            return data.map((item) =>{\r\n                \r\n                return(\r\n                    <>\r\n                        \r\n                        <tr key= {item.id}>\r\n                            {/* <td className=\"table-light table-striped adjust texted8\">{item.id}</td> */}\r\n                            <td className=\"table-light table-striped adjust texted8\">{item.productName}</td>\r\n                            <td className=\"table-light table-striped adjust texted8\">{item.Quantity}</td>\r\n                            <td className=\"table-light table-striped adjust texted8\"><NumberFormat value={item.productPrice} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust texted8\"><NumberFormat value={item.productPrice*item.Quantity} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust texted8\"> </td>\r\n                            \r\n                        </tr>\r\n                        \r\n                        \r\n                        \r\n                    </>\r\n                )\r\n                \r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    renderPos(food){\r\n        if(food) {\r\n            return food.map((item) =>{\r\n               \r\n                return(\r\n                    <>\r\n                        <div>\r\n                            <center>\r\n                                \r\n                                <div className=\"card alignroomsgreen3\"style={{backgroundColor:'blueviolet'}} key={item.mealTypeID}>\r\n                                    <button className=\"btn btn-blueviolet buttnheightbtn\" onMouseOver={() => this.setState({menuID:item.mealTypeID})} onClick={ () => this.buttonClick () }>\r\n                                        <p className=\"card-title formatnew2\">{item.mealType}</p> \r\n                                    </button>\r\n                                </div>\r\n                                \r\n                                \r\n                            </center>\r\n                        </div>\r\n                        \r\n                    </>\r\n                )\r\n            })\r\n        }\r\n\r\n    }\r\n    \r\n    render() {\r\n        console.log(\">>> Inside RESrender\", this.state)\r\n        \r\n        var tranDt = moment(`${this.state.transactionDate}`).format('MMM DD YYYY');\r\n        var docketNum ='Bar'+Math.floor(Math.random()*10000);\r\n        var add = this.state.amountPaid;\r\n        if(this.state.amountPaid===''){\r\n            add = 0\r\n        }\r\n\r\n        if(localStorage.getItem('userInfo')==null || this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Poollogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return(\r\n            <div className=\"posterminalNew\">\r\n                  \r\n                <h5 className='texted2New'style={{color:'yellow'}}>Work Date: {tranDt}</h5>\r\n                <button className=\"btn btn-danger textedNew\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>\r\n                               \r\n                <br/>     \r\n                <div className = \"row quantityNewDt\">\r\n                               \r\n                    <center>\r\n                        <h6 style={{color:'white', fontSize:'13px'}}>Add Quantity</h6>\r\n                    </center>\r\n                            \r\n                    <div>\r\n                        <div className=\"row\">\r\n                            <p className=\"pricesNew\">Price: {this.state.Newprice}</p>\r\n                            <p className=\"prices2\">Avail.Stock: {this.state.stockBal}</p>\r\n                            <span className=\"dcrbtn\">\r\n                                <button className=\"form-control mb-3 formsizeX1\" onClick={() =>this.decreament()}><p className=\"sign\">-</p></button>\r\n                            </span>\r\n                            <span className=\"qtybtn\">\r\n                                <input type=\"number\" className=\"form-control2 mb-3 formsizeX\" style={{textAlign:'center',fontStyle:'bold',color:'white',fontSize:'24px'}}name=\"Newqty\" value={this.state.Newqty} onChange={this.handleChange3}/>\r\n                            </span>\r\n                            <span className=\"incbtn\">\r\n                                <button className=\"form-control mb-3 formsizeX1\" onClick={() => this.increament()}><p className=\"sign\">+</p></button>\r\n                            </span>\r\n                            <button className=\"btn btn-warning addbtn\" disabled={this.state.Newqty===0||this.state.stockBal===0} onClick={() =>{this.pushorder();this.setState({docketFirst:1})}}>{this.state.Stockbtn}</button>\r\n                            \r\n                            <div className ={this.state.showPoolPos}>\r\n                                <button className=\"btn btn-warning addbtn \" disabled={this.state.Newqty===0||this.state.stockBal===0} onClick={() =>{this.pushorder();this.setState({docketFirst:1})}}>{this.state.Stockbtn}</button>\r\n                            </div>\r\n                            <div className = {this.state.showRestaurant}>\r\n                                <button className=\"btn btn-warning addbtn\" disabled={this.state.Newqty===0} onClick={() =>{this.pushorder();this.setState({docketFirst:1})}}>Add</button>\r\n                            </div>\r\n                        </div>\r\n                                                \r\n                    </div>\r\n                </div>\r\n\r\n                              \r\n\r\n                <div className=\"salesTableNew displayback\">\r\n                \r\n                    <table className=\"table table-hover\">\r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                {/* <th className=\"adjust2\">ID</th> */}\r\n                                <th className=\"adjust2NewDta\">Menu</th>\r\n                                <th className=\"adjust2NewDta\">Qty</th>\r\n                                <th className=\"adjust2NewDta\">Price(=N)</th>\r\n                                <th className=\"adjust2NewDta\">Amount(=N)</th>\r\n                               \r\n                                \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover\">\r\n                            {this.renderOders(this.state.selected)}\r\n                            \r\n       \r\n                            \r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                </div>\r\n\r\n                \r\n                <div className=\"textAmountNew displayback\">\r\n                    <p className=\"fmtcost2NewDt\" style={{color:'white'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                </div>\r\n                <div className=\"textAmount2New displayback\">\r\n                    <p className=\"fmtcost2NewDt\" style={{color:'white'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                </div>\r\n                \r\n                <div className='operationsNew displayback'>\r\n\r\n                    {/* <div className=\"amountPNew\">\r\n                        <input type=\"text\" className=\"form-control mb-3 formsizeA1 textedMNw\" name=\"amountPaid\" require placeholder= \"Enter Payment\" value={this.state.amountPaid} onChange={this.handleChange}/>\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"methodNew\">\r\n                        <select className=\"form-select formsizeA1 textedMNw\" name=\"paymentMethod\" onChange={this.handleChange}>\r\n                            <option selected value=''>Payment Method</option>\r\n                            {this.renderPayMeth(this.state.displayPaymentMethods)}\r\n                        </select>\r\n                    </div> */}\r\n\r\n                    <h4 className=\"texted4\" style={{color:'white'}}>Operations</h4>\r\n\r\n                    <button disabled={localStorage.getItem('delcntrl')} className=\"btn btn-primary cartBtn2\" onClick={() => {this.removeAll();this.setState({docketFirst:0})}}>\r\n                        <p className=\"texted\">Delete</p>\r\n                    </button>\r\n\r\n                    {/* <button disabled={this.state.cost===0||this.state.amountPaid===''||this.state.amountPaid<this.state.cost||this.state.amountPaid>this.state.cost||this.state.paymentMethod===''||this.state.paymentMethod==='Complimentary'||this.state.docketFirst===1} className=\"btn btn-primary cartBtn2\" onClick={() => {this.onOpenModalreceipt();this.postQty()}}>\r\n                        <p className=\"texted\">Post</p>\r\n                    </button>\r\n                    <select type =\"button\" disabled={this.state.docketFirst===1} className=\"form-select formsizeB mb-2 btn btn-primary texted\" name=\"roomNumbers\" onChange={this.handleChange2}>\r\n                        <option selected value=''>Rooms</option>\r\n                        {this.renderRooms(this.state.displayRoomNums)}\r\n                                                                    \r\n                    </select>\r\n                                            \r\n                    <button disabled={this.state.roomNumbers===''||this.state.amountPaid!=='' ||this.state.docketFirst===1} className=\"btn btn-primary cartBtn4\" onClick={() => {this.onOpenCompModal();this.postQty()}}>\r\n                        <p className=\"texted\">Room Post</p>\r\n                    </button>\r\n                    <button disabled={this.state.paymentMethod!=='Complimentary'||this.state.amountPaid!==''||this.state.docketFirst===1} className=\"btn btn-primary cartBtn2\" onClick={() =>{this.onOpenModalreceipt();this.postQty()}}>\r\n                        <p className=\"texted\">Comp</p>\r\n                    </button>\r\n                    <button disabled={this.state.docketFirst===1} className=\"btn btn-primary cartBtn2\" onClick={ ()=>{this.handleReport()}}>\r\n                        <p className=\"texted\">Reports</p>\r\n                    </button> */}\r\n\r\n                    <button disabled={localStorage.getItem('btnCntrl')} className=\"btn btn-warning cartBtn2\" onClick={() => {this.handleGetWaitListOpen();this.setState({NewtableNum:0})}}>\r\n                        <p className=\"texted\">Add to Table {sessionStorage.getItem('tableNumber3')}</p>\r\n                    </button>\r\n\r\n                    <button disabled = {this.state.docketFirst===1} className=\"btn btn-danger cartBtn2\" onClick={ ()=> {this.props.history.push('/PoolBarPortal')}}>\r\n                        <p className=\"texted\">Close</p>\r\n                    </button>    \r\n\r\n                    <button className=\"btn btn-danger cartBtn20\" onClick={ ()=> this.logout()}>\r\n                        <p className=\"texted\">Log Out {localStorage.getItem('userInfo').split(' ')[0]}</p>\r\n                    </button>\r\n\r\n                    {/* <button disabled={this.state.docketFirst===1} className=\"btn btn-primary cartBtn112\" onClick={ ()=>{this.handleCredit()}}>\r\n                        <p className=\"texted\">Recover Debt</p>\r\n                    </button> */}\r\n\r\n                    {/* <button disabled className={this.state.shiftcolor}>\r\n                        <p className=\"texted\">{localStorage.getItem('shift')}</p>\r\n                    </button> */}\r\n                    <button disabled ={this.state.selected.length===0}className=\"btn btn-warning cartBtn20\" onClick={()=>{this.onOpenModaltoprint2();localStorage.setItem('delcntrl',true)}}>\r\n                        <p className=\"texted\">Prnt Docket</p>\r\n                    </button>\r\n\r\n                </div>\r\n                \r\n                \r\n                \r\n                <div className = 'tablesNew tryDisNew displayback'>\r\n                    <h5 className=\"texted2Dt\" style={{color:'white'}}>Get Table</h5>\r\n                    \r\n                    <div>\r\n                        {this.renderTables(this.state.tables)}\r\n                    \r\n                    </div>\r\n                    \r\n                </div>\r\n               \r\n                \r\n                <div className = {this.state.showPoolPos}>\r\n                    <div className =\"mainmenuNew tryDisNew displayback\">\r\n                        {this.renderPos(this.state.menu)}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className = {this.state.showPoolBar}>\r\n                    <div className =\"menulistItemsNew tryDisNew displayback\">\r\n                        {this.renderMenu(this.state.menulist)}\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className = {this.state.showRestaurantPos}>\r\n                    <div className = \"mainmenuNew tryDisNew displayback\">\r\n                        {this.renderRestaurantPos(this.state.RestMenu)}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className = {this.state.showRestaurant}>\r\n                    <div className = \"menulistItemsNew tryDisNew displayback\">\r\n                        {this.renderRestaurant(this.state.Restmenulist)}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className =\"RestaurantData displayback\">\r\n                    <button className='btn btn-primary' onClick={()=>{this.showRest()}}>Restaurant Menu</button>\r\n                </div>\r\n\r\n                <div className =\"PoolData displayback\">\r\n                    <button className='btn btn-primary' onClick={()=>{this.showPool()}}>Pool Bar Menu</button>\r\n                </div>\r\n\r\n                <Modal open={this.state.edit}>\r\n                    \r\n                    <div className = \"papersizeNew\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSizedNumber\">+234 802 288 8776</p>\r\n                            <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Pool Bar Docket</p>\r\n                            <p className=\"textSized\">Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"tableSettingsNow\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nwrest\">Menu</th>\r\n                                    <th className=\"adjust2Nwrest\">Qty</th>\r\n                                    <th className=\"adjust2Nwrest\">Rate</th>\r\n                                    <th className=\"adjust2Nwrest\">Amt</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tableSettingsNow\">\r\n                                {this.renderOders(this.state.printSelection)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Total:<NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Amount Paid:<NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Waiter: {this.state.findWaiter}</p>\r\n                            <p className=\"textSized\">Supervisor: {localStorage.getItem('userInfo')}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter2()}}>\r\n                                    <p className=\"texted\">{this.state.printBTN}</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                <Modal open={this.state.edit2}>\r\n                    \r\n                    <div className = \"papersizeNew\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSizedNumber\">+234 802 288 8776</p>\r\n                            <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Pool Bar Docket</p>\r\n                            <p className=\"textSized\">Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"tableSettingsNow\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nwrest\">Menu</th>\r\n                                    <th className=\"adjust2Nwrest\">Qty</th>\r\n                                    <th className=\"adjust2Nwrest\">Rate</th>\r\n                                    <th className=\"adjust2Nwrest\">Amt</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tableSettingsNow\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Total:<NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Amount Paid:<NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Waiter: {this.state.findWaiter}</p>\r\n                            <p className=\"textSized\">Supervisor: {localStorage.getItem('userInfo')}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinterNew()}}>\r\n                                    <p className=\"texted\">{this.state.printBTN}</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n\r\n                <Modal open={this.state.pword} onClose={()=>this.onClosePword()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Access Required</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <input type=\"password\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"pass\" require placeholder=\"Enter Access Code\" value={this.state.pass} onChange={this.handleChange}/>\r\n                                    <button disabled = {this.state.pass===''} className=\"btn btn-warning formsize91\" onClick={()=>this.AllowRefund()}>Login</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n                \r\n                <Modal open={this.state.waiters} onClose={()=>this.handleWaitersClose()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Register A Waiter</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <input type=\"text\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"waitersFName\" require placeholder=\"Enter First Name\" value={this.state.waitersFName} onChange={this.handleChange}/>\r\n                                    <input type=\"text\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"waiterLName\" require placeholder=\"Enter Last Name\" value={this.state.waiterLName} onChange={this.handleChange}/>\r\n                                    <button disabled = {this.state.waitersFName && this.state.waiterLName ===''} className=\"btn btn-warning formsize91\" onClick={()=>this.handleWaiters()}>Register</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n                \r\n                <Modal open={this.state.selectWaiter} onClose={()=>this.handleGetWaitListClose()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Select A Waiter</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <select type =\"button\" className=\"form-select mb-2 btn btn-primary\" name=\"findWaiter\" onChange={this.handleChange}>\r\n                                        <option selected value=''>Click to Select</option>\r\n                                        {this.renderWaitersList(this.state.LoadWaiters)}\r\n                                                                                    \r\n                                    </select>\r\n                                    <button disabled = {this.state.LoadWaiters===''} className=\"btn btn-warning formsize91\" onClick={()=>this.addToTable()}>Post</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal open={this.state.selectWaiterNew} onClose={()=>this.handleGetWaitListCloseNew()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Select A Waiter</h6>\r\n                            <div>\r\n                                <center>\r\n                                        \r\n                                    <select type =\"button\" className=\"form-select btn mb-2 btn-primary\" name=\"findWaiter\" onChange={this.handleChange}>\r\n                                        <option selected value=''>Click to Select</option>\r\n                                        {this.renderWaitersList(this.state.LoadWaiters)}\r\n                                                                                    \r\n                                    </select>\r\n                                    <button disabled = {this.state.LoadWaiters===''} className=\"btn btn-warning formsize91\" onClick={()=>this.NewTable()}>Post</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal open={this.state.split} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Split Payment</h6>\r\n                                <div>\r\n                                    <center>\r\n                                        \r\n                                        <div className=\"displayback\">\r\n                                            <p>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                                        </div>\r\n                                        <div className=\"displayback\">\r\n                                            <p>Bal: <NumberFormat value={this.state.cost- this.state.splitBal - parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"displayback\">\r\n                                            <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"amountPaid\" require placeholder= \"Enter Payment\" value={this.state.amountPaid} onChange={this.handleChangeComp}/>\r\n                                        </div>\r\n                                        \r\n                                        <select type =\"button\" className=\"form-select mb-2 btn btn-primary\" name=\"paymentMethod\" onChange={this.handleChange}>\r\n                                            <option selected value=''>Payment Method</option>\r\n                                            {this.renderPayMeth(this.state.displayPaymentMethods)}\r\n                                                                                        \r\n                                        </select>\r\n                                        <button disabled = {this.state.paymentMethod === ''} className=\"btn btn-warning formsize91\" onClick={()=>this.onOpenModalsplitreceipt()}>Post Drinks</button>\r\n                                        <button disabled = {this.state.paymentMethod === ''} className=\"btn btn-warning formsize91\" onClick={()=>this.onOpenRestModalreceipt()}>Post Food</button>\r\n                                        <button disabled = {this.state.cost- this.state.splitBal - parseFloat(add) !== 0}className=\"btn btn-warning formsize91\" onClick={()=>this.onCloseSplit()}>Close</button>\r\n                                        \r\n                                    </center>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal open={this.state.editsplitreceipt} onClose={()=>{this.onCloseModalsplitreceipt();this.handleSplitSubmit()}}>\r\n                    \r\n                    <div className = \"papersizeNew\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSizedNumber\">+234 802 288 8776</p>\r\n                            <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Pool Bar Receipt</p>\r\n                            <p className=\"textSized\">Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"tableSettingsNow\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Rate</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Amt</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tableSettingsNow\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Amount Paid: <NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted\">Print</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseModalsplitreceipt();this.handleSplitSubmit()}}>\r\n                                    <p className=\"texted\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                <Modal open={this.state.Resteditreceipt} onClose={()=>{this.onCloseRestModalreceipt();this.handleRestSubmit()}}>\r\n                    \r\n                    <div className = \"papersizeNew\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSizedNumber\">+234 802 288 8776</p>\r\n                            <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Pool Bar Food Receipt</p>\r\n                            <p className=\"textSized\">Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"tableSettingsNow\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Rate</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Amt</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tableSettingsNow\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Amount Paid: <NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted\">Print</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseRestModalreceipt();this.handleRestSubmit()}}>\r\n                                    <p className=\"texted\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                <Modal open={this.state.Resteditreceipt2} onClose={()=>{this.onCloseRestModalreceipt();this.handleRestSubmit2()}}>\r\n                    \r\n                    <div className = \"papersizeNew\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSizedNumber\">+234 802 288 8776</p>\r\n                            <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Pool Bar Food Receipt</p>\r\n                            <p className=\"textSized\">Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"tableSettingsNow\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Rate</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Amt</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tableSettingsNow\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Amount Paid: <NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted\">Print</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseRestModalreceipt2();this.handleRestSubmit2()}}>\r\n                                    <p className=\"texted\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n\r\n                <Modal open={this.state.editreceipt} onClose={()=>{this.onCloseModalreceipt();this.handleSubmit()}}>\r\n                    \r\n                    <div className = \"papersizeNew\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSizedNumber\">+234 802 288 8776</p>\r\n                            <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Pool Bar Receipt</p>\r\n                            <p className=\"textSized\">Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"tableSettingsNow\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Rate</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Amt</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tableSettingsNow\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Amount Paid: <NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted\">Print</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseModalreceipt();this.handleSubmit()}}>\r\n                                    <p className=\"texted\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                \r\n\r\n                <Modal open={this.state.compModal} onClose={()=>{this.onCloseCompModal();this.handleRoomSubmit()}}>\r\n                    \r\n                    <div className = \"papersizeNew\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSizedNumber\">+234 802 288 8776</p>\r\n                        <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Pool Bar Docket</p>\r\n                            <p className=\"textSized\">Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"tableSettingsNow\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Rate</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Amt</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tableSettingsNow\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Amount Paid: <NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted\">{this.state.printBTN}</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseCompModal();this.handleRoomSubmit()}}>\r\n                                    <p className=\"texted\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                <Modal open={this.state.RestRmcompModal} onClose={()=>{this.onCloseCompRestRoomModal();this.handleRoomSubmit2()}}>\r\n                    \r\n                    <div className = \"papersizeNew\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSizedNumber\">+234 802 288 8776</p>\r\n                        <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Pool Bar Food Docket</p>\r\n                            <p className=\"textSized\">Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"tableSettingsNow\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2Nw\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Rate</th>\r\n                                    <th className=\"adjust2Nwrest\" style={{fontSize:'10px'}}>Amt</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tableSettingsNow\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Amount Paid: <NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'10px', fontFamily: 'Arial, Helvetica, sans-seri'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted\">{this.state.printBTN}</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseCompRestRoomModal();this.handleRoomSubmit2()}}>\r\n                                    <p className=\"texted\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                {/* view daily sales report */}\r\n                <Modal open={this.state.report} onClose={()=>{this.onCloseModalreport()}}>\r\n                    \r\n                    <div className = \"posPrint\">\r\n                        <hr/>\r\n                        <center>\r\n                        <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hotelphone}</p>\r\n                        <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Pool Bar Daily Sales Report</p>\r\n                            <p className=\"textSized\">Report Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Shift: {this.state.useReportShift}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"table-warning\">\r\n                                <tr>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>ID</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Price(=N)</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Amount(=N)</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"table table-hover tableheight\">\r\n                                {this.renderSalesReport(this.state.DrinkSalesQtyReportData)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Total Sales: <NumberFormat value={this.state.totalSales} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        \r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Staff: {this.state.useReportName}</p>\r\n                            <p className=\"textSized\">Shift: {this.state.useReportShift}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted\">{this.state.printBTN}</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseModalreport()}}>\r\n                                    <p className=\"texted\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                <Modal open={this.state.credit} onClose={()=>this.onCloseModalCredit()} style={{color:\"silver\"}}>\r\n                    <div className = \"background591stockin\">\r\n                        <h6 style = {{color:'silver',marginLeft:'50px', marginBottom:'-70px'}}>Recover Credit</h6>\r\n                        <div className=\"formdesign511\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <h6>Summary</h6>\r\n                                    <div className=\"col-3\">\r\n                                        <label>Total Credit</label>\r\n                                        <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\"><NumberFormat value={parseInt(this.state.TotalCredit)} thousandSeparator={true} displayType={\"text\"}/></p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-3\">\r\n                                        <label>Total Recovered</label>\r\n                                        <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\"><NumberFormat value={parseInt(this.state.TotalCreditPaid)} thousandSeparator={true} displayType={\"text\"}/></p>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"col-3\">\r\n                                        <label>Credit Balance</label>\r\n                                        <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\"><NumberFormat value={parseInt(this.state.TotalCredit)-parseInt(this.state.TotalCreditPaid)} thousandSeparator={true} displayType={\"text\"}/></p>\r\n                                    </div>\r\n                                    \r\n                                    \r\n                                </div>\r\n                                <div className='row'>\r\n                                    <div className=\"col-4\">\r\n                                            <input type=\"number\" className=\"form-control mb-3 formsize51 ikem\" name=\"creditPaid\" require placeholder=\"Enter Amount\" value={this.state.creditPaid} onChange={this.handleChange}/>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-4\">\r\n                                        <select className=\"form-select formsize51 ikem\" name=\"paymentMethod\" onChange={this.handleChange}>\r\n                                            <option selected value=''>Payment Method</option>\r\n                                            {this.renderPayMeth(this.state.payNwMeth)}\r\n                                        </select>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                \r\n                                <br/><br/>\r\n                                <center>\r\n                                    <span>\r\n                                        <button disabled ={this.state.creditPaid===''} className=\"btn btn-warning gap\" onClick={()=>this.postCredit()}>Post</button>\r\n                                        <button className=\"btn btn-danger gap\" onClick={ () => this.onCloseModalCredit()}>Close</button>\r\n                                                \r\n                                    </span>\r\n                                            \r\n                                </center>\r\n                                <br/>\r\n                        \r\n                            </div>\r\n                            \r\n                        </div> \r\n                        \r\n                    </div>  \r\n\r\n                </Modal>\r\n                \r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n    async componentDidMount(){\r\n        console.log (\">>> Inside RESdidMount\")\r\n        fetch(`${restMenugrpUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                menu:data\r\n            })\r\n        })\r\n\r\n        fetch(`${RestaurantMenugrpUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                RestMenu:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getStoreData}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                DrinkstoreData:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        await fetch(`${getWorkDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({transactionDate:item.date})\r\n                return 'ok'\r\n            })\r\n            \r\n           \r\n        })\r\n\r\n        this.myTimer = setInterval(() => {\r\n            fetch(`${getWorkDate}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({transactionDate:item.date})\r\n                    return 'ok'\r\n                })\r\n                \r\n            \r\n            })\r\n            \r\n\r\n        },1000)\r\n\r\n        fetch(`${getPaymentMethods}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                payNwMeth:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getBarSalesQty}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                DrinkSalesQtyData:data\r\n            })\r\n        })\r\n\r\n\r\n        fetch(`${getTable}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({tables:data})\r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            });\r\n\r\n            localStorage.setItem('btnCntrl',true)\r\n\r\n\r\n        },2000)\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n        if(localStorage.getItem('shift')==='Morning Shift'){\r\n            this.setState({shiftcolor:\"btn btn-primary cartBtn20\"})\r\n        }\r\n        else if(localStorage.getItem('shift')==='Night Shift'){\r\n            this.setState({shiftcolor:\"btn btn-dark cartBtn20\"})\r\n        }\r\n        else if(localStorage.getItem('shift')==='All Day'){\r\n            this.setState({shiftcolor:\"btn btn-warning cartBtn20\"})\r\n        }\r\n        \r\n    }\r\n}\r\nexport default MobilePoolBar;","import React, { Component } from 'react';\r\nimport 'react-responsive-modal/styles.css';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport './Bar/BarReport.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst userLogin = \"https://zarvichdemo.localto.net/clubUserInfo?clubcode=\";\r\nconst userName = \"https://zarvichdemo.localto.net/clubUserInfo\";\r\n\r\n\r\n\r\nclass ClubLogin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\">>> inside loginConstructor\", props)\r\n       \r\n        this.state = {\r\n            login: false,\r\n            userInfo:'',\r\n            userPassword:'',\r\n            authPassword:'',\r\n            selectUserName:'',\r\n            shift:'',\r\n            \r\n        };\r\n        \r\n    }\r\n\r\n    login(){\r\n        fetch(`${userLogin}${this.state.userPassword}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({userInfo:data})\r\n           \r\n            this.myTimer = setTimeout(() => {\r\n                if(this.state.userInfo.length>0){\r\n                    this.setState({\r\n                        login: false\r\n                        \r\n                    })\r\n                    window.location.reload();\r\n                    data.map((item) =>{\r\n                        localStorage.setItem('userInfo',item.name);\r\n                        localStorage.setItem('shift',this.state.shift);\r\n                        return 'ok'\r\n                    })\r\n                }\r\n            },1000)\r\n           \r\n        })\r\n\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseModallogin(){\r\n        this.setState({\r\n            login: true\r\n        })\r\n        \r\n    }\r\n\r\n    render() {\r\n        console.log (\">>> Inside logindetails\", this.state)\r\n        return (\r\n            <>\r\n                <Modal open={this.state.login} onClose={()=>this.onCloseModallogin()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Login First</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <input type=\"password\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"userPassword\" require placeholder=\"Enter password\" value={this.state.userPassword} onChange={this.handleChange}/>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"shift\" require placeholder=\"Select Shift\" value={this.state.shift} list=\"shift\"  onChange={this.handleChange}/>\r\n                                    <datalist id=\"shift\">\r\n                                        <option value = \"Morning Shift\"></option>\r\n                                        <option value = \"Night Shift\"></option>\r\n                                        <option value = \"All Day\"></option>\r\n                                    </datalist>\r\n                                    <button disabled = {this.state.userPassword===''||this.state.shift===''} className=\"btn btn-warning formsize91\" onClick={()=>this.login()}>Login</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n        \r\n    componentDidMount() {\r\n        console.log(\">>> Inside loginDidMount\", this.state)\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                selectUserName:data,\r\n                login: true\r\n            \r\n            });\r\n            \r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ClubLogin;","import React,{Component} from 'react';\r\nimport './Bar.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment';\r\nimport ClubLogin from '../ClubLogin';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nconst restMenugrpUrl = \"https://zarvichdemo.localto.net/drinkCategories\";\r\nconst menuUrl = \"https://zarvichdemo.localto.net/drinkitems?drinktypes=\";\r\nconst postRestBill = \"https://zarvichdemo.localto.net/club\";\r\nconst getRooms =\"https://zarvichdemo.localto.net/checkin?docket=Yes\";\r\nconst getGuestID = \"https://zarvichdemo.localto.net/checkin?roomNumID=\";\r\nconst postDocketToRoom = \"https://zarvichdemo.localto.net/bill\"\r\nconst getPaymentMethods = \"https://zarvichdemo.localto.net/paymentMethods\"\r\nconst postToTable = \"https://zarvichdemo.localto.net/clubTablePost\";\r\nconst getTable = \"https://zarvichdemo.localto.net/getclubTables\";\r\nconst getTableID = \"https://zarvichdemo.localto.net/getclubTables?tableID=\";\r\nconst getStoreData = \"https://zarvichdemo.localto.net/getClubStore\";\r\nconst postBarSalesQty = \"http://192.168.6.231:3333/postClubSalesQty\";\r\nconst getBarSalesQty = \"https://zarvichdemo.localto.net/getClubSalesQtyNew\";\r\nconst userName = \"https://zarvichdemo.localto.net/clubUserInfo\";\r\n\r\nconst postRestCredit = \"https://zarvichdemo.localto.net/clubCredit\";\r\nconst getRestCredit = \"https://zarvichdemo.localto.net/clubCreditSales?Clstaff=\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\nconst getWorkDate = \"https://zarvichdemo.localto.net/getActive\";\r\n\r\nclass Club extends Component {\r\n\r\n    constructor(props) {\r\n        super (props);\r\n        console.log(\">>>Inside RESConstructor\",props)\r\n\r\n        this.state = {\r\n            Newmeal:'',\r\n            Newprice:'',\r\n            Newqty:0,\r\n            Newid:'',\r\n            edit:false,\r\n            editreceipt:false,\r\n            compModal:false,\r\n            report:false,\r\n            printStop:0,\r\n            docketFirst:0,\r\n            printBTN:'Print',\r\n            print:0,\r\n            blockTable:0,\r\n            IDfound:[],\r\n           \r\n            menu:'',\r\n            meal:'',\r\n            mealPrice:'',\r\n            mealQuantity:'',\r\n            mealId:Math.floor(Math.random()*10000),\r\n            guestInhouseID:'',\r\n            selected:[],\r\n            menuID:'',\r\n            menulist:'',\r\n            cost:0,\r\n            amountPaid:'',\r\n            roomNumbers:'',\r\n            paymentMethod:'',\r\n            displayPaymentMethods:'',\r\n            displayRoomNums:'',\r\n            transactionDate:'',\r\n            tables:'',\r\n            newTable:'',\r\n            NewtableNum:0,\r\n            group:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            Blogin:'',\r\n            login:'',\r\n            shiftcolor:'',\r\n            shift:localStorage.getItem('shift'),\r\n            \r\n\r\n            DrinkstoreData:[],\r\n            DrinkSalesQtyData:[],\r\n            DrinkStore:0,\r\n            DrinkSalesQty:0,\r\n            stockBal:0,\r\n            \r\n            \r\n            DrinkSalesQtyReportData:'',\r\n            useReportName:'',\r\n            useReportShift:'',\r\n            useReportDate:'',\r\n            totalSales:0,\r\n            Stockbtn:'Add',\r\n\r\n            creditSales:'',\r\n            TotalCredit:0,\r\n            creditPaid:0,\r\n            payNwMeth:'',\r\n            TotalCreditPaid:0,\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:'',\r\n\r\n            pass:'',\r\n            pword:false,\r\n            pword2:false\r\n            \r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    onOpenPword(){\r\n        if(this.state.paymentMethod===\"Credit\"){\r\n            this.setState({\r\n                pword: true\r\n            })\r\n            \r\n        }\r\n        else{\r\n            this.setState({\r\n                pword: false\r\n            });\r\n            this.onOpenModalreceipt();\r\n            this.postQty()\r\n        }\r\n\r\n    }\r\n\r\n    onClosePword(){\r\n        this.setState({\r\n            pword: false\r\n        })\r\n        \r\n    }\r\n\r\n    AllowRefund(){\r\n        if(this.state.pass==='6849'){\r\n            this.onOpenModalreceipt();\r\n            this.postQty();\r\n            this.onClosePword()\r\n\r\n        }\r\n        else{\r\n            alert('Access Denied')\r\n        }\r\n    }\r\n\r\n    onOpenModaltoprint(){\r\n        this.setState({\r\n            edit: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onOpenCompModal(){\r\n        this.setState({\r\n            compModal: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseModalCredit(){\r\n        this.setState({\r\n            credit: false,\r\n            creditPaid:0\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseCompModal(){\r\n        this.setState({\r\n            compModal: false\r\n        })\r\n        \r\n    }\r\n\r\n\r\n    onCloseModaltoprint(){\r\n        this.setState({\r\n            edit: false\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenModalreceipt(){\r\n        this.setState({\r\n            editreceipt: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseModalreceipt(){\r\n        this.setState({\r\n            editreceipt: false\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenModalreport(){\r\n        this.setState({\r\n            report: true\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseModalreport(){\r\n        this.setState({\r\n            report: false\r\n        })\r\n        \r\n    }\r\n\r\n    handleReport(){\r\n\r\n        var todayDate = moment(new Date()).format('MMM DD YYYY');\r\n        var username = localStorage.getItem('userInfo');\r\n        var findQty = `${getBarSalesQty}?useDate=${todayDate}&&useshift=${this.state.shift}&&userstaff=${username}`\r\n        \r\n        fetch(`${findQty}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                DrinkSalesQtyReportData:data\r\n            })\r\n            \r\n        })\r\n        this.myTimer = setTimeout(() => {\r\n            if(this.state.DrinkSalesQtyReportData.length>0){\r\n                var useData = this.state.DrinkSalesQtyReportData\r\n                var findUser = useData.find(element=>element.user===username)\r\n                var useDt = [];\r\n                useDt.push(findUser);\r\n                this.setState({useReportName:useDt.map(item=>item.user)})\r\n                this.setState({useReportShift:useDt.map(item=>item.shift)})\r\n                this.setState({useReportDate:useDt.map(item=>item.tranDate)})\r\n                \r\n                var TotSal = useData.reduce((total, item)=>{\r\n                    return total + parseInt (item.productPrice * item.Quantity)\r\n                }, 0);\r\n                this.setState({totalSales:TotSal});\r\n    \r\n                this.onOpenModalreport()\r\n            }\r\n            else{\r\n    \r\n                alert('No Sales was posted by '+username)\r\n    \r\n            }\r\n        },1000)\r\n        \r\n        \r\n    }\r\n\r\n\r\n    handleStock(){\r\n        if(this.state.DrinkstoreData.length>0){\r\n            var stockItem = sessionStorage.getItem('meal');\r\n           \r\n            //check available stock\r\n            const stockData=this.state.DrinkstoreData;\r\n            var totalStock = stockData.filter(stock => stock.productName.includes(stockItem)).reduce((total, item)=>{\r\n                return total + parseInt(item.piecesOut)\r\n            }, 0);\r\n            this.setState({DrinkStore:totalStock})\r\n\r\n            //check quantity sold\r\n            const qtyData=this.state.DrinkSalesQtyData;\r\n            var totalQty = qtyData.filter(qty => qty.productName.includes(stockItem)).reduce((total, item)=>{\r\n                return total + parseInt(item.Quantity)\r\n            }, 0);\r\n            this.setState({DrinkSalesQty:totalQty})\r\n            \r\n            //show stock balance\r\n            this.myTimer = setTimeout(() => {\r\n\r\n                var Total = 0;\r\n                var ST = Total + this.state.DrinkStore-this.state.DrinkSalesQty;\r\n                this.setState({stockBal:ST})\r\n                if(ST<0||ST<-1){\r\n                    this.setState({stockBal:0})\r\n                };\r\n\r\n                if(this.state.stockBal===0){\r\n                    this.setState({Stockbtn:'Finished'})\r\n                }\r\n                else{this.setState({Stockbtn:'Add'})}\r\n\r\n                \r\n            },1000);\r\n                \r\n        }\r\n       \r\n        \r\n        \r\n\r\n    }\r\n\r\n    \r\n    handleCost=(selected)=>{\r\n        if(this.state.selected!==null){\r\n           const totalSale = selected.reduce((total, item) => {\r\n               return total + item.mealPrice * item.qty\r\n           }, 0);\r\n           this.setState({cost:totalSale})\r\n        }\r\n        if(this.state.cost!==null){\r\n            fetch(`${getRooms}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayRoomNums:data\r\n                })\r\n            })\r\n            fetch(`${getPaymentMethods}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayPaymentMethods:data\r\n                })\r\n            })\r\n            localStorage.removeItem('btnCntrl');\r\n            localStorage.removeItem('delcntrl')\r\n        }\r\n        \r\n        \r\n    }  \r\n   \r\n    addqty = () => {\r\n        const del = this.state.selected.map((item) => parseInt(item.qty + 1));\r\n        this.setState({selected:del})\r\n       \r\n    }\r\n        \r\n    removeAll = (id) => {\r\n        const del = this.state.selected.filter(item => item.id === id);\r\n        this.setState({selected:del})\r\n        this.setState({cost:0})\r\n        this.setState({roomNumbers:''})\r\n        this.setState({amountPaid:''})\r\n        this.setState({displayRoomNums:''})\r\n        this.setState({paymentMethod:''})\r\n        this.setState({displayPaymentMethods:''})\r\n        this.setState({\r\n            displayPaymentMethods:'',\r\n            DrinkStore:0,\r\n            DrinkSalesQty:0,\r\n            stockBal:0\r\n        })\r\n        \r\n       \r\n    }\r\n\r\n    async addToTable() {\r\n          \r\n        try {\r\n            var tableID = sessionStorage.getItem('tableNumber3');\r\n\r\n            var orderItems = this.state.selected;\r\n            var data = {\r\n                selected:orderItems.map(item => item),\r\n                billCost:this.state.cost,\r\n                tableNum:sessionStorage.getItem('tableNumber3'),\r\n                user:localStorage.getItem('userInfo')\r\n            }\r\n           \r\n            \r\n            let result = await fetch(`${postToTable}/${tableID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result>  ' + result)\r\n            this.setState({selected:[]})\r\n            localStorage.setItem('btnCntrl',true);\r\n            this.setState({cost:0})\r\n            this.setState({roomNumbers:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            this.setState({paymentMethod:''})\r\n            this.setState({printStop:0})\r\n            localStorage.removeItem('delcntrl');\r\n            sessionStorage.removeItem('tableNumber3')\r\n            \r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            });\r\n\r\n            \r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    handleCredit(){\r\n        var userCredit = localStorage.getItem('userInfo');\r\n        fetch(`${getRestCredit}${userCredit}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                creditSales:data\r\n            })\r\n            data.map((item)=>{\r\n                var allCredit = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.creditAmount)\r\n                }, 0);\r\n\r\n                this.setState({TotalCredit:allCredit,});\r\n                var allCreditPaid = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.creditPaid)\r\n                }, 0);\r\n                this.setState({TotalCreditPaid:allCreditPaid});\r\n                return 'ok'\r\n            })\r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            this.setState({\r\n                credit: true\r\n            })\r\n    \r\n        },1000);\r\n        \r\n        \r\n    }\r\n\r\n    async NewTable() {\r\n          \r\n        try {\r\n            \r\n            var NewtableID = sessionStorage.getItem('tableNumber3');\r\n\r\n            var orderItems = this.state.selected;\r\n            var data = {\r\n                selected:orderItems.map(item => item),\r\n                billCost:this.state.cost,\r\n                tableNum:NewtableID\r\n            }\r\n           \r\n            if(this.state.cost===0){\r\n                alert (\"If you click table Number again without an order, I will slap you!\")\r\n                sessionStorage.removeItem('tableNumber')\r\n            }\r\n            else{\r\n                let result = await fetch(`${postToTable}/${NewtableID}`, {\r\n                    method: 'put',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        data\r\n                        \r\n                    )\r\n                    \r\n                });\r\n                console.log('result>  ' + result)\r\n                this.setState({selected:[]})\r\n                localStorage.setItem('btnCntrl',true);\r\n                this.setState({cost:0})\r\n                this.setState({roomNumbers:''})\r\n                this.setState({displayRoomNums:''})\r\n                this.setState({displayPaymentMethods:''})\r\n                this.setState({paymentMethod:''})\r\n                localStorage.removeItem('delcntrl');\r\n                this.setState({newTable:''})\r\n                \r\n    \r\n                fetch(`${getTable}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({tables:data})\r\n                });\r\n            }\r\n            \r\n\r\n            \r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async getTableP() {\r\n          \r\n        try {\r\n            \r\n            var tableID = sessionStorage.getItem('tableNumber3');\r\n           \r\n            fetch(`${getTableID}${tableID}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n            data.map((item)=>{\r\n            this.setState({\r\n                selected:item.selected,\r\n                cost:item.billCost,\r\n                NewtableNum:1\r\n                        \r\n            })\r\n            return 'ok'\r\n                   \r\n            })\r\n                localStorage.removeItem('btnCntrl')\r\n            })\r\n\r\n            fetch(`${getRooms}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayRoomNums:data\r\n                })\r\n            })\r\n        \r\n            fetch(`${getPaymentMethods}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayPaymentMethods:data\r\n                })\r\n            })\r\n            localStorage.setItem('delcntrl',true)\r\n            this.setState({printStop:1})\r\n           \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    postQty(){\r\n       \r\n        try {\r\n            \r\n            this.state.selected.map((item)=>{\r\n                var prodName = item.meal;\r\n                var prodPrice = item.mealPrice;\r\n                var Qty = item.qty;\r\n                var ID = item.tranID;\r\n                \r\n                var salesQty = {\r\n                    id:ID,\r\n                    productName:prodName,\r\n                    productPrice:prodPrice,\r\n                    Quantity:parseInt(Qty),\r\n                    user: localStorage.getItem('userInfo'),\r\n                    tranDate:moment(new Date()).format('MMM DD YYYY'),\r\n                    shift:localStorage.getItem('shift'),\r\n                                \r\n                }\r\n                let result = fetch(`${postBarSalesQty}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        salesQty\r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                this.setState({\r\n                    Newmeal:'',\r\n                    Newprice:'',\r\n                    Newqty:0,\r\n                    Newid:'',\r\n                    DrinkstoreData:[],\r\n                    DrinkSalesQtyData:[]\r\n                })\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    fetch(`${getStoreData}`, {method:'GET'})\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        this.setState({\r\n                            DrinkstoreData:data\r\n                        })\r\n                    })\r\n\r\n                    fetch(`${getBarSalesQty}`, {method:'GET'})\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        this.setState({\r\n                            DrinkSalesQtyData:data\r\n                        })\r\n                    })\r\n                \r\n                },1000)\r\n                \r\n                return 'ok'\r\n            })    \r\n        \r\n\r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\n    buttonClick (){\r\n        fetch(`${menuUrl}${this.state.menuID}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                menulist:data\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    sendtoprinter(){\r\n        \r\n        window.print();\r\n        \r\n       \r\n    }\r\n\r\n    sendtoprinter2(){\r\n        if(this.state.printBTN==='Print'){\r\n            window.print();\r\n            this.setState({printBTN:'Close'})\r\n        }\r\n        else if(this.state.printBTN==='Close'){\r\n            this.setState({edit: false})      \r\n            this.setState({printBTN:'Print'})\r\n            this.setState({\r\n                print:0,\r\n                printStop:0,\r\n                // DrinkStore:0,\r\n                DrinkSalesQty:0,\r\n                stockBal:0,\r\n                blockTable:0\r\n\r\n            }) \r\n            \r\n            \r\n            \r\n        }\r\n       \r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n    \r\n    }\r\n\r\n    handleChange3 = (event) => {\r\n        if(this.state.Newmeal!==''||this.state.Newprice!==''||this.state.Newid!==''){\r\n            this.setState({\r\n                [event.target.name]:event.target.value\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    handleChange2 = (event) => {\r\n        console.log('inside handle', this.props)\r\n        this.setState({\r\n           [event.target.name]:event.target.value\r\n        })\r\n        fetch(`${getGuestID}${event.target.value}`, {method: 'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item) => {\r\n                this.setState({\r\n                    guestInhouseID:item.refID,\r\n                    group:item.group\r\n                })\r\n                return 'ok'\r\n            })\r\n        })\r\n    \r\n    }\r\n    \r\n\r\n    async handleSubmit() {\r\n          \r\n        \r\n        try {\r\n            var tableID = sessionStorage.getItem('tableNumber3');\r\n\r\n            var data = {\r\n                selected:[],\r\n                billCost:\"\",\r\n                tableNum:sessionStorage.getItem('tableNumber3')\r\n            }\r\n\r\n            if(this.state.paymentMethod===\"POS\"){\r\n                var POSSales = {\r\n                    docketNum:'Club'+Math.floor(Math.random()*10000000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    POSAmount:`${this.state.amountPaid}`,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Club Sales\",\r\n                    department: \"Club Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result5 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        POSSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result5>  ' + result5)\r\n                \r\n            }\r\n            if(this.state.paymentMethod===\"Cash\"){\r\n                var CashSales = {\r\n                    docketNum:'Club'+Math.floor(Math.random()*10000000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    CashAmount:`${this.state.amountPaid}`,\r\n                    POSAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Club Sales\",\r\n                    department: \"Club Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result4 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CashSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result4>  ' + result4)\r\n                \r\n            }\r\n\r\n\r\n            if(this.state.paymentMethod===\"Transfer\"){\r\n                var transferSales = {\r\n                    docketNum:'Club'+Math.floor(Math.random()*10000000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    TransferAmount:`${this.state.amountPaid}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Club Sales\",\r\n                    department: \"Club Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result3 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        transferSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3>  ' + result3)\r\n                \r\n        \r\n            }\r\n\r\n            if(this.state.paymentMethod===\"Complimentary\"){\r\n                var complimentarySales = {\r\n                    docketNum:'Club'+Math.floor(Math.random()*10000000),\r\n                    date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    amountPaid:`${this.state.amountPaid}`,\r\n                    CompDebit:`${this.state.cost}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Club Sales\",\r\n                    department: \"Club Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n\r\n                let result2 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        complimentarySales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2>  ' + result2)\r\n\r\n                \r\n            }\r\n\r\n            if(this.state.paymentMethod===\"Credit\"){\r\n                var CreditSales = {\r\n                    docketNum:'Club'+Math.floor(Math.random()*10000000),\r\n                    date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    creditAmount:`${this.state.amountPaid}`,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Club Credit\",\r\n                    department: \"Club Credit\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift'),\r\n                    creditPaid:`${this.state.creditPaid}`\r\n                   \r\n                }\r\n\r\n                let result2 = await fetch(postRestCredit, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CreditSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2>  ' + result2)\r\n\r\n            }\r\n            \r\n            let result12 = await fetch(`${postToTable}/${tableID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result12>  ' + result12)\r\n\r\n            alert(\"Sales Posted\")\r\n            this.setState({selected:[]});\r\n            this.setState({cost:0})\r\n            this.setState({amountPaid:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({roomNumbers:''})\r\n            this.setState({paymentMethod:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            this.setState({\r\n                group:'',\r\n                NewtableNum:0,\r\n                shift:'',\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:'',\r\n                DrinkstoreData:[],\r\n                DrinkSalesQtyData:[]\r\n            })\r\n            sessionStorage.removeItem('stockBal');\r\n            localStorage.removeItem('delcntrl');\r\n            localStorage.setItem('btnCntrl',true);\r\n            sessionStorage.removeItem('tableNumber');\r\n\r\n            fetch(`${getStoreData}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    DrinkstoreData:data\r\n                })\r\n            })\r\n\r\n            fetch(`${getBarSalesQty}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    DrinkSalesQtyData:data\r\n                })\r\n            })\r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            })\r\n            \r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            })\r\n           \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async postCredit() {\r\n          \r\n        \r\n        try {\r\n            \r\n            var CreditSales = {\r\n                docketNum:'Club'+Math.floor(Math.random()*10000000),\r\n                date:moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                cost:0,\r\n                creditAmount:0,\r\n                paymentMethod:`${this.state.paymentMethod}`,\r\n                description: \"Club Credit\",\r\n                department: \"Club Credit\",\r\n                docketDetails: this.state.selected,\r\n                group:`${this.state.group}`,\r\n                user: localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift'),\r\n                creditPaid:`${this.state.creditPaid}`\r\n                \r\n            }\r\n            let creditPay = await fetch(postRestCredit, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    CreditSales\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('creditPay>  ' + creditPay)\r\n\r\n            if(this.state.paymentMethod===\"POS\"){\r\n                var POSSales = {\r\n                    docketNum:'Club'+Math.floor(Math.random()*100000000),\r\n                    date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    POSAmount:`${this.state.creditPaid}`,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Club Credit\",\r\n                    department: \"Club Sales\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result5 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        POSSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result5>  ' + result5)\r\n\r\n            }\r\n            if(this.state.paymentMethod===\"Cash\"){\r\n                var CashSales = {\r\n                    docketNum:'Club'+Math.floor(Math.random()*10000000),\r\n                    date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    CashAmount:`${this.state.creditPaid}`,\r\n                    POSAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Club Credit\",\r\n                    department: \"Club Credit\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result4 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        CashSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result4>  ' + result4)\r\n                \r\n            }\r\n            if(this.state.paymentMethod===\"Transfer\"){\r\n                var transferSales = {\r\n                    docketNum:'Club'+Math.floor(Math.random()*10000000),\r\n                    date: moment(this.state.transactionDate).format('MMM DD YYYY'),\r\n                    cost:`${this.state.cost}`,\r\n                    TransferAmount:`${this.state.creditPaid}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    description: \"Club Credit\",\r\n                    department: \"Club Credit\",\r\n                    docketDetails: this.state.selected,\r\n                    group:`${this.state.group}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result3 = await fetch(postRestBill, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        transferSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3>  ' + result3)\r\n                \r\n            }\r\n\r\n            alert(\"Credit Posted\")\r\n            this.setState({\r\n                creditSales:'',\r\n                TotalCredit:0,\r\n                creditPaid:0,\r\n                TotalCreditPaid:0\r\n            })\r\n                               \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleRoomSubmit() {\r\n        \r\n        try {\r\n            var tableID = sessionStorage.getItem('tableNumber3');\r\n\r\n            var data = {\r\n                selected:[],\r\n                billCost:\"\",\r\n                tableNum:sessionStorage.getItem('tableNumber3')\r\n            }\r\n            var restaurantSales = {\r\n                _id:Math.floor(Math.random()*100000000),\r\n                docketNum:'Club'+Math.floor(Math.random()*10000000),\r\n                refID:`${this.state.guestInhouseID}`,\r\n                date: moment(`${this.state.transactionDate}`).format('MMM DD YYYY'),\r\n                cost:`${this.state.cost}`,\r\n                amountPaid:`${this.state.amountPaid}`,\r\n                roomDebit:`${this.state.cost}`,\r\n                POSAmount:0,\r\n                CashAmount:0,\r\n                TransferAmount:0,\r\n                CompDebit:0,\r\n                paymentMethod:`${this.state.paymentMethod}`,\r\n                roomNumbers:`${this.state.roomNumbers}`,\r\n                description:\"Club Docket\",\r\n                department: \"Club Sales\",\r\n                docketDetails: this.state.selected,\r\n                group:`${this.state.group}`,\r\n                user: localStorage.getItem('userInfo'),\r\n                shift:localStorage.getItem('shift')\r\n               \r\n            }\r\n            let result = await fetch(postDocketToRoom, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    restaurantSales\r\n                   \r\n                )\r\n                \r\n            });\r\n            console.log('result>  ' + result)\r\n\r\n            let result2 = await fetch(postRestBill, {\r\n                method: 'post',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    restaurantSales\r\n                   \r\n                )\r\n                \r\n            });\r\n            console.log('result2>  ' + result2)\r\n\r\n            let result14 = await fetch(`${postToTable}/${tableID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result14>  ' + result14)\r\n            alert(\"Docket Posted to Room \" +this.state.roomNumbers)\r\n            this.setState({selected:[]});\r\n            this.setState({cost:0})\r\n            this.setState({amountPaid:''})\r\n            this.setState({displayRoomNums:''})\r\n            this.setState({roomNumbers:''})\r\n            this.setState({paymentMethod:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            this.setState({group:''})\r\n            this.setState({\r\n                NewtableNum:0,\r\n                shift:'',\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:'',\r\n                DrinkstoreData:[],\r\n                DrinkSalesQtyData:[]\r\n            })\r\n            sessionStorage.removeItem('stockBal');\r\n            localStorage.removeItem('delcntrl');\r\n            localStorage.setItem('btnCntrl',true);\r\n            sessionStorage.removeItem('tableNumber');\r\n\r\n            fetch(`${getStoreData}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    DrinkstoreData:data\r\n                })\r\n            })\r\n\r\n           \r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            })\r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        localStorage.removeItem('shift')\r\n    }\r\n\r\n\r\n    renderTables(data){\r\n        if(data) {\r\n            data.sort((a, b) => a.tableNum - b.tableNum);\r\n           \r\n            return data.map((item) => {\r\n                if(item.billCost===\"\"){\r\n                    return(\r\n                        <div key={item._id}>\r\n                            <button className=\"btn btn-success cartBtn3 alignroomsgreen2\" disabled = {this.state.NewtableNum===1} onClick={() => {sessionStorage.setItem('tableNumber3', item.tableNum);this.NewTable();;this.setState({docketFirst:0})}}>\r\n                                <p className=\"texted\">{item.tableNum}</p>\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <div key={item._id}>\r\n                            <button className=\"btn btn-warning cartBtn3 alignroomsgreen2\" onClick={() => {sessionStorage.setItem('tableNumber3', item.tableNum);this.getTableP();;this.setState({print:1})}}>\r\n                                <p className=\"texted\">{item.tableNum}</p>\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n               \r\n            })\r\n        }\r\n    }\r\n    \r\n\r\n    renderPayMeth(data){\r\n        if(data) {\r\n            return data.map((item, index) => {\r\n                return(\r\n                    <>\r\n                        <option key={index} value={item.method}>\r\n                            {item.method}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderRooms(data){\r\n        if(data) {\r\n           data.sort((a, b) => a.roomNumbers - b.roomNumbers);\r\n            return data.map((item, index) => {\r\n                return(\r\n                    <>\r\n                        <option key={index} value={item.roomNumbers}>\r\n                            {item.roomNumbers} - {item.fname} {item.lname}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    addMeal(){\r\n        var menuselect=this.state.menulist;\r\n        menuselect.map((item)=>{\r\n            this.setState({\r\n                Newmeal:item.mealName,\r\n                Newprice:item.mealPrice,\r\n                Newqty:parseInt(item.mealQt),\r\n                Newid:item._id\r\n\r\n            })\r\n            return 'ok'\r\n        })\r\n        \r\n    }\r\n    increament(){\r\n        if(this.state.Newqty!==0){\r\n            this.setState({\r\n                Newqty:this.state.Newqty +1\r\n            })\r\n        }\r\n       \r\n    }\r\n\r\n    decreament(){\r\n        if(this.state.Newqty!==0){\r\n            this.setState({\r\n                Newqty:this.state.Newqty -1\r\n            })\r\n        }\r\n    }\r\n\r\n    pushorder(){\r\n        var selected = this.state.selected;\r\n        var selectedMeals = {};\r\n\r\n        if(this.state.selected.length>0){\r\n            this.setState({blockTable:1});\r\n    \r\n            selectedMeals.id=this.state.Newid;\r\n            selectedMeals.meal=this.state.Newmeal;\r\n            selectedMeals.mealPrice=this.state.Newprice;\r\n            selectedMeals.qty=this.state.Newqty;\r\n            selectedMeals.tranID=Math.floor(Math.random()*10000)\r\n            \r\n            selected.push(selectedMeals);\r\n                      \r\n            this.setState({\r\n                selected,\r\n                printStop:0,\r\n                DrinkStore:0,\r\n                DrinkSalesQty:0,\r\n                stockBal:0,\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:''\r\n            })\r\n                \r\n           \r\n        }\r\n        else if(this.state.selected.length===0){\r\n            this.setState({blockTable:0});\r\n\r\n            selectedMeals.id=this.state.Newid;\r\n            selectedMeals.meal=this.state.Newmeal;\r\n            selectedMeals.mealPrice=this.state.Newprice;\r\n            selectedMeals.qty=this.state.Newqty;\r\n            selectedMeals.tranID=Math.floor(Math.random()*10000)\r\n            \r\n            selected.push(selectedMeals);\r\n                      \r\n            this.setState({\r\n                selected,\r\n                Newmeal:'',\r\n                Newprice:'',\r\n                Newqty:0,\r\n                Newid:'',\r\n                printStop:0,\r\n                DrinkStore:0,\r\n                DrinkSalesQty:0,\r\n                stockBal:0\r\n            })\r\n        }\r\n\r\n        \r\n\r\n        this.myTimer = setTimeout(() => {\r\n            if(this.state.selected.length>0){\r\n                const totalSale = selected.reduce((total, item) => {\r\n                    return total + item.mealPrice * item.qty\r\n                }, 0);\r\n                this.setState({\r\n                    cost:totalSale,\r\n                    \r\n                })\r\n            }\r\n\r\n            if(this.state.cost!==0){\r\n                fetch(`${getRooms}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        displayRoomNums:data\r\n                    })\r\n                })\r\n                fetch(`${getPaymentMethods}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        displayPaymentMethods:data\r\n                    })\r\n                })\r\n                // localStorage.removeItem('btnCntrl');\r\n                localStorage.removeItem('delcntrl')\r\n            }\r\n            \r\n        },1000);\r\n\r\n \r\n    }\r\n    \r\n\r\n     \r\n    renderMenu(data){\r\n        if (data){\r\n            \r\n            return data.map((item) =>{\r\n                \r\n                return(\r\n                    <>\r\n                        <div>\r\n                            <center>\r\n                                \r\n                                <div className=\"card alignroomsgreen3\"style={{backgroundColor:'orangered'}} key={item.mealTypeID}>\r\n                                    <button className=\"btn btn-orangered buttnheightbtn\" onMouseOver={()=>sessionStorage.setItem('meal',item.mealName)} onClick={ () =>{this.setState({Newmeal:item.mealName,Newprice:item.mealPrice,Newqty:parseInt(item.mealQt),Newid:item._id,tranID2:Math.floor(Math.random()*10000)});this.handleStock()}}>\r\n                                            \r\n                                    <p className=\"card-title formatnew2\">{item.mealName}</p> \r\n                                    </button>\r\n                                </div>\r\n                                \r\n                            </center>\r\n                        </div>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n    \r\n    renderOders(data){\r\n        \r\n        if(data) {\r\n            return data.map((item) =>{\r\n               \r\n                return(\r\n                    <>\r\n                        \r\n                        <tr key= {item.id}>\r\n                            {/* <td className=\"table-light table-striped adjust texted8\">{item.id}</td> */}\r\n                            <td className=\"table-light table-striped adjust texted8\">{item.meal}</td>\r\n                            <td className=\"table-light table-striped adjust texted8\">{item.qty}</td>\r\n                            <td className=\"table-light table-striped adjust texted8\"><NumberFormat value={item.mealPrice} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust texted8\"><NumberFormat value={item.mealPrice*item.qty} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderSalesReport(data){\r\n        \r\n        if(data) {\r\n            return data.map((item) =>{\r\n                \r\n                return(\r\n                    <>\r\n                        \r\n                        <tr key= {item.id}>\r\n                            {/* <td className=\"table-light table-striped adjust texted8\">{item.id}</td> */}\r\n                            <td className=\"table-light table-striped adjust texted8\">{item.productName}</td>\r\n                            <td className=\"table-light table-striped adjust texted8\">{item.Quantity}</td>\r\n                            <td className=\"table-light table-striped adjust texted8\"><NumberFormat value={item.productPrice} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust texted8\"><NumberFormat value={item.productPrice*item.Quantity} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust texted8\"> </td>\r\n                            \r\n                        </tr>\r\n                        \r\n                        \r\n                        \r\n                    </>\r\n                )\r\n                \r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    renderPos(food){\r\n        if(food) {\r\n            return food.map((item) =>{\r\n               \r\n                return(\r\n                    <>\r\n                        <div>\r\n                            <center>\r\n                                \r\n                                <div className=\"card alignroomsgreen3\"style={{backgroundColor:'blueviolet'}} key={item.mealTypeID}>\r\n                                    <button className=\"btn btn-blueviolet buttnheightbtn\" onMouseOver={() => this.setState({menuID:item.mealTypeID})} onClick={ () => this.buttonClick () }>\r\n                                        <p className=\"card-title formatnew2\">{item.mealType}</p> \r\n                                    </button>\r\n                                </div>\r\n                                \r\n                                \r\n                            </center>\r\n                        </div>\r\n                        \r\n                    </>\r\n                )\r\n            })\r\n        }\r\n\r\n    }\r\n    \r\n    render() {\r\n        console.log(\">>> Inside RESrender\", this.state)\r\n        \r\n        var tranDt = moment(`${this.state.transactionDate}`).format('MMM DD YYYY');\r\n        var docketNum ='Club'+Math.floor(Math.random()*10000000);\r\n        var add = this.state.amountPaid;\r\n        if(this.state.amountPaid===''){\r\n            add = 0\r\n        }\r\n\r\n        if(localStorage.getItem('userInfo')==null || this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <ClubLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return(\r\n            <div className=\"posterminal\">  \r\n                               \r\n                <br/>     \r\n                <div className =\"row quantity\" >\r\n                               \r\n                    <center>\r\n                        <h6 style={{color:'white'}}>Add Quantity</h6>\r\n                    </center>\r\n                            \r\n                    <div>\r\n                        <div className=\"row\">\r\n                            <p className=\"prices\">Price: {this.state.Newprice}</p>\r\n                            <p className=\"prices2\">Avail.Stock: {this.state.stockBal}</p>\r\n                            <span className=\"dcrbtn\">\r\n                                <button className=\"form-control mb-3 formsizeX1\" onClick={() =>this.decreament()}><p className=\"sign\">-</p></button>\r\n                            </span>\r\n                            <span className=\"qtybtn\">\r\n                                <input type=\"number\" className=\"form-control2 mb-3 formsizeX\" style={{textAlign:'center',fontStyle:'bold',color:'white',fontSize:'24px'}}name=\"Newqty\" value={this.state.Newqty} onChange={this.handleChange3}/>\r\n                            </span>\r\n                            <span className=\"incbtn\">\r\n                                <button className=\"form-control mb-3 formsizeX1\" onClick={() => this.increament()}><p className=\"sign\">+</p></button>\r\n                            </span>\r\n                            <button className=\"btn btn-warning addbtn\" disabled={this.state.Newqty===0||this.state.stockBal===0} onClick={() =>{this.pushorder();this.setState({docketFirst:1})}}>{this.state.Stockbtn}</button>\r\n                            \r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n                \r\n\r\n                <div className=\"salesTable\">\r\n                \r\n                    <table className=\"table table-hover\">\r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                {/* <th className=\"adjust2\">ID</th> */}\r\n                                <th className=\"adjust2\">Menu</th>\r\n                                <th className=\"adjust2\">Qty</th>\r\n                                <th className=\"adjust2\">Price(=N)</th>\r\n                                <th className=\"adjust2\">Amount(=N)</th>\r\n                               \r\n                                \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover tableheight\">\r\n                            {this.renderOders(this.state.selected)}\r\n                            \r\n       \r\n                            \r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                </div>\r\n\r\n                \r\n                    \r\n                <div className=\"amountP\">\r\n                    <input type=\"text\" className=\"form-control mb-3 formsizeA1 textedM\" name=\"amountPaid\" require placeholder= \"Enter Payment\" value={this.state.amountPaid} onChange={this.handleChange}/>\r\n                </div>\r\n\r\n                <div className=\"method\">\r\n                    <select className=\"form-select formsizeA1 textedM\" name=\"paymentMethod\" onChange={this.handleChange}>\r\n                        <option selected value=''>Payment Method</option>\r\n                        {this.renderPayMeth(this.state.displayPaymentMethods)}\r\n                    </select>\r\n                </div>\r\n                \r\n                \r\n                <div className=\"textAmount\">\r\n                    <p className=\"fmtcost2\" style={{color:'white'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                </div>\r\n                <div className=\"textAmount2\">\r\n                    <p className=\"fmtcost2\" style={{color:'white'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                </div>\r\n\r\n                <div className=\"operations\">\r\n                    \r\n                    <h4 className=\"texted4\" style={{color:'white'}}>Operations</h4>\r\n                    \r\n                    <button disabled={localStorage.getItem('delcntrl')} className=\"btn btn-primary cartBtn2\" onClick={() => {this.removeAll();this.setState({docketFirst:0})}}>\r\n                        <p className=\"texted\">Delete</p>\r\n                    </button>\r\n                    \r\n                    <button disabled={this.state.cost===0||this.state.amountPaid===''||this.state.amountPaid<this.state.cost||this.state.amountPaid>this.state.cost||this.state.paymentMethod===''||this.state.paymentMethod==='Complimentary'||this.state.docketFirst===1} className=\"btn btn-primary cartBtn2\" onClick={() => {this.onOpenModalreceipt();this.postQty()}}>\r\n                        <p className=\"texted\">Post</p>\r\n                    </button>\r\n                    <select type =\"button\" disabled={this.state.docketFirst===1} className=\"form-select formsizeB mb-2 btn btn-primary texted\" name=\"roomNumbers\" onChange={this.handleChange2}>\r\n                        <option selected value=''>Rooms</option>\r\n                        {this.renderRooms(this.state.displayRoomNums)}\r\n                                                                    \r\n                    </select>\r\n                                            \r\n                    <button disabled={this.state.roomNumbers===''||this.state.amountPaid!=='' ||this.state.docketFirst===1} className=\"btn btn-primary cartBtn4\" onClick={() => {this.onOpenCompModal();this.postQty()}}>\r\n                        <p className=\"texted\">Room Post</p>\r\n                    </button>\r\n                    <button disabled={this.state.paymentMethod!=='Complimentary'||this.state.amountPaid!==''||this.state.docketFirst===1} className=\"btn btn-primary cartBtn2\" onClick={() =>{this.onOpenModalreceipt();this.postQty()}}>\r\n                        <p className=\"texted\">Comp</p>\r\n                    </button>\r\n                    <button disabled={this.state.docketFirst===1} className=\"btn btn-primary cartBtn2\" onClick={ ()=>{this.handleReport()}}>\r\n                        <p className=\"texted\">Reports</p>\r\n                    </button>\r\n                    \r\n                    <button disabled={localStorage.getItem('btnCntrl')} className=\"btn btn-warning cartBtn12\" onClick={() => {this.addToTable();this.setState({NewtableNum:0})}}>\r\n                        <p className=\"texted\">Add to Table {sessionStorage.getItem('tableNumber3')}</p>\r\n                    </button>\r\n                    \r\n                    <button disabled = {this.state.docketFirst===1} className=\"btn btn-danger cartBtn2\" onClick={ ()=> {this.props.history.push('/PoolBarPortal')}}>\r\n                        <p className=\"texted\">Close</p>\r\n                    </button>    \r\n\r\n                    <button className=\"btn btn-danger cartBtn20\" onClick={ ()=> this.logout()}>\r\n                        <p className=\"texted\">Log Out {localStorage.getItem('userInfo').split(' ')[0]}</p>\r\n                    </button>\r\n\r\n                    <button disabled={this.state.docketFirst===1} className=\"btn btn-primary cartBtn112\" onClick={ ()=>{this.handleCredit()}}>\r\n                        <p className=\"texted\">Recover Debt</p>\r\n                    </button>\r\n                    \r\n                    <button disabled className={this.state.shiftcolor}>\r\n                        <p className=\"texted\">{localStorage.getItem('shift')}</p>\r\n                    </button>\r\n                    <button disabled ={this.state.selected.length===0 || this.state.printStop===0||this.state.print===0}className={this.state.shiftcolor} onClick={()=>{this.onOpenModaltoprint();localStorage.setItem('delcntrl',true)}}>\r\n                        <p className=\"texted\">Print Docket</p>\r\n                    </button>\r\n                    \r\n                </div>\r\n\r\n                <div className=\"tables\">\r\n                    <h5 className=\"texted2\" style={{color:'white'}}>Get Table</h5>\r\n                    <h5 className='texted2'style={{color:'yellow'}}>Work Date: {tranDt}</h5>\r\n                    <div>\r\n                        {this.renderTables(this.state.tables)}\r\n                    \r\n                    </div>\r\n                    <h6 style={{color:'silver', textAlign:'right'}}>Club App</h6>\r\n                    <button className=\"btn btn-danger texted\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>\r\n                </div>\r\n\r\n                <div className =\"mainmenu\">\r\n                    {this.renderPos(this.state.menu)}\r\n                </div>\r\n\r\n                <div className =\"menulistItems\">\r\n                    {this.renderMenu(this.state.menulist)}\r\n                </div>\r\n\r\n                <Modal open={this.state.edit}>\r\n                    \r\n                    <div className = \"posPrint\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hotelphone}</p>\r\n                            <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Club Docket</p>\r\n                            <p className=\"textSized\">Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"table-warning\">\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Price(=N)</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Amount(=N)</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"table table-hover tableheight\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Total:<NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Amount Paid:<NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter2()}}>\r\n                                    <p className=\"texted\">{this.state.printBTN}</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n                <Modal open={this.state.pword} onClose={()=>this.onClosePword()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Access Required</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <input type=\"password\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"pass\" require placeholder=\"Enter Access Code\" value={this.state.pass} onChange={this.handleChange}/>\r\n                                    <button disabled = {this.state.pass===''} className=\"btn btn-warning formsize91\" onClick={()=>this.AllowRefund()}>Login</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n\r\n                <Modal open={this.state.editreceipt} onClose={()=>{this.onCloseModalreceipt();this.handleSubmit()}}>\r\n                    \r\n                    <div className = \"posPrint\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hotelphone}</p>\r\n                            <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Club Receipt</p>\r\n                            <p className=\"textSized\">Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"table-warning\">\r\n                                <tr>\r\n                                    {/* <th className=\"adjust2\" style={{fontSize:'10px'}}>ID</th> */}\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Price(=N)</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Amount(=N)</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"table table-hover tableheight\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Amount Paid: <NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted\">Print</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseModalreceipt();this.handleSubmit()}}>\r\n                                    <p className=\"texted\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                <Modal open={this.state.compModal} onClose={()=>{this.onCloseCompModal();this.handleRoomSubmit()}}>\r\n                    \r\n                    <div className = \"posPrint\">\r\n                        <hr/>\r\n                        <center>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hotelphone}</p>\r\n                        <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Club Docket</p>\r\n                            <p className=\"textSized\">Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Docket Num: {docketNum}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"table-warning\">\r\n                                <tr>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>ID</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Price(=N)</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Amount(=N)</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"table table-hover tableheight\">\r\n                                {this.renderOders(this.state.selected)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Total: <NumberFormat value={this.state.cost} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Amount Paid: <NumberFormat value={add} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Bal: <NumberFormat value={this.state.cost-parseFloat(add)} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Payment Method: {this.state.paymentMethod}</p>\r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Prepared By: {localStorage.getItem('userInfo')}</p>\r\n                            <p className=\"textSized\">Shift: {localStorage.getItem('shift')}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted\">{this.state.printBTN}</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseCompModal();this.handleRoomSubmit()}}>\r\n                                    <p className=\"texted\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                {/* view daily sales report */}\r\n                <Modal open={this.state.report} onClose={()=>{this.onCloseModalreport()}}>\r\n                    \r\n                    <div className = \"posPrint\">\r\n                        <hr/>\r\n                        <center>\r\n                        <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>{this.state.Hotelname}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hoteladdress}</p>\r\n                            <p className=\"textSized mb-3\">{this.state.Hotelphone}</p>\r\n                        <hr/>\r\n                            <p className=\"textSized\" style={{fontWeight:'bold',fontSize:'14px'}}>Club Daily Sales Report</p>\r\n                            <p className=\"textSized\">Report Date: {tranDt}</p>\r\n                            <p className=\"textSized mb-3\">Shift: {this.state.useReportShift}</p>\r\n                            \r\n                        </center>\r\n                        <hr/>\r\n                        \r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"table-warning\">\r\n                                <tr>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>ID</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Menu</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Qty</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Price(=N)</th>\r\n                                    <th className=\"adjust2\" style={{fontSize:'10px'}}>Amount(=N)</th>\r\n                                    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"table table-hover tableheight\">\r\n                                {this.renderSalesReport(this.state.DrinkSalesQtyReportData)}\r\n                                \r\n                            </tbody>\r\n                            \r\n                            \r\n                        </table>\r\n                        <hr/>\r\n                        <p style={{fontSize:'14px', fontWeight:'bold'}}>Total Sales: <NumberFormat value={this.state.totalSales} thousandSeparator={true} displayType={\"text\"}/>.00</p>\r\n                        \r\n                        <hr/>\r\n                        \r\n                        <center>\r\n                            <p className=\"textSized\">Staff: {this.state.useReportName}</p>\r\n                            <p className=\"textSized\">Shift: {this.state.useReportShift}</p>\r\n                            <p style={{fontSize:'13px', fontWeight:'bold'}}>THANK YOU</p>\r\n\r\n                            <div className=\"printing\">\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.sendtoprinter()}}>\r\n                                    <p className=\"texted\">{this.state.printBTN}</p>\r\n                                </button>\r\n                                <button className={this.state.shiftcolor} onClick={()=>{this.onCloseModalreport()}}>\r\n                                    <p className=\"texted\">Close</p>\r\n                                </button>\r\n                               \r\n                            </div>\r\n                           \r\n\r\n                        </center>\r\n                        \r\n\r\n                    </div>\r\n        \r\n                </Modal>\r\n\r\n                <Modal open={this.state.credit} onClose={()=>this.onCloseModalCredit()} style={{color:\"silver\"}}>\r\n                    <div className = \"background591stockin\">\r\n                        <h6 style = {{color:'silver',marginLeft:'50px', marginBottom:'-70px'}}>Recover Credit</h6>\r\n                        <div className=\"formdesign511\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <h6>Summary</h6>\r\n                                    <div className=\"col-3\">\r\n                                        <label>Total Credit</label>\r\n                                        <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\"><NumberFormat value={parseInt(this.state.TotalCredit)} thousandSeparator={true} displayType={\"text\"}/></p>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-3\">\r\n                                        <label>Total Recovered</label>\r\n                                        <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\"><NumberFormat value={parseInt(this.state.TotalCreditPaid)} thousandSeparator={true} displayType={\"text\"}/></p>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"col-3\">\r\n                                        <label>Credit Balance</label>\r\n                                        <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\"><NumberFormat value={parseInt(this.state.TotalCredit)-parseInt(this.state.TotalCreditPaid)} thousandSeparator={true} displayType={\"text\"}/></p>\r\n                                    </div>\r\n                                    \r\n                                    \r\n                                </div>\r\n                                <div className='row'>\r\n                                    <div className=\"col-4\">\r\n                                            <input type=\"number\" className=\"form-control mb-3 formsize51 ikem\" name=\"creditPaid\" require placeholder=\"Enter Amount\" value={this.state.creditPaid} onChange={this.handleChange}/>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-4\">\r\n                                        <select className=\"form-select formsize51 ikem\" name=\"paymentMethod\" onChange={this.handleChange}>\r\n                                            <option selected value=''>Payment Method</option>\r\n                                            {this.renderPayMeth(this.state.payNwMeth)}\r\n                                        </select>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                \r\n                                <br/><br/>\r\n                                <center>\r\n                                    <span>\r\n                                        <button disabled ={this.state.creditPaid===''} className=\"btn btn-warning gap\" onClick={()=>this.postCredit()}>Post</button>\r\n                                        <button className=\"btn btn-danger gap\" onClick={ () => this.onCloseModalCredit()}>Close</button>\r\n                                                \r\n                                    </span>\r\n                                            \r\n                                </center>\r\n                                <br/>\r\n                        \r\n                            </div>\r\n                            \r\n                        </div> \r\n                        \r\n                    </div>  \r\n\r\n                </Modal>\r\n                \r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n    async componentDidMount(){\r\n        console.log (\">>> Inside RESdidMount\")\r\n        fetch(`${restMenugrpUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                menu:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getStoreData}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                DrinkstoreData:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        await fetch(`${getWorkDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({transactionDate:item.date})\r\n                return 'ok'\r\n            })\r\n            \r\n           \r\n        })\r\n\r\n        this.myTimer = setInterval(() => {\r\n            fetch(`${getWorkDate}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({transactionDate:item.date})\r\n                    return 'ok'\r\n                })\r\n                \r\n            \r\n            })\r\n            \r\n\r\n        },1000)\r\n\r\n        fetch(`${getPaymentMethods}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                payNwMeth:data\r\n            })\r\n        })\r\n\r\n        fetch(`${getBarSalesQty}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                DrinkSalesQtyData:data\r\n            })\r\n        })\r\n\r\n\r\n        fetch(`${getTable}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({tables:data})\r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({tables:data})\r\n            });\r\n\r\n            localStorage.setItem('btnCntrl',true)\r\n\r\n\r\n        },2000)\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n        if(localStorage.getItem('shift')==='Morning Shift'){\r\n            this.setState({shiftcolor:\"btn btn-primary cartBtn20\"})\r\n        }\r\n        else if(localStorage.getItem('shift')==='Night Shift'){\r\n            this.setState({shiftcolor:\"btn btn-dark cartBtn20\"})\r\n        }\r\n        else if(localStorage.getItem('shift')==='All Day'){\r\n            this.setState({shiftcolor:\"btn btn-warning cartBtn20\"})\r\n        }\r\n        \r\n    }\r\n}\r\nexport default Club;","import React, { Component } from 'react';\r\nimport Billinglogin from '../../Billinglogin';\r\nimport '../Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport DatePicker from 'react-datepicker';\r\nimport moment from 'moment';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport addDays from 'date-fns/addDays';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\nconst getAllbar = \"https://zarvichdemo.localto.net/salesReport?BarSales=Bar%20Sales&&\";\r\nconst getAllRest = \"https://zarvichdemo.localto.net/salesReport?restSales=Restaurant%20Sales&&\";\r\nconst getAllOther = \"https://zarvichdemo.localto.net/salesReport?otherSales=Other%20Sales&&\";\r\nconst getAllPool = \"https://zarvichdemo.localto.net/salesReport?dailypoolsales=Pool%20Bar%20Sales&&\";\r\nconst getAllClub = \"https://zarvichdemo.localto.net/salesReport?clubSales=Reservation&&\";\r\nconst getAllLaundry = \"https://zarvichdemo.localto.net/salesReport?LaundrySales=Laundry%20Sales&&\";\r\nconst getAllGym = \"https://zarvichdemo.localto.net/salesReport?gymnasiumSNow=Gymnasium%20Sales&&\";\r\nconst getAllSmoothie = \"https://zarvichdemo.localto.net/salesReport?smoothiSales=Suya%20Sales&&\";\r\nconst getAllSwimming = \"https://zarvichdemo.localto.net/salesReport?swimmingSales=Swimming%20Sales&&\";\r\nconst getAllMinimart = \"https://zarvichdemo.localto.net/salesReport?minimartSales=Mart%20Sales&&\";\r\nconst getAllBbq = \"https://zarvichdemo.localto.net/salesReport?BarbeQueSales=Barbeque%20Sales&&\";\r\nconst getAllshisha = \"https://zarvichdemo.localto.net/salesReport?shishaSales=Games%20Sales&&\";\r\nconst getAllHHire = \"https://zarvichdemo.localto.net/salesReport?HHSales=Hall%20Hire&&\";\r\nconst getAllDeposits = \"https://zarvichdemo.localto.net/salesReport?accDepositReceptn=Accommodation%20Deposits&&\";\r\n\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\n\r\n\r\n\r\nclass CashCollection extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside CashConstructor\",props)\r\n        this.state = {\r\n            RoomDeposits:'',\r\n            RoomTotal:0,\r\n            depPOS:0,\r\n            depCash:0,\r\n            depTransfer:0,\r\n            depRoom:0,\r\n\r\n            BarSales:0,\r\n            BarTotal:0,\r\n            barPOS:0,\r\n            barCash:0,\r\n            barTransfer:0,\r\n            barRoom:0,\r\n\r\n            RestSales:'',\r\n            RestTotal:0,\r\n            restPOS:0,\r\n            restCash:0,\r\n            restTransfer:0,\r\n            restRoom:0,\r\n\r\n            otherSales:0,\r\n            othersTotal:0,\r\n            otherPOS:0,\r\n            otherCash:0,\r\n            otherTransfer:0,\r\n            otherRoom:0,\r\n\r\n            POSCal:0,\r\n            CashCal:0,\r\n            TransferCal:0,\r\n            RoomCal:0,\r\n\r\n            poolPOS:0,\r\n            poolCash:0,\r\n            poolRoom:0,\r\n            poolTransfer:0,\r\n            poolSales:0,\r\n            PoolTotal:0,\r\n\r\n            clubPOS:0,\r\n            clubCash:0,\r\n            clubRoom:0,\r\n            clubTransfer:0,\r\n            clubSales:0,\r\n            clubTotal:0,\r\n\r\n            laundryPOS:0,\r\n            laundryCash:0,\r\n            laundryRoom:0,\r\n            laundryTransfer:0,\r\n            laundrySales:0,\r\n            laundryTotal:0,\r\n\r\n            gymPOS:0,\r\n            gymCash:0,\r\n            gymRoom:0,\r\n            gymTransfer:0,\r\n            gymSales:0,\r\n            gymTotal:0,\r\n\r\n            smoothiePOS:0,\r\n            smoothieCash:0,\r\n            smoothieRoom:0,\r\n            smoothieTransfer:0,\r\n            smoothieSales:0,\r\n            smoothieTotal:0,\r\n\r\n            swimmingPOS:0,\r\n            swimmingCash:0,\r\n            swimmingRoom:0,\r\n            swimmingTransfer:0,\r\n            swimmingSales:0,\r\n            swimmingTotal:0,\r\n\r\n            minimartPOS:0,\r\n            minimartCash:0,\r\n            minimartRoom:0,\r\n            minimartTransfer:0,\r\n            minimartSales:0,\r\n            minimartTotal:0,\r\n\r\n            BarbequePOS:0,\r\n            BarbequeCash:0,\r\n            BarbequeRoom:0,\r\n            BarbequeTransfer:0,\r\n            BarbequeSales:0,\r\n            BarbequeTotal:0,\r\n\r\n            shishaPOS:0,\r\n            shishaCash:0,\r\n            shishaRoom:0,\r\n            shishaTransfer:0,\r\n            shishaSales:0,\r\n            shishaTotal:0,\r\n\r\n            HallHirePOS:0,\r\n            HallHireCash:0,\r\n            HallHireRoom:0,\r\n            HallHireTransfer:0,\r\n            HallHireSales:0,\r\n            HallHireTotal:0,\r\n\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n\r\n            levyData:'',\r\n            ServiceChrg:'',\r\n            TourismLevy:'',\r\n            VAT:'',\r\n\r\n            shift:'',\r\n            date:'',\r\n            startdate:'',\r\n            endDate:'',\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n\r\n            \r\n            \r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n\r\n    }\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            date: date,\r\n           \r\n\r\n        });\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            endDate: date\r\n        });\r\n    }\r\n\r\n    \r\n    renderDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.date}\r\n                    onChange={this.checkinhandleChange}\r\n                    maxDate={addDays(new Date(),0)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText='Select Start Date'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderendDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.endDate}\r\n                    onChange={this.endhandleChange}\r\n                    maxDate={(new Date())}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112 mvrght\"\r\n                    placeholderText=\"Search End Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleChange=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    findSalesReport(){\r\n        var thisDate = moment(this.state.date).format('MMM DD YYYY')\r\n        \r\n        this.setState({\r\n            depRoom:0,\r\n            depTransfer:0,\r\n            depCash:0,\r\n            depPOS:0,\r\n            RoomTotal:0,\r\n            RoomDeposits:'',\r\n            // RestSales:'',\r\n            // BarSales:'',\r\n            // otherSales:'',\r\n            // poolSales:'',\r\n            // clubSales:'',\r\n            // laundrySales:'',\r\n            // gymSales:'',\r\n            // smoothieSales:'',\r\n            // minimartSales:'',\r\n            // BarbequeSales:'',\r\n            // shishaSales:'',\r\n            // HallHireSales:''\r\n\r\n\r\n\r\n        })\r\n        fetch(`${getAllDeposits}today=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({RoomDeposits:data});\r\n            \r\n                data.map((item) => {\r\n\r\n                    \r\n                    var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.POS)\r\n                    }, 0);\r\n                    this.setState({depPOS:allPOS});\r\n    \r\n                    var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.Cash)\r\n                    }, 0);\r\n                    this.setState({depCash:allCash});\r\n    \r\n                    var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.Transfer)\r\n                    }, 0);\r\n                    this.setState({depTransfer:allTransfer});\r\n    \r\n                    var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.Room)\r\n                    }, 0);\r\n                    this.setState({depRoom:allRoom});\r\n                    \r\n                    this.myTimer = setTimeout(() =>{\r\n                        var RmSales = 0;\r\n                        var roomSales = RmSales + parseInt(this.state.depCash) + parseInt(this.state.depPOS) + parseInt(this.state.depTransfer) + parseInt(this.state.depRoom)\r\n                        this.setState({RoomTotal:roomSales});\r\n                    \r\n                    },2000)\r\n                    \r\n                    return 'ok'\r\n                })\r\n            \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    depRoom:0,\r\n                    depTransfer:0,\r\n                    depCash:0,\r\n                    depPOS:0,\r\n                    RoomTotal:0\r\n\r\n                })\r\n            }\r\n            \r\n            \r\n            \r\n        });\r\n                \r\n       \r\n        fetch(`${getAllRest}resttoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({RestSales:data});\r\n        \r\n            data.map((item) => {\r\n              \r\n                var restallPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({restPOS:restallPOS});\r\n\r\n                var restallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({restCash:restallCash});\r\n\r\n                var restallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({restTransfer:restallTransfer});\r\n\r\n                var restallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({restRoom:restallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllRest = 0;\r\n                    var restSales = AllRest + parseInt(this.state.restCash) + parseInt(this.state.restPOS) + parseInt(this.state.restTransfer) + parseInt(this.state.restRoom)\r\n                    this.setState({RestTotal:restSales})\r\n                },2000)\r\n                \r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    restRoom:0,\r\n                    restTransfer:0,\r\n                    restCash:0,\r\n                    restPOS:0,\r\n                    RestTotal:0\r\n\r\n                })\r\n            }\r\n        \r\n        });\r\n\r\n        fetch(`${getAllbar}bartoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({BarSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var barallPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({barPOS:barallPOS});\r\n\r\n                var barallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({barCash:barallCash});\r\n\r\n                var barallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({barTransfer:barallTransfer});\r\n\r\n                var barallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({barRoom:barallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var BarTotal = 0;\r\n                    var barSales = BarTotal + parseInt(this.state.barCash) + parseInt(this.state.barPOS) + parseInt(this.state.barTransfer) + parseInt(this.state.barRoom)\r\n                    this.setState({BarTotal:barSales})\r\n\r\n                },2000)\r\n                                    \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    barRoom:0,\r\n                    barTransfer:0,\r\n                    barCash:0,\r\n                    barPOS:0,\r\n                    BarTotal:0\r\n\r\n                })\r\n            }\r\n        \r\n        });\r\n        \r\n\r\n        fetch(`${getAllOther}othertoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({otherSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var othersallPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({otherPOS:othersallPOS});\r\n\r\n                var othersallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({otherCash:othersallCash});\r\n\r\n                var othersallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({otherTransfer:othersallTransfer});\r\n\r\n                var othersallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({otherRoom:othersallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllOthers = 0;\r\n                    var OtherSales = AllOthers + parseInt(this.state.otherCash) + parseInt(this.state.otherPOS) + parseInt(this.state.otherTransfer) + parseInt(this.state.otherRoom)\r\n                    this.setState({othersTotal:OtherSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    otherRoom:0,\r\n                    otherTransfer:0,\r\n                    otherCash:0,\r\n                    otherPOS:0,\r\n                    othersTotal:0\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllPool}dailypooltoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({poolSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var poolallPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({poolPOS:poolallPOS});\r\n\r\n                var poolallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({poolCash:poolallCash});\r\n\r\n                var poolallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({poolTransfer:poolallTransfer});\r\n\r\n                var poolallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({poolRoom:poolallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllPool = 0;\r\n                    var AlPoolSales = AllPool + parseInt(this.state.poolCash) + parseInt(this.state.poolPOS) + parseInt(this.state.poolTransfer) + parseInt(this.state.poolRoom)\r\n                    this.setState({PoolTotal:AlPoolSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    poolRoom:0,\r\n                    poolTransfer:0,\r\n                    poolCash:0,\r\n                    poolPOS:0,\r\n                    PoolTotal:0\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllClub}clubtoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({clubSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var cluballPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({clubPOS:cluballPOS});\r\n\r\n                var cluballCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({clubCash:cluballCash});\r\n\r\n                var cluballTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({clubTransfer:cluballTransfer});\r\n\r\n                var cluballRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({clubRoom:cluballRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllClub = 0;\r\n                    var AlClubSales = AllClub + parseInt(this.state.clubCash) + parseInt(this.state.clubPOS) + parseInt(this.state.clubTransfer) + parseInt(this.state.clubRoom)\r\n                    this.setState({clubTotal:AlClubSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    clubRoom:0,\r\n                    clubTransfer:0,\r\n                    clubCash:0,\r\n                    clubPOS:0,\r\n                    clubTotal:0\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllLaundry}laundrytoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({laundrySales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var laundryllPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({laundryPOS:laundryllPOS});\r\n\r\n                var laundryallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({laundryCash:laundryallCash});\r\n\r\n                var laundryallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({laundryTransfer:laundryallTransfer});\r\n\r\n                var laundryallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({laundryRoom:laundryallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllLaundry = 0;\r\n                    var AlLaundrySales = AllLaundry + parseInt(this.state.laundryCash) + parseInt(this.state.laundryPOS) + parseInt(this.state.laundryTransfer) + parseInt(this.state.laundryRoom)\r\n                    this.setState({laundryTotal:AlLaundrySales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    laundryRoom:0,\r\n                    laundryTransfer:0,\r\n                    laundryCash:0,\r\n                    laundryPOS:0,\r\n                    laundryTotal:0\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllGym}gymnasiumtoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({gymSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var gymllPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({gymPOS:gymllPOS});\r\n\r\n                var gymallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({gymCash:gymallCash});\r\n\r\n                var gymallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({gymTransfer:gymallTransfer});\r\n\r\n                var gymallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({gymRoom:gymallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllGym = 0;\r\n                    var AlGymSales = AllGym + parseInt(this.state.gymCash) + parseInt(this.state.gymPOS) + parseInt(this.state.gymTransfer) + parseInt(this.state.gymRoom)\r\n                    this.setState({gymTotal:AlGymSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    gymRoom:0,\r\n                    gymTransfer:0,\r\n                    gymCash:0,\r\n                    gymPOS:0,\r\n                    gymTotal:0\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllSmoothie}smoothietoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({smoothieSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var smoothiellPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({smoothiePOS:smoothiellPOS});\r\n\r\n                var smoothieallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({smoothieCash:smoothieallCash});\r\n\r\n                var smoothieallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({smoothieTransfer:smoothieallTransfer});\r\n\r\n                var smoothieallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({smoothieRoom:smoothieallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllSmoothie = 0;\r\n                    var AlSmoothieSales = AllSmoothie + parseInt(this.state.smoothieCash) + parseInt(this.state.smoothiePOS) + parseInt(this.state.smoothieTransfer) + parseInt(this.state.smoothieRoom)\r\n                    this.setState({smoothieTotal:AlSmoothieSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    smoothieRoom:0,\r\n                    smoothieTransfer:0,\r\n                    smoothieCash:0,\r\n                    smoothiePOS:0,\r\n                    smoothieTotal:0\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllSwimming}swimmingtoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({swimmingSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var swimmingllPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({swimmingPOS:swimmingllPOS});\r\n\r\n                var swimmingallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({swimmingCash:swimmingallCash});\r\n\r\n                var swimmingallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({swimmingTransfer:swimmingallTransfer});\r\n\r\n                var swimmingallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({swimmingRoom:swimmingallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllSwimming = 0;\r\n                    var AlSwimmingSales = AllSwimming + parseInt(this.state.swimmingCash) + parseInt(this.state.swimmingPOS) + parseInt(this.state.swimmingTransfer) + parseInt(this.state.swimmingRoom)\r\n                    this.setState({swimmingTotal:AlSwimmingSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    swimmingRoom:0,\r\n                    swimmingTransfer:0,\r\n                    swimmingCash:0,\r\n                    swimmingPOS:0,\r\n                    swimmingTotal:0\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllMinimart}marttoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({minimartSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var martllPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({minimartPOS:martllPOS});\r\n\r\n                var martallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({minimartCash:martallCash});\r\n\r\n                var martallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({minimartTransfer:martallTransfer});\r\n\r\n                var martallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({minimartRoom:martallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllMart = 0;\r\n                    var AlMartSales = AllMart + parseInt(this.state.minimartCash) + parseInt(this.state.minimartPOS) + parseInt(this.state.minimartTransfer) + parseInt(this.state.minimartRoom)\r\n                    this.setState({minimartTotal:AlMartSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    minimartRoom:0,\r\n                    minimartTransfer:0,\r\n                    minimartCash:0,\r\n                    minimartPOS:0,\r\n                    minimartTotal:0\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllBbq}bbqtoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({BarbequeSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var bbqllPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({BarbequePOS:bbqllPOS});\r\n\r\n                var bbqallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({BarbequeCash:bbqallCash});\r\n\r\n                var bbqallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({BarbequeTransfer:bbqallTransfer});\r\n\r\n                var bbqallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({BarbequeRoom:bbqallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllBbq = 0;\r\n                    var AlBbqSales = AllBbq + parseInt(this.state.BarbequeCash) + parseInt(this.state.BarbequePOS) + parseInt(this.state.BarbequeTransfer) + parseInt(this.state.BarbequeRoom)\r\n                    this.setState({BarbequeTotal:AlBbqSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    BarbequeRoom:0,\r\n                    BarbequeTransfer:0,\r\n                    BarbequeCash:0,\r\n                    BarbequePOS:0,\r\n                    BarbequeTotal:0\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllshisha}shishatoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({shishaSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var shillPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({shishaPOS:shillPOS});\r\n\r\n                var shiallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({shishaCash:shiallCash});\r\n\r\n                var shiallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({shishaTransfer:shiallTransfer});\r\n\r\n                var shiallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({shishaRoom:shiallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllShi = 0;\r\n                    var AlshiSales = AllShi + parseInt(this.state.shishaCash) + parseInt(this.state.shishaPOS) + parseInt(this.state.shishaTransfer) + parseInt(this.state.shishaRoom)\r\n                    this.setState({shishaTotal:AlshiSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    shishaRoom:0,\r\n                    shishaTransfer:0,\r\n                    shishaCash:0,\r\n                    shishaPOS:0,\r\n                    shishaTotal:0\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllHHire}hhiretoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({HallHireSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var hhllPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({HallHirePOS:hhllPOS});\r\n\r\n                var hhallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({HallHireCash:hhallCash});\r\n\r\n                var hhallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({HallHireTransfer:hhallTransfer});\r\n\r\n                var hhallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({hhallRoom:hhallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var Allhh = 0;\r\n                    var AlhhSales = Allhh + parseInt(this.state.HallHireCash) + parseInt(this.state.HallHirePOS) + parseInt(this.state.HallHireTransfer) + parseInt(this.state.HallHireRoom)\r\n                    this.setState({HallHireTotal:AlhhSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    HallHireRoom:0,\r\n                    HallHireTransfer:0,\r\n                    HallHireCash:0,\r\n                    HallHirePOS:0,\r\n                    HallHireTotal:0\r\n                    \r\n                })\r\n            }\r\n            \r\n        });\r\n    }\r\n    \r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        localStorage.removeItem('shift')\r\n        \r\n    }\r\n    cleanupfirst(){\r\n        this.setState({ RoomDeposits:'',\r\n                        RoomTotal:0,\r\n                        depPOS:0,\r\n                        depCash:0,\r\n                        depTransfer:0,\r\n                        depRoom:0,\r\n\r\n                        BarSales:0,\r\n                        BarTotal:0,\r\n                        barPOS:0,\r\n                        barCash:0,\r\n                        barTransfer:0,\r\n                        barRoom:0,\r\n\r\n                        RestSales:'',\r\n                        RestTotal:0,\r\n                        restPOS:0,\r\n                        restCash:0,\r\n                        restTransfer:0,\r\n                        restRoom:0,\r\n\r\n                        functionSales:0,\r\n                        functionTotal:0,\r\n                        functionRoom:0,\r\n                        functionTransfer:0,\r\n                        functionCash:0,\r\n                        functionPOS:0,\r\n\r\n                        otherSales:0,\r\n                        othersTotal:0,\r\n                        otherPOS:0,\r\n                        otherCash:0,\r\n                        otherTransfer:0,\r\n                        otherRoom:0,\r\n\r\n                        poolSales:0,\r\n                        PoolTotal:0,\r\n                        poolPOS:0,\r\n                        poolCash:0,\r\n                        poolTransfer:0,\r\n                        poolRoom:0,\r\n\r\n                        clubSales:0,\r\n                        clubTotal:0,\r\n                        clubPOS:0,\r\n                        clubCash:0,\r\n                        clubTransfer:0,\r\n                        clubRoom:0,\r\n\r\n                        laundrySales:0,\r\n                        laundryTotal:0,\r\n                        laundryPOS:0,\r\n                        laundryCash:0,\r\n                        laundryTransfer:0,\r\n                        laundryRoom:0,\r\n\r\n                        gymSales:0,\r\n                        gymTotal:0,\r\n                        gymPOS:0,\r\n                        gymCash:0,\r\n                        gymTransfer:0,\r\n                        gymRoom:0,\r\n\r\n                        smoothieSales:0,\r\n                        smoothieTotal:0,\r\n                        smoothiePOS:0,\r\n                        smoothieCash:0,\r\n                        smoothieTransfer:0,\r\n                        smoothieRoom:0,\r\n\r\n                        swimmingSales:0,\r\n                        swimmingTotal:0,\r\n                        swimmingPOS:0,\r\n                        swimmingCash:0,\r\n                        swimmingTransfer:0,\r\n                        swimmingRoom:0,\r\n\r\n                        minimartSales:0,\r\n                        minimartTotal:0,\r\n                        minimartPOS:0,\r\n                        minimartCash:0,\r\n                        minimartTransfer:0,\r\n                        minimartRoom:0,\r\n\r\n                        BarbequeSales:0,\r\n                        BarbequeTotal:0,\r\n                        BarbequePOS:0,\r\n                        BarbequeCash:0,\r\n                        BarbequeTransfer:0,\r\n                        BarbequeRoom:0,\r\n\r\n                        shishaSales:0,\r\n                        shishaTotal:0,\r\n                        shishaPOS:0,\r\n                        shishaCash:0,\r\n                        shishaTransfer:0,\r\n                        shishaRoom:0,\r\n\r\n                        HallHireSales:0,\r\n                        HallHireTotal:0,\r\n                        HallHirePOS:0,\r\n                        HallHireCash:0,\r\n                        HallHireTransfer:0,\r\n                        HallHireRoom:0,\r\n\r\n                        POSCal:0,\r\n                        CashCal:0,\r\n                        TransferCal:0,\r\n                        RoomCal:0\r\n                        \r\n                    })\r\n    }\r\n\r\n    \r\n    renderRoomSales=(data)=>{\r\n        if(data){\r\n            \r\n            return data.map((item)=>{\r\n                \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                \r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td> \r\n                            \r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    renderRestSales=(data)=>{\r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n                \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    renderBarSales=(data)=>{\r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n          \r\n    }\r\n\r\n   \r\n    renderOtherSales=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    renderPoolSales=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    renderClubSales=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    renderLaundrySales=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    renderGymSales=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    renderSmoothieSales=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    renderSwimmingSales=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    renderMartSales=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    renderBbqSales=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    rendershiSales=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    renderhhSales=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n   \r\n\r\n    render() {\r\n        console.log (\">>> Inside Cashdetails\", this.state)\r\n        \r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Billinglogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <div className =\"container\">\r\n                <div>\r\n                    <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                </div>\r\n                <div>\r\n                    <center>\r\n                        <h6>{this.state.Hotelname}</h6>\r\n                        <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                        <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                    </center>\r\n                </div>\r\n                <center>\r\n                    <h5>Daily Sales Report</h5><br/>\r\n                    <div>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderDate(this.state.startdate)}\r\n                            </label>\r\n                        </span>\r\n                       \r\n                        <span>\r\n                            \r\n                            <button className=\"btn btn-primary space btnadjuster printing\" onClick={ () => {this.cleanupfirst();this.findSalesReport()}}>Find</button>\r\n                            \r\n                        </span>\r\n                    </div>\r\n                                   \r\n                </center>\r\n                \r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust50\">Date</th>\r\n                            <th className=\"adjust50\">Description</th>\r\n                            <th className=\"adjust50\">POS (NGN)</th>\r\n                            <th className=\"adjust50\">Cash(NGN)</th>\r\n                            <th className=\"adjust50\">Room(NGN)</th>\r\n                            <th className=\"adjust50\">Transfer(NGN)</th>\r\n                            <th className=\"adjust50\">Total(NGN)</th>\r\n                            \r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderRoomSales(this.state.RoomDeposits)}\r\n                        {this.renderRestSales(this.state.RestSales)}\r\n                        {this.renderBarSales(this.state.BarSales)}\r\n                        {this.renderOtherSales(this.state.otherSales)}\r\n                        {this.renderPoolSales(this.state.poolSales)}\r\n                        {this.renderClubSales(this.state.clubSales)}\r\n                        {this.renderLaundrySales(this.state.laundrySales)}\r\n                        {this.renderGymSales(this.state.gymSales)}\r\n                        {this.renderSmoothieSales(this.state.smoothieSales)}\r\n                        {this.renderSwimmingSales(this.state.swimmingSales)}\r\n                        {this.renderMartSales(this.state.minimartSales)}\r\n                        {this.renderBbqSales(this.state.BarbequeSales)}\r\n                        {this.rendershiSales(this.state.shishaSales)}\r\n                        {this.renderhhSales(this.state.HallHireSales)}\r\n                        <tr>\r\n                            <td className=\"table-light table-striped adjust2\"> </td>\r\n                            <td className=\"table-light table-striped adjust2\"><b>Total</b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depPOS) + parseInt(this.state.restPOS) + parseInt(this.state.barPOS) + parseInt(this.state.otherPOS) + parseInt(this.state.poolPOS) + parseInt(this.state.clubPOS) + parseInt(this.state.laundryPOS) + parseInt(this.state.gymPOS) + parseInt(this.state.smoothiePOS) + parseInt(this.state.minimartPOS) + parseInt(this.state.BarbequePOS) + parseInt(this.state.shishaPOS) + parseInt(this.state.HallHirePOS) + parseInt(this.state.swimmingPOS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depCash) + parseInt(this.state.restCash) + parseInt(this.state.barCash) + parseInt(this.state.otherCash) + parseInt(this.state.poolCash) + parseInt(this.state.clubCash) + parseInt(this.state.laundryCash) + parseInt(this.state.gymCash) + parseInt(this.state.smoothieCash) + parseInt(this.state.minimartCash) + parseInt(this.state.BarbequeCash) + parseInt(this.state.shishaCash) + parseInt(this.state.HallHireCash) + parseInt(this.state.swimmingCash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depRoom) + parseInt(this.state.restRoom) + parseInt(this.state.barRoom) + parseInt(this.state.otherRoom) + parseInt(this.state.poolRoom) + parseInt(this.state.clubRoom) + parseInt(this.state.laundryRoom) + parseInt(this.state.gymRoom) + parseInt(this.state.smoothieRoom) + parseInt(this.state.minimartRoom) + parseInt(this.state.BarbequeRoom) + parseInt(this.state.shishaRoom) + parseInt(this.state.HallHireRoom) + parseInt(this.state.swimmingRoom)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depTransfer) + parseInt(this.state.restTransfer) + parseInt(this.state.barTransfer) + parseInt(this.state.otherTransfer) + parseInt(this.state.poolTransfer) + parseInt(this.state.clubTransfer) + parseInt(this.state.laundryTransfer) + parseInt(this.state.gymTransfer) + parseInt(this.state.smoothieTransfer) + parseInt(this.state.minimartTransfer) + parseInt(this.state.BarbequeTransfer) + parseInt(this.state.shishaTransfer) + parseInt(this.state.HallHireTransfer) + parseInt(this.state.swimmingTransfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.RoomTotal) + parseInt(this.state.BarTotal) + parseInt(this.state.RestTotal) + parseInt(this.state.othersTotal) + parseInt(this.state.PoolTotal) + parseInt(this.state.clubTotal) + parseInt(this.state.laundryTotal) + parseInt(this.state.gymTotal) + parseInt(this.state.smoothieTotal) + parseInt(this.state.minimartTotal) + parseInt(this.state.BarbequeTotal) + parseInt(this.state.shishaTotal) + parseInt(this.state.HallHireTotal)+ parseInt(this.state.swimmingTotal)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                        </tr>\r\n                        \r\n                    </tbody>\r\n                </table>\r\n                \r\n                \r\n                <h6>Total Collection:         <NumberFormat value={parseInt(this.state.RoomTotal) + parseInt(this.state.BarTotal) + parseInt(this.state.RestTotal) + parseInt(this.state.othersTotal) + parseInt(this.state.PoolTotal) + parseInt(this.state.clubTotal) + parseInt(this.state.laundryTotal) + parseInt(this.state.gymTotal) + parseInt(this.state.smoothieTotal) + parseInt(this.state.minimartTotal) + parseInt(this.state.BarbequeTotal) + parseInt(this.state.shishaTotal) + parseInt(this.state.HallHireTotal) + parseInt(this.state.swimmingTotal)}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                <hr/>\r\n                <center>\r\n                \r\n                    <button className=\"btn btn-danger movebtn printing\" onClick={ () => this.props.history.push('/EndOfDay') }>Close</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ () => window.print() }>Print</button>\r\n                    <button className=\"btn btn-warning movebtn printing\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>    \r\n                        \r\n                </center>       \r\n            </div>\r\n            \r\n        );\r\n    }\r\n  \r\n    componentDidMount() {\r\n        console.log(\">>> Inside CashDidMount\", this.state)\r\n        var defaultDate = moment(new Date()).format('MMM DD YYYY')\r\n        \r\n        this.setState({\r\n            depRoom:'',\r\n            depTransfer:'',\r\n            depCash:'',\r\n            depPOS:'',\r\n            RoomTotal:''\r\n\r\n        })\r\n        fetch(`${getAllDeposits}today=${defaultDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({RoomDeposits:data});\r\n            \r\n                data.map((item) => {\r\n\r\n                    \r\n                    var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.POS)\r\n                    }, 0);\r\n                    this.setState({depPOS:allPOS});\r\n    \r\n                    var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.Cash)\r\n                    }, 0);\r\n                    this.setState({depCash:allCash});\r\n    \r\n                    var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.Transfer)\r\n                    }, 0);\r\n                    this.setState({depTransfer:allTransfer});\r\n    \r\n                    var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.Room)\r\n                    }, 0);\r\n                    this.setState({depRoom:allRoom});\r\n                    \r\n                    this.myTimer = setTimeout(() =>{\r\n                        var RmSales = 0;\r\n                        var roomSales = RmSales + parseInt(this.state.depCash) + parseInt(this.state.depPOS) + parseInt(this.state.depTransfer) + parseInt(this.state.depRoom)\r\n                        this.setState({RoomTotal:roomSales});\r\n                    \r\n                    },2000)\r\n                    \r\n                    return 'ok'\r\n                })\r\n            \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    depRoom:'',\r\n                    depTransfer:'',\r\n                    depCash:'',\r\n                    depPOS:'',\r\n                    RoomTotal:''\r\n\r\n                })\r\n            }\r\n            \r\n            \r\n            \r\n        });\r\n                \r\n       \r\n        fetch(`${getAllRest}resttoday=${defaultDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({RestSales:data});\r\n        \r\n            data.map((item) => {\r\n              \r\n                var restallPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({restPOS:restallPOS});\r\n\r\n                var restallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({restCash:restallCash});\r\n\r\n                var restallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({restTransfer:restallTransfer});\r\n\r\n                var restallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({restRoom:restallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllRest = 0;\r\n                    var restSales = AllRest + parseInt(this.state.restCash) + parseInt(this.state.restPOS) + parseInt(this.state.restTransfer) + parseInt(this.state.restRoom)\r\n                    this.setState({RestTotal:restSales})\r\n                },2000)\r\n                \r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    restRoom:'',\r\n                    restTransfer:'',\r\n                    restCash:'',\r\n                    restPOS:'',\r\n                    RestTotal:''\r\n\r\n                })\r\n            }\r\n        \r\n        });\r\n\r\n        fetch(`${getAllbar}bartoday=${defaultDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({BarSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var barallPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({barPOS:barallPOS});\r\n\r\n                var barallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({barCash:barallCash});\r\n\r\n                var barallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({barTransfer:barallTransfer});\r\n\r\n                var barallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({barRoom:barallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var BarTotal = 0;\r\n                    var barSales = BarTotal + parseInt(this.state.barCash) + parseInt(this.state.barPOS) + parseInt(this.state.barTransfer) + parseInt(this.state.barRoom)\r\n                    this.setState({BarTotal:barSales})\r\n\r\n                },2000)\r\n                                    \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    barRoom:'',\r\n                    barTransfer:'',\r\n                    barCash:'',\r\n                    barPOS:'',\r\n                    BarTotal:''\r\n\r\n                })\r\n            }\r\n        \r\n        });\r\n        \r\n\r\n        fetch(`${getAllOther}othertoday=${defaultDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({otherSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var othersallPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({otherPOS:othersallPOS});\r\n\r\n                var othersallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({otherCash:othersallCash});\r\n\r\n                var othersallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({otherTransfer:othersallTransfer});\r\n\r\n                var othersallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({otherRoom:othersallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllOthers = 0;\r\n                    var OtherSales = AllOthers + parseInt(this.state.otherCash) + parseInt(this.state.otherPOS) + parseInt(this.state.otherTransfer) + parseInt(this.state.otherRoom)\r\n                    this.setState({othersTotal:OtherSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    otherRoom:'',\r\n                    otherTransfer:'',\r\n                    otherCash:'',\r\n                    otherPOS:'',\r\n                    othersTotal:''\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllPool}dailypooltoday=${defaultDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({poolSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var poolallPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({poolPOS:poolallPOS});\r\n\r\n                var poolallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({poolCash:poolallCash});\r\n\r\n                var poolallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({poolTransfer:poolallTransfer});\r\n\r\n                var poolallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({poolRoom:poolallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllPool = 0;\r\n                    var AlPoolSales = AllPool + parseInt(this.state.poolCash) + parseInt(this.state.poolPOS) + parseInt(this.state.poolTransfer) + parseInt(this.state.poolRoom)\r\n                    this.setState({PoolTotal:AlPoolSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    poolRoom:'',\r\n                    poolTransfer:'',\r\n                    poolCash:'',\r\n                    poolPOS:'',\r\n                    PoolTotal:''\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllClub}clubtoday=${defaultDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({clubSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var cluballPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({clubPOS:cluballPOS});\r\n\r\n                var cluballCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({clubCash:cluballCash});\r\n\r\n                var cluballTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({clubTransfer:cluballTransfer});\r\n\r\n                var cluballRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({clubRoom:cluballRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllClub = 0;\r\n                    var AlClubSales = AllClub + parseInt(this.state.clubCash) + parseInt(this.state.clubPOS) + parseInt(this.state.clubTransfer) + parseInt(this.state.clubRoom)\r\n                    this.setState({clubTotal:AlClubSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    clubRoom:'',\r\n                    clubTransfer:'',\r\n                    clubCash:'',\r\n                    clubPOS:'',\r\n                    clubTotal:''\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllLaundry}laundrytoday=${defaultDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({laundrySales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var laundryllPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({laundryPOS:laundryllPOS});\r\n\r\n                var laundryallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({laundryCash:laundryallCash});\r\n\r\n                var laundryallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({laundryTransfer:laundryallTransfer});\r\n\r\n                var laundryallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({laundryRoom:laundryallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllLaundry = 0;\r\n                    var AlLaundrySales = AllLaundry + parseInt(this.state.laundryCash) + parseInt(this.state.laundryPOS) + parseInt(this.state.laundryTransfer) + parseInt(this.state.laundryRoom)\r\n                    this.setState({laundryTotal:AlLaundrySales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    laundryRoom:'',\r\n                    laundryTransfer:'',\r\n                    laundryCash:'',\r\n                    laundryPOS:'',\r\n                    laundryTotal:''\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllGym}gymnasiumtoday=${defaultDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({gymSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var gymllPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({gymPOS:gymllPOS});\r\n\r\n                var gymallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({gymCash:gymallCash});\r\n\r\n                var gymallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({gymTransfer:gymallTransfer});\r\n\r\n                var gymallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({gymRoom:gymallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllGym = 0;\r\n                    var AlGymSales = AllGym + parseInt(this.state.gymCash) + parseInt(this.state.gymPOS) + parseInt(this.state.gymTransfer) + parseInt(this.state.gymRoom)\r\n                    this.setState({gymTotal:AlGymSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    gymRoom:'',\r\n                    gymTransfer:'',\r\n                    gymCash:'',\r\n                    gymPOS:'',\r\n                    gymTotal:''\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllSmoothie}smoothietoday=${defaultDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({smoothieSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var smoothiellPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({smoothiePOS:smoothiellPOS});\r\n\r\n                var smoothieallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({smoothieCash:smoothieallCash});\r\n\r\n                var smoothieallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({smoothieTransfer:smoothieallTransfer});\r\n\r\n                var smoothieallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({smoothieRoom:smoothieallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllSmoothie = 0;\r\n                    var AlSmoothieSales = AllSmoothie + parseInt(this.state.smoothieCash) + parseInt(this.state.smoothiePOS) + parseInt(this.state.smoothieTransfer) + parseInt(this.state.smoothieRoom)\r\n                    this.setState({smoothieTotal:AlSmoothieSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    smoothieRoom:'',\r\n                    smoothieTransfer:'',\r\n                    smoothieCash:'',\r\n                    smoothiePOS:'',\r\n                    smoothieTotal:''\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllMinimart}marttoday=${defaultDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({minimartSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var martllPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({minimartPOS:martllPOS});\r\n\r\n                var martallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({minimartCash:martallCash});\r\n\r\n                var martallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({minimartTransfer:martallTransfer});\r\n\r\n                var martallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({minimartRoom:martallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllMart = 0;\r\n                    var AlMartSales = AllMart + parseInt(this.state.minimartCash) + parseInt(this.state.minimartPOS) + parseInt(this.state.minimartTransfer) + parseInt(this.state.minimartRoom)\r\n                    this.setState({minimartTotal:AlMartSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    minimartRoom:'',\r\n                    minimartTransfer:'',\r\n                    minimartCash:'',\r\n                    minimartPOS:'',\r\n                    minimartTotal:''\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllBbq}bbqtoday=${defaultDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({BarbequeSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var bbqllPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({BarbequePOS:bbqllPOS});\r\n\r\n                var bbqallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({BarbequeCash:bbqallCash});\r\n\r\n                var bbqallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({BarbequeTransfer:bbqallTransfer});\r\n\r\n                var bbqallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({BarbequeRoom:bbqallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllBbq = 0;\r\n                    var AlBbqSales = AllBbq + parseInt(this.state.BarbequeCash) + parseInt(this.state.BarbequePOS) + parseInt(this.state.BarbequeTransfer) + parseInt(this.state.BarbequeRoom)\r\n                    this.setState({BarbequeTotal:AlBbqSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    BarbequeRoom:'',\r\n                    BarbequeTransfer:'',\r\n                    BarbequeCash:'',\r\n                    BarbequePOS:'',\r\n                    BarbequeTotal:''\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllshisha}shishatoday=${defaultDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({shishaSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var shillPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({shishaPOS:shillPOS});\r\n\r\n                var shiallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({shishaCash:shiallCash});\r\n\r\n                var shiallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({shishaTransfer:shiallTransfer});\r\n\r\n                var shiallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({shishaRoom:shiallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllShi = 0;\r\n                    var AlshiSales = AllShi + parseInt(this.state.shishaCash) + parseInt(this.state.shishaPOS) + parseInt(this.state.shishaTransfer) + parseInt(this.state.shishaRoom)\r\n                    this.setState({shishaTotal:AlshiSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    shishaRoom:'',\r\n                    shishaTransfer:'',\r\n                    shishaCash:'',\r\n                    shishaPOS:'',\r\n                    shishaTotal:''\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllHHire}hhiretoday=${defaultDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({HallHireSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var hhllPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({HallHirePOS:hhllPOS});\r\n\r\n                var hhallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({HallHireCash:hhallCash});\r\n\r\n                var hhallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({HallHireTransfer:hhallTransfer});\r\n\r\n                var hhallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({hhallRoom:hhallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var Allhh = 0;\r\n                    var AlhhSales = Allhh + parseInt(this.state.HallHireCash) + parseInt(this.state.HallHirePOS) + parseInt(this.state.HallHireTransfer) + parseInt(this.state.HallHireRoom)\r\n                    this.setState({HallHireTotal:AlhhSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    HallHireRoom:'',\r\n                    HallHireTransfer:'',\r\n                    HallHireCash:'',\r\n                    HallHirePOS:'',\r\n                    HallHireTotal:''\r\n                    \r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n        fetch(`${getAllSwimming}swimmingtoday=${defaultDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({swimmingSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var swimmingllPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({swimmingPOS:swimmingllPOS});\r\n\r\n                var swimmingallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({swimmingCash:swimmingallCash});\r\n\r\n                var swimmingallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({swimmingTransfer:swimmingallTransfer});\r\n\r\n                var swimmingallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({swimmingRoom:swimmingallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllSwimming = 0;\r\n                    var AlSwimmingSales = AllSwimming + parseInt(this.state.swimmingCash) + parseInt(this.state.swimmingPOS) + parseInt(this.state.swimmingTransfer) + parseInt(this.state.swimmingRoom)\r\n                    this.setState({swimmingTotal:AlSwimmingSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    swimmingRoom:0,\r\n                    swimmingTransfer:0,\r\n                    swimmingCash:0,\r\n                    swimmingPOS:0,\r\n                    swimmingTotal:0\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name===nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n       \r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default CashCollection;","import React, { Component } from 'react';\r\nimport Billinglogin from '../../Billinglogin';\r\nimport '../Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport DatePicker from 'react-datepicker';\r\nimport moment from 'moment';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport addDays from 'date-fns/addDays';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\nconst getRoomSales = \"https://zarvichdemo.localto.net/findRmDeposits?roomDep12=Room%20Deposit\";\r\n// const getRoomSales2 = \"/findRmDeposits?roomDep13=Room%20Deposit\";\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\nconst levyUrl= \"https://zarvichdemo.localto.net/feesAndCharges\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\n\r\n\r\n\r\nclass DailyRoomSales extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside CashConstructor\",props)\r\n        this.state = {\r\n            RoomSales:'',\r\n            RoomTotal:'',\r\n            depPOS:'',\r\n            depCash:'',\r\n            depTransfer:'',\r\n            depComp:'',\r\n            TotalSales:'',\r\n            date:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            shift:'',\r\n            startdate:'',\r\n            endDate:'',\r\n            levyData:'',\r\n            ServiceChrg:'',\r\n            TourismLevy:'',\r\n            VAT:'',\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n            \r\n            \r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n\r\n    }\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            date: date,\r\n            startdate: date\r\n\r\n        });\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            endDate: date\r\n        });\r\n    }\r\n    \r\n    renderDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.date}\r\n                    onChange={this.checkinhandleChange}\r\n                    maxDate={addDays(new Date(),0)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText='Select Start Date'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderendDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.endDate}\r\n                    onChange={this.endhandleChange}\r\n                    maxDate={(new Date())}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112 mvrght\"\r\n                    placeholderText=\"Search End Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    handleChange=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n    }\r\n    handleChange10=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value,\r\n            roomSales:''\r\n        })\r\n\r\n    }\r\n    \r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    cleanup(){\r\n        this.setState({\r\n            RoomSales:0,\r\n            RoomTotal:0,\r\n            depPOS:0,\r\n            depCash:0,\r\n            depTransfer:0,\r\n            depComp:0,\r\n            TotalSales:0\r\n            \r\n        })\r\n    }\r\n\r\n    findRoomReport(){\r\n        var start = moment(this.state.date).format('MMM DD YYYY');\r\n        var end = moment(this.state.endDate).format('MMM DD YYYY');\r\n\r\n       var findAllBar = `${getRoomSales}&&startdate12=${start}&&endDate12=${end}`\r\n        // var findBarwrtshift = `${getRoomSales2}&&startdate13=${start}&&endDate13=${end}&&shiftNow2='All Day'`\r\n\r\n        \r\n            this.setState({RoomSales:''})\r\n            fetch(`${findAllBar}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({RoomSales:data});\r\n                data.map((item) => {\r\n    \r\n                    var RmSales = 0;\r\n                    var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.CompDebit) + parseInt(item.roomDebit)\r\n                    this.setState({RoomTotal:roomSales});\r\n    \r\n                    var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.POSAmount)\r\n                    }, 0);\r\n                    this.setState({depPOS:allPOS});\r\n    \r\n                    var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.CashAmount)\r\n                    }, 0);\r\n                    this.setState({depCash:allCash});\r\n    \r\n                    var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.TransferAmount)\r\n                    }, 0);\r\n                    this.setState({depTransfer:allTransfer});\r\n    \r\n                    var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.CompDebit)\r\n                    }, 0);\r\n                    this.setState({depComp:allComp});\r\n    \r\n                    var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.roomDebit)\r\n                    }, 0);\r\n                    this.setState({deproom:allRoom});\r\n                    \r\n                    return 'ok'\r\n                })\r\n                \r\n                \r\n            });\r\n            this.myTimer = setTimeout(() => {\r\n            \r\n                var AllSalesPoint = 0;\r\n                var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n                this.setState({TotalSales:TotalSalesPoints})\r\n    \r\n            },1000)\r\n        \r\n\r\n        \r\n            // this.setState({RoomSales:''})\r\n            // fetch(`${findBarwrtshift}`, {method:'GET'})\r\n            // .then((res) => res.json())\r\n            // .then((data) => {\r\n            //     this.setState({RoomSales:data});\r\n            //     data.map((item) => {\r\n\r\n            //         var RmSales = 0;\r\n            //         var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.CompDebit) + parseInt(item.roomDebit)\r\n            //         this.setState({RoomTotal:roomSales});\r\n    \r\n            //         var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.POSAmount)\r\n            //         }, 0);\r\n            //         this.setState({depPOS:allPOS});\r\n    \r\n            //         var allCash = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.CashAmount)\r\n            //         }, 0);\r\n            //         this.setState({depCash:allCash});\r\n    \r\n            //         var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.TransferAmount)\r\n            //         }, 0);\r\n            //         this.setState({depTransfer:allTransfer});\r\n    \r\n            //         var allComp = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.CompDebit)\r\n            //         }, 0);\r\n            //         this.setState({depComp:allComp});\r\n    \r\n            //         var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.roomDebit)\r\n            //         }, 0);\r\n            //         this.setState({deproom:allRoom});\r\n                    \r\n            //         return 'ok'\r\n            //     })\r\n                \r\n                \r\n            // });\r\n            \r\n            this.myTimer = setTimeout(() => {\r\n            \r\n                var AllSalesPoint = 0;\r\n                var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n                this.setState({TotalSales:TotalSalesPoints})\r\n    \r\n            },1000)\r\n            \r\n        \r\n       \r\n    }\r\n        \r\n    \r\n\r\n    renderRoomSales=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a, b) => a.date - b.date);\r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust222\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.roomNumbers}</td>\r\n                            <td className=\"table-light table-striped adjust223 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POSAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CashAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.TransferAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CompDebit}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POSAmount) + parseInt(item.CashAmount) + parseInt(item.TransferAmount)}thousandSeparator={true}displayType={\"text\"}/></b></td> \r\n                            \r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log (\">>> Inside Cashdetails\", this.state)\r\n        // var defaultdate = moment(this.state.date).format('MMM DD YYYY');\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Billinglogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <div className =\"container\">\r\n                <div>\r\n                    <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                </div>\r\n                <div>\r\n                    <center>\r\n                        <h6>{this.state.Hotelname}</h6>\r\n                        <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                        <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n                       \r\n                    </center>\r\n                </div>\r\n                <center>\r\n                    <h5>Daily Accommodation Report</h5><br/>\r\n                    <div>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderDate(this.state.startdate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderendDate(this.state.endDate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            {/* <select type =\"button\" className=\"form-select mb-2 btn btn-primary mt-3 btnwidthp printing space selectadjuster\" name=\"shift\" value ={this.state.shift} onChange={this.handleChange10}>\r\n                                <option selected value=''>Select Shift</option>\r\n                                <option value='Morning Shift'>Morning Shift</option>\r\n                                <option value='Night Shift'>Night Shift</option>\r\n                                <option value='All Day'>All Day</option>\r\n                                <option value='All Shifts'>All Shifts</option>\r\n                                \r\n                            </select> */}\r\n                            <button className=\"btn btn-primary space btnadjuster printing\" onClick={ () => {this.cleanup();this.findRoomReport()}}>Find</button>\r\n                        </span>\r\n                    </div>\r\n                                   \r\n                </center>\r\n                \r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust50\">Date</th>\r\n                            <th className=\"adjust50\">Room Number</th>\r\n                            <th className=\"adjust50\">Description</th>\r\n                            <th className=\"adjust50\">POS (NGN)</th>\r\n                            <th className=\"adjust50\">Cash(NGN)</th>\r\n                            <th className=\"adjust50\">Transfer(NGN)</th>\r\n                            <th className=\"adjust50\">Reservation(NGN)</th>\r\n                            <th className=\"adjust50\">Total(NGN)</th>\r\n                            \r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderRoomSales(this.state.RoomSales)}\r\n                        <tr>\r\n                            <td className=\"table-light table-striped adjust2\"> </td>\r\n                            <td className=\"table-light table-striped adjust2\"><b>Total</b></td>\r\n                            <td className=\"table-light table-striped adjust2\"><b> </b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depPOS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depCash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depTransfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depComp)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b> <NumberFormat value={this.state.depPOS + this.state.depCash + this.state.depTransfer}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                        </tr>\r\n\r\n                        \r\n                        \r\n                        \r\n                    </tbody>\r\n                </table>\r\n                \r\n                \r\n                <h6>Gross Collection:         <NumberFormat value={this.state.depPOS + this.state.depCash + this.state.depTransfer}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                \r\n                <hr/>\r\n                <center>\r\n                \r\n                    <button className=\"btn btn-danger movebtn printing\" onClick={ () => this.props.history.push('/EndOfDay') }>Close</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ () => window.print() }>Print</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>  \r\n                        \r\n                </center>       \r\n            </div>\r\n            \r\n        );\r\n    }\r\n  \r\n    componentDidMount() {\r\n        console.log(\">>> Inside CashDidMount\", this.state)\r\n\r\n        fetch(`${levyUrl}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({levyData:data})\r\n               \r\n        })\r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n    \r\n        var start = moment(new Date()).format('MMM DD YYYY');\r\n        var end = moment(new Date()).format('MMM DD YYYY');\r\n\r\n        var findAllBar = `${getRoomSales}&&startdate12=${start}&&endDate12=${end}`\r\n\r\n        this.setState({RoomSales:''})\r\n        fetch(`${findAllBar}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({RoomSales:data});\r\n            data.map((item) => {\r\n\r\n                var RmSales = 0;\r\n                var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.CompDebit) + parseInt(item.roomDebit)\r\n                this.setState({RoomTotal:roomSales});\r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({depPOS:allPOS});\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({depCash:allCash});\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({depTransfer:allTransfer});\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({depComp:allComp});\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({deproom:allRoom});\r\n                \r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n        \r\n            var AllSalesPoint = 0;\r\n            var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n            this.setState({TotalSales:TotalSalesPoints})\r\n\r\n        },1000)\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n            \r\n    \r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n    }\r\n\r\n       \r\n       \r\n       \r\n    \r\n\r\n\r\n}\r\n\r\n\r\nexport default DailyRoomSales;","import React, { Component } from 'react';\r\nimport Billinglogin from '../../Billinglogin';\r\nimport '../Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\n\r\nconst checkInDataUrl = \"https://zarvichdemo.localto.net/getrmstatus\";\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\n\r\n\r\n\r\n\r\n\r\nclass OwingGuests extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside CashConstructor\",props)\r\n        this.state = {\r\n            RoomSales:'',\r\n            date:new Date(),\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            shift:'',\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n            \r\n        };\r\n        \r\n\r\n    }\r\n    \r\n    \r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    cleanup(){\r\n        this.setState({\r\n            RoomSales:'',\r\n            \r\n        })\r\n    }\r\n    \r\n    renderRoomSales=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a, b) => a.date - b.date);\r\n                if(item.fname!==''){\r\n                    var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                    return(\r\n                        <>\r\n                            <tr key= {item._id}>\r\n                                \r\n                                <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                                <td className=\"table-light table-striped adjust2\">{item.roomNumbers}</td>\r\n                                <td className=\"table-light table-striped adjust2\">{item.fname} {item.lname}</td>\r\n                                <td className=\"table-light table-striped adjust2\">{item.roomtypeName}</td>\r\n                                <td className=\"table-light table-striped adjust2\"><NumberFormat value={item.BillStatus}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                                \r\n                            </tr>\r\n                            \r\n                        </>\r\n                    )\r\n                }\r\n                else{\r\n                    return null\r\n                }\r\n                \r\n               \r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log (\">>> Inside Cashdetails\", this.state)\r\n       \r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Billinglogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <div className =\"container\">\r\n                <div>\r\n                    <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                </div>\r\n                <div>\r\n                    <center>\r\n                        <h6>{this.state.Hotelname}</h6>\r\n                        <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                        <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n                       \r\n                    </center>\r\n                </div>\r\n                <center>\r\n                    <h5>Guests Balance Report</h5><br/>\r\n                    \r\n                </center>\r\n                \r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust50\">Date</th>\r\n                            <th className=\"adjust50\">Room Number</th>\r\n                            <th className=\"adjust50\">Names</th>\r\n                            <th className=\"adjust50\">Room Type</th>\r\n                            <th className=\"adjust50\">Guest Balance (NGN)</th>\r\n                            \r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderRoomSales(this.state.RoomSales)}\r\n                       \r\n                    </tbody>\r\n                </table>\r\n                \r\n                <hr/>\r\n                <center>\r\n                \r\n                    <button className=\"btn btn-danger movebtn printing\" onClick={ () => this.props.history.push('/EndOfDay') }>Close</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ () => window.print() }>Print</button>\r\n                        \r\n                </center>       \r\n            </div>\r\n            \r\n        );\r\n    }\r\n  \r\n    componentDidMount() {\r\n        console.log(\">>> Inside CashDidMount\", this.state)\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${checkInDataUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({RoomSales:data});\r\n        })\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n            \r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n    }\r\n\r\n       \r\n       \r\n       \r\n    \r\n\r\n\r\n}\r\n\r\n\r\nexport default OwingGuests;","import React, { Component } from 'react';\r\nimport Billinglogin from '../../Billinglogin';\r\nimport '../Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport addDays from 'date-fns/addDays';\r\nimport DatePicker from 'react-datepicker';\r\nimport moment from 'moment';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst getRoomSales = \"https://zarvichdemo.localto.net/findrestaurantsalesNow?restDep24=Restaurant%20Sales\";\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\n// const getAllRoomSales = \"/findrestaurantsalesNow?restDep23=Restaurant%20Sales\";\r\nconst levyUrl= \"https://zarvichdemo.localto.net/feesAndCharges\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\n\r\nclass RestaurantReport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside CashConstructor\",props)\r\n        this.state = {\r\n            RoomSales:'',\r\n            RoomTotal:'',\r\n            depPOS:'',\r\n            depCash:'',\r\n            depTransfer:'',\r\n            depComp:'',\r\n            TotalSales:'',\r\n            date:'',\r\n            deproom:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            shift:'',\r\n            startdate:'',\r\n            endDate:'',\r\n            levyData:'',\r\n            ServiceChrg:'',\r\n            TourismLevy:'',\r\n            VAT:'',\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n            \r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n\r\n    }\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            date: date,\r\n            startdate: date\r\n        });\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            endDate: date\r\n        });\r\n    }\r\n\r\n    \r\n    renderDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.date}\r\n                    onChange={this.checkinhandleChange}\r\n                    maxDate={addDays(new Date(),1)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText='Select Start Date'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderendDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.endDate}\r\n                    onChange={this.endhandleChange}\r\n                    maxDate={(new Date())}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112 mvrght\"\r\n                    placeholderText=\"Search End Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    \r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        localStorage.removeItem('shift')\r\n        \r\n    }\r\n\r\n    handleChange=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    cleanup(){\r\n        this.setState({\r\n            RoomSales:'',\r\n            RoomTotal:0,\r\n            depPOS:0,\r\n            depCash:0,\r\n            depTransfer:0,\r\n            depComp:0,\r\n            TotalSales:0,\r\n            deproom:0,\r\n            \r\n        })\r\n    }\r\n\r\n    findRoomReport(){\r\n        var start = moment(this.state.date).format('MMM DD YYYY');\r\n        var end = moment(this.state.endDate).format('MMM DD YYYY');\r\n\r\n        // var start = new Date(this.state.date);\r\n        // var end = new Date(this.state.endDate);\r\n\r\n        var findAllBar = `${getRoomSales}&&startdate24=${start}&&endDate24=${end}`\r\n        \r\n        \r\n        this.setState({RoomSales:''})\r\n        fetch(`${findAllBar}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({RoomSales:data});\r\n            data.map((item) => {\r\n\r\n                var RmSales = 0;\r\n                var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)\r\n                this.setState({RoomTotal:roomSales});\r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({depPOS:allPOS});\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({depCash:allCash});\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({depTransfer:allTransfer});\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({depComp:allComp});\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({deproom:allRoom});\r\n                \r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n        \r\n            var AllSalesPoint = 0;\r\n            var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n            this.setState({TotalSales:TotalSalesPoints})\r\n\r\n        },1000)\r\n\r\n    }\r\n\r\n    renderRoomSales=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a, b) => a.date - b.date);\r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                var sales = item.docketDetails;\r\n                \r\n                \r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{sales.map(prod => prod.meal)} </td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POSAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CashAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.TransferAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CompDebit}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.roomDebit}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\">{item.roomNumbers}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POSAmount) + parseInt(item.CashAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)}thousandSeparator={true}displayType={\"text\"}/></b></td> \r\n                            \r\n                            \r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log (\">>> Inside Cashdetails\", this.state)\r\n        // var defaultdate = moment(this.state.date).format('MMM DD YYYY');\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Billinglogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <div className =\"container\">\r\n                <div>\r\n                    <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                </div>\r\n                <div>\r\n                    <center>\r\n                        <h6>{this.state.Hotelname}</h6>\r\n                        <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                        <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n                       \r\n                    </center>\r\n                </div>\r\n                <center>\r\n                    <h5>Daily Restaurant Sales Report</h5><br/>\r\n                    <div>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderDate(this.state.startdate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderendDate(this.state.endDate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            {/* <select type =\"button\" className=\"form-select mb-2 btn btn-primary mt-3 btnwidthp printing space selectadjuster\" name=\"shift\" value ={this.state.shift} onChange={this.handleChange}>\r\n                                <option selected value=''>Select Shift</option>\r\n                                <option value='Morning Shift'>Morning Shift</option>\r\n                                <option value='Night Shift'>Night Shift</option>\r\n                                <option value='All Day'>All Day</option>\r\n                                <option value='All Shifts'>All Shifts</option>\r\n                                \r\n                            </select> */}\r\n                            <button className=\"btn btn-primary space btnadjuster printing\" onClick={ () => {this.cleanup();this.findRoomReport()}}>Find</button>\r\n                        </span>\r\n                    </div>\r\n                    <br/>\r\n                        \r\n                                   \r\n                </center>\r\n                <br/>\r\n                \r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust50\">Date</th>\r\n                            <th className=\"adjust50\">Description</th>\r\n                            <th className=\"adjust50\">POS (NGN)</th>\r\n                            <th className=\"adjust50\">Cash(NGN)</th>\r\n                            <th className=\"adjust50\">Transfer(NGN)</th>\r\n                            <th className=\"adjust50\">Compl(NGN)</th>\r\n                            <th className=\"adjust50\">Room(NGN)</th>\r\n                            <th className=\"adjust50\">Rm Num</th>\r\n                            <th className=\"adjust50\">Total(NGN)</th>\r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderRoomSales(this.state.RoomSales)}\r\n                        <tr>\r\n                            <td className=\"table-light table-striped adjust222\"> </td>\r\n                            <td className=\"table-light table-striped adjust2\"><b>Total</b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depPOS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depCash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depTransfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depComp)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.deproom)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"> </td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b> <NumberFormat value={this.state.depPOS + this.state.depCash + this.state.depTransfer + this.state.deproom}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr>\r\n                        \r\n                    </tbody>\r\n                </table>\r\n                \r\n                \r\n                <h6>Total Collection:         <NumberFormat value={this.state.depPOS + this.state.depCash + this.state.depTransfer + this.state.deproom}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                <hr/>\r\n                <center>\r\n                \r\n                    <button className=\"btn btn-danger movebtn printing\" onClick={ () => this.props.history.push('/EndOfDay') }>Close</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ () => window.print() }>Print</button>\r\n                    <button className=\"btn btn-warning movebtn printing\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>    \r\n                        \r\n                </center>       \r\n            </div>\r\n            \r\n        );\r\n    }\r\n  \r\n    componentDidMount() {\r\n        console.log(\">>> Inside CashDidMount\", this.state)\r\n        \r\n        fetch(`${levyUrl}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({levyData:data})\r\n               \r\n        })\r\n\r\n       \r\n        var start = moment(new Date()).format('MMM DD YYYY');\r\n        var end = moment(new Date()).format('MMM DD YYYY');\r\n\r\n       var findAllBar = `${getRoomSales}&&startdate24=${start}&&endDate24=${end}`\r\n        \r\n        this.setState({RoomSales:''})\r\n        fetch(`${findAllBar}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({RoomSales:data});\r\n            data.map((item) => {\r\n\r\n                var RmSales = 0;\r\n                var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)\r\n                this.setState({RoomTotal:roomSales});\r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({depPOS:allPOS});\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({depCash:allCash});\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({depTransfer:allTransfer});\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({depComp:allComp});\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({deproom:allRoom});\r\n                \r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n        \r\n            var AllSalesPoint = 0;\r\n            var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n            this.setState({TotalSales:TotalSalesPoints})\r\n\r\n        },1000)\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n    }\r\n\r\n       \r\n}\r\n\r\n\r\nexport default RestaurantReport;","import React, { Component } from 'react';\r\nimport Billinglogin from '../../Billinglogin';\r\nimport '../Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport DatePicker from 'react-datepicker';\r\nimport moment from 'moment';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\nconst getRoomSales = \"https://zarvichdemo.localto.net/findPoolSalesNow?poolNowDep84=PoolBar%20Sales\";\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\n// const getAllRoomSales = \"/findPoolSalesNow?poolNowDep83=Pool%20Bar%20Sales\";\r\nconst levyUrl= \"https://zarvichdemo.localto.net/feesAndCharges\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\n\r\nclass PoolBarDailySales extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside CashConstructor\",props)\r\n        this.state = {\r\n            RoomSales:'',\r\n            RoomTotal:'',\r\n            depPOS:'',\r\n            depCash:'',\r\n            depTransfer:'',\r\n            depComp:'',\r\n            TotalSales:'',\r\n            date:'',\r\n            deproom:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            shift:'',\r\n            startdate:'',\r\n            endDate:'',\r\n            levyData:'',\r\n            ServiceChrg:'',\r\n            TourismLevy:'',\r\n            VAT:'',\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n            \r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n\r\n    }\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            date: date,\r\n            startdate: date\r\n        });\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            endDate: date\r\n        });\r\n    }\r\n\r\n    \r\n    renderDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.date}\r\n                    onChange={this.checkinhandleChange}\r\n                    \r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText='Select Start Date'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderendDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.endDate}\r\n                    onChange={this.endhandleChange}\r\n                    \r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112 mvrght\"\r\n                    placeholderText=\"Search End Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleChange=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n    }\r\n    \r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        localStorage.removeItem('shift')\r\n    }\r\n\r\n    cleanup(){\r\n        this.setState({\r\n            RoomSales:'',\r\n            RoomTotal:'',\r\n            depPOS:'',\r\n            depCash:'',\r\n            depTransfer:'',\r\n            depComp:'',\r\n            TotalSales:'',\r\n            deproom:'',\r\n            \r\n        })\r\n    }\r\n\r\n    findRoomReport(){\r\n        var start = moment(this.state.date).format('MMM DD YYYY');\r\n        var end = moment(this.state.endDate).format('MMM DD YYYY');\r\n\r\n        \r\n        var findAllPool = `${getRoomSales}&&poolstartdate84=${start}&&poolendDate84=${end}`\r\n        \r\n        \r\n        this.setState({RoomSales:''})\r\n        fetch(`${findAllPool}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({RoomSales:data});\r\n            data.map((item) => {\r\n\r\n                var RmSales = 0;\r\n                var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)\r\n                this.setState({RoomTotal:roomSales});\r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({depPOS:allPOS});\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({depCash:allCash});\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({depTransfer:allTransfer});\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({depComp:allComp});\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({deproom:allRoom});\r\n                \r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n        \r\n            var AllSalesPoint = 0;\r\n            var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n            this.setState({TotalSales:TotalSalesPoints})\r\n\r\n        },1000)\r\n        \r\n\r\n    }\r\n\r\n    renderRoomSales=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                var sales = item.docketDetails;\r\n                \r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{sales.map(prod => prod.meal)}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POSAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CashAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.TransferAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CompDebit}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.roomDebit}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\">{item.roomNumbers}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POSAmount) + parseInt(item.CashAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)}thousandSeparator={true}displayType={\"text\"}/></b></td> \r\n                            \r\n                           \r\n                            \r\n                            \r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log (\">>> Inside Cashdetails\", this.state)\r\n        // var defaultdate = moment(this.state.date).format('MMM DD YYYY');\r\n        var totalSales = this.state.depPOS + this.state.depCash + this.state.depTransfer + this.state.deproom;\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Billinglogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <div className =\"container\">\r\n                <div>\r\n                    <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                </div>\r\n                <div>\r\n                    <center>\r\n                    <h6>{this.state.Hotelname}</h6>\r\n                    <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                    <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n                       \r\n                    </center>\r\n                </div>\r\n                <center>\r\n                    <h5>Daily PoolBar Sales Report ({this.state.shift})</h5><br/>\r\n                    <div>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderDate(this.state.startdate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderendDate(this.state.endDate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            <select type =\"button\" className=\"form-select mb-2 btn btn-primary mt-3 btnwidthp printing space selectadjuster\" name=\"shift\" value ={this.state.shift} onChange={this.handleChange}>\r\n                                <option selected value=''>Select Shift</option>\r\n                                <option value='Morning Shift'>Morning Shift</option>\r\n                                <option value='Night Shift'>Night Shift</option>\r\n                                <option value='All Day'>All Day</option>\r\n                                <option value='All Shifts'>All Shifts</option>\r\n                                \r\n                            </select>\r\n                            <button className=\"btn btn-primary space btnadjuster printing\" onClick={ () => {this.cleanup();this.findRoomReport()}}>Find</button>\r\n                        </span>\r\n                    </div>                        \r\n                                   \r\n                </center>\r\n                \r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust50\">Date</th>\r\n                            <th className=\"adjust50\">Description</th>\r\n                            <th className=\"adjust50\">POS (NGN)</th>\r\n                            <th className=\"adjust50\">Cash(NGN)</th>\r\n                            <th className=\"adjust50\">Transfer(NGN)</th>\r\n                            <th className=\"adjust50\">Compl(NGN)</th>\r\n                            <th className=\"adjust50\">Room(NGN)</th>\r\n                            <th className=\"adjust50\">Rm Num</th>\r\n                            <th className=\"adjust50\">Total(NGN)</th>\r\n                            \r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderRoomSales(this.state.RoomSales)}\r\n                        <tr>\r\n                            <td className=\"table-light table-striped adjust2\"> </td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\"><b>Total Collection</b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depPOS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depCash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depTransfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depComp)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.deproom)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"> </td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b> <NumberFormat value={totalSales} thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr>\r\n                        \r\n                    </tbody>\r\n                </table>\r\n                \r\n                \r\n                <h6>Total Collection:         <NumberFormat value={totalSales}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                <hr/>\r\n                <center>\r\n                \r\n                    <button className=\"btn btn-danger movebtn printing\" onClick={ () => this.props.history.push('/EndOfDay') }>Close</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ () => window.print() }>Print</button>\r\n                    <button className=\"btn btn-warning movebtn printing\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>    \r\n                        \r\n                </center>       \r\n            </div>\r\n            \r\n        );\r\n    }\r\n  \r\n    componentDidMount() {\r\n        console.log(\">>> Inside CashDidMount\", this.state)\r\n       \r\n        fetch(`${levyUrl}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({levyData:data})\r\n               \r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        // var start = moment(new Date()).format('MMM DD YYYY');\r\n        // var end = moment(new Date()).format('MMM DD YYYY');\r\n\r\n        \r\n        // var findAllPool = `${getRoomSales}&&startdate84=${start}&&endDate84=${end}`\r\n        \r\n        \r\n        // this.setState({RoomSales:''})\r\n        // fetch(`${findAllPool}`, {method:'GET'})\r\n        // .then((res) => res.json())\r\n        // .then((data) => {\r\n        //     this.setState({RoomSales:data});\r\n        //     data.map((item) => {\r\n\r\n        //         var RmSales = 0;\r\n        //         var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.CompDebit) + parseInt(item.roomDebit)\r\n        //         this.setState({RoomTotal:roomSales});\r\n\r\n        //         var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n        //             return totals + parseInt(item.POSAmount)\r\n        //         }, 0);\r\n        //         this.setState({depPOS:allPOS});\r\n\r\n        //         var allCash = data.map(item => item).reduce((totals, item) =>{\r\n        //             return totals + parseInt(item.CashAmount)\r\n        //         }, 0);\r\n        //         this.setState({depCash:allCash});\r\n\r\n        //         var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n        //             return totals + parseInt(item.TransferAmount)\r\n        //         }, 0);\r\n        //         this.setState({depTransfer:allTransfer});\r\n\r\n        //         var allComp = data.map(item => item).reduce((totals, item) =>{\r\n        //             return totals + parseInt(item.CompDebit)\r\n        //         }, 0);\r\n        //         this.setState({depComp:allComp});\r\n\r\n        //         var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n        //             return totals + parseInt(item.roomDebit)\r\n        //         }, 0);\r\n        //         this.setState({deproom:allRoom});\r\n                \r\n        //         return 'ok'\r\n        //     })\r\n            \r\n            \r\n        // });\r\n        // this.myTimer = setTimeout(() => {\r\n        \r\n        //     var AllSalesPoint = 0;\r\n        //     var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n        //     this.setState({TotalSales:TotalSalesPoints})\r\n\r\n        // },1000)\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n    }\r\n\r\n       \r\n}\r\n\r\n\r\nexport default PoolBarDailySales;","import React,{Component} from 'react';\r\nimport './BarReport.css';\r\nimport moment from 'moment';\r\nimport NumberFormat from 'react-number-format';\r\nimport Header3 from '../Header3';\r\nimport ClubLogin from '../ClubLogin';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst salesRecordsUrl='https://zarvichdemo.localto.net/clubSales';\r\nconst userName = \"https://zarvichdemo.localto.net/clubUserInfo\";\r\n\r\n\r\nclass ClubSalesReport extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        console.log(\">>>Inside SalesConstructor\",props)\r\n\r\n        this.state={\r\n            salesRecords:'',\r\n            totalSales:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n\r\n            \r\n            \r\n        }\r\n    }\r\n\r\n    handleTotal(){\r\n        const total = this.state.salesRecords.reduce((totalCost, item) => totalCost + parseInt(item.amountPaid), 0)\r\n        this.setState({totalSales:total})\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n          \r\n            login:true\r\n        })\r\n    }\r\n\r\n   \r\n    renderSalesData(data){\r\n        \r\n        if(data)\r\n        return data.map((item, _id) =>{\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                        <td className=\"table-light table-striped adjust2\">{moment(item.date).format('MMM DD YYYY')}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.docketNum}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.refID}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.roomNumbers}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.paymentMethod}</td>\r\n                            <td className=\"table-light table-striped adjust2\"><NumberFormat value={item.cost} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2\"><NumberFormat value={item.amountPaid} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                          \r\n                        </tr> \r\n                        <div className=\"accordion-flush\" id=\"accordionFlushExample\">\r\n                            <div className=\"accordion-item\">\r\n                                <h5 className=\"accordion-header\" id=\"flush-headingOne\">\r\n                                    <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\"  aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\r\n                                        <b style={{color:'blue'}}>Order Details</b>\r\n                                    </button>\r\n                                </h5>\r\n                                <div id=\"flush-collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\">\r\n                                    <div className=\"accordion-body\">\r\n\r\n                                        { item.docketDetails.map(food => (\r\n                                            \r\n                                            <>\r\n                                                {food.meal} (<NumberFormat value={food.mealPrice} thousandSeparator={true} displayType={\"text\"}/>.00), &nbsp;;\r\n                                                \r\n                                            \r\n                                            </>\r\n                                            \r\n                                        ))}\r\n                                    </div>\r\n                                                \r\n                                        \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                            \r\n                         \r\n                    </>            \r\n                )\r\n            \r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(\">>> Inside CompTorender\", this.state)\r\n        \r\n        if(localStorage.getItem('userInfo')==null||this.state.login===false){\r\n            return(\r\n                <>\r\n                    <ClubLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return(\r\n            <>\r\n            \r\n              <Header3/>\r\n                <center><h5>Reservations Daily Sales Report</h5></center>\r\n                <br/>\r\n                <table className=\"table table-hover\">\r\n\r\n                    <thead className=\"table-warning\">\r\n                       \r\n                        <tr>\r\n                        <th className=\"adjust2\">Date</th>\r\n                            <th className=\"adjust2\">Docket Num</th>\r\n                            <th className=\"adjust2\">Room ID</th>\r\n                            <th className=\"adjust2\">Room Num</th>\r\n                            <th className=\"adjust2\">Payment Method</th>\r\n                            <th className=\"adjust2\">Price(=N)</th>\r\n                            <th className=\"adjust2\">Amount Paid(=N)</th>\r\n                                                                \r\n                        </tr>\r\n                    </thead>\r\n                    \r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderSalesData(this.state.salesRecords)}\r\n                    </tbody>\r\n                </table>   \r\n                \r\n                      \r\n            \r\n                \r\n                        \r\n            </>\r\n        );\r\n    }\r\n    componentDidMount(){\r\n        console.log (\">>> Inside BarSalesTodidMount\")\r\n       \r\n       \r\n        fetch(salesRecordsUrl, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({salesRecords:data})\r\n           \r\n            \r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n       \r\n       \r\n        \r\n       \r\n    }\r\n}\r\nexport default ClubSalesReport;","import React,{Component} from 'react';\r\nimport '../../Bar/BarReport.css';\r\nimport Billinglogin from '../../Billinglogin';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\n\r\nclass EndOfDay extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        console.log(\">>>Inside GstConstructor\",props)\r\n        this.state={\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n        }\r\n\r\n    }\r\n    \r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n          \r\n            login:true\r\n        })\r\n    }\r\n\r\n   \r\n    render() {\r\n        console.log (\">>> Inside logindetails\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                   <Billinglogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        return(\r\n            <>\r\n              \r\n                <div className=\"background15ba\">\r\n                    <center>\r\n                        <div className=\"formdesign152\">\r\n                             <h4 className=\"mb-3\">Billing Reports</h4>\r\n                            <div>\r\n\r\n                                <center>\r\n                                   \r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('./CashCollection')}}>Daily Sales Report</button>\r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('./DailyRoomSales')}}>Accommodation Report</button>\r\n                                    <button className=\"btn btn-danger btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('./GuestBal')}}>Guest Balances</button>\r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('./RestaurantReport')}}>Restaurant Sales Report</button>\r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('./BarSalesReport')}}>Bar Sales Report</button>\r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('./PoolBarDailySales')}}>PoolBar Sales Report</button>\r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('./ReservationReports')}}>Reservations Report</button>\r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('./LaundryReport')}}>Laundry Sales Report</button>\r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('./GymnasiumReport')}}>Gymnasium Sales Report</button>\r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('./SmoothieReport')}}>Suya Sales Report</button>\r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('./SwimmingReport')}}>Swimming Pool Report</button>\r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('./MinimartReport')}}>Mini Mart Sales Report</button>\r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('./BarbequeReport')}}>Barbeque Sales Report</button>\r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('./ShishaReport')}}>Games Sales Report</button>\r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('./HallHireReport')}}>Hall Hire Report</button>\r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('./OtherSalesReport')}}>Other Sales Report</button>\r\n                                    {/* <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('./OwingGuests')}}>Owing Guests Report</button> */}\r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('./DailyDiscountList')}}>Room Discount Report</button>\r\n                                    {/* <button className=\"btn btn-warning btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('./GroupBill')}}>Group Bill</button> */}\r\n                                    <button className=\"btn btn-danger btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('./BillingMenu')}}>Close</button>\r\n                                    <button className=\"btn btn-warning btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>  \r\n                                    \r\n                                </center>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        \r\n\r\n                    </center>\r\n                   \r\n                </div>\r\n                <div className=\"pagebody3\">\r\n                    <input hidden/>\r\n                </div>\r\n            </>\r\n           \r\n\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\nexport default EndOfDay;\r\n","import React, { Component } from 'react';\r\nimport Billinglogin from '../../Billinglogin';\r\nimport '../Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport addDays from 'date-fns/addDays';\r\nimport DatePicker from 'react-datepicker';\r\nimport moment from 'moment';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\nconst getRoomSales = \"https://zarvichdemo.localto.net/checkin?actual=\";\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\n\r\nclass DiscountedRoomsReport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside CashConstructor\",props)\r\n        this.state = {\r\n            discountedRooms:'',\r\n            discountAmount:'',\r\n            discountType:'',\r\n            TotalDiscount:0,\r\n            TotalRoomRate:0,\r\n            TotalDailyRate:0,\r\n            roomRate:'',\r\n            date:new Date(),\r\n            searchDates:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n            \r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n\r\n    }\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            date: date\r\n        });\r\n    }\r\n    \r\n    renderDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.date}\r\n                    onChange={this.checkinhandleChange}\r\n                    maxDate={addDays(new Date(),1)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    \r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    findRoomReport(){\r\n        var searchdate = moment(this.state.date).format('YYYY-DD-MMM');\r\n        \r\n        fetch(`${getRoomSales}${searchdate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({discountedRooms:data});\r\n            data.map((item) => {\r\n\r\n                var discTotal = 0;\r\n                var AlldiscTotal = discTotal + (parseInt(item.roomRate) - parseInt(item.dailyRate))\r\n                this.setState({TotalDiscount:AlldiscTotal});\r\n                return 'ok'\r\n            });\r\n            \r\n        });\r\n\r\n        \r\n\r\n    }\r\n\r\n    renderDiscountRooms=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n                \r\n                var defaultdate = moment(item.arrivalDate).format('YYYY-DD-MMM');\r\n                if(item.discounType!==''){\r\n                    return(\r\n                        <>\r\n                            <tr key= {item.refID}>\r\n                                \r\n                                <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                                <td className=\"table-light table-striped adjust224\">{item.fname} {item.lname}</td>\r\n                                <td className=\"table-light table-striped adjust2\">{item.roomNumbers}</td>\r\n                                <td className=\"table-light table-striped adjust2\">{item.roomtypeName}</td>\r\n                                <td className=\"table-light table-striped adjust2\">{item.discounType}</td>\r\n                                <td className=\"table-light table-striped adjust2\"><NumberFormat value={item.roomRate}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                                <td className=\"table-light table-striped adjust2\"><NumberFormat value={item.dailyRate}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                                <td className=\"table-light table-striped adjust2\"><b><NumberFormat value={parseInt(item.roomRate) - parseInt(item.dailyRate)}thousandSeparator={true}displayType={\"text\"}/></b></td> \r\n                                \r\n                            </tr>\r\n                            \r\n                        </>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <>\r\n                            \r\n                        </>\r\n                    )\r\n                }\r\n                               \r\n                \r\n               \r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log (\">>> Inside Cashdetails\", this.state)\r\n        // var defaultdate = moment(this.state.date).format('MMM DD YYYY');\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Billinglogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <div className =\"container\">\r\n                <div>\r\n                    <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                </div>\r\n                <div>\r\n                    <center>\r\n                        <h6>{this.state.Hotelname}</h6>\r\n                        <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                        <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n                       \r\n                    </center>\r\n                </div>\r\n                <center>\r\n                    <h5>Room Discount Report</h5><br/>\r\n                    {/* <label>\r\n                        {this.renderDate(this.state.date)}\r\n                    </label>\r\n                    <p className=\"textSize printing blinkblink2\">Select Report Date</p> */}\r\n                    <br/>\r\n                    {/* <button className=\"btn btn-primary printing alignBtn\" onClick={ () => this.findRoomReport()}>Find</button> */}\r\n                        \r\n                                   \r\n                </center>\r\n                \r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust50\">Date</th>\r\n                            <th className=\"adjust50\">Names</th>\r\n                            <th className=\"adjust50\">Room Num</th>\r\n                            <th className=\"adjust50\">Room Type</th>\r\n                            <th className=\"adjust50\">Discount Type</th>\r\n                            <th className=\"adjust50\">Room Rate(NGN)</th>\r\n                            <th className=\"adjust50\">Daily Rate(NGN)</th>\r\n                            <th className=\"adjust50\">Discount (NGN)</th>\r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderDiscountRooms(this.state.discountedRooms)}\r\n                        <tr>\r\n                            {/* <td className=\"table-light table-striped adjust2\">{defaultdate}</td> */}\r\n                            <td className=\"table-light table-striped adjust2\"><b>Total Discount</b></td>\r\n                            <td className=\"table-light table-striped adjust2\"> </td>\r\n                            <td className=\"table-light table-striped adjust2\"> </td>\r\n                            <td className=\"table-light table-striped adjust2\"> </td>\r\n                            <td className=\"table-light table-striped adjust2\"> </td>\r\n                            <td className=\"table-light table-striped adjust2\"> </td>\r\n                            <td className=\"table-light table-striped adjust2\"> </td>\r\n                            <td className=\"table-light table-striped adjust2\"><b> <NumberFormat value={this.state.TotalDiscount}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr>\r\n                        \r\n                    </tbody>\r\n                </table>\r\n                \r\n                \r\n                <h6>Total Daily Discount:         <NumberFormat value={this.state.TotalDiscount}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                <hr/>\r\n                <center>\r\n                \r\n                    <button className=\"btn btn-danger movebtn printing\" onClick={ () => this.props.history.push('/EndOfDay') }>Close</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ () => window.print() }>Print</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>  \r\n                        \r\n                </center>       \r\n            </div>\r\n            \r\n        );\r\n    }\r\n  \r\n    componentDidMount() {\r\n        console.log(\">>> Inside CashDidMount\", this.state)\r\n        // var defaultdate = moment(this.state.date).format('MMM-DD-YYYY');\r\n        \r\n\r\n        fetch(`${getRoomSales}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({discountedRooms:data});\r\n            \r\n            var allRmRate = data.map(item => item).reduce((rates, obj) =>{\r\n                return rates + parseInt(obj.roomRate)\r\n            }, 0);\r\n\r\n            var allDailyRate = data.map(item => item).reduce((rates, obj) =>{\r\n                return rates + parseInt(obj.dailyRate)\r\n            }, 0);\r\n            \r\n\r\n            var discTotal = 0;\r\n            var AlldiscTotal = discTotal + allRmRate - allDailyRate\r\n            this.setState({TotalDiscount:AlldiscTotal});\r\n            return 'ok'\r\n          \r\n\r\n        });\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n    }\r\n\r\n       \r\n}\r\n\r\n\r\nexport default DiscountedRoomsReport;","import React, { Component } from 'react';\r\nimport NumberFormat from 'react-number-format';\r\nimport '../Reception.css';\r\nimport moment from 'moment';\r\nimport Billinglogin from '../../Billinglogin';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst getOrgUrl = \"https://zarvichdemo.localto.net/org?grpName=\";\r\nconst getGroupDataUrl = \"https://zarvichdemo.localto.net/guestbillingSummary?orgName=\";\r\n// const getgroupDocketsUrl = \"/posting\";\r\nconst getfunctionfoodanddrinkUrl = \"https://zarvichdemo.localto.net/getfoodanddrinks?orgName=\";\r\nconst getgroupDepositUrl = \"https://zarvichdemo.localto.net/MainfunctionDep?orgName=\";\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\n// const getGlobalChrgesUrl = \"/getFirstNite?orgName=\";\r\n// const getBillgroupIDsUrl = \"/InhouseBill?orgNamex=\";\r\n\r\n\r\nclass GroupBill extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside GstConstructor\",props)\r\n\r\n        this.state = {\r\n            groupData:'',\r\n            groupBillData:'',\r\n            functionFandB:'',\r\n            totalfuncttionFandB:0,\r\n            groupPayments:'',\r\n            org:'',\r\n            orgName:'',\r\n            startDate:'',\r\n            endDate:'',\r\n            departureDate:'',\r\n            totalDockets:0,\r\n            POSDeposit:0,\r\n            CashDeposit:0,\r\n            TransferDeposit:0,\r\n            CompDebit:0,\r\n            roomDebit:0,\r\n            TotalDeposits:0,\r\n            totalAcc:0,\r\n            calcVAT:0,\r\n            calcTourismLev:0,\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            TotalStay:[],\r\n            guestInHouse:'',\r\n            TotalBillsInHouse:0,\r\n            Inhousebilldetails:'',\r\n            calDockets:0\r\n\r\n            \r\n        };\r\n        this.starthandleChange = this.starthandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n        \r\n    }\r\n    renderstartDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.startDate}\r\n                    onChange={this.starthandleChange}\r\n                    maxDate={(new Date())}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText=\"Search Start Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    starthandleChange(date) {\r\n        this.setState({\r\n            startDate: date\r\n        });\r\n    }\r\n\r\n\r\n    renderendDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.endDate}\r\n                    onChange={this.endhandleChange}\r\n                    maxDate={(new Date())}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText=\"Search End Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            endDate: date\r\n        });\r\n    }\r\n\r\n\r\n\r\n    handleChange=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n    }\r\n\r\n\r\n    renderAllOrgs(data){\r\n        if(data) {\r\n           data.sort((a, b) => a.orgName - b.orgName);\r\n            return data.map((item) => {\r\n                return(\r\n                    <>\r\n                        <option key={item._id} value={item.orgName}>\r\n                            {item.orgName}\r\n                        </option>\r\n                    </>\r\n                )\r\n                \r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n    findGroup(){\r\n        // var start = moment(this.state.startDate).format('MMM DD YYYY');\r\n        // var end = moment(this.state.endDate).format('MMM DD YYYY');\r\n        // var searchUrl=`${getGroupDataUrl}?orgName=${this.state.orgName}&&startDate=${start}&&endDate=${end}`;\r\n        // var docketSearchUrl = `${getgroupDocketsUrl}?orgName=${this.state.orgName}&&startDate=${start}&&endDate=${end}`;\r\n        // var FandBsearchUrl=`${getfunctionfoodanddrinkUrl}?orgName=${this.state.orgName}&&startDate=${start}&&endDate=${end}`;\r\n        // var FandBsearchUrl=`${getfunctionfoodanddrinkUrl}?orgName=${this.state.orgName}`\r\n        \r\n        fetch(`${getGroupDataUrl}${this.state.orgName}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({groupData:data});\r\n            var allstay = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TotalAccommodation)\r\n            }, 0);\r\n            this.setState({totalAcc:allstay})\r\n        });\r\n\r\n        // fetch(`${getGlobalChrgesUrl}${this.state.orgName}`, {method:'GET'})\r\n        // .then((res) => res.json())\r\n        // .then((data) => {\r\n            \r\n        //     data.map((item)=>{\r\n        //         let arrDatex = moment(item.arrivalDate);\r\n        //         sessionStorage.setItem('arrivalDtx',arrDatex)\r\n        //         var thisDate = new Date();\r\n        //         var endDatex = moment(thisDate);\r\n        //         sessionStorage.setItem('endDtx',endDatex);\r\n        //         var getArrival = moment(sessionStorage.getItem('arrivalDtx'));\r\n        //         var diff = endDatex.diff(getArrival);   \r\n        //         var comp = Math.ceil(diff/(1000*3600*24)-1);\r\n        //         if(comp===0||comp<0){\r\n        //             comp=1;\r\n        //         }\r\n        //         else{\r\n        //             comp = Math.ceil(diff/(1000*3600*24)-1);\r\n        //         }\r\n                \r\n        //         var AllInHouse = data.map(item => item).reduce((totals, item) =>{\r\n        //             return totals + parseInt(item.dailyRate*comp)   \r\n        //         }, 0);\r\n        //         this.setState({\r\n        //             guestInHouse:data,\r\n        //             TotalBillsInHouse:AllInHouse\r\n                    \r\n        //         })\r\n        //         return 'ok'\r\n            \r\n           \r\n        //     })\r\n                \r\n        // })\r\n\r\n        fetch(`${getGroupDataUrl}${this.state.orgName}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({groupBillData:data});\r\n            var allDockets = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TotalRoomService)\r\n            }, 0);\r\n            this.setState({totalDockets:allDockets})\r\n        });\r\n\r\n        // fetch(`${getBillgroupIDsUrl}${this.state.orgName}`, {method:'GET'})\r\n        // .then((res) => res.json())\r\n        // .then((data) => {\r\n        //     this.setState({Inhousebilldetails:data})\r\n\r\n        //     var allDocketX = data.map(item => item).reduce((totals, item) =>{\r\n        //         return totals + parseInt(item.cost)\r\n        //     }, 0);\r\n        //     this.setState({calDockets:allDocketX})\r\n        //     // sessionStorage.setItem('Dockets',allDocketX)\r\n\r\n\r\n        // })\r\n\r\n        fetch(`${getfunctionfoodanddrinkUrl}${this.state.orgName}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({functionFandB:data});\r\n            var allFandB = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.amount)\r\n            }, 0);\r\n            this.setState({totalfuncttionFandB:allFandB})\r\n        });\r\n       \r\n        fetch(`${getgroupDepositUrl}${this.state.orgName}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({groupPayments:data});\r\n            var allPOSDeposits = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({POSDeposit:allPOSDeposits})\r\n\r\n            var allCashDeposits = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({CashDeposit:allCashDeposits})\r\n\r\n            var allTransferDeposits = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({TransferDeposit:allTransferDeposits})\r\n            this.setState({\r\n            CompDebit:0,\r\n            roomDebit:0\r\n            })\r\n\r\n            var AllDeposits = 0;\r\n            var TotalDeposits = AllDeposits + allTransferDeposits + allCashDeposits + allPOSDeposits;\r\n            this.setState({TotalDeposits})\r\n\r\n            \r\n\r\n        });\r\n    }\r\n\r\n    renderRooms=(data)=>{\r\n        if(data){\r\n            data.sort((a, b) => new Date(b.arrivalDate) - new Date(a.arrivalDate));\r\n            return data.map((item)=>{\r\n                // var thisDate = new Date();\r\n                // var endDate = moment(thisDate);\r\n               \r\n                // var startDt = moment(item.arrivalDate);\r\n               \r\n                // var diff =endDate.diff(startDt);\r\n                // var datecomp = Math.ceil(diff/(1000*3600*24));\r\n                var departure = moment(item.departureDate).format('MMM DD YYYY');\r\n\r\n                    \r\n                return(\r\n                    <>\r\n                        <tr key= {item.refID}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2b\">{item.fname} {item.lname}</td>\r\n                            <td className=\"table-light table-striped adjust2b\">{item.arrivalDate}</td>\r\n                            <td className=\"table-light table-striped adjust2b\">{departure}</td>\r\n                            <td className=\"table-light table-striped adjust2b\">{item.roomNum}</td>\r\n                            <td className=\"table-light table-striped adjust2b\">{item.roomtype}</td>\r\n                            <td className=\"table-light table-striped adjust2b\"><NumberFormat value={item.dailyRte}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2b\">{item.stay} Nights</td>\r\n                            <td className=\"table-light table-striped adjust2b\"><NumberFormat value={item.TotalAccommodation}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n                \r\n\r\n               \r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    // renderInhouse=(data)=>{\r\n    //     if(data){\r\n    //         data.sort((a, b) => new Date(b.arrivalDate) - new Date(a.arrivalDate));\r\n    //         return data.map((item)=>{\r\n                \r\n    //             var arrival = moment(item.arrivalDate).format('YYYY-DD-MMM');\r\n    //             var arrDatex = moment(item.arrivalDate);\r\n    //             sessionStorage.setItem('arrivalDtx',arrDatex)\r\n    //             var thisDate = new Date();\r\n    //             var endDatex = moment(thisDate);\r\n    //             sessionStorage.setItem('endDtx',endDatex);\r\n    //             var getArrival = moment(sessionStorage.getItem('arrivalDtx'));\r\n    //             var diff = endDatex.diff(getArrival);   \r\n    //             var comp = Math.ceil(diff/(1000*3600*24)-1);\r\n    //             if(comp===0||comp<0){\r\n    //                 comp=1;\r\n    //             }\r\n    //             else{\r\n    //                 comp = Math.ceil(diff/(1000*3600*24)-1);\r\n    //             }\r\n\r\n                \r\n\r\n    //             return(\r\n    //                 <>\r\n    //                     <tr key= {item.refID}>\r\n                            \r\n    //                         <td className=\"table-light table-striped adjust2b\">{item.fname} {item.lname}</td>\r\n    //                         <td className=\"table-light table-striped adjust2b\">{arrival}</td>\r\n    //                         <td className=\"table-light table-striped adjust2b\">In-House</td>\r\n    //                         <td className=\"table-light table-striped adjust2b\">{item.roomNumbers}</td>\r\n    //                         <td className=\"table-light table-striped adjust2b\">{item.roomtypeName}</td>\r\n    //                         <td className=\"table-light table-striped adjust2b\"><NumberFormat value={item.dailyRate}thousandSeparator={true}displayType={\"text\"}/></td>\r\n    //                         <td className=\"table-light table-striped adjust2b\">{comp} Nights</td>\r\n    //                         <td className=\"table-light table-striped adjust2b\"><NumberFormat value={parseInt(item.dailyRate)*(comp)}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            \r\n    //                     </tr> \r\n    //                 </>\r\n    //             )\r\n                \r\n    //         })\r\n            \r\n    //     }\r\n           \r\n    // }\r\n\r\n    renderDockets=(data)=>{\r\n        if(data){\r\n            data.sort((a, b) => new Date(b.departureDate) - new Date(a.departureDate));\r\n            return data.map((item)=>{\r\n                var departure = moment(item.departureDate).format('MMM DD YYYY');\r\n                if(item.TotalRoomService!=='0'){\r\n                    return(\r\n                        <>\r\n                                <tr key= {item.refID}>\r\n                                \r\n                                <td className=\"table-light table-striped adjust2b\">{departure}</td>\r\n                                <td className=\"table-light table-striped adjust2b\">{item.roomNum}</td>\r\n                                <td className=\"table-light table-striped adjust2b\">{item.fname} {item.lname}</td>\r\n                                <td className=\"table-light table-striped adjust2b\"><NumberFormat value={item.TotalRoomService}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                                \r\n                            </tr>\r\n                        </>\r\n                    )\r\n                }\r\n                else{\r\n                    return null\r\n                }\r\n                \r\n\r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    renderInhouseDockets=(data)=>{\r\n        if(data){\r\n            data.sort((a, b) => new Date(b.departureDate) - new Date(a.departureDate));\r\n            return data.map((item)=>{\r\n                if(item.cost!=='0'){\r\n                    return(\r\n                        <>\r\n                                <tr key= {item.refID}>\r\n                                \r\n                                <td className=\"table-light table-striped adjust2b\">{item.date}</td>\r\n                                <td className=\"table-light table-striped adjust2b\">{item.roomNumbers}</td>\r\n                                <td className=\"table-light table-striped adjust2b\"><NumberFormat value={item.cost}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                                \r\n                            </tr>\r\n                        </>\r\n                    )\r\n                }\r\n                else{\r\n                    return null\r\n                }\r\n                \r\n\r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    renderFandB=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n                \r\n                return(\r\n                    <>\r\n                            <tr key= {item.resID}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2b\">{item.transactionDate}</td>\r\n                            <td className=\"table-light table-striped adjust2b\">{item.resID}</td>\r\n                            <td className=\"table-light table-striped adjust2b\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2b\">{item.qty}</td>\r\n                            <td className=\"table-light table-striped adjust2b\"><NumberFormat value={item.amount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            \r\n                        </tr>\r\n                    </>\r\n                )\r\n\r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    renderDeposits=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n                \r\n                return(\r\n                    <>\r\n                        <tr key= {item.refID}>\r\n                            <td className=\"table-light table-striped adjust2b\">{item.date}</td>\r\n                            <td className=\"table-light table-striped adjust2b\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2b\">{item.receiptNum}</td>\r\n                            <td className=\"table-light table-striped adjust2b\"><NumberFormat value={this.state.POSDeposit}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2b\"><NumberFormat value={this.state.CashDeposit}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2b\"><NumberFormat value={this.state.TransferDeposit}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2b\"><NumberFormat value={this.state.TotalDeposits}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                        </tr>\r\n                    </>\r\n                )\r\n\r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n      \r\n    \r\n    render() {\r\n        console.log(\">>> Inside Gstrender\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Billinglogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        return(\r\n            \r\n            <div className =\"container\">\r\n                <div>\r\n                    <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                </div>\r\n                <div>\r\n                    <center>\r\n                        <h6>Zarvich Hotels Ltd.</h6>\r\n                        <p className=\"textSize\">No ABC Road, Wuse II, Abuja, Nigeria</p>\r\n                        <p className=\"textSize\">+234 803 590 5421, info@zarvichosh.com</p>\r\n                       \r\n                    </center>\r\n                </div>\r\n                <center>\r\n                    <h5>{this.state.orgName} Group Bill</h5><br/>\r\n                    <hr style={{color:'deeppink'}}/>\r\n                    <div className=\"row mt-4\">\r\n                        \r\n                        <div className=\"col-3\">\r\n                            <select type =\"button\" className=\"form-select mb-2 btn btn-primary mt-3 col-2 set1 printing\" name=\"orgName\" onChange={this.handleChange}>\r\n                                <option selected value=''>Select Org</option>\r\n                                {this.renderAllOrgs(this.state.org)}\r\n                            </select>\r\n                        </div>\r\n                        {/* <div className=\"col-3\">\r\n                            <label>\r\n                                {this.renderstartDate(this.state.startDate)}\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <label>\r\n                                {this.renderendDate(this.state.endDate)}\r\n                            </label>\r\n                        </div> */}\r\n                        <div className=\"col-3\">\r\n                            <button className=\"btn btn-primary printing set2\" onClick={ () => this.findGroup()}>Find</button>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <hr style={{color:'deeppink'}}/>\r\n                    <br/><br/>\r\n               \r\n                </center>\r\n                <h6 style={{color:'blue'}}>Accommodation Details</h6>\r\n                <hr/>\r\n                                               \r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust5\">Names</th>\r\n                            <th className=\"adjust5\">Arrival Date</th>\r\n                            <th className=\"adjust5\">Departure Date</th>\r\n                            <th className=\"adjust5\">Room Num</th>\r\n                            <th className=\"adjust5\">Room Type</th>\r\n                            <th className=\"adjust5\">Daily Rate(NGN)</th>\r\n                            <th className=\"adjust5\">Stay</th>\r\n                            <th className=\"adjust5\">Total(NGN)</th>\r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderRooms(this.state.groupData)}\r\n                        \r\n                    </tbody>\r\n                    \r\n                </table>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <h6>Accommodation Total: <NumberFormat value={this.state.totalAcc}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                    </div>\r\n                    {/* <div className=\"col-3\">\r\n                        <p>VAT (7.5%): <NumberFormat value={this.state.calcVAT}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></p>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                        <p>Tourism Levy (10%): <NumberFormat value={this.state.calcTourismLev}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></p>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                        <h6>Grand Total: <NumberFormat value={this.state.totalAcc - this.state.calcVAT - this.state.calcTourismLev}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                    </div> */}\r\n                </div>\r\n                <hr/>\r\n                <h6 style={{color:'blue'}}>Room Service Details</h6>\r\n                \r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust5\">Date</th>\r\n                            <th className=\"adjust5\">Room Num</th>\r\n                            <th className=\"adjust5\">Names</th>\r\n                           <th className=\"adjust5\">Total(NGN)</th>\r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderDockets(this.state.groupBillData)}\r\n\r\n                        <h6>Room Service Total: <NumberFormat value={this.state.totalDockets}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                    </tbody>\r\n                </table>  \r\n                <h6 style={{color:'blue'}}>Banquet Bill</h6>\r\n                <hr/>\r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust5\">Date</th>\r\n                            <th className=\"adjust5\">ID</th>\r\n                            <th className=\"adjust5\">Description</th>\r\n                            <th className=\"adjust5\">Qty</th>\r\n                            <th className=\"adjust5\">Amount (NGN)</th>\r\n                            \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderFandB(this.state.functionFandB)}\r\n                        <h6>Banquet Bill Total: <NumberFormat value={this.state.totalfuncttionFandB}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                    </tbody>\r\n                </table>  \r\n                <h6 style={{color:'blue'}}>Deposit Details</h6>\r\n                <hr/>\r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust5\">Date</th>\r\n                            <th className=\"adjust5\">Description</th>\r\n                            <th className=\"adjust5\">Receipt Num</th>\r\n                            <th className=\"adjust5\">POS(NGN)</th>\r\n                            <th className=\"adjust5\">Cash(NGN)</th>\r\n                            <th className=\"adjust5\">Transfer(NGN)</th>\r\n                            <th className=\"adjust5\">Total(NGN)</th>\r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderDeposits(this.state.groupPayments)}\r\n                        <h6>Total Deposits: <NumberFormat value={this.state.TotalDeposits}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                    </tbody>\r\n                </table>  \r\n                <hr/>\r\n                <center>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2 increasewidth\">\r\n                            <h6>Total Deposit:</h6><p><NumberFormat value={this.state.TotalDeposits}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></p>\r\n                        </div>\r\n                        <div className=\"col-2 increasewidth\">\r\n                            <h6>Accommodation:</h6><p><NumberFormat value={this.state.totalAcc}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></p>\r\n                        </div>\r\n                        <div className=\"col-2 increasewidth\">\r\n                            <h6>Room Service:</h6><p><NumberFormat value={this.state.totalDockets}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></p>    \r\n                        </div>\r\n                        <div className=\"col-2 increasewidth\">\r\n                            <h6>Banquet Bill:</h6><p><NumberFormat value={this.state.totalfuncttionFandB}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></p>    \r\n                        </div>\r\n                        <div className=\"col-2 increasewidth\">\r\n                                <h6>Balance:</h6><p><NumberFormat value={this.state.TotalDeposits - (this.state.totalAcc + this.state.totalDockets+this.state.totalfuncttionFandB)}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></p>   \r\n                        </div>\r\n                        <hr/>\r\n                        \r\n                    </div>    \r\n                </center>\r\n\r\n                <center>\r\n                    <button className=\"btn btn-danger printing\" onClick={ () => this.props.history.push('/EndOfDay')}>Close</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ () => window.print() }>Print</button>\r\n                        \r\n                </center>     \r\n\r\n            </div>\r\n                \r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\">>> Inside GstDidMount\", this.state)\r\n\r\n        fetch(`${getOrgUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n                this.setState({\r\n                org:data\r\n            })\r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n    }\r\n\r\n    \r\n    \r\n}\r\n\r\nexport default GroupBill;","import React,{Component} from 'react';\r\nimport '../Bar/BarReport.css';\r\nimport './Reception.css';\r\nimport FLogin from '../FLogin';\r\nimport moment from 'moment'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst userName = \"https://zarvichdemo.localto.net/fofUserInfo\";\r\n\r\nclass ReceptionMenu extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        console.log(\">>>Inside GstConstructor\",props)\r\n        this.state={\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n        }\r\n\r\n    }\r\n    \r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n          \r\n            login:true\r\n        })\r\n    }\r\n\r\n   \r\n    render() {\r\n        console.log (\">>> Inside logindetails\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                   <FLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        return(\r\n            <>\r\n              \r\n                <div className=\"background15b\">\r\n                    <center>\r\n                        <div className=\"formdesign152\">\r\n                             <h4 className=\"mb-3\">Reception Reports</h4>\r\n                            <div>\r\n\r\n                                <center>\r\n                                   \r\n                                    \r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ () => this.props.history.push('./Occuppancy')}>Occupancy Report</button>\r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ () => this.props.history.push('./HouseKeepingPrint')}>HouseKeeping Print</button>\r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ () => this.props.history.push('./roomChangeReport')}>Room Change Report</button>\r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onMouseOver={()=> sessionStorage.setItem('chkOutDate',moment(new Date()).format('YYYY-DD-MMM'))} onClick={ () => this.props.history.push('./DailyCheckIn')}>Daily Check In</button>\r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onMouseOver={()=> sessionStorage.setItem('chkOutDate',moment(new Date()).format('YYYY-DD-MMM'))} onClick={ () => this.props.history.push('./checkOut')}>Daily Check Out</button>\r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ () => this.props.history.push('./policeReport')}>Police Report</button>\r\n                                    {/* <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ () => this.props.history.push('./ReceptionFunctnAcc')}>Function Accommodation</button> */}\r\n                                    <button className=\"btn btn-danger btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('/roomchart')}}>Close</button>\r\n                                    <button className=\"btn btn-danger btnwidth15 mb-3\" onClick={ ()=> this.logout()}>\r\n                                    Log Out {localStorage.getItem('userInfo').split(' ')[0]}\r\n                                    </button>\r\n                                    \r\n                                </center>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        \r\n\r\n                    </center>\r\n                   \r\n                </div>\r\n                <div className=\"pagebody3\">\r\n                    <input hidden/>\r\n                </div>\r\n            </>\r\n           \r\n\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\nexport default ReceptionMenu;\r\n","import React, { Component } from 'react';\r\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\r\nimport format from 'date-fns/format';\r\nimport parse from 'date-fns/parse';\r\nimport startOfWeek from 'date-fns/startOfWeek';\r\nimport getDay from 'date-fns/getDay';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport DatePicker from 'react-datepicker';\r\nimport { locales } from 'moment';\r\nimport addDays from 'date-fns/addDays';\r\nimport '../Reception.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport FLogin from '../../FLogin';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport moment from 'moment';\r\nimport NumberFormat from 'react-number-format';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nconst localizer = dateFnsLocalizer({\r\n   format,\r\n   parse,\r\n   startOfWeek,\r\n   getDay,\r\n   locales,\r\n})\r\nconst PostReservation = \"https://zarvichdemo.localto.net/functionPosts\";\r\nconst GetReservation = \"https://zarvichdemo.localto.net/getHallReservation\";\r\nconst HallUrl = \"https://zarvichdemo.localto.net/getHalls?hallType=\";\r\nconst fofUserInfo = \"https://zarvichdemo.localto.net/fofUserInfo\";\r\nconst getPaymentMethods = \"https://zarvichdemo.localto.net/paymentMethods\";\r\nconst postOtherSalesUrl = \"https://zarvichdemo.localto.net/otherSales\";\r\n\r\nclass HallHire extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\">>> inside ReservContructor\", props)\r\n        this.state = {\r\n            events: [],\r\n            _id:Math.floor(Math.random()*10000),\r\n            fname:'',\r\n            lname:'',\r\n            allDay: '',\r\n            start: '',\r\n            end: '',\r\n            Hall: '',\r\n            title:'',\r\n            phone:'',\r\n            price:'',\r\n            rsvAmount:'',\r\n            displayAllHalls:'',\r\n            othersedit:false,\r\n            printBTN:'Print',\r\n            displayPaymentMethods:'',\r\n            paymentMethod:'',\r\n            date:new Date(),\r\n            loginDetails:'',\r\n            description1:'Room Reservation',\r\n            email:'None',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n            \r\n            \r\n        };\r\n        this.starthandleChange = this.starthandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenOthrsModal(){\r\n        this.setState({\r\n            othersedit: true\r\n\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onCloseOthrspModal(){\r\n        this.setState({\r\n            othersedit: false\r\n        })\r\n        \r\n    }\r\n\r\n    sendtoprinterOthrs(){\r\n        if(this.state.printBTN==='Print'){\r\n            window.print();\r\n            this.setState({printBTN:'Close'})\r\n        }\r\n        else if(this.state.printBTN==='Close'){\r\n            this.setState({othersedit: false})      \r\n            this.setState({printBTN:'Print'})\r\n\r\n            this.handleResvSubmit();\r\n            this.handleSubmit()\r\n            \r\n        }\r\n        \r\n       \r\n    }\r\n\r\n    handlePayMethData=(event)=>{\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n        if(this.state.rsvAmount!==null){\r\n            fetch(`${getPaymentMethods}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayPaymentMethods:data\r\n                })\r\n            })\r\n        }\r\n\r\n       \r\n\r\n    }\r\n\r\n    renderPayMeth(data){\r\n        if(data) {\r\n            return data.map((item) => {\r\n                return(\r\n                    <>\r\n                        <option key={item.method} value={item.method}>\r\n                            {item.method}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    \r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n           \r\n        })\r\n        \r\n    }\r\n\r\n    // handleChange2 = (event) => {\r\n    //     this.setState({\r\n    //         [event.target.name]:event.target.value\r\n           \r\n    //     })\r\n    //     fetch(`${HallUrl}${event.target.value}`, {method:'GET'})\r\n    //     .then((res) => res.json())\r\n    //     .then((data) => {\r\n    //        data.map((item)=> {\r\n    //             this.setState({price:item.price})\r\n    //             return 'ok'\r\n    //        })\r\n           \r\n    //     })\r\n        \r\n        \r\n    // }\r\n\r\n    starthandleChange(date) {\r\n        this.setState({\r\n            start: date\r\n        });\r\n        var newtitle =(this.state.room+  ' '   +this.state.fname+  ' '  +this.state.lname+ ' ' +this.state.phone)\r\n        this.setState({title:newtitle})\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            end: date\r\n        });\r\n    }\r\n\r\n    renderstartDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.start}\r\n                    onChange={this.starthandleChange}\r\n                    minDate={new Date()}\r\n                    maxDate={addDays(new Date(),31)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize51\"\r\n                    placeholderText=\"Start Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    renderendDate() {\r\n        return (\r\n            <div >\r\n                <DatePicker\r\n                    selected={this.state.end}\r\n                    onChange={this.endhandleChange}\r\n                    minDate={addDays(this.state.start,1)}\r\n                    maxDate={addDays(new Date(),31)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize51\"\r\n                    placeholderText=\"End Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleroomData2=(event)=>{\r\n        this.setState({\r\n            [event.target.name]:event.target.value,\r\n            allDay:true\r\n        })\r\n        \r\n        if(this.state.orgName!==null){\r\n            fetch(`${HallUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    displayAllHalls:data\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    async handleSubmit() {\r\n          \r\n        try {\r\n            if(this.state.paymentMethod===\"POS\"){\r\n                var billingPOSSales = {\r\n                    docketNum:'BillSales'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${new Date()}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.rsvAmount}`,\r\n                    POSAmount:`${this.state.rsvAmount}`,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    description:`${this.state.description1}`,\r\n                    group:`${this.state.group}`,\r\n                    groupEmail:`${this.state.email}`,\r\n                    groupPhone:`${this.state.phone}`,\r\n                    refID:`${this.state._id}`,\r\n                    department: \"Other Sales\",\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                }\r\n                let result1 = await fetch(postOtherSalesUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        billingPOSSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result1>  ' + result1)\r\n\r\n                               \r\n            }\r\n            \r\n            if(this.state.paymentMethod===\"Cash\"){\r\n                var billingCashSales = {\r\n                    docketNum:'BillSales'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${new Date()}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.rsvAmount}`,\r\n                    POSAmount:0,\r\n                    CashAmount:`${this.state.rsvAmount}`,\r\n                    TransferAmount:0,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    description:`${this.state.description1}`,\r\n                    group:`${this.state.group}`,\r\n                    groupEmail:`${this.state.email}`,\r\n                    groupPhone:`${this.state.phone}`,\r\n                    refID:`${this.state._id}`,\r\n                    department: \"Other Sales\",\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                   \r\n                }\r\n                let result2 = await fetch(postOtherSalesUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        billingCashSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result2>  ' + result2)\r\n                \r\n               \r\n            }\r\n\r\n           \r\n           \r\n\r\n            if(this.state.paymentMethod===\"Transfer\"){\r\n                var billingTransferSales = {\r\n                    docketNum:'BillSales'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${new Date()}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.rsvAmount}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:`${this.state.rsvAmount}`,\r\n                    CompDebit:0,\r\n                    roomDebit:0,\r\n                    description:`${this.state.description1}`,\r\n                    group:`${this.state.group}`,\r\n                    groupEmail:`${this.state.email}`,\r\n                    groupPhone:`${this.state.phone}`,\r\n                    refID:`${this.state._id}`,\r\n                    department: \"Other Sales\",\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                   \r\n                }\r\n                let result3 = await fetch(postOtherSalesUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        billingTransferSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result3>  ' + result3)\r\n\r\n            }\r\n           \r\n\r\n            if(this.state.paymentMethod===\"Complimentary\"){\r\n                var billingComplSales = {\r\n                    docketNum:'BillSales'+Math.floor(Math.random()*10000),\r\n                    date: moment(`${new Date()}`).format('MMM DD YYYY'),\r\n                    cost:`${this.state.rsvAmount}`,\r\n                    POSAmount:0,\r\n                    CashAmount:0,\r\n                    TransferAmount:0,\r\n                    CompDebit:`${this.state.rsvAmount}`,\r\n                    roomDebit:0,\r\n                    description:`${this.state.description1}`,\r\n                    group:`${this.state.group}`,\r\n                    groupEmail:`${this.state.email}`,\r\n                    groupPhone:`${this.state.phone}`,\r\n                    refID:`${this.state._id}`,\r\n                    department: \"Other Sales\",\r\n                    paymentMethod:`${this.state.paymentMethod}`,\r\n                    user: localStorage.getItem('userInfo'),\r\n                    shift:localStorage.getItem('shift')\r\n                   \r\n                   \r\n                }\r\n                let result4 = await fetch(postOtherSalesUrl, {\r\n                    method: 'post',\r\n    \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n    \r\n                    body: JSON.stringify(\r\n                        billingComplSales\r\n                       \r\n                    )\r\n                    \r\n                });\r\n                console.log('result4>  ' + result4)\r\n\r\n                \r\n            }\r\n\r\n            \r\n            this.setState({description1:''})\r\n            this.setState({displayPaymentMethods:''})\r\n            \r\n                              \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async handleResvSubmit() {\r\n       \r\n        try {\r\n           \r\n            var events = {\r\n                _id:`${this.state._id}`,\r\n                resID:`${this.state._id}`,\r\n                fname:`${this.state.fname}`,\r\n                lname:`${this.state.lname}`,\r\n                allDay: `${this.state.allDay}`,\r\n                start: `${this.state.start}`,\r\n                end: `${this.state.end}`,\r\n                title: `${this.state.title}`,\r\n                phone: `${this.state.phone}`,\r\n                Hall: `${this.state.Hall}`,\r\n                rsvAmount:`${this.state.rsvAmount}`,\r\n                transactionDate:moment(this.state.date).format('MMM DD YYYY')\r\n                \r\n            };\r\n            \r\n            // var grpName = this.state.findGroup;\r\n            // var name = this.state.orgName;\r\n            \r\n            // var groupData = {\r\n                \r\n            //     class:\"Corporate\",\r\n            //     orgName:`${this.state.orgName}`,\r\n            //     orgAddress:`${this.state.orgAddress}`,\r\n            //     orgEmail:`${this.state.orgEmail}`,\r\n            //     orgPhone:`${this.state.phone}`,\r\n            //     _id:`${this.state._id}`,\r\n            //     orgID:`${this.state._id}`\r\n                \r\n            // }\r\n            // if(grpName.some(item => item.orgName===name)){\r\n               \r\n                let result2 = await fetch(PostReservation ,{\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        events \r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result2>  ' + result2)\r\n            // }\r\n            \r\n                \r\n                // let result3 = await fetch(PostReservation ,{\r\n                //     method: 'post',\r\n        \r\n                //     headers: {\r\n                //         'Accept': 'application/json',\r\n                //         'Content-type': 'application/json',\r\n                //     },\r\n        \r\n                //     body: JSON.stringify(\r\n                        \r\n                //         events \r\n                            \r\n                //     )\r\n                        \r\n                // });\r\n                // console.log('result3>  ' + result3)\r\n\r\n                // let result = await fetch(postGroup, {\r\n                //     method: 'post',\r\n        \r\n                //     headers: {\r\n                //         'Accept': 'application/json',\r\n                //         'Content-type': 'application/json',\r\n                //     },\r\n        \r\n                //     body: JSON.stringify(\r\n                        \r\n                //         groupData\r\n                            \r\n                //     )\r\n                        \r\n                // });\r\n                // console.log('result>  ' + result)\r\n            \r\n            \r\n            alert(\"Reservation made for \" +this.state.title);\r\n            this.setState({\r\n                fname:'',\r\n                lname:'',\r\n                allDay: '',\r\n                start: '',\r\n                end: '',\r\n                title: '',\r\n                Hall:'',\r\n                phone:'',\r\n                rsvAmount:'',\r\n                displayAllHalls:'',\r\n                _id:'',\r\n                \r\n                \r\n            })\r\n            fetch(`${GetReservation}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n            this.setState({\r\n                events:data\r\n                \r\n            })\r\n            this.myTimer = setTimeout(() => {\r\n                this.setState({\r\n                    _id:Math.floor(Math.random()*10000)\r\n                })\r\n            },1000);\r\n           \r\n        })\r\n            \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    renderHalls(data){\r\n        if(data) {\r\n           data.sort((a, b) => a.price - b.price);\r\n            return data.map((item) => {\r\n                \r\n                return(\r\n                    <>\r\n                        <option key={item._id} value={item.hallName}>\r\n                            {item.hallName}\r\n                        </option>\r\n                    </>\r\n                )\r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n    // renderGroup(data){\r\n    //     if(data) {\r\n    //        data.sort((a, b) => a.orgName - b.orgName);\r\n    //         return data.map((item) => {\r\n                \r\n    //             return(\r\n    //                 <>\r\n    //                     <option key={item._id} value={item.orgName}>\r\n    //                         {item.orgName}\r\n    //                     </option>\r\n    //                 </>\r\n    //             )\r\n                \r\n    //         })\r\n    //     }\r\n    // }\r\n        \r\n    \r\n    render() {\r\n        console.log (\">>> Inside Rsvdetails\", this.state)\r\n        \r\n        if(localStorage.getItem('userInfo')==null || this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <FLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        \r\n        return (\r\n            <div className=\"background993\">\r\n                <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-50px'}}>Hall Reservation </h4>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h6 style = {{color:'purple',marginLeft:'480px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                        </div>\r\n                </div>\r\n                <h4 style = {{color:'rgb(23, 23, 71)',marginLeft:'50px', marginBottom:'-40px'}}> </h4>\r\n                \r\n                <div className=\"formdesign510\">\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"fname\" require placeholder=\"Firstname\" value={this.state.fname} onChange={this.handleroomData2}/>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"lname\" require placeholder=\"Surname\" value={this.state.lname} onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"phone\" require placeholder=\"Phone Num.\" value={this.state.phone} onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <select className=\"form-select  mb-3 formsize51\" name=\"Hall\" onChange={this.handleChange}>\r\n                                <option defaultValue=''>Select Hall</option>\r\n                                {this.renderHalls(this.state.displayAllHalls)}\r\n                            </select>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        \r\n                        <div className=\"col-3\">\r\n                            <label>\r\n                                {this.renderstartDate(this.state.start)}\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div className=\"col-3\">\r\n                            <label>\r\n                                {this.renderendDate(this.state.end)}\r\n                            </label>\r\n                        </div>  \r\n                        <div className=\"col-3\">\r\n                            <input type=\"number\" className=\"form-control mb-3 formsize51\" name=\"rsvAmount\" require placeholder=\"Enter Amount\" value={this.state.rsvAmount} onChange={this.handlePayMethData}/>\r\n                        </div>\r\n                        <select type =\"button\" className=\"form-select formsize3 mb-2 btn btn-primary mt-3 spaceleft\" name=\"paymentMethod\" onChange={this.handleChange}>\r\n                            <option selected value=''>Payment Method</option>\r\n                            {this.renderPayMeth(this.state.displayPaymentMethods)}\r\n                        </select>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        {/* <center>\r\n                            <span>\r\n                                <button disabled={this.state.fname===''||this.state.Hall===''||this.state.phone===''||this.state.start===''||this.state.end===''||this.state.paymentMethod===''} className=\"btn btn-warning\" onClick={ () => this.onOpenOthrsModal () } >Reserve</button>\r\n                                <button className=\"btn btn-primary gap\" onClick={ () => this.props.history.push('EditHallReservation')}>Goto Reservation</button>\r\n                                <button className=\"btn btn-danger space\" onClick={ () => this.props.history.push('/')}>Close</button>\r\n                            </span>\r\n                        </center> */}\r\n                    </div>  \r\n                    <Modal open={this.state.othersedit}>\r\n                        <div className='backgroundRetRep'>\r\n                            <center>\r\n                                <h6>Zarvich Hotels Ltd.</h6>\r\n                                <p className=\"textSize\">No ABC Road, Wuse II, Abuja, Nigeria</p>\r\n                                <p className=\"textSize\">+234 803 590 5421, info@zarvichosh.com</p>\r\n\r\n                                <h5>General Receipt</h5>\r\n                                <p className=\"textSize\">Date: {this.state.date}</p>\r\n\r\n                            </center>\r\n\r\n                        </div>\r\n                        <table className=\"table table-hover\">\r\n                            \r\n                            <thead className=\"table-warning\">\r\n                                <tr>\r\n                                    <th className=\"adjust50\">Description</th>\r\n                                    {/* <th className=\"adjust50\">Organisation</th> */}\r\n                                    <th className=\"adjust50\">Payment Method</th>\r\n                                    <th className=\"adjust50\">Amount Paid(NGN)</th>\r\n                                                                            \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"table table-hover\">\r\n                                <tr>\r\n                                    <td className=\"table-light table-striped adjust2 alignTet\"><b>{this.state.description1}</b></td>\r\n                                    {/* <td className=\"table-light table-striped adjust2 alignTet\"><b>{this.state.orgName}</b></td> */}\r\n                                    <td className=\"table-light table-striped adjust2 alignTet\"><b>{this.state.paymentMethod}</b></td>\r\n                                    <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.rsvAmount)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                                                    \r\n                                </tr>\r\n                                \r\n                            </tbody>\r\n                            \r\n                        </table>\r\n                        <div className=\"printing\">\r\n                            <center>\r\n                                <button className=\"btn btn-primary\" style={{height:'40px'}}onClick={()=>{this.sendtoprinterOthrs()}}>\r\n                                    <p>{this.state.printBTN}</p>\r\n                                </button>\r\n                            </center>\r\n                            \r\n                        </div>\r\n                        \r\n                    </Modal>\r\n                   \r\n                    \r\n                    <Calendar \r\n                        localizer={localizer} events={this.state.events} \r\n                        startAccessor=\"start\" endAccessor= \"end\" style={{height: 500, margin: \"50px\"}}\r\n                        selectable={true}\r\n                        onSelectEvent={this.handleEventSelection} \r\n                    />  \r\n                    \r\n                </div>\r\n            </div>\r\n                 \r\n            \r\n        );\r\n    }\r\n    componentDidMount(){\r\n        console.log(\">>> Inside RsvDidMount\", this.state)\r\n        \r\n        fetch(`${GetReservation}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                events:data,\r\n                \r\n            })\r\n            \r\n        })\r\n\r\n        \r\n        fetch(`${fofUserInfo}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n    }\r\n}\r\n\r\nexport default HallHire;","import React, { Component } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport addDays from 'date-fns/addDays';\r\nimport './../Reception.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport moment from 'moment';\r\nimport 'react-responsive-modal/styles.css';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport FLogin from '../../FLogin';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst GetReservationID = \"https://zarvichdemo.localto.net/getHallReservation?resavtnID=\";\r\nconst PutReservation =\"https://zarvichdemo.localto.net/Hallreservatn\"\r\n// const RoomUrl2 = \"/getrmstatus\";\r\n// const RoomUrl3 = \"/newRoomStat?wrtRmNum=\";\r\nconst userName = \"https://zarvichdemo.localto.net/fofUserInfo\";\r\n\r\nclass EditReservation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\">>> inside ERsvCobtructor\", props)\r\n\r\n       \r\n        this.state = {\r\n            eventsedit:'',\r\n            displayAllRoomNums:'',\r\n            edit: false,\r\n            checkIn: false,\r\n            _id:'',\r\n            resID:'',\r\n            fname:'',\r\n            lname:'',\r\n            allDay:'',\r\n            end:'',\r\n            start:'',\r\n            room:'',\r\n            title:'',\r\n            start2:'',\r\n            end2:'',\r\n            phone:'',\r\n            rsvAmount:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n\r\n\r\n            \r\n            \r\n        };\r\n        this.starthandleChange = this.starthandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    onOpenModaledit(){\r\n        this.setState({\r\n            edit: true\r\n        })\r\n        fetch(`${GetReservationID}${sessionStorage.getItem('getHsID')}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            data.map((item) => {\r\n                var startDt = moment(item.start).format('YYYY-DD-MMM')\r\n                var endDt = moment(item.end).format('YYYY-DD-MMM')\r\n                this.setState({\r\n                    _id:item._id,\r\n                    resID:item.resID,\r\n                    fname:item.fname,\r\n                    lname:item.lname,\r\n                    allDay:item.allDay,\r\n                    end:endDt,\r\n                    start:startDt,\r\n                    room:item.room,\r\n                    phone:item.phone\r\n                    \r\n                })\r\n                return 'ok'\r\n            })  \r\n            \r\n        })\r\n        \r\n    }\r\n\r\n    // onOpenModalcheckin(){\r\n    //     var id = sessionStorage.getItem('getRoomNum');\r\n    //     fetch(`${RoomUrl3}${id}`, {method:'GET'})\r\n    //     .then((resp) => resp.json())\r\n    //     .then((data) => {\r\n    //        data.map((item) =>{\r\n    //            if(item.fname||item.lname||item.roomStatus!=='green'){\r\n    //                alert(\"Room \"+item.roomNumbers+\" is currently occupied or needs cleaning\");\r\n    //                 this.props.history.push('/EditReservation')\r\n    //            }\r\n               \r\n    //            if(item.roomStatus==='green'){\r\n    //             this.props.history.push(`/form/${sessionStorage.getItem('getRoomNum')}`)\r\n    //            }\r\n    //            return 'ok'\r\n    //        })\r\n            \r\n    //     })\r\n        \r\n       \r\n    // }\r\n\r\n    onCloseModaledit(){\r\n        this.setState({\r\n            edit: false,\r\n            \r\n        })\r\n        fetch(`${GetReservationID}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                eventsedit:data\r\n            })\r\n            \r\n        })\r\n\r\n    }\r\n\r\n    onCloseModalcheckin(){\r\n        this.setState({\r\n            checkIn: false\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    handleChange2(){\r\n        if(this.state.room!==''||this.state.fname!==''){\r\n            var newtitle =(this.state.room+  ' '   +this.state.fname+  ' '  +this.state.lname+ ' ' +this.state.phone)\r\n            this.setState({title:newtitle})\r\n        }\r\n        \r\n        if(this.state.start2===''&&this.state.end2===''){\r\n            var start3 = new Date(this.state.start);\r\n            var end3 = new Date(this.state.end);\r\n            this.setState({\r\n                start2:start3,\r\n                end2:end3\r\n            })\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    \r\n\r\n    handleroomData2=(event)=>{\r\n        this.setState({\r\n            [event.target.name]:event.target.value,\r\n            allDay:true\r\n        })\r\n       \r\n        \r\n    }\r\n\r\n    starthandleChange(date) {\r\n        this.setState({\r\n            start2: date\r\n        });\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            end2: date\r\n        });\r\n    }\r\n\r\n    renderstartDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.start2}\r\n                    onChange={this.starthandleChange}\r\n                    minDate={new Date()}\r\n                    maxDate={addDays(new Date(),26)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize53\"\r\n                    placeholderText=\"Edit Arrival\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    renderendDate() {\r\n        return (\r\n            <div >\r\n                <DatePicker\r\n                    selected={this.state.end2}\r\n                    onChange={this.endhandleChange}\r\n                    minDate={addDays(this.state.start2,1)}\r\n                    maxDate={addDays(new Date(),31)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize53 moveagain\"\r\n                    placeholderText=\"Edit Departure\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n    async handleResvUpdate() {\r\n       \r\n        try {\r\n            var id = sessionStorage.getItem('getRsID')\r\n           \r\n            var resUpdate = {\r\n                \r\n                resID:`${this.state.resID}`,\r\n                fname:`${this.state.fname}`,\r\n                lname:`${this.state.lname}`,\r\n                allDay:`${this.state.allDay}`,\r\n                end:`${this.state.end2}`,\r\n                start:`${this.state.start2}`,\r\n                title:`${this.state.title}`,\r\n                phone:`${this.state.phone}`,\r\n                room:`${this.state.room}`\r\n            }\r\n            let result = await fetch(`${PutReservation}/${id}`, {\r\n                method: 'put',\r\n    \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n    \r\n                body: JSON.stringify(\r\n                    \r\n                    resUpdate\r\n                        \r\n                )\r\n                    \r\n            });\r\n            console.log('result>  ' + result)\r\n            alert(\"Reservation updated for Room \" +this.state.title);\r\n            this.setState({\r\n                fname:'',\r\n                _id:'',\r\n                lname:'',\r\n                allDay: true,\r\n                start: '',\r\n                end: '',\r\n                end2:'',\r\n                start2:'',\r\n                room: '',\r\n                title:'',\r\n                phone:'',\r\n                displayAllRoomNums:'',\r\n                eventsedit:''\r\n            })\r\n          \r\n            \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    renderVacantRooms(data){\r\n        if(data) {\r\n           data.sort((a, b) => a.roomNumbers - b.roomNumbers);\r\n            return data.map((item, index) => {\r\n                if(item.roomStatus===\"green\"){\r\n                    return(\r\n                        <>\r\n                            <option key={index} value={item.roomNumbers}>\r\n                                {item.roomNumbers} - {item.roomtypeName}\r\n                            </option>\r\n                        </>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <>\r\n                           \r\n                        </>\r\n                    )\r\n                }\r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n    renderEvents=(data)=>{\r\n        if(data){\r\n            \r\n            data.sort((a, b) => new Date(a.start) - new Date(b.start));\r\n            return data.map((item)=>{\r\n                var startfmt = moment(item.start).format('YYYY-DD-MMM')\r\n                var endfmt = moment(item.end).format('YYYY-DD-MMM')\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                                \r\n                            <td className=\"table-light table-striped adjust2\">{startfmt}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{endfmt}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.fname}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.lname}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.phone}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.room}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.rsvAmount}</td>\r\n                            <td className=\"table-light table-stripedadjust10\"><button className=\"btn btn-primary textcolor\" onMouseOver={()=>sessionStorage.setItem('getHsID', item.resID)} onClick={()=>{this.onOpenModaledit()}}>Edit</button></td>\r\n                            <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-primary textcolor\" onMouseOver={()=>{sessionStorage.setItem('getRoomNum', item.room);sessionStorage.setItem('getrsvAmount', item.rsvAmount);sessionStorage.setItem('getrsvCode', item.resID)}} onClick={()=>{this.onOpenModalcheckin()}}>Check in</button></td>\r\n                                \r\n                        </tr>\r\n                    </>\r\n                )\r\n                \r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log (\">>> Inside ERsvdetails\", this.state)\r\n\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <FLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <div  className=\"background993\">\r\n                <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-50px'}}>Hotel Reservation </h4>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h6 style = {{color:'purple',marginLeft:'480px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                        </div>\r\n                </div>\r\n                <h4 style = {{color:'rgb(23, 23, 71)',marginLeft:'50px', marginBottom:'-40px'}}> </h4>\r\n                \r\n                <div className=\"formdesign510\">\r\n                    \r\n                    <div>\r\n                        <table className=\"table table-hover\">\r\n                        \r\n                            <thead className=\"table-warning\">\r\n                                <tr>\r\n                                    <th className=\"adjust5\">Arrival Date</th>\r\n                                    <th className=\"adjust5\">Departure Date</th>\r\n                                    <th className=\"adjust5\">Firstname</th>\r\n                                    <th className=\"adjust5\">Surname</th>\r\n                                    <th className=\"adjust5\">Phone Num</th>\r\n                                    <th className=\"adjust5\">Room Num</th>\r\n                                    <th className=\"adjust5\">Amount</th>\r\n                                    <th className=\"adjust5\">Edit</th>\r\n                                   <th className=\"adjust5\">Check in</th>\r\n                                    \r\n                                            \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"table table-hover\">\r\n                                {this.renderEvents(this.state.eventsedit)}\r\n                            \r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <center><button className=\"btn btn-danger\" onClick={()=>{sessionStorage.removeItem('getrsvAmount'); this.props.history.push(\"/Reservation\")}}>Close</button></center>\r\n                    \r\n                <Modal open={this.state.edit} onClose={()=>this.onCloseModaledit()}>\r\n                    \r\n                    <div className = \"background591\">\r\n                        <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-70px'}}>Edit Reservation</h4>\r\n                        <div className=\"formdesign511\">\r\n                        \r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize53\" name=\"fname\" value={this.state.fname} onChange={this.handleroomData2}/>\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize53\" name=\"lname\" value={this.state.lname} onChange={this.handleChange}/>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"number\" className=\"form-control mb-3 formsize53\" name=\"phone\" value={this.state.phone} onChange={this.handleChange}/>\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"number\" className=\"form-control mb-3 formsize53\" name=\"rsvAmount\" value={this.state.rsvAmount} onChange={this.handleChange}/>\r\n                                </div>\r\n\r\n                                <select className=\"form-select  mb-3 formsize53\" name=\"room\" onChange={this.handleChange}>\r\n                                    <option defaultValue=''>{this.state.room}</option>\r\n                                    {this.renderVacantRooms(this.state.displayAllRoomNums)}\r\n                                </select>\r\n                                \r\n                \r\n                                <div className=\"col-3\">\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize53 adjustText\" name=\"start\" value={moment(this.state.start).format('YYYY-DD-MMM')} readOnly/>\r\n                                        \r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize53 adjustText\" name=\"end\" value={moment(this.state.end).format('YYYY-DD-MMM')} readOnly/>\r\n                                        \r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    <label>\r\n                                        {this.renderstartDate(this.state.start2)}\r\n                                    </label>  \r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    <label>\r\n                                         {this.renderendDate(this.state.end2)}\r\n                                    </label>  \r\n                                </div>\r\n                                                              \r\n                               \r\n                            </div>\r\n                        </div> \r\n                        <br/><br/>\r\n                        <center>\r\n                            <span>\r\n                                <button className=\"btn btn-warning space2\" onMouseOver={()=>this.handleChange2()} onClick={()=>this.handleResvUpdate()}>Save</button>\r\n                                        \r\n                                <button className=\"btn btn-danger space3\" onClick={()=>{this.onCloseModaledit(); this.props.history.push(\"/EditReservation\")}}>close</button>\r\n                                        \r\n                            </span>\r\n                                    \r\n                        </center>\r\n                        <br/>\r\n                                    \r\n                       \r\n                    </div>     \r\n                    \r\n                </Modal>\r\n \r\n            </div>\r\n        );\r\n    }\r\n    componentDidMount(){\r\n        console.log(\">>> Inside ERsvDidMount\", this.state)\r\n        fetch(`${GetReservationID}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                eventsedit:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setInterval(() => {\r\n            fetch(`${GetReservationID}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    eventsedit:data\r\n                })\r\n                \r\n            })\r\n        },60000);\r\n\r\n        // fetch(`${RoomUrl2}`, {method:'GET'})\r\n        // .then((res) => res.json())\r\n        // .then((data) => {\r\n        //     this.setState({\r\n        //         displayAllRoomNums:data\r\n        //     })\r\n        // })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n       \r\n    }\r\n}\r\n\r\nexport default EditReservation;","import React, { Component } from 'react';\r\nimport 'react-responsive-modal/styles.css';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport './Bar/BarReport.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst userLogin = \"https://zarvichdemo.localto.net/storeUserInfo?storecode=\";\r\nconst userName = \"https://zarvichdemo.localto.net/storeUserInfo\";\r\n\r\n\r\n\r\nclass Storelogin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\">>> inside loginConstructor\", props)\r\n       \r\n        this.state = {\r\n            login: false,\r\n            userInfo:'',\r\n            userPassword:'',\r\n            authPassword:'',\r\n            selectUserName:'',\r\n            shift:'',\r\n            \r\n        };\r\n        \r\n    }\r\n\r\n    login(){\r\n        fetch(`${userLogin}${this.state.userPassword}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({userInfo:data})\r\n           \r\n            this.myTimer = setTimeout(() => {\r\n                if(this.state.userInfo.length>0){\r\n                    this.setState({\r\n                        login: false\r\n                        \r\n                    })\r\n                    window.location.reload();\r\n                    data.map((item) =>{\r\n                        localStorage.setItem('userInfo',item.name);\r\n                        localStorage.setItem('shift',this.state.shift);\r\n                        return 'ok'\r\n                    })\r\n                }\r\n            },1000)\r\n           \r\n        })\r\n\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseModallogin(){\r\n        this.setState({\r\n            login: true\r\n        })\r\n        \r\n    }\r\n\r\n    render() {\r\n        console.log (\">>> Inside logindetails\", this.state)\r\n        return (\r\n            <>\r\n                <Modal open={this.state.login} onClose={()=>this.onCloseModallogin()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Login First</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <input type=\"password\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"userPassword\" require placeholder=\"Enter password\" value={this.state.userPassword} onChange={this.handleChange}/>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"shift\" require placeholder=\"Select Shift\" value={this.state.shift} list=\"shift\"  onChange={this.handleChange}/>\r\n                                    <datalist id=\"shift\">\r\n                                        <option value = \"Morning Shift\"></option>\r\n                                        <option value = \"Night Shift\"></option>\r\n                                        <option value = \"All Day\"></option>\r\n                                    </datalist>\r\n                                    <button disabled = {this.state.userPassword===''||this.state.shift===''} className=\"btn btn-warning formsize91\" onClick={()=>this.login()}>Login</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n        \r\n    componentDidMount() {\r\n        console.log(\">>> Inside loginDidMount\", this.state)\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                selectUserName:data,\r\n                login: true\r\n            \r\n            });\r\n            \r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Storelogin;","import React, { Component } from 'react';\r\nimport Storelogin from '../../Storelogin';\r\nimport '../Reception.css';\r\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\r\nimport format from 'date-fns/format';\r\nimport parse from 'date-fns/parse';\r\nimport startOfWeek from 'date-fns/startOfWeek';\r\nimport getDay from 'date-fns/getDay';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { locales } from 'moment';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport moment from 'moment';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst localizer = dateFnsLocalizer({\r\n    format,\r\n    parse,\r\n    startOfWeek,\r\n    getDay,\r\n    locales,\r\n })\r\n\r\n\r\nconst postFandB = \"https://zarvichdemo.localto.net/foodanddrinks\";\r\nconst getGroupUrl= \"https://zarvichdemo.localto.net/org\";\r\nconst HallUrl = \"https://zarvichdemo.localto.net/getHalls?hallType=\";\r\nconst userName = \"https://zarvichdemo.localto.net/fandbUserInfo\";\r\nconst GetCalendar = \"https://zarvichdemo.localto.net/getHallReservation\";\r\n\r\nclass FandB extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\">>> inside RsvCobtructor\", props)\r\n\r\n        console.log(\">>> inside ReservContructor\", props)\r\n        this.state = {\r\n            _id:Math.floor(Math.random()*10000),\r\n            orgName:'',\r\n            findGroup:'',\r\n            description:'',\r\n            amount:'',\r\n            qty:'',\r\n            date:new Date(),\r\n            events:[],\r\n            displayAllHalls:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n            \r\n            \r\n        };\r\n        \r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n    \r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n           \r\n        })\r\n        \r\n    }\r\n    \r\n\r\n    async handleResvSubmit() {\r\n       \r\n        try {\r\n           \r\n            var events = {\r\n                _id:`${this.state._id}`,\r\n                transactionDate:moment(this.state.date).format('MMM DD YYYY'),\r\n                resID:`${this.state._id}`,\r\n                group:`${this.state.orgName}`,\r\n                description: `${this.state.description}`,\r\n                amount: `${this.state.amount}`,\r\n                qty: `${this.state.qty}`\r\n                \r\n            };\r\n               \r\n            let result2 = await fetch(postFandB ,{\r\n                method: 'post',\r\n    \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n    \r\n                body: JSON.stringify(\r\n                    \r\n                    events \r\n                        \r\n                )\r\n                    \r\n            });\r\n            console.log('result2>  ' + result2)\r\n            \r\n            \r\n            alert(\"Bill Posted for \" +this.state.orgName);\r\n            this.setState({\r\n                orgName:'',\r\n                description:'',\r\n                amount:0,\r\n                qty:'',\r\n                findGroup:''\r\n                \r\n            })\r\n            \r\n            this.myTimer = setTimeout(() => {\r\n                this.setState({\r\n                    _id:Math.floor(Math.random()*10000)\r\n                })\r\n\r\n                fetch(`${getGroupUrl}`, {method:'GET'})\r\n                .then((resp) => resp.json())\r\n                .then((data) => {\r\n                this.setState({\r\n                    findGroup:data\r\n                })\r\n                        \r\n            })\r\n            },1000);\r\n           \r\n        \r\n            \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    renderGroup(data){\r\n        if(data) {\r\n           data.sort((a, b) => a.orgName - b.orgName);\r\n            return data.map((item) => {\r\n                \r\n                return(\r\n                    <>\r\n                        <option key={item._id} value={item.orgName}>\r\n                            {item.orgName}\r\n                        </option>\r\n                    </>\r\n                )\r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n    renderHalls(data){\r\n        if(data) {\r\n           data.sort((a, b) => a.price - b.price);\r\n            return data.map((item) => {\r\n                \r\n                return(\r\n                    <>\r\n                        \r\n                        <option key={item._id} value={item.hallName}>\r\n                            {item.hallName}\r\n                        </option>\r\n                    </>\r\n                )\r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n\r\n        \r\n    render() {\r\n        console.log (\">>> Inside Rsvdetails\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Storelogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        return (\r\n            <div className=\"background993b\">\r\n                <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-50px'}}>Function Management </h4>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h6 style = {{color:'purple',marginLeft:'480px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                        </div>\r\n                </div>\r\n                <h4 style = {{color:'rgb(23, 23, 71)',marginLeft:'50px', marginBottom:'-40px'}}> </h4>\r\n                \r\n                <div className=\"formdesign510\">\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <select type =\"button\" className=\"form-control mb-3 formsize51\" name=\"orgName\" onChange={this.handleChange}>\r\n                                <option defaultValue=''>Select Org</option>\r\n                                {this.renderGroup(this.state.findGroup)}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"description\" require placeholder=\"Description\" value={this.state.description} list=\"description\" onChange={this.handleChange}/>\r\n                            <datalist id=\"description\">\r\n                                <option value = \"Breakfast\"></option>\r\n                                <option value = \"Tea Break\"></option>\r\n                                <option value = \"Lunch\"></option>\r\n                                <option value = \"Dinner\"></option>\r\n                                {this.renderHalls(this.state.displayAllHalls)}\r\n                            </datalist>\r\n                        </div>\r\n\r\n                        <div className=\"col-3\">\r\n                            <input type=\"number\" className=\"form-control mb-3 formsize51\" name=\"qty\" require placeholder=\"Qty\" value={this.state.qty} onChange={this.handleChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"col-3\">\r\n                            <input type=\"number\" className=\"form-control mb-3 formsize51\" name=\"amount\" require placeholder=\"Amount\" value={this.state.amount} onChange={this.handleChange}/>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <center>\r\n                            <span>\r\n                                <button disabled={this.state.orgName===''||this.state.description===''||this.state.amount===''||this.state.qty===''} className=\"btn btn-warning\" onClick={ () => this.handleResvSubmit()}>Post</button>\r\n                                <button className=\"btn btn-danger space\" onClick={ () => this.props.history.push('/FandBMenu')}>Close</button>\r\n                                \r\n                               \r\n                            </span>\r\n                        </center>\r\n                    </div>\r\n                    <br/>\r\n                    <hr style={{color:'silver'}}/>\r\n\r\n                    <Calendar \r\n                        localizer={localizer} events={this.state.events} \r\n                        startAccessor=\"start\" endAccessor= \"end\" style={{height: 500, margin: \"50px\"}}\r\n                        selectable={true}\r\n                        onSelectEvent={this.handleEventSelection} \r\n                    />  \r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n            \r\n\r\n            \r\n        );\r\n    }\r\n    componentDidMount(){\r\n        console.log(\">>> Inside RsvDidMount\", this.state)\r\n        fetch(`${getGroupUrl}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                findGroup:data\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${GetCalendar}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                events:data\r\n                \r\n            })\r\n        })\r\n\r\n        fetch(`${HallUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                displayAllHalls:data\r\n            })\r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n    }\r\n}\r\n\r\nexport default FandB;","import React,{Component} from 'react';\r\nimport '../../HouseKeeping/Housekeeping.css';\r\nimport Storelogin from '../../Storelogin';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst userName = \"https://zarvichdemo.localto.net/fandbUserInfo\";\r\n\r\n\r\nclass FandBMenu extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n        }\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n    render() {\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Storelogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        return(\r\n            <>\r\n                 <div className=\"background15k\">\r\n                                      \r\n                    <center>\r\n                         <div className=\"formdesign15k\">\r\n                             <h4 className=\"mb-3\">F and B Portal</h4>\r\n                             \r\n                            <div>\r\n                                \r\n                                <center>\r\n                                   \r\n                                   {/* <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('./FandB')}}>Post Function Bills</button> */}\r\n                                   {/* <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('./FandBReport')}}>View Function Bills</button> */}\r\n                                   <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('./AddMenu')}}>Restaurant Menu Manager</button>\r\n                                   <button className=\"btn btn-warning btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>    \r\n                                   <button className=\"btn btn-danger btnwidth15 mb-3\" onClick={ ()=> this.logout()}>\r\n                                        Log Out {localStorage.getItem('userInfo').split(' ')[0]}\r\n                                    </button>\r\n                                </center>\r\n                            </div>\r\n                         </div>\r\n\r\n                     </center>\r\n                   \r\n                </div>\r\n            </>\r\n           \r\n\r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default FandBMenu;\r\n","import React, { Component } from 'react';\r\nimport Storelogin from '../../Storelogin';\r\nimport '../Reception.css';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport NumberFormat from 'react-number-format';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst menuCategoryUrl = \"https://zarvichdemo.localto.net/menuCategories?findID=\";\r\nconst AvailableMenu = \"https://zarvichdemo.localto.net/menuitems?mealtypes=\";\r\nconst deleteMenuUrl = \"https://zarvichdemo.localto.net/restaurantMenus\";\r\nconst delCategory = \"https://zarvichdemo.localto.net/delCat\";\r\nconst postMenu2 = \"https://zarvichdemo.localto.net/postRestMenu\";\r\nconst postCat = \"https://zarvichdemo.localto.net/postCategory\";\r\n\r\nconst userName = \"https://zarvichdemo.localto.net/fandbUserInfo\";\r\n\r\nclass FandBRestMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>> inside GrpCobtructor\", props)\r\n\r\n        this.state = {\r\n            _id:0,\r\n            MenuCategoryData:'',\r\n            mealType:'',\r\n            mealTypeID:'',\r\n            mealName:'',\r\n            menuData:'',\r\n            mealPrice:'',\r\n            category:'',\r\n\r\n            edit:false,\r\n            catmealTypeID:0,\r\n            catmealType:'',\r\n\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    onCloseModaledit(){\r\n        this.setState({\r\n            edit: false,\r\n            \r\n        })\r\n        \r\n    }\r\n\r\n    onOpenModaledit(){\r\n        this.setState({\r\n            _id:0,\r\n            MenuCategoryData:'',\r\n            mealType:'',\r\n            mealTypeID:'',\r\n            mealName:'',\r\n            menuData:'',\r\n            mealPrice:'',\r\n            category:'',\r\n            edit:true\r\n        })\r\n\r\n        fetch(`${menuCategoryUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n\r\n            this.setState({MenuCategoryData:data})\r\n\r\n            data.map((item)=>{\r\n                var checkIDType = parseInt(item.mealTypeID);\r\n                var computeIDType = Math.max(checkIDType) +1;\r\n                this.setState({\r\n                    catmealTypeID:computeIDType,\r\n                })\r\n                \r\n                return 'ok'\r\n            })\r\n        })\r\n        \r\n    }\r\n\r\n    renderMenu=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a, b) => a.mealType - b.mealType);\r\n                return(\r\n                    <>\r\n                        <option key={item._id} value={item.mealType}>\r\n                            {item.mealType}\r\n\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderMenuData(data){\r\n        if(data){\r\n            \r\n            return data.map((item)=>{\r\n                data.sort((a, b) => a.mealName - b.mealName);\r\n                return(\r\n                    <>\r\n                    \r\n                        <tr key={item._id}>\r\n                                \r\n                            {/* <td key= {item._id} className=\"table-light table-striped adjust2\">{item.roomID}</td> */}\r\n                            <td className=\"table-light table-striped adjust2\">{item.mealType}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.mealName}</td>\r\n                            <td className=\"table-light table-striped adjust2\"><NumberFormat value={item.mealPrice} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            {/* <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-primary textcolor\" onMouseOver={()=>sessionStorage.setItem('roomsIden',item.roomNumbers)} onClick={()=>{this.editRoomz()}}>Edit</button></td> */}\r\n                            <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-danger textcolor\" onMouseOver={()=>sessionStorage.setItem('getMenuID', item._id)} onClick={()=>this.deleteNow()}>Delete</button></td>\r\n                                \r\n                        </tr>\r\n                    </>\r\n                )\r\n                \r\n            })\r\n            \r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderCatData(data){\r\n        if(data){\r\n            \r\n            return data.map((item)=>{\r\n                data.sort((a, b) => a.mealType - b.mealType);\r\n                return(\r\n                    <>\r\n                    \r\n                        <tr key={item._id}>\r\n                                \r\n                            {/* <td key= {item._id} className=\"table-light table-striped adjust2\">{item.roomID}</td> */}\r\n                            <td className=\"table-light table-striped adjust2\">{item.mealTypeID}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.mealType}</td>\r\n                            <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-danger textcolor\" onMouseOver={()=>sessionStorage.setItem('getCatID', item.mealTypeID)} onClick={()=>this.deleteCatNow()}>Delete</button></td>\r\n                                \r\n                        </tr>\r\n                    </>\r\n                )\r\n                \r\n            })\r\n            \r\n        }\r\n\r\n\r\n    }\r\n   \r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    handleChange=(event)=>{\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    handleChange1 = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n        fetch(`${menuCategoryUrl}${event.target.value}`, {method: 'GET'})\r\n        .then ((res) => res.json())\r\n        .then ((data) => {\r\n            data.map((item) => {\r\n                this.setState({mealTypeID:item.mealTypeID})\r\n                fetch(`${AvailableMenu}${item.mealTypeID}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        menuData:data,\r\n                \r\n                    })\r\n                })\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n        })\r\n        \r\n\r\n        \r\n        \r\n    }\r\n\r\n    handleChange5=(event)=>{\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n        var finddeptID = this.state.menuData;\r\n        var founddeptID = event.target.value;\r\n\r\n        if(finddeptID.some(item => item.mealName===founddeptID)){\r\n            alert(\"Product already registered\");\r\n            this.setState({\r\n                _id:0,\r\n                MenuCategoryData:'',\r\n                mealType:'',\r\n                mealTypeID:'',\r\n                mealName:'',\r\n                menuData:'',\r\n                mealPrice:'',\r\n                category:''\r\n                    \r\n            })\r\n\r\n            fetch(`${menuCategoryUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    MenuCategoryData:data,\r\n                    \r\n                })\r\n            })\r\n\r\n            fetch(`${AvailableMenu}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n               \r\n                data.map((item)=>{\r\n                    var restMenuID = parseInt(item._id);\r\n                    var comprestMenuID = Math.max(restMenuID) +1;\r\n                    this.setState({\r\n                    \r\n                        _id:comprestMenuID,\r\n                        \r\n                    })\r\n                    return 'ok'\r\n                })\r\n            \r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    handleChange6=(event)=>{\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n        var finddeptID = this.state.MenuCategoryData;\r\n        var founddeptID = event.target.value;\r\n\r\n        if(finddeptID.some(item => item.mealType===founddeptID)){\r\n            alert(\"Product already registered\");\r\n            this.setState({\r\n                catmealTypeID:0,\r\n                catmealType:''\r\n                    \r\n            })\r\n\r\n            fetch(`${menuCategoryUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    MenuCategoryData:data,\r\n                    \r\n                })\r\n                \r\n                data.map((item)=>{\r\n                    var checkIDType = parseInt(item.mealTypeID);\r\n                    var computeIDType = Math.max(checkIDType) +1;\r\n                    this.setState({\r\n                        catmealTypeID:computeIDType,\r\n                    })\r\n                    \r\n                    return 'ok'\r\n                })\r\n            })\r\n\r\n           \r\n        }\r\n        \r\n    }\r\n\r\n    deleteNow(){\r\n       \r\n        fetch(`${deleteMenuUrl}/${sessionStorage.getItem('getMenuID')}`, {method:'delete'})\r\n        alert(\"Item Deleted\")\r\n        this.setState({\r\n            _id:0,\r\n            MenuCategoryData:'',\r\n            mealType:'',\r\n            mealTypeID:'',\r\n            mealName:'',\r\n            menuData:'',\r\n            mealPrice:'',\r\n            category:''\r\n        })\r\n        this.myTimer = setTimeout(() => {\r\n            fetch(`${menuCategoryUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    MenuCategoryData:data,\r\n                    \r\n                })\r\n            })\r\n\r\n            fetch(`${AvailableMenu}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                \r\n                data.map((item)=>{\r\n                    var restMenuID = parseInt(item._id);\r\n                    var comprestMenuID = Math.max(restMenuID) +1;\r\n                    this.setState({\r\n                    \r\n                        _id:comprestMenuID,\r\n                        \r\n                    })\r\n                    return 'ok'\r\n                })\r\n            \r\n            })\r\n           \r\n        },1000)\r\n               \r\n    }\r\n\r\n    deleteCatNow(){\r\n       \r\n        fetch(`${delCategory}/${sessionStorage.getItem('getCatID')}`, {method:'delete'})\r\n        alert(\"Category Deleted\")\r\n        this.setState({\r\n            catmealTypeID:0,\r\n            catmealType:'',\r\n        })\r\n\r\n        fetch(`${menuCategoryUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n\r\n            this.setState({MenuCategoryData:data})\r\n\r\n            data.map((item)=>{\r\n                var checkIDType = parseInt(item.mealTypeID);\r\n                var computeIDType = Math.max(checkIDType) +1;\r\n                this.setState({\r\n                    catmealTypeID:computeIDType,\r\n                })\r\n                \r\n                return 'ok'\r\n            })\r\n        })\r\n               \r\n    }\r\n\r\n\r\n    async handleSubmitNew() {\r\n       \r\n        try {\r\n            \r\n            let finddeptID22 = this.state.menuData;\r\n            let founddeptID22 = this.state.mealName;\r\n\r\n            let restMenuPost22 = {\r\n                \r\n                \r\n                mealTypeID:parseInt(`${this.state.mealTypeID}`),\r\n                mealName:`${this.state.mealName}`,\r\n                mealPrice:`${this.state.mealPrice}`,\r\n                mealQt: 1,\r\n                mealType:`${this.state.mealType}`,\r\n                categoryID:parseInt(`${this.state.mealTypeID}`),\r\n                category:`${this.state.category}`\r\n                \r\n            }\r\n\r\n            \r\n            if(finddeptID22.some(item => item.mealName===founddeptID22)){\r\n                alert(\"Product already registered\");\r\n                this.setState({\r\n                    \r\n                    mealTypeID:'',\r\n                    mealName:'',\r\n                    mealType:'',\r\n                    MenuCategoryData:'',\r\n                    menuData:'',\r\n                        \r\n                })\r\n    \r\n                fetch(`${menuCategoryUrl}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        MenuCategoryData:data,\r\n                        \r\n                    })\r\n                })\r\n    \r\n                fetch(`${AvailableMenu}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    \r\n                    data.map((item)=>{\r\n                        var restMenuID = parseInt(item._id);\r\n                        var comprestMenuID = Math.max(restMenuID) +1;\r\n                        this.setState({\r\n                        \r\n                            _id:comprestMenuID,\r\n                            \r\n                        })\r\n                        return 'ok'\r\n                    })\r\n                \r\n                })\r\n               \r\n            }\r\n            \r\n            else{\r\n                let result = await fetch(`${postMenu2}`, {\r\n                    \r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        restMenuPost22\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                                \r\n                alert(this.state.mealName+\" Added\");\r\n                this.setState({\r\n                    \r\n                    mealTypeID:'',\r\n                    mealName:'',\r\n                    mealType:'',\r\n                    MenuCategoryData:'',\r\n                    menuData:'',\r\n                        \r\n                })\r\n    \r\n                fetch(`${menuCategoryUrl}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        MenuCategoryData:data,\r\n                        \r\n                    })\r\n                })\r\n    \r\n                fetch(`${AvailableMenu}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                   \r\n                    data.map((item)=>{\r\n                        var restMenuID = parseInt(item._id);\r\n                        var comprestMenuID = Math.max(restMenuID) +1;\r\n                        this.setState({\r\n                        \r\n                            _id:comprestMenuID,\r\n                            \r\n                        })\r\n                        return 'ok'\r\n                    })\r\n                \r\n                })\r\n\r\n            }\r\n\r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async handleSubmitCat() {\r\n       \r\n        try {\r\n            \r\n            var finddeptID = this.state.MenuCategoryData;\r\n            var founddeptID = this.state.catmealType;\r\n\r\n            var restMenuPost = {\r\n                \r\n                mealTypeID:parseInt(`${this.state.catmealTypeID}`),\r\n                mealType:`${this.state.catmealType}`,\r\n                                \r\n            }\r\n\r\n            \r\n            if(finddeptID.some(item => item.mealType===founddeptID)){\r\n                alert(\"Product already registered\");\r\n                this.setState({\r\n                    \r\n                    catmealTypeID:0,\r\n                    catmealType:''\r\n                    \r\n                        \r\n                })\r\n    \r\n                fetch(`${menuCategoryUrl}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        MenuCategoryData:data,\r\n                        \r\n                    })\r\n                    data.map((item)=>{\r\n                        var checkIDType = parseInt(item.mealTypeID);\r\n                        var computeIDType = Math.max(checkIDType) +1;\r\n                        this.setState({\r\n                            catmealTypeID:computeIDType,\r\n                        })\r\n                        \r\n                        return 'ok'\r\n                    })\r\n                })\r\n    \r\n                \r\n            }\r\n\r\n            else{\r\n                let result = await fetch(`${postCat}`, {\r\n                    \r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        restMenuPost\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                                \r\n                alert(this.state.catmealType+\" Added\");\r\n                this.setState({\r\n                    \r\n                    catmealType:'',\r\n                    catmealTypeID:0,\r\n                    MenuCategoryData:'',\r\n                    menuData:'',\r\n                        \r\n                })\r\n    \r\n                fetch(`${menuCategoryUrl}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        MenuCategoryData:data,\r\n                        \r\n                    })\r\n\r\n                    fetch(`${menuCategoryUrl}`, {method:'GET'})\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        this.setState({\r\n                            MenuCategoryData:data,\r\n                            \r\n                        })\r\n                        data.map((item)=>{\r\n                            var checkIDType = parseInt(item.mealTypeID);\r\n                            var computeIDType = Math.max(checkIDType) +1;\r\n                            this.setState({\r\n                                catmealTypeID:computeIDType,\r\n                            })\r\n                            \r\n                            return 'ok'\r\n                        })\r\n                    })\r\n                })\r\n    \r\n                \r\n\r\n            }\r\n\r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n   \r\n  \r\n\r\n    render() {\r\n        console.log (\">>> Inside Grpdetails\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Storelogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div  className=\"background990i2Menu\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-50px'}}>Restaurant Menu</h4>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h6 style = {{color:'purple',marginLeft:'480px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                        </div>\r\n                    </div>\r\n                    <h4 style = {{color:'rgb(23, 23, 71)',marginLeft:'50px', marginBottom:'-40px'}}> </h4>\r\n\r\n                    <div className=\"formdesign510b\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className='col-3'>\r\n                                    <select className=\"form-select  mb-3 formsize51\" name=\"mealType\" onChange={this.handleChange1}>\r\n                                        <option defaultValue=''>Select Category</option>\r\n                                        {this.renderMenu(this.state.MenuCategoryData)}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\">{this.state.mealTypeID}</p>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"text\" disabled={this.state.mealType===''} className=\"form-control mb-3 formsize51\" name=\"mealName\" require placeholder=\"Enter Name\" value={this.state.mealName} onChange={this.handleChange5}/>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"number\" disabled={this.state.mealName===''} className=\"form-control mb-3 formsize51\" name=\"mealPrice\" require placeholder=\"Enter Selling Price\" value={this.state.mealPrice} onChange={this.handleChange}/>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                           \r\n                            <center>\r\n                                <br/>\r\n                                <span>\r\n                                    <button disabled={this.state.mealType===''||this.state.mealName===''||this.state.mealTypeID===''||this.state.mealPrice===''} className=\"btn btn-warning\" onClick={ () => this.handleSubmitNew()}>Add New</button>\r\n                                    <button className=\"btn btn-primary gap\" onClick={ () => this.onOpenModaledit()}>Add New Category</button>\r\n                                    <button className=\"btn btn-danger gap\" onClick={ () => this.props.history.push('/FandBMenu')}>Close</button>\r\n                                    \r\n                                </span>\r\n                            </center>\r\n                           \r\n                            \r\n                        </div>\r\n                        <br/>\r\n                        <div className=\"container\">\r\n                            <table className=\"table table-hover\">\r\n                            \r\n                                <thead className=\"table-warning\">\r\n                                    <tr>\r\n                                        {/* <th className=\"adjust5\">ID</th> */}\r\n                                        <th className=\"adjust5\">Meal Type</th>\r\n                                        <th className=\"adjust5\">Meal Name</th>\r\n                                        <th className=\"adjust5\">Meal Price</th>\r\n                                        <th className=\"adjust5\">Action</th>\r\n                                       \r\n                                                \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className=\"table table-hover\">\r\n                                    {this.renderMenuData(this.state.menuData)}\r\n                                \r\n                                </tbody>\r\n                            </table>\r\n                            <center><button className=\"btn btn-danger gap mb-3\" onClick={ () => this.props.history.push('/FandBMenu')}>Close</button></center>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Modal open={this.state.edit} onClose={()=>this.onCloseModaledit()}>\r\n                    <div  className=\"background990i2b5\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\">\r\n                                <h6 style = {{color:'silver',marginLeft:'50px', marginBottom:'-50px'}}>Add New Category</h6>\r\n                            </div>\r\n                            {/* <div className=\"col-6\">\r\n                                <h6 style = {{color:'purple',marginLeft:'480px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                            </div> */}\r\n                        </div>\r\n                        <h4 style = {{color:'rgb(23, 23, 71)',marginLeft:'50px', marginBottom:'-40px'}}> </h4>\r\n\r\n                        <center>\r\n                        <div className=\"formdesign510b21Cat\">\r\n                            <center>\r\n                            <div className=\"row container\">\r\n                                \r\n                                <div className=\"col-6\">\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51\" name=\"catmealTypeID\" >{this.state.catmealTypeID} </p>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"catmealType\" require placeholder=\"Enter Meal Category\" value={this.state.catmealType} onChange={this.handleChange6}/>\r\n                                </div>\r\n\r\n                                <center>\r\n                                    <br/>\r\n                                    <span>\r\n                                        <button disabled={this.state.catmealTypeID===0||this.state.catmealType===''} className=\"btn btn-warning\" onClick={ () => this.handleSubmitCat()}>Add Meal Category</button>\r\n                                        <button className=\"btn btn-danger gap\" onClick={ () => this.onCloseModaledit()}>Close</button>\r\n                                        \r\n                                    </span>\r\n                                </center>\r\n                            \r\n                                \r\n                            </div>\r\n                            </center>\r\n                            <br/>\r\n                            <div className=\"container\">\r\n                                <table className=\"table table-hover\">\r\n                                \r\n                                    <thead className=\"table-warning\">\r\n                                        <tr>\r\n                                            <th className=\"adjust5\">Category ID</th>\r\n                                            <th className=\"adjust5\">Category Name</th>\r\n                                            <th className=\"adjust5\">Action</th>\r\n                                            <th className=\"adjust5\"> </th>\r\n                                                    \r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody className=\"table table-hover\">\r\n                                        {this.renderCatData(this.state.MenuCategoryData)}\r\n                                    \r\n                                    </tbody>\r\n                                </table>\r\n                                <center><button className=\"btn btn-danger gap mb-3\" onClick={ () => this.onCloseModaledit()}>Close</button></center>\r\n                            </div>\r\n                        </div>\r\n                        </center>\r\n                    </div>\r\n\r\n                </Modal>\r\n                \r\n            </>\r\n            \r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\">>> Inside GrpDidMount\", this.state);\r\n\r\n        fetch(`${menuCategoryUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                MenuCategoryData:data,\r\n                \r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${AvailableMenu}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            \r\n            data.map((item)=>{\r\n                var restMenuID = parseInt(item._id);\r\n                var comprestMenuID = Math.max(restMenuID) +1;\r\n                this.setState({\r\n                \r\n                    _id:comprestMenuID,\r\n                    \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n                \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n       \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default FandBRestMenu;","import React, { Component } from 'react';\r\nimport NumberFormat from 'react-number-format';\r\nimport '../Reception.css';\r\nimport moment from 'moment';\r\nimport FLogin from '../../FLogin';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\n\r\nconst getOrgUrl = \"https://zarvichdemo.localto.net/org?grpName=\";\r\nconst getgroupDocketsUrl = \"https://zarvichdemo.localto.net/posting\";\r\nconst getfunctionfoodanddrinkUrl = \"https://zarvichdemo.localto.net/getfoodanddrinks\";\r\nconst userName = \"https://zarvichdemo.localto.net/fofUserInfo\";\r\n\r\n\r\n\r\nclass FandBReport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside GstConstructor\",props)\r\n\r\n        this.state = {\r\n            groupBillData:'',\r\n            functionFandB:'',\r\n            totalfuncttionFandB:'',\r\n            org:'',\r\n            orgName:'',\r\n            startDate:'',\r\n            endDate:'',\r\n            departureDate:'',\r\n            totalDockets:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n            \r\n        };\r\n        this.starthandleChange = this.starthandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n        \r\n    }\r\n    renderstartDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.startDate}\r\n                    onChange={this.starthandleChange}\r\n                    maxDate={(new Date())}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText=\"Search Start Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    starthandleChange(date) {\r\n        this.setState({\r\n            startDate: date\r\n        });\r\n    }\r\n\r\n\r\n    renderendDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.endDate}\r\n                    onChange={this.endhandleChange}\r\n                    maxDate={(new Date())}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText=\"Search End Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            endDate: date\r\n        });\r\n    }\r\n\r\n\r\n\r\n    handleChange=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n    }\r\n\r\n\r\n    renderAllOrgs(data){\r\n        if(data) {\r\n           data.sort((a, b) => a.orgName - b.orgName);\r\n            return data.map((item) => {\r\n                return(\r\n                    <>\r\n                        <option key={item._id} value={item.orgName}>\r\n                            {item.orgName}\r\n                        </option>\r\n                    </>\r\n                )\r\n                \r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n    findGroup(){\r\n        var start = moment(this.state.startDate).format('MMM DD YYYY');\r\n        var end = moment(this.state.endDate).format('MMM DD YYYY');\r\n        var docketSearchUrl = `${getgroupDocketsUrl}?orgName=${this.state.orgName}&&startDate=${start}&&endDate=${end}`\r\n        var FandBsearchUrl=`${getfunctionfoodanddrinkUrl}?orgName=${this.state.orgName}&&startDate=${start}&&endDate=${end}`\r\n        \r\n        fetch(`${docketSearchUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({groupBillData:data});\r\n            var allDockets = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.cost)\r\n            }, 0);\r\n            this.setState({totalDockets:allDockets})\r\n        });\r\n\r\n        fetch(`${FandBsearchUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({functionFandB:data});\r\n            var allFandB = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.amount)\r\n            }, 0);\r\n            this.setState({totalfuncttionFandB:allFandB})\r\n        });\r\n    }\r\n\r\n    renderDockets=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n                \r\n                return(\r\n                    <>\r\n                            <tr key= {item.refID}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{item.date}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.roomNumbers}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.docketNum}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2\"><NumberFormat value={item.cost}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            \r\n                        </tr>\r\n                    </>\r\n                )\r\n\r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    renderFandB=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n                \r\n                return(\r\n                    <>\r\n                            <tr key= {item.resID}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{item.transactionDate}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.resID}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.qty}</td>\r\n                            <td className=\"table-light table-striped adjust2\"><NumberFormat value={item.amount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            \r\n                        </tr>\r\n                    </>\r\n                )\r\n\r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    render() {\r\n        console.log(\">>> Inside Gstrender\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <FLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        return(\r\n            \r\n            <div className =\"container\">\r\n                <div>\r\n                    <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                </div>\r\n                <div>\r\n                    <center>\r\n                        <h6>Zarvich Hotels Ltd.</h6>\r\n                        <p className=\"textSize\">No ABC Road, Wuse II, Abuja, Nigeria</p>\r\n                        <p className=\"textSize\">+234 803 590 5421, info@zarvichosh.com</p>\r\n                       \r\n                    </center>\r\n                </div>\r\n                <center>\r\n                    <h5>{this.state.orgName} Function F&B Report</h5><br/>\r\n                    <hr style={{color:'deeppink'}}/>\r\n                    <div className=\"row mt-4\">\r\n                        <div className=\"col-3\">\r\n                            <select type =\"button\" className=\"form-select mb-2 btn btn-primary mt-3 col-2 set1 printing\" name=\"orgName\" onChange={this.handleChange}>\r\n                                <option selected value=''>Select Org</option>\r\n                                {this.renderAllOrgs(this.state.org)}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <label>\r\n                                {this.renderstartDate(this.state.startDate)}\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <label>\r\n                                {this.renderendDate(this.state.endDate)}\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <button className=\"btn btn-primary printing set2\" onClick={ () => this.findGroup()}>Find</button>\r\n                        </div>\r\n                    </div>\r\n                    <hr style={{color:'deeppink'}}/>\r\n                    <br/><br/>\r\n               \r\n                </center>\r\n               \r\n                <h6>Room Service Details</h6>\r\n                <hr/>\r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust5\">Date</th>\r\n                            <th className=\"adjust5\">Room Num</th>\r\n                            <th className=\"adjust5\">Docket Num</th>\r\n                            <th className=\"adjust5\">Description</th>\r\n                            <th className=\"adjust5\">Amount (NGN)</th>\r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderDockets(this.state.groupBillData)}\r\n                        <h6>Room Service Total: <NumberFormat value={this.state.totalDockets}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                    </tbody>\r\n                </table>  \r\n                <h6>Banquet Details</h6>\r\n                <hr/>\r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust5\">Date</th>\r\n                            <th className=\"adjust5\">ID</th>\r\n                            <th className=\"adjust5\">Description</th>\r\n                            <th className=\"adjust5\">Qty</th>\r\n                            <th className=\"adjust5\">Amount (NGN)</th>\r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderFandB(this.state.functionFandB)}\r\n                        <h6>Banquet Details Total: <NumberFormat value={this.state.totalfuncttionFandB}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                    </tbody>\r\n                </table>  \r\n                \r\n                <hr/>\r\n                <center>\r\n                    <div className=\"row\">\r\n                        \r\n                        <div className=\"col-4\">\r\n                            <h6>Room Service:</h6><p><NumberFormat value={this.state.totalDockets}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></p>    \r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <h6>Banquet Bill:</h6><p><NumberFormat value={this.state.totalfuncttionFandB}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></p>    \r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                                <h6>Total:</h6><h6><NumberFormat value={this.state.totalDockets+this.state.totalfuncttionFandB}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>   \r\n                        </div>\r\n                        <hr/>\r\n                        \r\n                    </div>    \r\n                </center>\r\n\r\n                <center>\r\n                    <button className=\"btn btn-danger printing\" onClick={ () => this.props.history.push('/FandBMenu')}>Close</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ () => window.print() }>Print</button>\r\n                        \r\n                </center>     \r\n\r\n            </div>\r\n                \r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\">>> Inside GstDidMount\", this.state)\r\n\r\n        fetch(`${getOrgUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n                this.setState({\r\n                org:data\r\n            })\r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n    }\r\n    \r\n    \r\n    \r\n}\r\n\r\nexport default FandBReport;","import React, { Component } from 'react';\r\nimport NumberFormat from 'react-number-format';\r\nimport './Reception.css';\r\nimport moment from 'moment';\r\nimport FLogin from '../FLogin';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nconst getOrgUrl = \"https://zarvichdemo.localto.net/org?grpName=\";\r\nconst getGroupDataUrl = \"https://zarvichdemo.localto.net/groupCheckin\";\r\nconst userName = \"https://zarvichdemo.localto.net/fofUserInfo\";\r\n\r\n\r\n\r\nclass ReceptionFunctnAcc extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside GstConstructor\",props)\r\n\r\n        this.state = {\r\n            groupData:'',\r\n            org:'',\r\n            orgName:'',\r\n            startDate:'',\r\n            endDate:'',\r\n            departureDate:'',\r\n            totalAcc:0,\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n\r\n            \r\n        };\r\n        this.starthandleChange = this.starthandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n        \r\n    }\r\n    renderstartDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.startDate}\r\n                    onChange={this.starthandleChange}\r\n                    maxDate={(new Date())}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText=\"Search Start Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    starthandleChange(date) {\r\n        this.setState({\r\n            startDate: date\r\n        });\r\n    }\r\n\r\n\r\n    renderendDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.endDate}\r\n                    onChange={this.endhandleChange}\r\n                    maxDate={(new Date())}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText=\"Search End Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            endDate: date\r\n        });\r\n    }\r\n\r\n\r\n\r\n    handleChange=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n    }\r\n\r\n\r\n    renderAllOrgs(data){\r\n        if(data) {\r\n           data.sort((a, b) => a.orgName - b.orgName);\r\n            return data.map((item) => {\r\n                return(\r\n                    <>\r\n                        <option key={item._id} value={item.orgName}>\r\n                            {item.orgName}\r\n                        </option>\r\n                    </>\r\n                )\r\n                \r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n    cleanup(){\r\n        this.setState({\r\n            groupData:'',\r\n            departureDate:'',\r\n            totalAcc:0\r\n           \r\n        })\r\n    }\r\n\r\n    findGroup(){\r\n        var start = moment(this.state.startDate).format('MMM DD YYYY');\r\n        var end = moment(this.state.endDate).format('MMM DD YYYY');\r\n        var searchUrl=`${getGroupDataUrl}?orgName=${this.state.orgName}&&startDate=${start}&&endDate=${end}`\r\n               \r\n\r\n        fetch(`${searchUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({groupData:data});\r\n            data.map((item) => {\r\n                var allstay = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.calculatedstay)\r\n                }, 0);\r\n                this.setState({totalAcc:allstay})\r\n                return 'ok'\r\n            })\r\n            \r\n        });\r\n\r\n       \r\n    }\r\n\r\n    renderRooms=(data)=>{\r\n        if(data){\r\n            data.sort((a, b) => a.arrivalDate - b.arrivalDate);\r\n            return data.map((item)=>{\r\n                var thisDate = new Date();\r\n                var endDate = moment(thisDate);\r\n               \r\n                var startDt = moment(item.arrivalDate);\r\n               \r\n                var diff =endDate.diff(startDt);\r\n                var datecomp = Math.ceil(diff/(1000*3600*24));\r\n               \r\n\r\n                var arrival = moment(item.arrivalDate).format('MMM DD YYYY');\r\n\r\n               \r\n                    \r\n                return(\r\n                    <>\r\n                        <tr key= {item.refID}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{item.fname} {item.lname}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{arrival}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.roomNumbers}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.roomtypeName}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.discounType}</td>\r\n                            <td className=\"table-light table-striped adjust2\"><NumberFormat value={item.discountAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2\"><NumberFormat value={item.dailyRate}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2\">{datecomp} Nights</td>\r\n                            <td className=\"table-light table-striped adjust2\"><NumberFormat value={datecomp*item.dailyRate}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                    \r\n                        </tr> \r\n                    </>\r\n                )\r\n                \r\n\r\n               \r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log(\">>> Inside Gstrender\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <FLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        return(\r\n            \r\n            <div className =\"container\">\r\n                <div>\r\n                    <img src= \"zarvichlogo.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                </div>\r\n                <div>\r\n                    <center>\r\n                        <h6>Zarvich Hotels Ltd.</h6>\r\n                        <p className=\"textSize\">No ABC Road, Wuse II, Abuja, Nigeria</p>\r\n                        <p className=\"textSize\">+234 803 590 5421, info@zarvichosh.com</p>\r\n                       \r\n                    </center>\r\n                </div>\r\n                <center>\r\n                    <h5>{this.state.orgName} Group Bill</h5>\r\n                    <p className=\"textSize\">From {moment(this.state.startDate).format('MMM DD YYYY')} to { moment(this.state.endDate).format('MMM DD YYYY')}</p>\r\n\r\n                    <hr style={{color:'deeppink'}}/>\r\n                    <div className=\"row mt-4\">\r\n                        <div className=\"col-3\">\r\n                            <select type =\"button\" className=\"form-select mb-2 btn btn-primary mt-3 col-2 set1 printing\" name=\"orgName\" onChange={this.handleChange}>\r\n                                <option selected value=''>Select Org</option>\r\n                                {this.renderAllOrgs(this.state.org)}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <label>\r\n                                {this.renderstartDate(this.state.startDate)}\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <label>\r\n                                {this.renderendDate(this.state.endDate)}\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <button className=\"btn btn-primary printing set2\" onClick={ () => {this.cleanup();this.findGroup()}}>Find</button>\r\n                        </div>\r\n                    </div>\r\n                    <hr style={{color:'deeppink'}}/>\r\n                    <br/><br/>\r\n               \r\n                </center>\r\n                <h6>Accommodation Details</h6>\r\n                <hr/>\r\n                                               \r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust5\">Names</th>\r\n                            <th className=\"adjust5\">Arrival Date</th>\r\n                            <th className=\"adjust5\">Room Num</th>\r\n                            <th className=\"adjust5\">Room Type</th>\r\n                            <th className=\"adjust5\">Discount Type</th>\r\n                            <th className=\"adjust5\">Discount Amount</th>\r\n                            <th className=\"adjust5\">Daily Rate(NGN)</th>\r\n                            <th className=\"adjust5\">Stay</th>\r\n                            <th className=\"adjust5\">Amount(NGN)</th>\r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderRooms(this.state.groupData)}\r\n                        <h6>Accommodation Total: <NumberFormat value={this.state.totalAcc}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                    </tbody>\r\n                    \r\n                </table>\r\n                \r\n                <hr/>\r\n                <center>\r\n                    <div className=\"row\">\r\n                       \r\n                        \r\n                    </div>    \r\n                </center>\r\n\r\n                <center>\r\n                    <button className=\"btn btn-danger printing\" onClick={ () => this.props.history.push('/ReceptionMenu')}>Close</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ () => window.print() }>Print</button>\r\n                        \r\n                </center>     \r\n\r\n            </div>\r\n                \r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\">>> Inside GstDidMount\", this.state)\r\n\r\n        fetch(`${getOrgUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n                this.setState({\r\n                org:data\r\n            })\r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n    }\r\n    \r\n}\r\n\r\nexport default ReceptionFunctnAcc;","import React, { Component } from 'react';\r\nimport Billinglogin from '../../Billinglogin';\r\nimport '../Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport addDays from 'date-fns/addDays';\r\nimport DatePicker from 'react-datepicker';\r\nimport moment from 'moment';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst getRoomSales = \"https://zarvichdemo.localto.net/findbarsales?barDep44=Bar%20Sales\";\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\n// const getAllRoomSales = \"/findbarsales?barDep43=Bar%20Sales\";\r\nconst levyUrl= \"https://zarvichdemo.localto.net/feesAndCharges\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\n\r\nclass BarSalesReport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside CashConstructor\",props)\r\n        this.state = {\r\n            RoomSales:'',\r\n            RoomTotal:'',\r\n            depPOS:'',\r\n            depCash:'',\r\n            depTransfer:'',\r\n            depComp:'',\r\n            TotalSales:'',\r\n            date:'',\r\n            deproom:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            shift:'',\r\n            startdate:'',\r\n            endDate:'',\r\n            levyData:'',\r\n            ServiceChrg:'',\r\n            TourismLevy:'',\r\n            VAT:'',\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n            \r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n\r\n    }\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            date: date,\r\n            startdate: date\r\n\r\n        });\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            endDate: date\r\n        });\r\n    }\r\n\r\n    \r\n    renderDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.date}\r\n                    onChange={this.checkinhandleChange}\r\n                    maxDate={addDays(new Date(),0)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText='Select Start Date'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    renderendDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.endDate}\r\n                    onChange={this.endhandleChange}\r\n                    maxDate={(new Date())}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112 mvrght\"\r\n                    placeholderText=\"Search End Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        localStorage.removeItem('shift')\r\n        \r\n    }\r\n\r\n    handleChange=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    cleanup(){\r\n        this.setState({\r\n            RoomSales:'',\r\n            RoomTotal:'',\r\n            depPOS:'',\r\n            depCash:'',\r\n            depTransfer:'',\r\n            depComp:'',\r\n            TotalSales:'',\r\n            deproom:'',\r\n           \r\n        })\r\n    }\r\n\r\n    findRoomReport(){\r\n        var start = moment(this.state.date).format('MMM DD YYYY');\r\n        var end = moment(this.state.endDate).format('MMM DD YYYY');\r\n\r\n        var findAllBar = `${getRoomSales}&&startdate44=${start}&&endDate44=${end}`\r\n        \r\n        \r\n        this.setState({RoomSales:''})\r\n        fetch(`${findAllBar}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({RoomSales:data});\r\n            data.map((item) => {\r\n\r\n                var RmSales = 0;\r\n                var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.CompDebit) + parseInt(item.roomDebit)\r\n                this.setState({RoomTotal:roomSales});\r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({depPOS:allPOS});\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({depCash:allCash});\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({depTransfer:allTransfer});\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({depComp:allComp});\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({deproom:allRoom});\r\n                \r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n        \r\n            var AllSalesPoint = 0;\r\n            var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n            this.setState({TotalSales:TotalSalesPoints})\r\n\r\n        },1000)\r\n        \r\n\r\n    }\r\n\r\n    renderRoomSales=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a, b) => a.date - b.date);\r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                var sales = item.docketDetails;\r\n                \r\n                \r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust222\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{sales.map(prod => prod.meal)}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POSAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CashAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.TransferAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CompDebit}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.roomDebit}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\">{item.roomNumbers}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POSAmount) + parseInt(item.CashAmount) + parseInt(item.TransferAmount) - parseInt(item.CompDebit)+ parseInt(item.roomDebit)}thousandSeparator={true}displayType={\"text\"}/></b></td> \r\n                            \r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log (\">>> Inside Cashdetails\", this.state)\r\n        // var defaultdate = moment(this.state.date).format('MMM DD YYYY');\r\n        var totalSales = this.state.depPOS + this.state.depCash + this.state.depTransfer + this.state.depComp + this.state.deproom;\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Billinglogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <div className =\"container\">\r\n                <div>\r\n                    <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                </div>\r\n                <div>\r\n                    <center>\r\n                        <h6>{this.state.Hotelname}</h6>\r\n                        <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                        <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n                       \r\n                    </center>\r\n                </div>\r\n                <center>\r\n                    <h5>Daily Bar Sales Report</h5><br/>\r\n                    <div>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderDate(this.state.startdate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderendDate(this.state.endDate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            <select type =\"button\" className=\"form-select mb-2 btn btn-primary mt-3 btnwidthp printing space selectadjuster\" name=\"shift\" value ={this.state.shift} onChange={this.handleChange}>\r\n                                <option selected value=''>Select Shift</option>\r\n                                <option value='Morning Shift'>Morning Shift</option>\r\n                                <option value='Night Shift'>Night Shift</option>\r\n                                <option value='All Day'>All Day</option>\r\n                                <option value='All Shifts'>All Shifts</option>\r\n                                \r\n                            </select>\r\n                            <button className=\"btn btn-primary space btnadjuster printing\" onClick={ () => {this.cleanup();this.findRoomReport()}}>Find</button>\r\n                        </span>\r\n                    </div>\r\n                    <br/>\r\n                        \r\n                                   \r\n                </center>\r\n                <br/>\r\n                \r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust50\">Date</th>\r\n                            <th className=\"adjust50\">Description</th>\r\n                            <th className=\"adjust50\">POS (NGN)</th>\r\n                            <th className=\"adjust50\">Cash(NGN)</th>\r\n                            <th className=\"adjust50\">Transfer(NGN)</th>\r\n                            <th className=\"adjust50\">Compl(NGN)</th>\r\n                            <th className=\"adjust50\">Room(NGN)</th>\r\n                            <th className=\"adjust50\">Rm Num</th>\r\n                            <th className=\"adjust50\">Total(NGN)</th>\r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderRoomSales(this.state.RoomSales)}\r\n                        <tr>\r\n                            <td className=\"table-light table-striped adjust2\"> </td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\"><b>Total Collection</b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depPOS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depCash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depTransfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depComp)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.deproom)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"> </td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b> <NumberFormat value={totalSales}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr>\r\n                        \r\n                    </tbody>\r\n                    \r\n                </table>\r\n               \r\n                <h6>Total Collection:         <NumberFormat value={totalSales}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                <hr/>\r\n                <center>\r\n                \r\n                    <button className=\"btn btn-danger movebtn printing\" onClick={ () => this.props.history.push('/EndOfDay') }>Close</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ () => window.print() }>Print</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>\r\n                        \r\n                </center>       \r\n            </div>\r\n            \r\n        );\r\n    }\r\n  \r\n    componentDidMount() {\r\n        console.log(\">>> Inside CashDidMount\", this.state)\r\n        \r\n        fetch(`${levyUrl}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({levyData:data})\r\n               \r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n       \r\n        var start = moment(new Date()).format('MMM DD YYYY');\r\n        var end = moment(new Date()).format('MMM DD YYYY');\r\n\r\n        var findAllBar = `${getRoomSales}&&startdate44=${start}&&endDate44=${end}`\r\n        \r\n        this.setState({RoomSales:''})\r\n        fetch(`${findAllBar}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({RoomSales:data});\r\n            data.map((item) => {\r\n\r\n                var RmSales = 0;\r\n                var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.CompDebit) + parseInt(item.roomDebit)\r\n                this.setState({RoomTotal:roomSales});\r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({depPOS:allPOS});\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({depCash:allCash});\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({depTransfer:allTransfer});\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({depComp:allComp});\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({deproom:allRoom});\r\n                \r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n        \r\n            var AllSalesPoint = 0;\r\n            var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n            this.setState({TotalSales:TotalSalesPoints})\r\n\r\n        },1000)\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n            \r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default BarSalesReport;","import React, { Component } from 'react';\r\nimport Storelogin from '../Storelogin';\r\nimport '../Reception/Reception.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst deptUrl= \"https://zarvichdemo.localto.net/issueDepts\";\r\nconst getdeptID= \"https://zarvichdemo.localto.net/issueDepts?deptID=\";\r\nconst postdept= \"https://zarvichdemo.localto.net/newDept\";\r\nconst putdept= \"https://zarvichdemo.localto.net/editdept\";\r\nconst deldept= \"https://zarvichdemo.localto.net/deldepartment\";\r\nconst userName = \"https://zarvichdemo.localto.net/storeUserInfo\";\r\n\r\n\r\nclass departments extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>> inside GrpCobtructor\", props)\r\n\r\n        this.state = {\r\n            _id:Math.floor(Math.random()*10000),\r\n            deptData:'',\r\n            departmentName:'',\r\n            departmentID: '',\r\n            deptIDs:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n\r\n    deletedept(){\r\n        fetch(`${deldept}/${sessionStorage.getItem('getdeptdelID')}`, {method:'delete'})\r\n        alert(\"Department Deleted\")\r\n        \r\n        this.myTimer = setTimeout(() => {\r\n            fetch(`${deptUrl}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    deptData:data\r\n                })\r\n                data.map((item)=>{\r\n                    var checkID = parseInt(item.departmentID);\r\n                    var computeID = Math.max(checkID) +1;\r\n                    this.setState({\r\n                    \r\n                        departmentID:computeID\r\n                    \r\n                    })\r\n                    \r\n                    return 'ok'\r\n                })\r\n                \r\n            })\r\n           \r\n        },1000)\r\n    }\r\n    \r\n\r\n    editDept(){\r\n        fetch(`${getdeptID}${sessionStorage.getItem('getdeptID')}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    departmentID:item.departmentID,\r\n                    departmentName:item.departmentName\r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        })\r\n    }\r\n\r\n    \r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    async handleSubmit() {\r\n       \r\n        try {\r\n            \r\n            var finddeptID = this.state.deptData;\r\n            var founddeptID = this.state.departmentID\r\n\r\n            var deptDatapost = {\r\n                \r\n                departmentID:`${this.state.departmentID}`,\r\n                departmentName:`${this.state.departmentName}`,\r\n                _id:`${this.state._id}`\r\n                \r\n            }\r\n\r\n            if(finddeptID.some(item => item.departmentID===founddeptID)){\r\n                alert(this.state.departmentName+ \" already exist\");\r\n\r\n                fetch(`${deptUrl}`, {method:'GET'})\r\n                .then((resp) => resp.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        deptData:data\r\n                        \r\n                    })\r\n                    data.map((item)=>{\r\n                        var checkID = parseInt(item.departmentID);\r\n                        var computeID = Math.max(checkID) +1;\r\n                        this.setState({\r\n                        \r\n                            departmentID:computeID,\r\n                            departmentName:''\r\n                        \r\n                        })\r\n                        \r\n                        return 'ok'\r\n                    })\r\n    \r\n                })\r\n                this.myTimer = setTimeout(() => {\r\n                    \r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000),\r\n                       \r\n                        \r\n                    })\r\n                },1000)\r\n               \r\n            }\r\n\r\n            else{\r\n                let result = await fetch(`${postdept}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        deptDatapost\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                alert(this.state.departmentName+ \" Added\");\r\n                this.setState({\r\n                    departmentName:'',\r\n                    deptIDs:'',\r\n                    departmentID: '',\r\n                    _id:''\r\n                })\r\n                fetch(`${deptUrl}`, {method:'GET'})\r\n                .then((resp) => resp.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        deptData:data\r\n                        \r\n                    })\r\n                    data.map((item)=>{\r\n                        var checkID = parseInt(item.departmentID);\r\n                        var computeID = Math.max(checkID) +1;\r\n                        this.setState({\r\n                        \r\n                            departmentID:computeID\r\n                        \r\n                        })\r\n                        \r\n                        return 'ok'\r\n                    })\r\n    \r\n                })\r\n                this.myTimer = setTimeout(() => {\r\n                    \r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000),\r\n                       \r\n                        \r\n                    })\r\n                },1000)\r\n            }\r\n\r\n           \r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async deptUpdate() {\r\n       \r\n        try {\r\n            var id = sessionStorage.getItem('getdeptID')\r\n           \r\n            var deptUpdated = {\r\n               \r\n                departmentName:`${this.state.departmentName}`,\r\n                _id:`${this.state._id}`\r\n                \r\n            }\r\n            let result = await fetch(`${putdept}/${id}`, {\r\n                method: 'put',\r\n    \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n    \r\n                body: JSON.stringify(\r\n                    \r\n                    deptUpdated\r\n                        \r\n                )\r\n                    \r\n            });\r\n            console.log('result>  ' + result)\r\n            alert(this.state.departmentName+ \" updated\");\r\n            this.setState({\r\n                departmentName:'',\r\n                deptIDs:'',\r\n                departmentID: '',\r\n                _id:''\r\n            })\r\n\r\n            fetch(`${deptUrl}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    deptData:data\r\n                    \r\n                })\r\n                data.map((item)=>{\r\n                    var checkID = parseInt(item.departmentID);\r\n                    var computeID = Math.max(checkID) +1;\r\n                    this.setState({\r\n                    \r\n                        departmentID:computeID\r\n                    \r\n                    })\r\n                    return 'ok'\r\n                })\r\n\r\n            })\r\n            this.myTimer = setTimeout(() => {\r\n                \r\n                this.setState({\r\n                    _id:Math.floor(Math.random()*10000),\r\n                    \r\n                    \r\n                })\r\n            },1000)\r\n\r\n            \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    renderdeptData(data){\r\n        if(data){\r\n            \r\n            return data.map((item)=>{\r\n                data.sort((a, b) => a.departmentID - b.departmentID);\r\n                return(\r\n                    <>\r\n                    \r\n                        <tr key= {item._id}>\r\n                                \r\n                            <td className=\"table-light table-striped adjust2\">{item.departmentID}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.departmentName}</td>\r\n                            <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-primary textcolor\" onMouseOver={()=>sessionStorage.setItem('getdeptID',item.departmentID)} onClick={()=>{this.editDept()}}>Edit</button></td>\r\n                            <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-danger textcolor\" onMouseOver={()=>sessionStorage.setItem('getdeptdelID', item.departmentID)} onClick={()=>{this.deletedept()}}>Delete</button></td>\r\n                                \r\n                        </tr>\r\n                    </>\r\n                )\r\n                \r\n            })\r\n            \r\n        }\r\n\r\n\r\n    }\r\n  \r\n\r\n    render() {\r\n        console.log (\">>> Inside Grpdetails\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Storelogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div  className=\"background990i\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-50px'}}>Issue Departments </h4>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h6 style = {{color:'purple',marginLeft:'480px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                        </div>\r\n                    </div>\r\n                    <h4 style = {{color:'rgb(23, 23, 71)',marginLeft:'50px', marginBottom:'-40px'}}> </h4>\r\n\r\n                    <div className=\"formdesign510b\">\r\n                        <div className=\"row container\">\r\n                            \r\n                            <div className=\"col-6\">\r\n                                <p type=\"text\" className=\"form-control mb-3 formsize51\" name=\"departmentID\" >{this.state.departmentID} </p>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                               <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"departmentName\" require placeholder=\"Enter Dept. Name\" value={this.state.departmentName} onChange={this.handleChange}/>\r\n                            </div>\r\n\r\n                            <center>\r\n                            <br/>\r\n                                <span>\r\n                                    <button disabled={this.state.departmentName===''} className=\"btn btn-warning\" onClick={ () => this.handleSubmit () } >Add New</button>\r\n                                    <button disabled ={this.state.departmentName===''} className=\"btn btn-warning gap\" onClick={()=>this.deptUpdate()}>Save Update</button>\r\n                                    <button className=\"btn btn-danger gap\" onClick={ () => this.props.history.push('/storeMenu')}>Close</button>\r\n                                    \r\n                                </span>\r\n                            </center>\r\n                           \r\n                            \r\n                        </div>\r\n                        <br/>\r\n                        <div className=\"container\">\r\n                            <table className=\"table table-hover\">\r\n                            \r\n                                <thead className=\"table-warning\">\r\n                                    <tr>\r\n                                        <th className=\"adjust5\">Department ID</th>\r\n                                        <th className=\"adjust5\">Department Name</th>\r\n                                        <th className=\"adjust5\">Action</th>\r\n                                        <th className=\"adjust5\"> </th>\r\n                                                \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className=\"table table-hover\">\r\n                                    {this.renderdeptData(this.state.deptData)}\r\n                                \r\n                                </tbody>\r\n                            </table>\r\n                            <center><button className=\"btn btn-danger gap mb-3\" onClick={ () => this.props.history.push('/storeMenu')}>Close</button></center>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </>\r\n            \r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\">>> Inside GrpDidMount\", this.state);\r\n\r\n        fetch(`${deptUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                deptData:data,\r\n            \r\n\r\n            })\r\n            data.map((item)=>{\r\n                var checkID = parseInt(item.departmentID);\r\n                var computeID = Math.max(checkID) +1;\r\n                this.setState({\r\n                \r\n                    departmentID:computeID\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n           \r\n            \r\n        })\r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n       \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default departments;","import React, { Component } from 'react';\r\nimport Storelogin from '../Storelogin';\r\nimport '../Reception/Reception.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst deptUrl= \"https://zarvichdemo.localto.net/storeTypes\";\r\nconst getdeptID= \"https://zarvichdemo.localto.net/storeTypes?catID=\";\r\nconst postdept= \"https://zarvichdemo.localto.net/storeTypePost\";\r\nconst putdept= \"https://zarvichdemo.localto.net/editcategory\";\r\nconst deldept= \"https://zarvichdemo.localto.net/delcategory\";\r\nconst userName = \"https://zarvichdemo.localto.net/storeUserInfo\";\r\n\r\n\r\nclass productCategories extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>> inside GrpCobtructor\", props)\r\n\r\n        this.state = {\r\n            _id:Math.floor(Math.random()*10000),\r\n            deptData:'',\r\n            departmentName:'',\r\n            departmentID: '',\r\n            categoryCode:'',\r\n            deptIDs:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n\r\n    deletedept(){\r\n        fetch(`${deldept}/${sessionStorage.getItem('getcatdelID')}`, {method:'delete'})\r\n        alert(\"Category Deleted\")\r\n\r\n        this.myTimer = setTimeout(() => {\r\n            fetch(`${deptUrl}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    deptData:data\r\n                })\r\n                data.map((item)=>{\r\n                    var checkID = parseInt(item.catgoryID);\r\n                    var computeID = Math.max(checkID) +1;\r\n                    var checkID2 = parseInt(item.categoryCode);\r\n                    var computeID2 = Math.max(checkID2) +100000;\r\n                    this.setState({\r\n                    \r\n                        departmentID:computeID,\r\n                        categoryCode:computeID2\r\n                    \r\n                    })\r\n                    \r\n                    return 'ok'\r\n                })\r\n                \r\n            })\r\n           \r\n        },1000)\r\n    }\r\n    \r\n\r\n    editDept(){\r\n        fetch(`${getdeptID}${sessionStorage.getItem('getcatID')}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    departmentID:item.catgoryID,\r\n                    departmentName:item.categoryName,\r\n                    categoryCode:item.categoryCode\r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        })\r\n    }\r\n\r\n    \r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    async handleSubmit() {\r\n       \r\n        try {\r\n            \r\n            var finddeptID = this.state.deptData;\r\n            var founddeptID = this.state.departmentID\r\n           \r\n\r\n            var deptDatapost = {\r\n                \r\n                catgoryID:`${this.state.departmentID}`,\r\n                categoryName:`${this.state.departmentName}`,\r\n                categoryCode:`${this.state.categoryCode}`,\r\n                _id:`${this.state._id}`\r\n                \r\n            }\r\n\r\n            if(finddeptID.some(item => item.departmentID===founddeptID)){\r\n                alert(this.state.departmentName+ \" already exist\");\r\n\r\n                fetch(`${deptUrl}`, {method:'GET'})\r\n                .then((resp) => resp.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        deptData:data\r\n                        \r\n                    })\r\n                    data.map((item)=>{\r\n                        var checkID = parseInt(item.catgoryID);\r\n                        var computeID = Math.max(checkID) +1;\r\n                        var checkID2 = parseInt(item.categoryCode);\r\n                        var computeID2 = Math.max(checkID2) +100000;\r\n                        this.setState({\r\n                        \r\n                            departmentID:computeID,\r\n                            categoryCode:computeID2,\r\n                            departmentName:''\r\n                        \r\n                        })\r\n                        \r\n                        return 'ok'\r\n                    })\r\n    \r\n                })\r\n                this.myTimer = setTimeout(() => {\r\n                    \r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000),\r\n                       \r\n                        \r\n                    })\r\n                },1000)\r\n               \r\n            }\r\n\r\n            else{\r\n                let result = await fetch(`${postdept}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        deptDatapost\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                alert(this.state.departmentName+ \" Added\");\r\n                this.setState({\r\n                    departmentName:'',\r\n                    deptIDs:'',\r\n                    departmentID: '',\r\n                    categoryCode:'',\r\n                    _id:''\r\n                })\r\n                fetch(`${deptUrl}`, {method:'GET'})\r\n                .then((resp) => resp.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        deptData:data\r\n                        \r\n                    })\r\n                    data.map((item)=>{\r\n                        var checkID = parseInt(item.catgoryID);\r\n                        var computeID = Math.max(checkID) +1;\r\n                        var checkID2 = parseInt(item.categoryCode);\r\n                        var computeID2 = Math.max(checkID2) +100000;\r\n                        this.setState({\r\n                        \r\n                            departmentID:computeID,\r\n                            categoryCode:computeID2\r\n                        \r\n                        })\r\n                        \r\n                        return 'ok'\r\n                    })\r\n    \r\n                })\r\n                this.myTimer = setTimeout(() => {\r\n                    \r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000),\r\n                       \r\n                        \r\n                    })\r\n                },1000)\r\n            }\r\n\r\n           \r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async deptUpdate() {\r\n       \r\n        try {\r\n            var id = sessionStorage.getItem('getcatID')\r\n           \r\n            var deptUpdated = {\r\n               \r\n                categoryName:`${this.state.departmentName}`,\r\n                categoryCode:`${this.state.categoryCode}`\r\n                \r\n                \r\n            }\r\n            let result = await fetch(`${putdept}/${id}`, {\r\n                method: 'put',\r\n    \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n    \r\n                body: JSON.stringify(\r\n                    \r\n                    deptUpdated\r\n                        \r\n                )\r\n                    \r\n            });\r\n            console.log('result>  ' + result)\r\n            alert(this.state.departmentName+ \" Updated\");\r\n            this.setState({\r\n                departmentName:'',\r\n                deptIDs:'',\r\n                departmentID: '',\r\n                categoryCode:'',\r\n                _id:''\r\n            })\r\n\r\n            fetch(`${deptUrl}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    deptData:data\r\n                    \r\n                })\r\n                data.map((item)=>{\r\n                    var checkID = parseInt(item.catgoryID);\r\n                    var computeID = Math.max(checkID) +1;\r\n                    var checkID2 = parseInt(item.categoryCode);\r\n                    var computeID2 = Math.max(checkID2) +100000;\r\n                    this.setState({\r\n                    \r\n                        departmentID:computeID,\r\n                        categoryCode:computeID2\r\n                    \r\n                    })\r\n                    return 'ok'\r\n                })\r\n\r\n            })\r\n            this.myTimer = setTimeout(() => {\r\n                \r\n                this.setState({\r\n                    _id:Math.floor(Math.random()*10000),\r\n                    \r\n                    \r\n                })\r\n            },1000)\r\n\r\n            \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    renderdeptData(data){\r\n        if(data){\r\n            \r\n            return data.map((item)=>{\r\n                data.sort((a, b) => a.catgoryID - b.catgoryID);\r\n                \r\n                return(\r\n                    <>\r\n                    \r\n                        <tr key= {item._id}>\r\n                                \r\n                            <td className=\"table-light table-striped adjust2\">{item.catgoryID}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.categoryCode}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.categoryName}</td>\r\n                            <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-primary textcolor\" onMouseOver={()=>sessionStorage.setItem('getcatID',item.catgoryID)} onClick={()=>{this.editDept()}}>Edit</button></td>\r\n                            <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-danger textcolor\" onMouseOver={()=>sessionStorage.setItem('getcatdelID',item.catgoryID)} onClick={()=>{this.deletedept()}}>Delete</button></td>\r\n                                \r\n                        </tr>\r\n                    </>\r\n                )\r\n                \r\n            })\r\n            \r\n        }\r\n\r\n\r\n    }\r\n  \r\n\r\n    render() {\r\n        console.log (\">>> Inside Grpdetails\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Storelogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div  className=\"background990i\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-50px'}}>Store Categories</h4>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h6 style = {{color:'purple',marginLeft:'480px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                        </div>\r\n                    </div>\r\n                    <h4 style = {{color:'rgb(23, 23, 71)',marginLeft:'50px', marginBottom:'-40px'}}> </h4>\r\n\r\n                    <div className=\"formdesign510b\">\r\n                        <div className=\"row container\">\r\n                            \r\n                            <div className=\"col-4\">\r\n                                <p type=\"text\" className=\"form-control mb-3 formsize51\" name=\"departmentID\">{this.state.departmentID} </p>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <p type=\"text\" className=\"form-control mb-3 formsize51\" name=\"categoryCode\">{this.state.categoryCode} </p>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                               <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"departmentName\" require placeholder=\"Category Name\" value={this.state.departmentName} onChange={this.handleChange}/>\r\n                            </div>\r\n\r\n                            <center>\r\n                            <br/>\r\n                                <span>\r\n                                    <button disabled={this.state.departmentName===''} className=\"btn btn-warning\" onClick={ () => this.handleSubmit () } >Add New</button>\r\n                                    <button disabled ={this.state.departmentName===''} className=\"btn btn-warning gap\" onClick={()=>this.deptUpdate()}>Save Update</button>\r\n                                    <button className=\"btn btn-danger gap\" onClick={ () => this.props.history.push('/storeMenu')}>Close</button>\r\n                                    \r\n                                </span>\r\n                            </center>\r\n                           \r\n                            \r\n                        </div>\r\n                        <br/>\r\n                        <div className=\"container\">\r\n                            <table className=\"table table-hover\">\r\n                            \r\n                                <thead className=\"table-warning\">\r\n                                    <tr>\r\n                                        <th className=\"adjust5\">Category ID</th>\r\n                                        <th className=\"adjust5\">Category Code</th>\r\n                                        <th className=\"adjust5\">Category Name</th>\r\n                                        <th className=\"adjust5\">Action</th>\r\n                                        <th className=\"adjust5\"> </th>\r\n                                                \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className=\"table table-hover\">\r\n                                    {this.renderdeptData(this.state.deptData)}\r\n                                \r\n                                </tbody>\r\n                            </table>\r\n                            <center><button className=\"btn btn-danger gap mb-3\" onClick={ () => this.props.history.push('/storeMenu')}>Close</button></center>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </>\r\n            \r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\">>> Inside GrpDidMount\", this.state);\r\n\r\n        fetch(`${deptUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                deptData:data,\r\n            \r\n\r\n            })\r\n            data.map((item)=>{\r\n                var checkID = parseInt(item.catgoryID);\r\n                var computeID = Math.max(checkID) +1;\r\n                var checkID2 = parseInt(item.categoryCode);\r\n                var computeID2 = Math.max(checkID2) +100000;\r\n                this.setState({\r\n                \r\n                    departmentID:computeID,\r\n                    categoryCode:computeID2\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n           \r\n            \r\n        })\r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n       \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default productCategories;","import React,{Component} from 'react';\r\nimport '../HouseKeeping/Housekeeping.css';\r\nimport Storelogin from '../Storelogin';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst userName = \"https://zarvichdemo.localto.net/storeUserInfo\";\r\n\r\nclass storeMenu extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n        }\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n    render() {\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Storelogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        return(\r\n            <div className=\"fill-window\">\r\n                 <div className=\"background15k\">\r\n                                      \r\n                    <center>\r\n                         <div className=\"formdesign15k\">\r\n                             <h4 className=\"mb-3\">Central Store</h4>\r\n                             \r\n                            <div>\r\n                                \r\n                                <center>\r\n                                   \r\n                                   <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/departments')}}>Issue Departments</button>\r\n                                   <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/categories')}}>Store Types</button>\r\n                                   <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/vendor')}}>Manage Vendors</button>\r\n                                   <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/units')}}>Product Units</button>\r\n                                   <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/Products')}}>Register Products</button>\r\n                                   <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/stockIn')}}>Stock In Products</button>\r\n                                   <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/stockOut')}}>Stock Out Products</button>\r\n                                   <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/FandBMenu')}}>Restaurant Menu</button>\r\n                                   <button className=\"btn btn-warning btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/StoreReport')}}>Stock Movement</button>\r\n                                   <button className=\"btn btn-success btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>\r\n                                   <button className=\"btn btn-danger btnwidth15 mb-3\" onClick={ ()=> this.logout()}>\r\n                                        Log Out {localStorage.getItem('userInfo').split(' ')[0]}\r\n                                    </button>\r\n                                </center>\r\n                            </div>\r\n                         </div>\r\n\r\n                     </center>\r\n                   \r\n                </div>\r\n            </div>\r\n           \r\n\r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default storeMenu;\r\n","import React, { Component } from 'react';\r\nimport Storelogin from '../Storelogin';\r\nimport '../Reception/Reception.css';\r\nimport DatePicker from 'react-datepicker';\r\nimport addDays from 'date-fns/addDays';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport moment from 'moment';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst deptUrl= \"https://zarvichdemo.localto.net/vendors\";\r\nconst getdeptID= \"https://zarvichdemo.localto.net/vendors?venid=\";\r\nconst postdept= \"https://zarvichdemo.localto.net/addVendor\";\r\nconst putdept= \"https://zarvichdemo.localto.net/editVendor\";\r\nconst deldept= \"https://zarvichdemo.localto.net/delvendor\";\r\nconst userName = \"https://zarvichdemo.localto.net/storeUserInfo\";\r\n\r\n\r\nclass productVendor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>> inside GrpCobtructor\", props)\r\n\r\n        this.state = {\r\n            _id:Math.floor(Math.random()*10000),\r\n            deptData:'',\r\n            departmentName:'',\r\n            departmentID: '',\r\n            deptIDs:'',\r\n            address:'',\r\n            phone:'',\r\n            email:'',\r\n            productDescription:'',\r\n            dateRegistered:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n            \r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n        \r\n\r\n    }\r\n\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            dateRegistered: date\r\n        });\r\n    }\r\n\r\n    rendercheckinDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.dateRegistered}\r\n                    onChange={this.checkinhandleChange}\r\n                    minDate={new Date()}\r\n                    maxDate={addDays(new Date(),1)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    placeholderText=\"Registration Date\"\r\n                    className=\"form-control mb-3 formsize51\"\r\n                    \r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    \r\n   \r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n\r\n    deletedept(){\r\n        fetch(`${deldept}/${sessionStorage.getItem('getvendelID')}`, {method:'delete'})\r\n        alert(\"Vendor Deleted\")\r\n\r\n        this.myTimer = setTimeout(() => {\r\n            fetch(`${deptUrl}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    deptData:data\r\n                })\r\n                data.map((item)=>{\r\n                    var checkID = parseInt(item.vendorID);\r\n                    var computeID = Math.max(checkID) +1;\r\n                    this.setState({\r\n                    \r\n                        departmentID:computeID\r\n                    \r\n                    })\r\n                    \r\n                    return 'ok'\r\n                })\r\n                \r\n            })\r\n           \r\n        },1000)\r\n    }\r\n    \r\n\r\n    editDept(){\r\n       \r\n        fetch(`${getdeptID}${sessionStorage.getItem('getvenID')}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                \r\n                this.setState({\r\n                    departmentID:item.vendorID,\r\n                    departmentName:item.vendorName,\r\n                    address:item.address,\r\n                    phone:item.phone,\r\n                    email:item.email,\r\n                    productDescription:item.productDescription,\r\n                    dateRegistered:new Date(item.dateRegistered)\r\n\r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        })\r\n    }\r\n\r\n    \r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    async handleSubmit() {\r\n       \r\n        try {\r\n            \r\n            var finddeptID = this.state.deptData;\r\n            var founddeptID = this.state.departmentID\r\n            \r\n           \r\n\r\n            var vendDatapost = {\r\n                \r\n                vendorID:`${this.state.departmentID}`,\r\n                vendorName:`${this.state.departmentName}`,\r\n                _id:`${this.state._id}`,\r\n                address:`${this.state.address}`,\r\n                phone:`${this.state.phone}`,\r\n                email:`${this.state.email}`,\r\n                productDescription:`${this.state.productDescription}`,\r\n                dateRegistered:`${this.state.dateRegistered}`\r\n                \r\n            }\r\n\r\n            if(finddeptID.some(item => item.vendorID===founddeptID)){\r\n                alert('Vendor already exist');\r\n\r\n                fetch(`${deptUrl}`, {method:'GET'})\r\n                .then((resp) => resp.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        deptData:data\r\n                        \r\n                    })\r\n                    data.map((item)=>{\r\n                        var checkID = parseInt(item.vendorID);\r\n                        var computeID = Math.max(checkID) +1;\r\n                        this.setState({\r\n                        \r\n                            departmentID:computeID,\r\n                            departmentName:'',\r\n                            _id:'',\r\n                            address:'',\r\n                            phone:'',\r\n                            email:'',\r\n                            productDescription:'',\r\n                            dateRegistered:''\r\n                        \r\n                        })\r\n                        \r\n                        return 'ok'\r\n                    })\r\n    \r\n                })\r\n                this.myTimer = setTimeout(() => {\r\n                    \r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000),\r\n                       \r\n                        \r\n                    })\r\n                },1000)\r\n               \r\n            }\r\n\r\n           \r\n            else{\r\n                let result = await fetch(`${postdept}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        vendDatapost\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                alert(\"Vendor Added\");\r\n                this.setState({\r\n                    departmentName:'',\r\n                    deptIDs:'',\r\n                    departmentID: '',\r\n                    _id:'',\r\n                    address:'',\r\n                    phone:'',\r\n                    email:'',\r\n                    productDescription:'',\r\n                    dateRegistered:''\r\n                })\r\n                fetch(`${deptUrl}`, {method:'GET'})\r\n                .then((resp) => resp.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        deptData:data\r\n                        \r\n                    })\r\n                    data.map((item)=>{\r\n                        var checkID = parseInt(item.vendorID);\r\n                        var computeID = Math.max(checkID) +1;\r\n                        this.setState({\r\n                        \r\n                            departmentID:computeID\r\n                        \r\n                        })\r\n                        \r\n                        return 'ok'\r\n                    })\r\n    \r\n                })\r\n                this.myTimer = setTimeout(() => {\r\n                    \r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000),\r\n                       \r\n                        \r\n                    })\r\n                },1000)\r\n            }\r\n\r\n           \r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async deptUpdate() {\r\n       \r\n        try {\r\n            var id = sessionStorage.getItem('getvenID')\r\n           \r\n            var deptUpdated = {\r\n               \r\n                vendorName:`${this.state.departmentName}`,\r\n                address:`${this.state.address}`,\r\n                phone:`${this.state.phone}`,\r\n                email:`${this.state.email}`,\r\n                productDescription:`${this.state.productDescription}`,\r\n                dateRegistered:`${this.state.dateRegistered}`\r\n                \r\n            }\r\n            let result = await fetch(`${putdept}/${id}`, {\r\n                method: 'put',\r\n    \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n    \r\n                body: JSON.stringify(\r\n                    \r\n                    deptUpdated\r\n                        \r\n                )\r\n                    \r\n            });\r\n            console.log('result>  ' + result)\r\n            this.setState({\r\n                departmentName:'',\r\n                deptIDs:'',\r\n                departmentID: '',\r\n                _id:'',\r\n                address:'',\r\n                phone:'',\r\n                email:'',\r\n                productDescription:'',\r\n                dateRegistered:''\r\n\r\n            })\r\n\r\n            fetch(`${deptUrl}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    deptData:data\r\n                    \r\n                })\r\n                data.map((item)=>{\r\n                    var checkID = parseInt(item.vendorID);\r\n                    var computeID = Math.max(checkID) +1;\r\n                    this.setState({\r\n                    \r\n                        departmentID:computeID\r\n                    \r\n                    })\r\n                    return 'ok'\r\n                })\r\n\r\n            })\r\n            this.myTimer = setTimeout(() => {\r\n                \r\n                this.setState({\r\n                    _id:Math.floor(Math.random()*10000),\r\n                    \r\n                    \r\n                })\r\n            },1000)\r\n\r\n            alert(\"Vendor Data Updated\");\r\n           \r\n            \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    renderdeptData(data){\r\n        if(data){\r\n            \r\n            return data.map((item)=>{\r\n                data.sort((a, b) => a.vendorID - b.vendorID);\r\n                var venregDate = moment(item.dateRegistered).format('MMM DD YYYY')\r\n                return(\r\n                    <>\r\n                    \r\n                        <tr key= {item._id}>\r\n                                \r\n                            <td className=\"table-light table-striped adjust2\">{item.vendorID}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.vendorName}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.address}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.phone}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.email}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.productDescription}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{venregDate}</td>\r\n                            <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-primary textcolor\" onMouseOver={()=>sessionStorage.setItem('getvenID',item.vendorID)} onClick={()=>{this.editDept()}}>Edit</button></td>\r\n                            <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-danger textcolor\" onMouseOver={()=>sessionStorage.setItem('getvendelID',item.vendorID)} onClick={()=>{this.deletedept()}}>Delete</button></td>\r\n                                \r\n                        </tr>\r\n                    </>\r\n                )\r\n                \r\n            })\r\n            \r\n        }\r\n\r\n\r\n    }\r\n  \r\n\r\n    render() {\r\n        console.log (\">>> Inside Grpdetails\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Storelogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div  className=\"background990i\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-50px'}}>Vendors Management</h4>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h6 style = {{color:'purple',marginLeft:'480px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                        </div>\r\n                    </div>\r\n                    <h4 style = {{color:'rgb(23, 23, 71)',marginLeft:'50px', marginBottom:'-40px'}}> </h4>\r\n\r\n                    <div className=\"formdesign510b\">\r\n                        <div className=\"row container\">\r\n                            \r\n                            <div className=\"col-3\">\r\n                                <p type=\"text\" className=\"form-control mb-3 formsize51\" name=\"departmentID\">{this.state.departmentID} </p>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-4\">\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"departmentName\" require placeholder=\"Name\" value={this.state.departmentName} onChange={this.handleChange}/>\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <textarea row=\"4\" className=\"form-control mb-3 formsize51\" name=\"address\" require placeholder=\"Address\" value={this.state.address} onChange={this.handleChange}/>\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <input type=\"number\" className=\"form-control mb-3 formsize51\" name=\"phone\" require placeholder=\"Phone\" value={this.state.phone} onChange={this.handleChange}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-4\">\r\n                                    <input type=\"email\" className=\"form-control mb-3 formsize51\" name=\"email\" require placeholder=\"Email\" value={this.state.email} onChange={this.handleChange}/>\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"productDescription\" require placeholder=\"Description\" value={this.state.productDescription} onChange={this.handleChange}/>\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <label>\r\n                                        {this.rendercheckinDate(this.state.dateRegistered)}\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            \r\n\r\n                            <center>\r\n                            <br/>\r\n                                <span>\r\n                                    <button disabled={this.state.departmentName===''} className=\"btn btn-warning\" onClick={ () => this.handleSubmit () } >Add New</button>\r\n                                    <button disabled ={this.state.departmentName===''} className=\"btn btn-warning gap\" onClick={()=>this.deptUpdate()}>Save Update</button>\r\n                                    <button className=\"btn btn-danger gap\" onClick={ () => this.props.history.push('/storeMenu')}>Close</button>\r\n                                    \r\n                                </span>\r\n                            </center>\r\n                           \r\n                            \r\n                        </div>\r\n                        <br/>\r\n                        <div className=\"container\">\r\n                            <table className=\"table table-hover\">\r\n                            \r\n                                <thead className=\"table-warning\">\r\n                                    <tr>\r\n                                        <th className=\"adjust5\">ID</th>\r\n                                        <th className=\"adjust5\">Name</th>\r\n                                        <th className=\"adjust5\">Address</th>\r\n                                        <th className=\"adjust5\">Phone</th>\r\n                                        <th className=\"adjust5\">Email</th>\r\n                                        <th className=\"adjust5\">Product Description</th>\r\n                                        <th className=\"adjust5\">Date Registered</th>\r\n                                        <th className=\"adjust5\">Action</th>\r\n                                        <th className=\"adjust5\"> </th>\r\n                                                \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className=\"table table-hover\">\r\n                                    {this.renderdeptData(this.state.deptData)}\r\n                                \r\n                                </tbody>\r\n                            </table>\r\n                            <center><button className=\"btn btn-danger gap mb-3\" onClick={ () => this.props.history.push('/storeMenu')}>Close</button></center>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </>\r\n            \r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\">>> Inside GrpDidMount\", this.state);\r\n\r\n        fetch(`${deptUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                deptData:data,\r\n            \r\n\r\n            })\r\n            data.map((item)=>{\r\n                var checkID = parseInt(item.vendorID);\r\n                var computeID = Math.max(checkID) +1;\r\n                this.setState({\r\n                \r\n                    departmentID:computeID\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n           \r\n            \r\n        })\r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n       \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default productVendor;","import React, { Component } from 'react';\r\nimport FLogin from '../FLogin';\r\nimport '../Reception/Reception.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst deptUrl= \"https://zarvichdemo.localto.net/pricemanager\";\r\nconst getdeptID= \"https://zarvichdemo.localto.net/pricemanager?priceID=\";\r\nconst postdept= \"https://zarvichdemo.localto.net/pricereview\";\r\nconst putdept= \"https://zarvichdemo.localto.net/editpricereview\";\r\nconst deldept= \"https://zarvichdemo.localto.net/delpricereview\";\r\nconst userName = \"https://zarvichdemo.localto.net/fofUserInfo\";\r\n\r\n\r\nclass stockPriceManager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>> inside GrpCobtructor\", props)\r\n\r\n        this.state = {\r\n            _id:Math.floor(Math.random()*10000000),\r\n            deptData:'',\r\n            departmentName:'',\r\n            departmentID: '',\r\n            productPrice:'',\r\n            productUnit:'',\r\n            deptIDs:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n\r\n    deletedept(){\r\n        fetch(`${deldept}/${sessionStorage.getItem('getpricerevdelID')}`, {method:'delete'})\r\n        alert(\"Product Deleted\")\r\n\r\n        this.myTimer = setTimeout(() => {\r\n            fetch(`${deptUrl}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    deptData:data\r\n                })\r\n                data.map((item)=>{\r\n                    var checkID = parseInt(item.productID);\r\n                    var computeID = Math.max(checkID) +1;\r\n                    this.setState({\r\n                    \r\n                        departmentID:computeID\r\n                    \r\n                    })\r\n                    \r\n                    return 'ok'\r\n                })\r\n                \r\n            })\r\n           \r\n        },1000)\r\n    }\r\n    \r\n\r\n    editDept(){\r\n        fetch(`${getdeptID}${sessionStorage.getItem('getpricerevID')}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    departmentID:item.productID,\r\n                    departmentName:item.productName,\r\n                    productPrice:item.productPrice,\r\n                    productUnit:item.productUnit\r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        })\r\n    }\r\n\r\n    \r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    async handleSubmit() {\r\n       \r\n        try {\r\n            \r\n            var finddeptID = this.state.deptData;\r\n            var founddeptID = this.state.departmentID\r\n\r\n            var deptDatapost = {\r\n                \r\n                productID:`${this.state.departmentID}`,\r\n                productName:`${this.state.departmentName}`,\r\n                productPrice:`${this.state.productPrice}`,\r\n                productUnit:`${this.state.productUnit}`,\r\n                _id:`${this.state._id}`\r\n                \r\n            }\r\n\r\n            if(finddeptID.some(item => item.productID===founddeptID)){\r\n                alert(this.state.departmentName+ \" already exist\");\r\n\r\n                fetch(`${deptUrl}`, {method:'GET'})\r\n                .then((resp) => resp.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        deptData:data\r\n                        \r\n                    })\r\n                    data.map((item)=>{\r\n                        var checkID = parseInt(item.productID);\r\n                        var computeID = Math.max(checkID) +1;\r\n                        this.setState({\r\n                        \r\n                            departmentID:computeID,\r\n                            departmentName:'',\r\n                            productPrice:'',\r\n                            deptIDs:'',\r\n                            productUnit:'',\r\n                            _id:''\r\n                                \r\n                        })\r\n                        \r\n                        return 'ok'\r\n                    })\r\n    \r\n                })\r\n                this.myTimer = setTimeout(() => {\r\n                    \r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000000),\r\n                       \r\n                        \r\n                    })\r\n                },1000)\r\n               \r\n            }\r\n\r\n            else{\r\n                let result = await fetch(`${postdept}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        deptDatapost\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                alert(this.state.departmentName+\" Price Added\");\r\n                this.setState({\r\n                    departmentName:'',\r\n                    productPrice:'',\r\n                    deptIDs:'',\r\n                    departmentID: '',\r\n                    productUnit:'',\r\n                    _id:''\r\n                })\r\n                fetch(`${deptUrl}`, {method:'GET'})\r\n                .then((resp) => resp.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        deptData:data\r\n                        \r\n                    })\r\n                    data.map((item)=>{\r\n                        var checkID = parseInt(item.productID);\r\n                        var computeID = Math.max(checkID) +1;\r\n                        this.setState({\r\n                        \r\n                            departmentID:computeID\r\n                        \r\n                        })\r\n                        \r\n                        return 'ok'\r\n                    })\r\n    \r\n                })\r\n                this.myTimer = setTimeout(() => {\r\n                    \r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000000),\r\n                       \r\n                        \r\n                    })\r\n                },1000)\r\n            }\r\n\r\n           \r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async deptUpdate() {\r\n       \r\n        try {\r\n            var id = sessionStorage.getItem('getpricerevID')\r\n           \r\n            var deptUpdated = {\r\n               \r\n                productName:`${this.state.departmentName}`,\r\n                productPrice:`${this.state.productPrice}`,\r\n                productUnit:`${this.state.productUnit}`                \r\n            }\r\n            let result = await fetch(`${putdept}/${id}`, {\r\n                method: 'put',\r\n    \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n    \r\n                body: JSON.stringify(\r\n                    \r\n                    deptUpdated\r\n                        \r\n                )\r\n                    \r\n            });\r\n            console.log('result>  ' + result)\r\n            alert(this.state.departmentName+\" Price updated\");\r\n            this.setState({\r\n                departmentName:'',\r\n                deptIDs:'',\r\n                departmentID: '',\r\n                productPrice:'',\r\n                productUnit:'',\r\n                _id:''\r\n            })\r\n\r\n            fetch(`${deptUrl}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    deptData:data\r\n                    \r\n                })\r\n                data.map((item)=>{\r\n                    var checkID = parseInt(item.productID);\r\n                    var computeID = Math.max(checkID) +1;\r\n                    this.setState({\r\n                    \r\n                        departmentID:computeID\r\n                    \r\n                    })\r\n                    return 'ok'\r\n                })\r\n\r\n            })\r\n            this.myTimer = setTimeout(() => {\r\n                \r\n                this.setState({\r\n                    _id:Math.floor(Math.random()*10000000),\r\n                    \r\n                    \r\n                })\r\n            },1000)\r\n\r\n            \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    renderdeptData(data){\r\n        if(data){\r\n            \r\n            return data.map((item)=>{\r\n                data.sort((a, b) => a.productID - b.productID);\r\n                return(\r\n                    <>\r\n                    \r\n                        <tr key= {item._id}>\r\n                                \r\n                            <td className=\"table-light table-striped adjust2\">{item.productID}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.productName}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.productUnit}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.productPrice}</td>\r\n                            <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-primary textcolor\" onMouseOver={()=>sessionStorage.setItem('getpricerevID',item.productID)} onClick={()=>{this.editDept()}}>Edit</button></td>\r\n                            <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-danger textcolor\" onMouseOver={()=>sessionStorage.setItem('getpricerevdelID', item.productID)} onClick={()=>{this.deletedept()}}>Delete</button></td>\r\n                                \r\n                        </tr>\r\n                    </>\r\n                )\r\n                \r\n            })\r\n            \r\n        }\r\n\r\n\r\n    }\r\n  \r\n\r\n    render() {\r\n        console.log (\">>> Inside Grpdetails\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <FLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div  className=\"background990i\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-50px'}}>Price Review </h4>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h6 style = {{color:'purple',marginLeft:'480px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                        </div>\r\n                    </div>\r\n                    <h4 style = {{color:'rgb(23, 23, 71)',marginLeft:'50px', marginBottom:'-40px'}}> </h4>\r\n\r\n                    <div className=\"formdesign510b\">\r\n                        <div className=\"row container\">\r\n                            \r\n                            <div className=\"col-3\">\r\n                                <p type=\"text\" className=\"form-control mb-3 formsize51\" name=\"departmentID\" >{this.state.departmentID} </p>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                               <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"departmentName\" require placeholder=\"Enter Product Name\" value={this.state.departmentName} onChange={this.handleChange}/>\r\n                            </div>\r\n\r\n                            <div className=\"col-3\">\r\n                               <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"productUnit\" require placeholder=\"Enter Product Unit\" value={this.state.productUnit} onChange={this.handleChange}/>\r\n                            </div>\r\n\r\n                            <div className=\"col-3\">\r\n                               <input type=\"number\" className=\"form-control mb-3 formsize51\" name=\"productPrice\" require placeholder=\"Enter Product Price\" value={this.state.productPrice} onChange={this.handleChange}/>\r\n                            </div>\r\n\r\n                            <center>\r\n                            <br/>\r\n                                <span>\r\n                                    <button disabled={this.state.departmentName===''||this.state.productPrice===''} className=\"btn btn-warning\" onClick={ () => this.handleSubmit () } >Add New</button>\r\n                                    <button disabled ={this.state.departmentName===''||this.state.productPrice===''} className=\"btn btn-warning gap\" onClick={()=>this.deptUpdate()}>Save Update</button>\r\n                                    <button className=\"btn btn-danger gap\" onClick={ () => this.props.history.push('/storeMenu')}>Close</button>\r\n                                    \r\n                                </span>\r\n                            </center>\r\n                           \r\n                            \r\n                        </div>\r\n                        <br/>\r\n                        <div className=\"container\">\r\n                            <table className=\"table table-hover\">\r\n                            \r\n                                <thead className=\"table-warning\">\r\n                                    <tr>\r\n                                        <th className=\"adjust5\">Product ID</th>\r\n                                        <th className=\"adjust5\">Product Name</th>\r\n                                        <th className=\"adjust5\">Product Unit</th>\r\n                                        <th className=\"adjust5\">Product Price</th>\r\n                                        <th className=\"adjust5\">Action</th>\r\n                                        <th className=\"adjust5\"> </th>\r\n                                                \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className=\"table table-hover\">\r\n                                    {this.renderdeptData(this.state.deptData)}\r\n                                \r\n                                </tbody>\r\n                            </table>\r\n                            <center><button className=\"btn btn-danger gap mb-3\" onClick={ () => this.props.history.push('/storeMenu')}>Close</button></center>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </>\r\n            \r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\">>> Inside GrpDidMount\", this.state);\r\n\r\n        fetch(`${deptUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                deptData:data,\r\n            \r\n\r\n            })\r\n            data.map((item)=>{\r\n                var checkID = parseInt(item.productID);\r\n                var computeID = Math.max(checkID) +1;\r\n                this.setState({\r\n                \r\n                    departmentID:computeID\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n           \r\n            \r\n        })\r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n       \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default stockPriceManager;","import React, { Component } from 'react';\r\nimport Storelogin from '../Storelogin';\r\nimport '../Reception/Reception.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst deptUrl= \"https://zarvichdemo.localto.net/storeUnits\";\r\nconst getdeptID= \"https://zarvichdemo.localto.net/storeUnits?storeUnitID=\";\r\nconst postdept= \"https://zarvichdemo.localto.net/newUnit\";\r\nconst putdept= \"https://zarvichdemo.localto.net/editUnit\";\r\nconst deldept= \"https://zarvichdemo.localto.net/delUnit\";\r\nconst userName = \"https://zarvichdemo.localto.net/storeUserInfo\";\r\n\r\n\r\nclass stockUnitsManager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>> inside GrpCobtructor\", props)\r\n\r\n        this.state = {\r\n            _id:Math.floor(Math.random()*10000000),\r\n            deptData:'',\r\n            departmentName:'',\r\n            departmentID: '',\r\n            deptIDs:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n\r\n    deletedept(){\r\n        fetch(`${deldept}/${sessionStorage.getItem('getunitdelID')}`, {method:'delete'})\r\n        alert(\"Unit Deleted\")\r\n        \r\n        this.myTimer = setTimeout(() => {\r\n            fetch(`${deptUrl}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    deptData:data\r\n                })\r\n                data.map((item)=>{\r\n                    var checkID = parseInt(item.unitsID);\r\n                    var computeID = Math.max(checkID) +1;\r\n                    this.setState({\r\n                    \r\n                        departmentID:computeID\r\n                    \r\n                    })\r\n                    \r\n                    return 'ok'\r\n                })\r\n                \r\n            })\r\n           \r\n        },1000)\r\n    }\r\n    \r\n\r\n    editDept(){\r\n        fetch(`${getdeptID}${sessionStorage.getItem('getunitID')}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    departmentID:item.unitsID,\r\n                    departmentName:item.unit\r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        })\r\n    }\r\n\r\n    \r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    async handleSubmit() {\r\n       \r\n        try {\r\n            \r\n            var finddeptID = this.state.deptData;\r\n            var founddeptID = this.state.departmentID\r\n\r\n            var deptDatapost = {\r\n                \r\n                unitsID:`${this.state.departmentID}`,\r\n                unit:`${this.state.departmentName}`,\r\n                _id:`${this.state._id}`\r\n                \r\n            }\r\n\r\n            if(finddeptID.some(item => item.unitsID===founddeptID)){\r\n                alert(this.state.departmentName+ \" already exist\");\r\n\r\n                fetch(`${deptUrl}`, {method:'GET'})\r\n                .then((resp) => resp.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        deptData:data\r\n                        \r\n                    })\r\n                    data.map((item)=>{\r\n                        var checkID = parseInt(item.unitsID);\r\n                        var computeID = Math.max(checkID) +1;\r\n                        this.setState({\r\n                        \r\n                            departmentID:computeID,\r\n                            departmentName:''\r\n                        \r\n                        })\r\n                        \r\n                        return 'ok'\r\n                    })\r\n    \r\n                })\r\n                this.myTimer = setTimeout(() => {\r\n                    \r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000000),\r\n                       \r\n                        \r\n                    })\r\n                },1000)\r\n               \r\n            }\r\n\r\n            else{\r\n                let result = await fetch(`${postdept}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        deptDatapost\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                alert(this.state.departmentName+ \" Added\");\r\n                this.setState({\r\n                    departmentName:'',\r\n                    deptIDs:'',\r\n                    departmentID: '',\r\n                    _id:''\r\n                })\r\n                fetch(`${deptUrl}`, {method:'GET'})\r\n                .then((resp) => resp.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        deptData:data\r\n                        \r\n                    })\r\n                    data.map((item)=>{\r\n                        var checkID = parseInt(item.unitsID);\r\n                        var computeID = Math.max(checkID) +1;\r\n                        this.setState({\r\n                        \r\n                            departmentID:computeID\r\n                        \r\n                        })\r\n                        \r\n                        return 'ok'\r\n                    })\r\n    \r\n                })\r\n                this.myTimer = setTimeout(() => {\r\n                    \r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000000),\r\n                       \r\n                        \r\n                    })\r\n                },1000)\r\n            }\r\n\r\n           \r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async deptUpdate() {\r\n       \r\n        try {\r\n            var id = sessionStorage.getItem('getunitID')\r\n           \r\n            var deptUpdated = {\r\n               \r\n                unit:`${this.state.departmentName}`,\r\n                \r\n                \r\n            }\r\n            let result = await fetch(`${putdept}/${id}`, {\r\n                method: 'put',\r\n    \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n    \r\n                body: JSON.stringify(\r\n                    \r\n                    deptUpdated\r\n                        \r\n                )\r\n                    \r\n            });\r\n            console.log('result>  ' + result)\r\n            alert(this.state.departmentName+ \" updated\");\r\n            this.setState({\r\n                departmentName:'',\r\n                deptIDs:'',\r\n                departmentID: '',\r\n                _id:''\r\n            })\r\n\r\n            fetch(`${deptUrl}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    deptData:data\r\n                    \r\n                })\r\n                data.map((item)=>{\r\n                    var checkID = parseInt(item.unitsID);\r\n                    var computeID = Math.max(checkID) +1;\r\n                    this.setState({\r\n                    \r\n                        departmentID:computeID\r\n                    \r\n                    })\r\n                    return 'ok'\r\n                })\r\n\r\n            })\r\n            this.myTimer = setTimeout(() => {\r\n                \r\n                this.setState({\r\n                    _id:Math.floor(Math.random()*10000000),\r\n                    \r\n                    \r\n                })\r\n            },1000)\r\n\r\n            \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    renderdeptData(data){\r\n        if(data){\r\n            \r\n            return data.map((item)=>{\r\n                data.sort((a, b) => a.unitsID - b.unitsID);\r\n                return(\r\n                    <>\r\n                    \r\n                        <tr key= {item._id}>\r\n                                \r\n                            <td className=\"table-light table-striped adjust2\">{item.unitsID}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.unit}</td>\r\n                            <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-primary textcolor\" onMouseOver={()=>sessionStorage.setItem('getunitID',item.unitsID)} onClick={()=>{this.editDept()}}>Edit</button></td>\r\n                            <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-danger textcolor\" onMouseOver={()=>sessionStorage.setItem('getunitdelID', item.unitsID)} onClick={()=>{this.deletedept()}}>Delete</button></td>\r\n                                \r\n                        </tr>\r\n                    </>\r\n                )\r\n                \r\n            })\r\n            \r\n        }\r\n\r\n\r\n    }\r\n  \r\n\r\n    render() {\r\n        console.log (\">>> Inside Grpdetails\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Storelogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div  className=\"background990i\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-50px'}}>Product Units </h4>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h6 style = {{color:'purple',marginLeft:'480px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                        </div>\r\n                    </div>\r\n                    <h4 style = {{color:'rgb(23, 23, 71)',marginLeft:'50px', marginBottom:'-40px'}}> </h4>\r\n\r\n                    <div className=\"formdesign510b\">\r\n                        <div className=\"row container\">\r\n                            \r\n                            <div className=\"col-6\">\r\n                                <p type=\"text\" className=\"form-control mb-3 formsize51\" name=\"departmentID\" >{this.state.departmentID} </p>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                               <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"departmentName\" require placeholder=\"Enter Unit\" value={this.state.departmentName} onChange={this.handleChange}/>\r\n                            </div>\r\n\r\n                            <center>\r\n                            <br/>\r\n                                <span>\r\n                                    <button disabled={this.state.departmentName===''} className=\"btn btn-warning\" onClick={ () => this.handleSubmit () } >Add New</button>\r\n                                    <button disabled ={this.state.departmentName===''} className=\"btn btn-warning gap\" onClick={()=>this.deptUpdate()}>Save Update</button>\r\n                                    <button className=\"btn btn-danger gap\" onClick={ () => this.props.history.push('/storeMenu')}>Close</button>\r\n                                    \r\n                                </span>\r\n                            </center>\r\n                           \r\n                            \r\n                        </div>\r\n                        <br/>\r\n                        <div className=\"container\">\r\n                            <table className=\"table table-hover\">\r\n                            \r\n                                <thead className=\"table-warning\">\r\n                                    <tr>\r\n                                        <th className=\"adjust5\">Units ID</th>\r\n                                        <th className=\"adjust5\">Units</th>\r\n                                        <th className=\"adjust5\">Action</th>\r\n                                        <th className=\"adjust5\"> </th>\r\n                                                \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className=\"table table-hover\">\r\n                                    {this.renderdeptData(this.state.deptData)}\r\n                                \r\n                                </tbody>\r\n                            </table>\r\n                            <center><button className=\"btn btn-danger gap mb-3\" onClick={ () => this.props.history.push('/storeMenu')}>Close</button></center>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </>\r\n            \r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\">>> Inside GrpDidMount\", this.state);\r\n\r\n        fetch(`${deptUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                deptData:data,\r\n            \r\n\r\n            })\r\n            data.map((item)=>{\r\n                var checkID = parseInt(item.unitsID);\r\n                var computeID = Math.max(checkID) +1;\r\n                this.setState({\r\n                \r\n                    departmentID:computeID\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n           \r\n            \r\n        })\r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n       \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default stockUnitsManager;","import React, { Component } from 'react';\r\nimport Storelogin from '../Storelogin';\r\nimport '../Reception/Reception.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nconst deptUrl= \"https://zarvichdemo.localto.net/storeUnits\";\r\nconst getdeptID= \"https://zarvichdemo.localto.net/storeUnits?storeUnitID=\";\r\nconst postdept= \"https://zarvichdemo.localto.net/newUnit\";\r\nconst putdept= \"https://zarvichdemo.localto.net/editUnit\";\r\nconst deldept= \"https://zarvichdemo.localto.net/delUnit\";\r\nconst userName = \"https://zarvichdemo.localto.net/storeUserInfo\";\r\n\r\n\r\nclass stockunitsmodal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>> inside GrpCobtructor\", props)\r\n\r\n        this.state = {\r\n            _id:Math.floor(Math.random()*10000000),\r\n            deptData:'',\r\n            departmentName:'',\r\n            departmentID: '',\r\n            deptIDs:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n\r\n    deletedept(){\r\n        fetch(`${deldept}/${sessionStorage.getItem('getunitdelID')}`, {method:'delete'})\r\n        alert(\"Unit Deleted\")\r\n        \r\n        this.myTimer = setTimeout(() => {\r\n            fetch(`${deptUrl}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    deptData:data\r\n                })\r\n                data.map((item)=>{\r\n                    var checkID = parseInt(item.unitsID);\r\n                    var computeID = Math.max(checkID) +1;\r\n                    this.setState({\r\n                    \r\n                        departmentID:computeID\r\n                    \r\n                    })\r\n                    \r\n                    return 'ok'\r\n                })\r\n                \r\n            })\r\n           \r\n        },1000)\r\n    }\r\n    \r\n\r\n    editDept(){\r\n        fetch(`${getdeptID}${sessionStorage.getItem('getunitID')}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    departmentID:item.unitsID,\r\n                    departmentName:item.unit\r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        })\r\n    }\r\n\r\n    \r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    async handleSubmit() {\r\n       \r\n        try {\r\n            \r\n            var finddeptID = this.state.deptData;\r\n            var founddeptID = this.state.departmentID\r\n\r\n            var deptDatapost = {\r\n                \r\n                unitsID:`${this.state.departmentID}`,\r\n                unit:`${this.state.departmentName}`,\r\n                _id:`${this.state._id}`\r\n                \r\n            }\r\n\r\n            if(finddeptID.some(item => item.unitsID===founddeptID)){\r\n                alert(this.state.departmentName+ \" already exist\");\r\n\r\n                fetch(`${deptUrl}`, {method:'GET'})\r\n                .then((resp) => resp.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        deptData:data\r\n                        \r\n                    })\r\n                    data.map((item)=>{\r\n                        var checkID = parseInt(item.unitsID);\r\n                        var computeID = Math.max(checkID) +1;\r\n                        this.setState({\r\n                        \r\n                            departmentID:computeID,\r\n                            departmentName:''\r\n                        \r\n                        })\r\n                        \r\n                        return 'ok'\r\n                    })\r\n    \r\n                })\r\n                this.myTimer = setTimeout(() => {\r\n                    \r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000000),\r\n                       \r\n                        \r\n                    })\r\n                },1000)\r\n               \r\n            }\r\n\r\n            else{\r\n                let result = await fetch(`${postdept}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        deptDatapost\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                alert(this.state.departmentName+ \" Added\");\r\n                this.setState({\r\n                    departmentName:'',\r\n                    deptIDs:'',\r\n                    departmentID: '',\r\n                    _id:''\r\n                })\r\n                fetch(`${deptUrl}`, {method:'GET'})\r\n                .then((resp) => resp.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        deptData:data\r\n                        \r\n                    })\r\n                    data.map((item)=>{\r\n                        var checkID = parseInt(item.unitsID);\r\n                        var computeID = Math.max(checkID) +1;\r\n                        this.setState({\r\n                        \r\n                            departmentID:computeID\r\n                        \r\n                        })\r\n                        \r\n                        return 'ok'\r\n                    })\r\n    \r\n                })\r\n                this.myTimer = setTimeout(() => {\r\n                    \r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000000),\r\n                       \r\n                        \r\n                    })\r\n                },1000)\r\n            }\r\n\r\n           \r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async deptUpdate() {\r\n       \r\n        try {\r\n            var id = sessionStorage.getItem('getunitID')\r\n           \r\n            var deptUpdated = {\r\n               \r\n                unit:`${this.state.departmentName}`,\r\n                \r\n                \r\n            }\r\n            let result = await fetch(`${putdept}/${id}`, {\r\n                method: 'put',\r\n    \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n    \r\n                body: JSON.stringify(\r\n                    \r\n                    deptUpdated\r\n                        \r\n                )\r\n                    \r\n            });\r\n            console.log('result>  ' + result)\r\n            alert(this.state.departmentName+ \" updated\");\r\n            this.setState({\r\n                departmentName:'',\r\n                deptIDs:'',\r\n                departmentID: '',\r\n                _id:''\r\n            })\r\n\r\n            fetch(`${deptUrl}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    deptData:data\r\n                    \r\n                })\r\n                data.map((item)=>{\r\n                    var checkID = parseInt(item.unitsID);\r\n                    var computeID = Math.max(checkID) +1;\r\n                    this.setState({\r\n                    \r\n                        departmentID:computeID\r\n                    \r\n                    })\r\n                    return 'ok'\r\n                })\r\n\r\n            })\r\n            this.myTimer = setTimeout(() => {\r\n                \r\n                this.setState({\r\n                    _id:Math.floor(Math.random()*10000),\r\n                    \r\n                    \r\n                })\r\n            },1000)\r\n\r\n            \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    // renderdeptData(data){\r\n    //     if(data){\r\n            \r\n    //         return data.map((item)=>{\r\n    //             data.sort((a, b) => a.unitsID - b.unitsID);\r\n    //             return(\r\n    //                 <>\r\n                    \r\n    //                     <tr key= {item._id}>\r\n                                \r\n    //                         <td className=\"table-light table-striped adjust2\">{item.unitsID}</td>\r\n    //                         <td className=\"table-light table-striped adjust2\">{item.unit}</td>\r\n    //                         <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-primary textcolor\" onMouseOver={()=>sessionStorage.setItem('getunitID',item.unitsID)} onClick={()=>{this.editDept()}}>Edit</button></td>\r\n    //                         <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-danger textcolor\" onMouseOver={()=>sessionStorage.setItem('getunitdelID', item.unitsID)} onClick={()=>{this.deletedept()}}>Delete</button></td>\r\n                                \r\n    //                     </tr>\r\n    //                 </>\r\n    //             )\r\n                \r\n    //         })\r\n            \r\n    //     }\r\n\r\n\r\n    // }\r\n  \r\n\r\n    render() {\r\n        console.log (\">>> Inside Grpdetails\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Storelogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div  className=\"background591\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4\">\r\n                            <h4 style = {{color:'silver',marginLeft:'10px', marginBottom:'-50px'}}>Product Units </h4>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <h6 style = {{color:'purple',marginLeft:'380px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <h6  type=\"button\" style = {{color:'yellow',marginLeft:'100', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                        </div>\r\n                    </div>\r\n                    <h4 style = {{color:'rgb(23, 23, 71)',marginLeft:'50px', marginBottom:'-40px'}}> </h4>\r\n\r\n                    <div className=\"formdesign511\">\r\n                        <div className=\"row container\">\r\n                            \r\n                            <div className=\"col-6\">\r\n                                <p type=\"text\" className=\"form-control mb-3 formsize51\" name=\"departmentID\" >{this.state.departmentID} </p>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                               <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"departmentName\" require placeholder=\"Enter Unit\" value={this.state.departmentName} onChange={this.handleChange}/>\r\n                            </div>\r\n\r\n                            <center>\r\n                            <br/>\r\n                                <span>\r\n                                    <button disabled={this.state.departmentName===''} className=\"btn btn-warning\" onClick={ () => this.handleSubmit () } >Add New</button>\r\n                                    {/* <button disabled ={this.state.departmentName===''} className=\"btn btn-warning gap\" onClick={()=>this.deptUpdate()}>Save Update</button> */}\r\n                                    \r\n                                </span>\r\n                            </center>\r\n                           \r\n                        </div>\r\n                        <br/>\r\n                        {/* <div className=\"container\">\r\n                            <table className=\"table table-hover\">\r\n                            \r\n                                <thead className=\"table-warning\">\r\n                                    <tr>\r\n                                        <th className=\"adjust5\">Units ID</th>\r\n                                        <th className=\"adjust5\">Units</th>\r\n                                        <th className=\"adjust5\">Action</th>\r\n                                        <th className=\"adjust5\"> </th>\r\n                                                \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className=\"table table-hover\">\r\n                                    {this.renderdeptData(this.state.deptData)}\r\n                                \r\n                                </tbody>\r\n                            </table>\r\n                            <center><button className=\"btn btn-danger gap mb-3\" onClick={ () => this.props.history.push('/storeMenu')}>Close</button></center>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n                \r\n            </>\r\n            \r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\">>> Inside GrpDidMount\", this.state);\r\n\r\n        fetch(`${deptUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                deptData:data,\r\n            \r\n\r\n            })\r\n            data.map((item)=>{\r\n                var checkID = parseInt(item.unitsID);\r\n                var computeID = Math.max(checkID) +1;\r\n                this.setState({\r\n                \r\n                    departmentID:computeID\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n           \r\n            \r\n        })\r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n       \r\n\r\n    }\r\n\r\n}\r\n\r\nexport default stockunitsmodal;","import React, { Component } from 'react';\r\nimport Storelogin from '../Storelogin';\r\nimport '../Reception/Reception.css';\r\nimport 'react-responsive-modal/styles.css';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport DatePicker from 'react-datepicker';\r\nimport addDays from 'date-fns/addDays';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport Stockunitsmodal from './stockunitsmodal';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst categoryUrl= \"https://zarvichdemo.localto.net/storeTypes?storeName=\";\r\nconst postproductUrl= \"https://zarvichdemo.localto.net/addProduct\";\r\nconst postdrinksUrl= \"https://zarvichdemo.localto.net/postDrinksMenu\";\r\nconst editdrinksUrl= \"https://zarvichdemo.localto.net/editDrinksMenu\";\r\nconst editproductUrl= \"https://zarvichdemo.localto.net/editproduct\";\r\nconst deleteproductUrl= \"https://zarvichdemo.localto.net/delProduct\";\r\nconst deletebarMenuUrl= \"https://zarvichdemo.localto.net/delBarMenu\";\r\nconst userName = \"https://zarvichdemo.localto.net/storeUserInfo\";\r\nconst unitsUrl= \"https://zarvichdemo.localto.net/storeUnits\";\r\nconst allproductsUrl= \"https://zarvichdemo.localto.net/products?getproductName=\";\r\nconst barMenuedit= \"https://zarvichdemo.localto.net/drinkitems?drinxxName=\";\r\nconst allbarMenuUrl= \"https://zarvichdemo.localto.net/drinkitems\";\r\nconst someproductsUrl= \"https://zarvichdemo.localto.net/products?getcategoryName=\";\r\nconst getDrinkCategory = \"https://zarvichdemo.localto.net/drinkCategories?drinkType=\";\r\n\r\n\r\n\r\n\r\nclass productReg extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>> inside GrpCobtructor\", props)\r\n\r\n        this.state = {\r\n            _id:Math.floor(Math.random()*100000000),\r\n            productsData:'',\r\n            productType:'',\r\n            productTypeData:'',\r\n            productTypeID:'',\r\n            productSellingPrice:'',\r\n            categoryData:'',\r\n            unitsData:'',\r\n            categoryTypes:'',\r\n            productseditData:'',\r\n            searchproductName:'',\r\n\r\n            categoryCode:'',\r\n            categoryName:'',\r\n            productID:'',\r\n            productName:'',\r\n            productUnit:'',\r\n            binNum:'',\r\n            reOrderLevel:'',\r\n            entryDate:'',\r\n            pieces:'',\r\n\r\n            edit: false,\r\n            editunit:false,\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            piecesData:[{_id:'1001', quantity:1},{_id:'1002', quantity:2},{_id:'1003', quantity:4},{_id:'1004', quantity:6},{_id:'1005', quantity:12},{_id:'1006', quantity:24},{_id:'1007', quantity:48}],\r\n            \r\n            barMenuID:'',\r\n            UseID:'',\r\n            barMenuData:'',\r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n\r\n    }\r\n    onOpenModaledit(){\r\n        this.setState({\r\n            edit:true\r\n        })\r\n\r\n        \r\n    }\r\n\r\n    onCloseModaledit(){\r\n        this.setState({\r\n            edit: false,\r\n            productID:'',\r\n            productName:'',\r\n            productUnit:'',\r\n            productType:'',\r\n            productTypeID:'',\r\n            productSellingPrice:'',\r\n            productTypeData:'',\r\n            binNum:'',\r\n            reOrderLevel:'',\r\n            entryDate:'',\r\n            categoryName:'',\r\n            categoryCode:'',\r\n            pieces:''\r\n            \r\n            \r\n        })\r\n        \r\n\r\n    }\r\n\r\n    onOpenModaleditunit(){\r\n        this.setState({\r\n            editunit:true\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseModaleditunit(){\r\n        this.setState({\r\n            editunit: false\r\n            \r\n        })\r\n        fetch(`${unitsUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                unitsData:data,\r\n            \r\n            })\r\n        })\r\n        \r\n\r\n    }\r\n\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            entryDate: date\r\n        });\r\n    }\r\n\r\n    rendercheckinDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.entryDate}\r\n                    onChange={this.checkinhandleChange}\r\n                    minDate={new Date()}\r\n                    maxDate={addDays(new Date(),1)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    placeholderText=\"Registration Date\"\r\n                    className=\"form-control mb-3 formsize51\"\r\n                    \r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderProductType2(data){\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a,b)=>a.mealType - b.mealType);\r\n                return(\r\n                    <>\r\n                         <option key={item._id} value={item.mealType}>\r\n                            {item.mealType} \r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    renderPieces(data){\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a,b)=>a.quantity - b.quantity);\r\n                return(\r\n                    <>\r\n                         <option key={item._id} value={item.quantity}>\r\n                            {item.quantity}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n    deletedept(){\r\n        fetch(`${deleteproductUrl}/${this.state.productID}`, {method:'delete'});\r\n        fetch(`${deletebarMenuUrl}/${this.state.searchproductName}`, {method:'delete'})\r\n        alert(\"Product Deleted\")\r\n\r\n        this.setState({\r\n                        \r\n            productID:'',\r\n            productName:'',\r\n            productUnit:'',\r\n            productType:'',\r\n            productTypeID:'',\r\n            productSellingPrice:'',\r\n            productTypeData:'',\r\n            binNum:'',\r\n            reOrderLevel:'',\r\n            entryDate:'',\r\n            categoryName:'',\r\n            categoryCode:'',\r\n            pieces:''\r\n        })\r\n        fetch(`${allproductsUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                productsData:data,\r\n                \r\n            })\r\n           \r\n        })\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    handleChange12b = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n        fetch(`${getDrinkCategory}${event.target.value}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({productTypeID:item.mealTypeID})\r\n                return 'ok'\r\n            })\r\n           \r\n           \r\n        })\r\n\r\n\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n    handleChange5 = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n        var finddeptID = this.state.productsData;\r\n        var findbarMenu = this.state.barMenuData;\r\n        var founddeptID = event.target.value;\r\n\r\n        if(finddeptID.some(item => item.productName===founddeptID)){\r\n            alert(\"Product already registered\");\r\n            this.setState({\r\n                    \r\n                productID:'',\r\n                categoryName:'',\r\n                categoryCode:'',\r\n                categoryTypes:'',\r\n                productName:'',\r\n                productUnit:'',\r\n                productType:'',\r\n                productTypeID:'',\r\n                binNum:'',\r\n                pieces:'',\r\n                productTypeData:'',\r\n                unitsData:'',\r\n                reOrderLevel:'',\r\n                entryDate:'',\r\n                productSellingPrice:''\r\n\r\n                    \r\n            })\r\n\r\n            fetch(`${categoryUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    categoryTypes:data,\r\n                \r\n\r\n                })\r\n        \r\n            })\r\n\r\n            fetch(`${getDrinkCategory}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    productTypeData:data,\r\n                \r\n                })\r\n                \r\n            })\r\n\r\n\r\n            fetch(`${unitsUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    unitsData:data,\r\n                \r\n                })\r\n        \r\n            })\r\n            \r\n            this.myTimer = setTimeout(() => {\r\n                \r\n                this.setState({\r\n                    _id:Math.floor(Math.random()*10000000),\r\n                    \r\n                   \r\n                    \r\n                })\r\n            },1000)\r\n           \r\n        }\r\n\r\n        else if(findbarMenu.some(item => item.mealName===founddeptID)){\r\n            alert(\"Product already registered\");\r\n            this.setState({\r\n                    \r\n                productID:'',\r\n                categoryName:'',\r\n                categoryCode:'',\r\n                categoryTypes:'',\r\n                productName:'',\r\n                productUnit:'',\r\n                productType:'',\r\n                productTypeID:'',\r\n                binNum:'',\r\n                pieces:'',\r\n                productTypeData:'',\r\n                unitsData:'',\r\n                reOrderLevel:'',\r\n                entryDate:'',\r\n                productSellingPrice:''\r\n\r\n                    \r\n            })\r\n\r\n            fetch(`${categoryUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    categoryTypes:data,\r\n                \r\n\r\n                })\r\n        \r\n            })\r\n\r\n            fetch(`${getDrinkCategory}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    productTypeData:data,\r\n                \r\n                })\r\n                \r\n            })\r\n\r\n\r\n            fetch(`${unitsUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    unitsData:data,\r\n                \r\n                })\r\n        \r\n            })\r\n            \r\n            this.myTimer = setTimeout(() => {\r\n                \r\n                this.setState({\r\n                    _id:Math.floor(Math.random()*10000000),\r\n                    \r\n                   \r\n                    \r\n                })\r\n            },1000)\r\n           \r\n        }\r\n        \r\n    }\r\n\r\n    handleChange4 = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        if(event.target.value==='Add New'){\r\n            this.setState({editunit:true});\r\n\r\n        }\r\n        else if(this.state.categoryName!=='Drink Store'){\r\n            this.setState({pieces:1})\r\n        }\r\n        \r\n    }\r\n\r\n    handleChange111 = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n       if(this.state.categoryName!=='Drink Store'){\r\n            this.setState({pieces:1})\r\n        }\r\n        \r\n    }\r\n\r\n    handleChange2 = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n        if(event.target.value==='Drink Store'){\r\n            fetch(`${getDrinkCategory}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    productTypeData:data,\r\n                \r\n                })\r\n            \r\n            })\r\n        }\r\n        \r\n\r\n        fetch(`${someproductsUrl}${event.target.value}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    productsData:data,\r\n                })\r\n                \r\n            })\r\n            this.myTimer = setTimeout(() => {\r\n\r\n                if(this.state.productsData.length===0){\r\n                    fetch(`${categoryUrl}${event.target.value}`, {method:'GET'})\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        this.setState({\r\n                            categoryData:data,\r\n                        })\r\n                        data.map((item)=>{\r\n                            var checkID = parseInt(item.categoryCode);\r\n                            var computeID = Math.max(checkID) +1;\r\n                            this.setState({\r\n                            \r\n                                productID:computeID,\r\n                                \r\n                            })\r\n                            return 'ok'\r\n                        })\r\n                    \r\n                        \r\n                    })\r\n\r\n                    \r\n                }\r\n\r\n                else{\r\n                    var usethis = this.state.productsData;\r\n                    \r\n                    usethis.map((item)=>{\r\n                        var checkID = parseInt(item.productID);\r\n                        var computeID = Math.max(checkID) +1;\r\n\r\n                        this.setState({\r\n                            productID:computeID,\r\n                            \r\n                        })\r\n                        return 'ok'\r\n\r\n                    })\r\n                    \r\n                }\r\n\r\n            },1000);\r\n            \r\n\r\n            \r\n        \r\n        \r\n    }\r\n\r\n    handleChange3 = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n        fetch(`${allproductsUrl}${event.target.value}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                productseditData:data,\r\n            \r\n\r\n            })\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    productID:item.productID,\r\n                    productName:item.productName,\r\n                    categoryName:item.categoryName,\r\n                    binNum:item.binNum,\r\n                    reOrderLevel:item.reOrderLevel,\r\n                    entryDate:new Date(item.entryDate),\r\n                    productUnit:item.productUnit,\r\n                    pieces:item.pieces,\r\n                    productType:item.productType,\r\n                    productTypeID:item.productTypeID,\r\n                    productSellingPrice:item.productSellingPrice,\r\n                    \r\n                   \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${barMenuedit}${event.target.value}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    UseID:item._id\r\n                   \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${getDrinkCategory}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                productTypeData:data,\r\n            \r\n            })\r\n            \r\n        })\r\n\r\n        if(this.state.searchproductName===''){\r\n            this.setState({\r\n                productID:'',\r\n                productName:'',\r\n                categoryName:'',\r\n                binNum:'',\r\n                reOrderLevel:'',\r\n                entryDate:'',\r\n                productUnit:'',\r\n                productSellingPrice:''\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    async handleSubmit() {\r\n       \r\n        try {\r\n            \r\n            var finddeptID = this.state.productsData;\r\n            var findbarMenu = this.state.barMenuData;\r\n            var founddeptID = this.state.productName;\r\n\r\n            var deptDatapost = {\r\n                \r\n                categoryName:`${this.state.categoryName}`,\r\n                productID:`${this.state.productID}`,\r\n                productName:`${this.state.productName}`,\r\n                productUnit:`${this.state.productUnit}`,\r\n                productType:`${this.state.productType}`,\r\n                productSellingPrice:parseInt(`${this.state.productSellingPrice}`),\r\n                productTypeID:`${this.state.productTypeID}`,\r\n                binNum:`${this.state.binNum}`,\r\n                reOrderLevel:`${this.state.reOrderLevel}`,\r\n                entryDate:`${this.state.entryDate}`,\r\n                pieces:parseInt(`${this.state.pieces}`),\r\n                name:localStorage.getItem('userInfo'),\r\n                _id:`${this.state._id}`\r\n                \r\n            }\r\n\r\n            var drinkMenu = {\r\n                \r\n                _id:parseInt(`${this.state.barMenuID}`),\r\n                mealTypeID:parseInt(`${this.state.productTypeID}`),\r\n                mealName:`${this.state.productName}`,\r\n                mealPrice:`${this.state.productSellingPrice}`,\r\n                mealQt:1,\r\n                mealType:`${this.state.productType}`,\r\n                categoryID:parseInt(`${this.state.productTypeID}`),\r\n                category:`${this.state.productType}`\r\n                \r\n            }\r\n\r\n            if(finddeptID.some(item => item.productName===founddeptID)){\r\n                alert(\"Product already registered\");\r\n                this.setState({\r\n                        \r\n                    productID:'',\r\n                    productName:'',\r\n                    productUnit:'',\r\n                    productTypeData:'',\r\n                    productSellingPrice:'',\r\n                    productType:'',\r\n                    productTypeID:'',\r\n                    binNum:'',\r\n                    reOrderLevel:'',\r\n                    entryDate:'',\r\n                    categoryName:'',\r\n                    categoryCode:'',\r\n                    pieces:'',\r\n                    unitsData:'',\r\n                    productsData:'',\r\n                    categoryTypes:'',\r\n                    barMenuID:'',\r\n                    barMenuData:''\r\n                        \r\n                \r\n                })\r\n\r\n                fetch(`${categoryUrl}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        categoryTypes:data,\r\n                    \r\n\r\n                    })\r\n            \r\n                })\r\n\r\n                fetch(`${getDrinkCategory}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        productTypeData:data,\r\n                    \r\n                    })\r\n                    \r\n                })\r\n\r\n                fetch(`${allbarMenuUrl}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        barMenuData:data,\r\n                    })\r\n                    data.map((item)=>{\r\n                        var barMenuID = parseInt(item._id);\r\n                        var compbarMenuID = Math.max(barMenuID) +1;\r\n                        this.setState({\r\n                        \r\n                            barMenuID:compbarMenuID,\r\n                            \r\n                        })\r\n                        return 'ok'\r\n                    })\r\n                    \r\n                })\r\n                \r\n                this.myTimer = setTimeout(() => {\r\n                    \r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000000),\r\n                       \r\n                        \r\n                    })\r\n                },1000)\r\n               \r\n            }\r\n\r\n            else if(findbarMenu.some(item => item.mealName===founddeptID)){\r\n                alert(\"Product already registered\");\r\n                this.setState({\r\n                        \r\n                    productID:'',\r\n                    categoryName:'',\r\n                    categoryCode:'',\r\n                    categoryTypes:'',\r\n                    productName:'',\r\n                    productSellingPrice:'',\r\n                    productUnit:'',\r\n                    productType:'',\r\n                    productTypeID:'',\r\n                    binNum:'',\r\n                    pieces:'',\r\n                    productTypeData:'',\r\n                    unitsData:'',\r\n                    reOrderLevel:'',\r\n                    entryDate:''\r\n    \r\n                        \r\n                })\r\n    \r\n                fetch(`${categoryUrl}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        categoryTypes:data,\r\n                    \r\n    \r\n                    })\r\n            \r\n                })\r\n    \r\n                fetch(`${getDrinkCategory}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        productTypeData:data,\r\n                    \r\n                    })\r\n                    \r\n                })\r\n    \r\n    \r\n                fetch(`${unitsUrl}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        unitsData:data,\r\n                    \r\n                    })\r\n            \r\n                })\r\n\r\n                fetch(`${allbarMenuUrl}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        barMenuData:data,\r\n                    })\r\n                    data.map((item)=>{\r\n                        var barMenuID = parseInt(item._id);\r\n                        var compbarMenuID = Math.max(barMenuID) +1;\r\n                        this.setState({\r\n                        \r\n                            barMenuID:compbarMenuID,\r\n                            \r\n                        })\r\n                        return 'ok'\r\n                    })\r\n                    \r\n                })\r\n                \r\n                this.myTimer = setTimeout(() => {\r\n                    \r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000000),\r\n                        \r\n                       \r\n                        \r\n                    })\r\n                },1000)\r\n               \r\n            }\r\n            \r\n        \r\n\r\n            else{\r\n                let result = await fetch(`${postproductUrl}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        deptDatapost\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                if(this.state.categoryName==='Drink Store'){\r\n                    let result2 = await fetch(`${postdrinksUrl}`, {\r\n                        method: 'post',\r\n            \r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type': 'application/json',\r\n                        },\r\n            \r\n                        body: JSON.stringify(\r\n                            drinkMenu\r\n                          \r\n                        )\r\n                            \r\n                    });\r\n                    console.log('result2>  ' + result2)\r\n                }\r\n                \r\n                alert(this.state.productName+\" Added\");\r\n                this.setState({\r\n                    productID:'',\r\n                    productName:'',\r\n                    productUnit:'',\r\n                    productTypeData:'',\r\n                    productSellingPrice:'',\r\n                    productType:'',\r\n                    productTypeID:'',\r\n                    binNum:'',\r\n                    reOrderLevel:'',\r\n                    entryDate:'',\r\n                    categoryName:'',\r\n                    categoryCode:'',\r\n                    categoryTypes:'',\r\n                    unitsData:'',\r\n                    productsData:'',\r\n                    pieces:'',\r\n                    barMenuID:'',\r\n                    barMenuData:''\r\n                })\r\n\r\n                fetch(`${categoryUrl}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        categoryTypes:data,\r\n                    })\r\n            \r\n                })\r\n                fetch(`${unitsUrl}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        unitsData:data,\r\n                    \r\n                    })\r\n            \r\n                })\r\n                fetch(`${allproductsUrl}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        productsData:data,\r\n            \r\n                    })\r\n                })\r\n                fetch(`${allbarMenuUrl}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        barMenuData:data,\r\n                    })\r\n                    data.map((item)=>{\r\n                        var barMenuID = parseInt(item._id);\r\n                        var compbarMenuID = Math.max(barMenuID) +1;\r\n                        this.setState({\r\n                        \r\n                            barMenuID:compbarMenuID,\r\n                            \r\n                        })\r\n                        return 'ok'\r\n                    })\r\n                    \r\n                })\r\n                \r\n                this.myTimer = setTimeout(() => {\r\n                    \r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000000),\r\n                       \r\n                        \r\n                    })\r\n                },1000)\r\n\r\n            }\r\n\r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async deptUpdate() {\r\n       \r\n        try {\r\n            var prodID = this.state.productID;\r\n            var editID = parseInt(this.state.UseID);\r\n           \r\n            var drinkMenu = {\r\n                \r\n                mealTypeID:parseInt(`${this.state.productTypeID}`),\r\n                mealName:`${this.state.productName}`,\r\n                mealPrice:`${this.state.productSellingPrice}`,\r\n                mealQt:1,\r\n                mealType:`${this.state.productType}`,\r\n                categoryID:parseInt(`${this.state.productTypeID}`),\r\n                category:`${this.state.productType}`\r\n                \r\n            }\r\n\r\n            var deptUpdated = {\r\n               \r\n                productName:`${this.state.productName}`,\r\n                productUnit:`${this.state.productUnit}`,\r\n                productType:`${this.state.productType}`,\r\n                productTypeID:`${this.state.productTypeID}`,\r\n                categoryName:`${this.state.categoryName}`,\r\n                catgoryID:`${this.state.catgoryID}`,\r\n                binNum:`${this.state.binNum}`,\r\n                reOrderLevel:`${this.state.reOrderLevel}`,\r\n                entryDate:`${this.state.entryDate}`,\r\n                pieces:`${this.state.pieces}`,\r\n                // productID:`${this.state.productID}`,\r\n                productSellingPrice:parseInt(`${this.state.productSellingPrice}`),\r\n                name:localStorage.getItem('userInfo'),\r\n                \r\n\r\n                            \r\n            }\r\n            let result = await fetch(`${editproductUrl}/${prodID}`, {\r\n                method: 'put',\r\n    \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n    \r\n                body: JSON.stringify(\r\n                    \r\n                    deptUpdated\r\n                        \r\n                )\r\n                    \r\n            });\r\n            console.log('result>  ' + result)\r\n\r\n            let editProd = await fetch(`${editdrinksUrl}/${editID}`, {\r\n                method: 'put',\r\n    \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n    \r\n                body: JSON.stringify(\r\n                    \r\n                    drinkMenu\r\n                        \r\n                )\r\n                    \r\n            });\r\n            console.log('editProd>  ' + editProd)\r\n            alert(this.state.productName+\" updated\");\r\n            \r\n            this.setState({\r\n                productID:'',\r\n                productName:'',\r\n                productUnit:'',\r\n                productType:'',\r\n                productTypeID:'',\r\n                productSellingPrice:'',\r\n                productTypeData:'',\r\n                binNum:'',\r\n                reOrderLevel:'',\r\n                entryDate:'',\r\n                categoryName:'',\r\n                categoryCode:'',\r\n                pieces:''\r\n\r\n                \r\n            })\r\n            fetch(`${allproductsUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n            this.setState({\r\n                productsData:data,\r\n            \r\n            })\r\n\r\n            fetch(`${getDrinkCategory}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    productTypeData:data,\r\n                })\r\n           \r\n            })\r\n            \r\n        })\r\n\r\n            this.myTimer = setTimeout(() => {\r\n                \r\n                this.setState({\r\n                    _id:Math.floor(Math.random()*10000000),\r\n                    \r\n                    \r\n                })\r\n            },1000)\r\n\r\n            \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    renderCategoryTypes(data){\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a,b)=>a.categoryName - b.categoryName);\r\n                return(\r\n                    <>\r\n                         <option key={item._id} value={item.categoryName}>\r\n                            {item.categoryName} \r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderProductUnits(data){\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a,b)=>a.unit - b.unit);\r\n                return(\r\n                    <>\r\n                         <option key={item._id} value={item.unit}>\r\n                            {item.unit} \r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderProducts(data){\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a,b)=>a.unit - b.unit);\r\n                return(\r\n                    <>\r\n                         <option key={item._id} value={item.productName}>\r\n                            {item.productName} \r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        console.log (\">>> Inside Grpdetails\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Storelogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div  className=\"background990ib\">\r\n                    <br/><br/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-50px'}}>Register New Products</h4>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h6 style = {{color:'purple',marginLeft:'480px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                        </div>\r\n                    </div>\r\n                    <h4 style = {{color:'rgb(23, 23, 71)',marginLeft:'50px', marginBottom:'-40px'}}> </h4>\r\n\r\n                    <div className=\"formdesign510b\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col-3\">\r\n                                    <select className=\"form-select  mb-3 formsize51\" name=\"categoryName\" onChange={this.handleChange2}>\r\n                                        <option defaultValue=''>Select Category</option>\r\n                                        {this.renderCategoryTypes(this.state.categoryTypes)}\r\n                                    </select>\r\n                                </div>\r\n                                \r\n                                <div className=\"col-3\">\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\" name=\"productID\" require placeholder=\"Enter Product ID\">{this.state.productID}</p>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"productName\" require placeholder=\"Enter Product Name\" value={this.state.productName} list=\"products\" onChange={this.handleChange5}/>\r\n                                    <datalist id=\"products\">\r\n                                        {this.renderProducts(this.state.productsData)}\r\n                                    </datalist>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <select className=\"form-select  mb-3 formsize51 col-3\" name=\"productUnit\" onChange={this.handleChange4}>\r\n                                        <option selected=\"\">Select Unit</option>\r\n                                        {this.renderProductUnits(this.state.unitsData)}\r\n                                        <option defaultValue=''>Add New</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                \r\n\r\n                            </div>\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col-3\">\r\n                                   \r\n                                   <select disabled={this.state.categoryName!=='Drink Store'} className=\"form-select  mb-3 formsize51\" name=\"productType\" require placeholder=\"ProdType\"onChange={this.handleChange12b}>\r\n                                       <option defaultValue=''>Product Type</option>\r\n                                       {this.renderProductType2(this.state.productTypeData)}\r\n                                   </select>\r\n                               </div>\r\n\r\n                               <div className=\"col-3\">\r\n                                  <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\">{this.state.productTypeID}</p>\r\n                               </div>\r\n                                    \r\n                                <div className=\"col-3\">\r\n                                    \r\n                                    <input type=\"number\" disabled={this.state.categoryName!=='Drink Store'} className=\"form-control mb-3 formsize51\" name=\"pieces\" list=\"pieces\" require placeholder=\"Pieces per unit\" value={this.state.pieces} onChange={this.handleChange}/>\r\n                                    <datalist id=\"pieces\">\r\n                                        {this.renderPieces(this.state.piecesData)}\r\n                                    </datalist>\r\n                                </div>\r\n                                \r\n                                <div className=\"col-3\">\r\n                                    <input type=\"number\" disabled={this.state.categoryName!=='Drink Store'} className=\"form-control mb-3 formsize51\" name=\"productSellingPrice\" require placeholder=\"Enter Selling Price\" value={this.state.productSellingPrice} onChange={this.handleChange}/>\r\n                                </div>\r\n\r\n                                \r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"binNum\" require placeholder=\"Enter Bin Number\" value={this.state.binNum} onChange={this.handleChange}/>\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"number\" className=\"form-control mb-3 formsize51\" name=\"reOrderLevel\" require placeholder=\"Enter Re-Order Level\" value={this.state.reOrderLevel} onChange={this.handleChange}/>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>\r\n                                        {this.rendercheckinDate(this.state.entryDate)}\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <center>\r\n                            <br/>\r\n                                <span>\r\n                                    <button disabled={this.state.productName===''||this.state.productUnit===''||this.state.entryDate===''||this.state.binNum===''} className=\"btn btn-warning\" onClick={ () => this.handleSubmit () } >Add New</button>\r\n                                    <button disabled={this.state.categoryName.length!==0||this.state.categoryName===\"Select Category\"} className=\"btn btn-warning gap\" onClick={()=>this.onOpenModaledit()}>Edit Products</button>\r\n                                    <button className=\"btn btn-danger gap\" onClick={ () => this.props.history.push('/storeMenu')}>Close</button>\r\n                                    \r\n                                </span>\r\n                            </center>\r\n                           \r\n                            \r\n                        </div>\r\n                        <br/>\r\n                       \r\n                    </div>\r\n                </div>\r\n                <Modal open={this.state.edit} onClose={()=>this.onCloseModaledit()} style={{color:\"silver\"}}>\r\n                    <div className = \"background591\">\r\n                        <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-70px'}}>Edit Product</h4>\r\n                        <div className=\"formdesign511\">\r\n                            <div className=\"container\">\r\n                                <select className=\"form-select  mb-3 formsize51 col-3\" name=\"searchproductName\" onChange={this.handleChange3}>\r\n                                    <option defaultValue=''>Select Product</option>\r\n                                    {this.renderProducts(this.state.productsData)}\r\n                                </select>\r\n                                <div className=\"row\">\r\n                                    \r\n                                    <div className=\"col-3\">\r\n                                        <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"productName\" require placeholder=\"Product Name\" value={this.state.productName} onChange={this.handleChange}/>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-3\">\r\n                                        <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\" name=\"productID\" require placeholder=\"Product ID\">{this.state.productID}</p>\r\n                                    </div>\r\n                                    <div className=\"col-3\">\r\n                                        <input type=\"text\"  className=\"form-control mb-3 formsize51\" name=\"productType\" require placeholder=\"ProdType\" list=\"types\" value={this.state.productType} onChange={this.handleChange}/>\r\n                                        <datalist id=\"types\">\r\n                                            {this.renderProductType2(this.state.productTypeData)}\r\n                                        </datalist>\r\n                                    </div>\r\n                                    \r\n                                   <div className=\"col-3\">\r\n                                        <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\">{this.state.productTypeID}</p>\r\n                                    </div>\r\n                               </div>\r\n\r\n                                <div className=\"row\">\r\n\r\n                                    <div className=\"col-3\">\r\n                                            <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"categoryName\" require placeholder=\"Product Category\" value={this.state.categoryName} onChange={this.handleChange}/>\r\n                                        \r\n                                    </div>\r\n                                    <div className=\"col-3\">\r\n                                        <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"productUnit\" require placeholder=\"Product Unit\" list=\"unit\" value={this.state.productUnit} onChange={this.handleChange111}/>\r\n                                        <datalist id=\"unit\">\r\n                                            {this.renderProductUnits(this.state.unitsData)}\r\n                                        </datalist>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"col-3\">\r\n                                        <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"binNum\" require placeholder=\"Bin Number\" value={this.state.binNum} onChange={this.handleChange}/>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-3\">\r\n                                        \r\n                                        <input type=\"number\" className=\"form-control mb-3 formsize51\" name=\"pieces\" list=\"pieces\" require placeholder=\"Pieces per unit\" value={this.state.pieces} onChange={this.handleChange}/>\r\n                                        <datalist id=\"pieces\">\r\n                                            {this.renderPieces(this.state.piecesData)}\r\n                                        </datalist>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-3\">\r\n                                        <input type=\"number\" disabled={this.state.categoryName!=='Drink Store'} className=\"form-control mb-3 formsize51\" name=\"productSellingPrice\" require placeholder=\"Enter Selling Price\" value={this.state.productSellingPrice} onChange={this.handleChange}/>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-3\">\r\n                                        <label>\r\n                                            {this.rendercheckinDate(this.state.entryDate)}\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <br/><br/>\r\n                                <center>\r\n                                    <span>\r\n                                    <button disabled ={this.state.productName===''||this.state.productUnit===''} className=\"btn btn-warning gap\" onClick={()=>this.deptUpdate()}>Save Update</button>\r\n                                        <button disabled ={this.state.productName===''||this.state.productUnit===''} className=\"btn btn-warning gap\" onClick={()=>this.deletedept()}>Delete Product</button>\r\n                                        <button className=\"btn btn-danger gap\" onClick={ () => this.onCloseModaledit()}>Close</button>\r\n                                                \r\n                                    </span>\r\n                                            \r\n                                </center>\r\n                                <br/>\r\n                        \r\n                            </div>\r\n                            \r\n                        </div> \r\n                        \r\n                    </div>  \r\n\r\n                </Modal>\r\n                <Modal open={this.state.editunit} onClose={()=>this.onCloseModaleditunit()}>\r\n                    \r\n                    <div>\r\n                        <Stockunitsmodal/>\r\n                    </div>\r\n                    <br/>\r\n                   \r\n                    <div>\r\n                        <center>\r\n                            <button className=\"btn btn-danger gap\" onClick={ () => this.onCloseModaleditunit()}>Close</button>\r\n                        </center>\r\n                    </div>\r\n                    \r\n\r\n                </Modal>\r\n            </>\r\n                \r\n            \r\n            \r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\">>> Inside GrpDidMount\", this.state);\r\n\r\n        fetch(`${categoryUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                categoryTypes:data,\r\n            \r\n\r\n            })\r\n            \r\n        })\r\n        fetch(`${unitsUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                unitsData:data,\r\n            \r\n\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${allproductsUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                productsData:data,\r\n            \r\n\r\n            })\r\n            \r\n        })\r\n        \r\n        fetch(`${allbarMenuUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                barMenuData:data,\r\n            })\r\n            data.map((item)=>{\r\n                var barMenuID = parseInt(item._id);\r\n                var compbarMenuID = Math.max(barMenuID) +1;\r\n                this.setState({\r\n                \r\n                    barMenuID:compbarMenuID,\r\n                    \r\n                    \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        \r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n       \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default productReg;","import React, { Component } from 'react';\r\nimport Storelogin from '../Storelogin';\r\nimport '../Reception/Reception.css';\r\nimport 'react-responsive-modal/styles.css';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport DatePicker from 'react-datepicker';\r\nimport addDays from 'date-fns/addDays';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst allproductsUrl= \"https://zarvichdemo.localto.net/products?getproductName=\";\r\nconst uniqueProductsUrl= \"https://zarvichdemo.localto.net/products?uniqueCat=\";\r\nconst allCategoryUrl= \"https://zarvichdemo.localto.net/storeTypes?storeName=\";\r\nconst getStoreTransUrl= \"https://zarvichdemo.localto.net/storeTran?tranProdName=\";\r\nconst getStockOut= \"https://zarvichdemo.localto.net/stockOutNow?sivProdName=\";\r\nconst getvendorUrl= \"https://zarvichdemo.localto.net/vendors?name=\";\r\nconst postproductUrl= \"https://zarvichdemo.localto.net/stockInNow\";\r\nconst editproductUrl= \"https://zarvichdemo.localto.net/storeTran?grvNumber=\";\r\nconst updateProduct= \"https://zarvichdemo.localto.net/editstockIn\";\r\nconst userName = \"https://zarvichdemo.localto.net/storeUserInfo\";\r\nconst deleteproductUrl= \"https://zarvichdemo.localto.net/delstoreTran\"\r\n\r\n\r\nclass stockIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>> inside GrpCobtructor\", props)\r\n\r\n        this.state = {\r\n            _id:Math.floor(Math.random()*10000000),\r\n            categoryName:'',\r\n            grvNum:'',\r\n            productName:'',\r\n            productID:'',\r\n            productPrice:'',\r\n            productUnit:'',\r\n            qtyIn:'',\r\n            productValue:0,\r\n            totalIn:0,\r\n            totalOut:0,\r\n            totalProductBalance:0,\r\n            vendorName:'',\r\n            vendorID:'',\r\n            invoiceDate:'',\r\n            invoiceNum:'',\r\n            supplyDate:new Date(),\r\n            transDate:new Date(),\r\n            remark:'',\r\n            qtyOut:0,\r\n            orderNum:'',\r\n\r\n            productsData:'',\r\n            uniqueProductData:'',\r\n            transactionsData:'',\r\n            vendorData:'',\r\n            categoryData:'',\r\n            \r\n            \r\n            edit: false,\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            placeholder:''\r\n            \r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n\r\n    }\r\n\r\n\r\n    onOpenModaledit(){\r\n        this.setState({\r\n            edit:true\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseModaledit(){\r\n        this.setState({\r\n            edit:false\r\n            \r\n        })\r\n        this.setState({\r\n            categoryName:'',\r\n            categoryID:'',\r\n            grvNum:'',\r\n            productName:'',\r\n            productID:'',\r\n            productPrice:'',\r\n            productUnit:'',\r\n            qtyIn:'',\r\n            productValue:0,\r\n            totalIn:0,\r\n            totalOut:0,\r\n            totalProductBalance:0,\r\n            productsData:'',\r\n            vendorName:'',\r\n            vendorData:'',\r\n            vendorID:'',\r\n            invoiceDate:'',\r\n            invoiceNum:'',\r\n            remark:'',\r\n            qtyOut:0,\r\n            orderNum:''\r\n                \r\n        })\r\n        fetch(`${allproductsUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                productsData:data,\r\n                \r\n            })\r\n           \r\n        })\r\n\r\n        fetch(`${allproductsUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                productsData:data,\r\n    \r\n            })\r\n        })\r\n\r\n        fetch(`${getvendorUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                vendorData:data,\r\n            \r\n            })\r\n            \r\n        })\r\n        \r\n        this.myTimer = setTimeout(() => {\r\n            \r\n            this.setState({\r\n                _id:Math.floor(Math.random()*10000000),\r\n                \r\n                \r\n            })\r\n        },1000)\r\n\r\n        fetch(`${getStoreTransUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                transactionsData:data,\r\n            \r\n            })\r\n\r\n            var opening=this.state.transactionsData\r\n            var grvCode = 3000000;\r\n\r\n            this.myTimer = setTimeout(() => {\r\n                if(this.state.transactionsData.length===0){\r\n                    \r\n                    var checkID = parseInt(grvCode);\r\n                    var computeID = Math.max(checkID);\r\n                    this.setState({\r\n                        grvNum:computeID\r\n                        \r\n                    })\r\n                        \r\n                    \r\n                }\r\n                else{\r\n                    opening.map((item)=>{\r\n                        var checkID = parseInt(item.grvNum);\r\n                        var computeID = Math.max(checkID) +1;\r\n                        this.setState({\r\n                            grvNum:computeID,\r\n                            \r\n                        })\r\n                        return 'ok'\r\n                    })\r\n                }\r\n                \r\n            },1000);\r\n            \r\n        })\r\n        \r\n    }\r\n\r\n\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            invoiceDate: date\r\n        });\r\n    }\r\n\r\n    rendercheckinDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.invoiceDate}\r\n                    onChange={this.checkinhandleChange}\r\n                    maxDate={addDays(new Date(),1)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    placeholderText=\"Invoice Date\"\r\n                    className=\"form-control mb-3 formsize51\"\r\n                    \r\n                    \r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n    \r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n    handleChange5 = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n        var prodVal = 0;\r\n        var totProdVal = prodVal + parseInt(this.state.productPrice) * parseInt(event.target.value)*parseInt(this.state.pieces);\r\n        this.setState({productValue:totProdVal})\r\n\r\n        \r\n    }\r\n\r\n    handleChange6 = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        fetch(`${editproductUrl}${event.target.value}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n           data.map((item)=>{\r\n                this.setState({\r\n                    categoryName:item.categoryName,\r\n                    grvNum:item.grvNum,\r\n                    productName:item.productName,\r\n                    productID:item.productID,\r\n                    productPrice:item.productPrice,\r\n                    productUnit:item.productUnit,\r\n                    qtyIn:item.qtyIn,\r\n                    productValue:item.productValue,\r\n                    vendorID:item.vendorID,\r\n                    vendorName:item.vendorName,\r\n                    invoiceDate:new Date(item.invoiceDate),\r\n                    invoiceNum:item.invoiceNum,\r\n                    supplyDate:item.supplyDate,\r\n                    transDate:new Date(item.transDate),\r\n                    remark:item.remark,\r\n                    orderNum:item.orderNum\r\n\r\n                })\r\n                return 'ok'\r\n           })\r\n           \r\n           var totalQtyIn = data.map(item => item).reduce((totals, item) =>{\r\n            return totals + parseInt(item.qtyIn)\r\n            }, 0);\r\n            this.setState({totalIn:totalQtyIn})\r\n            \r\n            fetch(`${getStockOut}${event.target.value}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n\r\n                var totalQtyOut = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.qtyOut)\r\n                }, 0);\r\n                this.setState({totalOut:totalQtyOut})\r\n                \r\n            })\r\n\r\n            this.myTimer = setTimeout(() => {\r\n                var allQty = 0;\r\n                var totalBalance = allQty + parseInt(this.state.totalIn) - parseInt(this.state.totalOut);\r\n                this.setState({totalProductBalance:totalBalance})\r\n\r\n            },1000)\r\n            \r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleChange4 = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        fetch(`${getvendorUrl}${event.target.value}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n           data.map((item)=>{\r\n                this.setState({\r\n                    vendorID:item.vendorID\r\n                })\r\n                return 'ok'\r\n           })\r\n            \r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    handleChange8 = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n        fetch(`${uniqueProductsUrl}${event.target.value}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n           this.setState({productsData:data})\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleChange2 = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n        fetch(`${allproductsUrl}${event.target.value}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    categoryName:item.categoryName,\r\n                    categoryID:item.categoryID,\r\n                    productID:item.productID,\r\n                    productUnit:item.productUnit,\r\n                    pieces:item.pieces\r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${getStoreTransUrl}${event.target.value}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                transactionsData:data\r\n            });\r\n\r\n            var totalQtyIn = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.qtyIn)\r\n            }, 0);\r\n            this.setState({totalIn:totalQtyIn})\r\n            \r\n        })\r\n\r\n    \r\n        fetch(`${getStockOut}${event.target.value}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n\r\n            var totalQtyOut = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.qtyOut)\r\n            }, 0);\r\n            this.setState({totalOut:totalQtyOut})\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n            var allQty = 0;\r\n            var totalBalance = allQty + parseInt(this.state.totalIn) - parseInt(this.state.totalOut);\r\n            this.setState({totalProductBalance:totalBalance})\r\n\r\n        },1000)\r\n\r\n        if(this.state.productName===''){\r\n            this.setState({\r\n                categoryName:'',\r\n                categoryID:'',\r\n                productID:'',\r\n                productPrice:'',\r\n                productUnit:''\r\n            })\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    deletedept(){\r\n        fetch(`${deleteproductUrl}/${this.state.grvNum}`, {method:'delete'})\r\n        alert(\"Product Deleted\")\r\n\r\n        this.setState({\r\n            categoryName:'',\r\n            categoryID:'',\r\n            grvNum:'',\r\n            productName:'',\r\n            productID:'',\r\n            productPrice:'',\r\n            productUnit:'',\r\n            qtyIn:'',\r\n            productValue:0,\r\n            totalIn:0,\r\n            totalOut:0,\r\n            totalProductBalance:0,\r\n            productsData:'',\r\n            vendorName:'',\r\n            vendorData:'',\r\n            vendorID:'',\r\n            invoiceDate:'',\r\n            invoiceNum:'',\r\n            remark:'',\r\n            qtyOut:0,\r\n            orderNum:''\r\n                \r\n        })\r\n        fetch(`${allproductsUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                productsData:data,\r\n                \r\n            })\r\n           \r\n        })\r\n\r\n        fetch(`${allproductsUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                productsData:data,\r\n    \r\n            })\r\n        })\r\n\r\n        fetch(`${getvendorUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                vendorData:data,\r\n            \r\n            })\r\n            \r\n        })\r\n        \r\n        this.myTimer = setTimeout(() => {\r\n            \r\n            this.setState({\r\n                _id:Math.floor(Math.random()*10000000),\r\n                \r\n                \r\n            })\r\n        },1000)\r\n\r\n        fetch(`${getStoreTransUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                transactionsData:data,\r\n            \r\n            })\r\n\r\n            var opening=this.state.transactionsData\r\n            var grvCode = 3000000;\r\n\r\n            this.myTimer = setTimeout(() => {\r\n                if(this.state.transactionsData.length===0){\r\n                    \r\n                    var checkID = parseInt(grvCode);\r\n                    var computeID = Math.max(checkID);\r\n                    this.setState({\r\n                        grvNum:computeID\r\n                        \r\n                    })\r\n                        \r\n                    \r\n                }\r\n                else{\r\n                    opening.map((item)=>{\r\n                        var checkID = parseInt(item.grvNum);\r\n                        var computeID = Math.max(checkID) +1;\r\n                        this.setState({\r\n                            grvNum:computeID,\r\n                            \r\n                        })\r\n                        return 'ok'\r\n                    })\r\n                }\r\n                \r\n            },1000);\r\n            \r\n        })\r\n\r\n        \r\n        \r\n    }\r\n    \r\n\r\n    \r\n    async handleSubmit() {\r\n       \r\n        try {\r\n            \r\n            var finddeptID = this.state.transactionsData;\r\n            var founddeptID = this.state.grvNum\r\n\r\n            var deptDatapost = {\r\n                _id:`${this.state._id}`,\r\n                categoryName:`${this.state.categoryName}`,\r\n                grvNum:`${this.state.grvNum}`,\r\n                productName:`${this.state.productName}`,\r\n                productID:`${this.state.productID}`,\r\n                productPrice:`${this.state.productPrice}`,\r\n                productUnit:`${this.state.productUnit}`,\r\n                qtyIn:`${this.state.qtyIn}`,\r\n                productValue:`${this.state.productValue}`,\r\n                vendorID:`${this.state.vendorID}`,\r\n                vendorName:`${this.state.vendorName}`,\r\n                invoiceDate:`${this.state.invoiceDate}`,\r\n                invoiceNum:`${this.state.invoiceNum}`,\r\n                supplyDate:`${this.state.supplyDate}`,\r\n                transDate:moment(`${this.state.transDate}`).format('MMM DD YYYY'),\r\n                remark:`${this.state.remark}`,\r\n                orderNum:`${this.state.orderNum}`,\r\n                name:localStorage.getItem('userInfo')\r\n               \r\n            }\r\n\r\n            if(finddeptID.some(item => item.grvNum===founddeptID)){\r\n                alert(this.state.productName+ \" already received\");\r\n\r\n                fetch(`${getStoreTransUrl}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        transactionsData:data,\r\n                    \r\n                    })\r\n \r\n                    var opening=this.state.transactionsData\r\n                    var grvCode = 3000000;\r\n\r\n                    this.myTimer = setTimeout(() => {\r\n                        if(this.state.transactionsData.length===0){\r\n                            \r\n                            var checkID = parseInt(grvCode);\r\n                            var computeID = Math.max(checkID);\r\n                            this.setState({\r\n                                grvNum:computeID\r\n                                \r\n                            })\r\n                                \r\n                            \r\n                        }\r\n                        else{\r\n                            opening.map((item)=>{\r\n                                var checkID = parseInt(item.grvNum);\r\n                                var computeID = Math.max(checkID) +1;\r\n                                this.setState({\r\n                                    grvNum:computeID,\r\n                                    \r\n                                })\r\n                                return 'ok'\r\n                            })\r\n                        }\r\n\r\n                       \r\n                        \r\n                    },1000);\r\n                    \r\n                })\r\n                \r\n                this.myTimer = setTimeout(() => {\r\n                    \r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000000),\r\n                       \r\n                        \r\n                    })\r\n                },1000)\r\n               \r\n            }\r\n\r\n            else{\r\n                let result = await fetch(`${postproductUrl}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        deptDatapost\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                alert(this.state.productName+\" Added\");\r\n                this.setState({\r\n                    categoryName:'',\r\n                    categoryData:'',\r\n                    categoryID:'',\r\n                    grvNum:'',\r\n                    productName:'',\r\n                    pieces:'',\r\n                    productID:'',\r\n                    productPrice:'',\r\n                    productUnit:'',\r\n                    qtyIn:'',\r\n                    productValue:0,\r\n                    totalIn:0,\r\n                    totalOut:0,\r\n                    totalProductBalance:0,\r\n                    productsData:'',\r\n                    vendorName:'',\r\n                    vendorData:'',\r\n                    vendorID:'',\r\n                    invoiceDate:'',\r\n                    invoiceNum:'',\r\n                    remark:'',\r\n                    qtyOut:0,\r\n                    orderNum:''\r\n                })\r\n\r\n                fetch(`${allproductsUrl}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        productsData:data,\r\n            \r\n                    })\r\n                })\r\n\r\n                fetch(`${getvendorUrl}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        vendorData:data,\r\n                    \r\n                    })\r\n                    \r\n                })\r\n\r\n                fetch(`${allCategoryUrl}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        categoryData:data,\r\n                    \r\n                    })\r\n                    \r\n                })\r\n                \r\n                this.myTimer = setTimeout(() => {\r\n                    \r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000000),\r\n                       \r\n                        \r\n                    })\r\n                },1000)\r\n\r\n                fetch(`${getStoreTransUrl}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        transactionsData:data,\r\n                    \r\n                    })\r\n        \r\n                    var opening=this.state.transactionsData\r\n                    var grvCode = 3000000;\r\n\r\n                    this.myTimer = setTimeout(() => {\r\n                        if(this.state.transactionsData.length===0){\r\n                            \r\n                            var checkID = parseInt(grvCode);\r\n                            var computeID = Math.max(checkID);\r\n                            this.setState({\r\n                                grvNum:computeID\r\n                                \r\n                            })\r\n                                \r\n                            \r\n                        }\r\n                        else{\r\n                            opening.map((item)=>{\r\n                                var checkID = parseInt(item.grvNum);\r\n                                var computeID = Math.max(checkID) +1;\r\n                                this.setState({\r\n                                    grvNum:computeID,\r\n                                    \r\n                                })\r\n                                return 'ok'\r\n                            })\r\n                        }\r\n                        \r\n                    },1000);\r\n                    \r\n                })\r\n\r\n            }\r\n\r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async deptUpdate() {\r\n       \r\n        try {\r\n            var id = this.state.grvNum;\r\n           \r\n            var deptUpdated = {\r\n               \r\n                _id:`${this.state._id}`,\r\n                categoryName:`${this.state.categoryName}`,\r\n                grvNum:`${this.state.grvNum}`,\r\n                productName:`${this.state.productName}`,\r\n                productID:`${this.state.productID}`,\r\n                productPrice:`${this.state.productPrice}`,\r\n                productUnit:`${this.state.productUnit}`,\r\n                qtyIn:`${this.state.qtyIn}`,\r\n                productValue:`${this.state.productValue}`,\r\n                vendorID:`${this.state.vendorID}`,\r\n                vendorName:`${this.state.vendorName}`,\r\n                invoiceDate:`${this.state.invoiceDate}`,\r\n                invoiceNum:`${this.state.invoiceNum}`,\r\n                supplyDate:`${this.state.supplyDate}`,\r\n                transDate:moment(`${this.state.transDate}`).format('MMM DD YYYY'),\r\n                remark:`${this.state.remark}`,\r\n                orderNum:`${this.state.orderNum}`\r\n                            \r\n            }\r\n            let result = await fetch(`${updateProduct}/${id}`, {\r\n                method: 'put',\r\n    \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n    \r\n                body: JSON.stringify(\r\n                    \r\n                    deptUpdated\r\n                        \r\n                )\r\n                    \r\n            });\r\n            console.log('result>  ' + result)\r\n            alert(this.state.productName+\" updated\");\r\n            this.setState({\r\n                categoryName:'',\r\n                categoryID:'',\r\n                grvNum:'',\r\n                productName:'',\r\n                productID:'',\r\n                productPrice:'',\r\n                productUnit:'',\r\n                qtyIn:'',\r\n                productValue:0,\r\n                totalIn:0,\r\n                totalOut:0,\r\n                totalProductBalance:0,\r\n                productsData:'',\r\n                vendorName:'',\r\n                vendorData:'',\r\n                vendorID:'',\r\n                invoiceDate:'',\r\n                invoiceNum:'',\r\n                remark:'',\r\n                qtyOut:0,\r\n                orderNum:'',\r\n                transactionsData:''\r\n                \r\n            })\r\n\r\n            fetch(`${allproductsUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    productsData:data,\r\n                \r\n                })\r\n            })\r\n\r\n            \r\n            fetch(`${getvendorUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    vendorData:data,\r\n                \r\n                })\r\n                \r\n            })\r\n\r\n            fetch(`${getStoreTransUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    transactionsData:data,\r\n                \r\n                })\r\n                \r\n            })\r\n            \r\n            \r\n\r\n            this.myTimer = setTimeout(() => {\r\n                \r\n                this.setState({\r\n                    _id:Math.floor(Math.random()*10000000),\r\n                    \r\n                    \r\n                })\r\n            },1000)\r\n\r\n            \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    renderVendor(data){\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a,b)=>a.vendorName - b.vendorName);\r\n                return(\r\n                    <>\r\n                         <option key={item._id} value={item.vendorName}>\r\n                            {item.vendorName} \r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderstockIndata(data){\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a,b)=>a.productName - b.productName);\r\n                return(\r\n                    <>\r\n                         <option key={item._id} value={item.grvNum}>\r\n                            Name: {item.productName} | SRV Num: {item.grvNum} | Value: {item.productValue}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderProducts(data){\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a,b)=>a.unit - b.unit);\r\n                return(\r\n                    <>\r\n                         <option key={item._id} value={item.productName}>\r\n                            {item.productName} \r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderCategories(data){\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a,b)=>a.categoryName - b.categoryName);\r\n                return(\r\n                    <>\r\n                         <option key={item._id} value={item.categoryName}>\r\n                            {item.categoryName} \r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        console.log (\">>> Inside Grpdetails\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Storelogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div  className=\"background990ib\">\r\n                    <br/><br/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-50px'}}>Stock In Products</h4>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h6 style = {{color:'purple',marginLeft:'480px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                        </div>\r\n                    </div>\r\n                    <h4 style = {{color:'rgb(23, 23, 71)',marginLeft:'50px', marginBottom:'-40px'}}> </h4>\r\n\r\n                    <div className=\"formdesign510b\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">\r\n                                    \r\n                                    <select className=\"form-select  mb-3 formsize51\" name=\"categoryName\" onChange={this.handleChange8}>\r\n                                        <option defaultValue=''>Select Category</option>\r\n                                        {this.renderCategories(this.state.categoryData)}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <select className=\"form-select  mb-3 formsize51\" name=\"productName\" onChange={this.handleChange2}>\r\n                                        <option defaultValue=''>Select Product</option>\r\n                                        {this.renderProducts(this.state.productsData)}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"number\" className=\"form-control mb-3 formsize51\" name=\"productPrice\" require placeholder=\"Enter Cost Price\" value={this.state.productPrice} onChange={this.handleChange}/>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"number\" className=\"form-control mb-3 formsize51\" name=\"qtyIn\" require placeholder=\"Enter Qty Supplied\" value={this.state.qtyIn} onChange={this.handleChange5}/>\r\n                                </div>\r\n                               \r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">\r\n                                    <select className=\"form-select  mb-3 formsize51\" name=\"vendorName\" onChange={this.handleChange4}>\r\n                                        <option defaultValue=''>Select Vendor</option>\r\n                                        {this.renderVendor(this.state.vendorData)}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>\r\n                                        {this.rendercheckinDate(this.state.invoiceDate)}\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"invoiceNum\" require placeholder=\"Invoice Number\" value={this.state.invoiceNum} onChange={this.handleChange}/>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <textarea rows=\"2\" className=\"form-control mb-3 formsize51\" name=\"remark\" require placeholder=\"Remark\" value={this.state.remark} onChange={this.handleChange}/>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <hr/>\r\n                            <div className=\"row\">\r\n                               \r\n                                <div className=\"col-3\">\r\n                                    <label>SRV Num</label>\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\">{this.state.grvNum}</p>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>Product ID</label>\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\">{this.state.productID}</p>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>Product Unit</label>\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\">{this.state.productUnit}</p>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                <label>Pieces Per Unit</label>\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\">{this.state.pieces}</p>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>Product Value</label>\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\"><NumberFormat value={this.state.productValue}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>Vendor ID</label>\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\">{this.state.vendorID}</p>\r\n                                </div>\r\n                                \r\n                                <div className=\"col-3\">\r\n                                    <label>Total In</label>\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\">{this.state.totalIn}</p>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>Total Out</label>\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\">{this.state.totalOut}</p>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>Total Product Balance</label>\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\">{this.state.totalProductBalance}</p>\r\n                                </div>\r\n                            </div>\r\n                            <hr/>\r\n                            \r\n                            <center>\r\n                            <br/>\r\n                                <span>\r\n                                    <button disabled={this.state.productName===''||this.state.productPrice===''||this.state.qtyIn===''} className=\"btn btn-warning\" onClick={ () => this.handleSubmit () } >Stock In</button>\r\n                                    <button disabled={this.state.productID!==''} className=\"btn btn-warning gap\" onClick={()=>this.onOpenModaledit()}>Edit Products</button>\r\n                                    <button className=\"btn btn-danger gap\" onClick={ () => this.props.history.push('/storeMenu')}>Close</button>\r\n                                    \r\n                                </span>\r\n                            </center>\r\n                           \r\n                            \r\n                        </div>\r\n                        <br/>\r\n                       \r\n                    </div>\r\n                </div>\r\n                <Modal open={this.state.edit} onClose={()=>this.onCloseModaledit()} style={{color:\"silver\"}}>\r\n                    <div className = \"background591stockin\">\r\n                        <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-70px'}}>Edit Stock In</h4>\r\n                        <div className=\"formdesign511\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n\r\n                                <div className=\"col-3\">\r\n                                    <select className=\"form-select  mb-3 formsize51\" name=\"grvNum\" onChange={this.handleChange6}>\r\n                                        <option defaultValue=''>Select Product</option>\r\n                                        {this.renderstockIndata(this.state.transactionsData)}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"number\" className=\"form-control mb-3 formsize51\" name=\"productPrice\" require placeholder=\"Enter Cost Price\" value={this.state.productPrice} onChange={this.handleChange}/>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"number\" className=\"form-control mb-3 formsize51\" name=\"qtyIn\" require placeholder=\"Enter Quantity\" value={this.state.qtyIn} onChange={this.handleChange5}/>\r\n                                </div>\r\n                                \r\n                                <div className=\"col-3\">\r\n                                    \r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\">{this.state.grvNum}</p>\r\n                                </div>\r\n\r\n                               \r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"vendorName\" require placeholder=\"Vendor\" value={this.state.vendorName} list=\"vendors\" onChange={this.handleChange}/>\r\n                                    <datalist id=\"vendors\">\r\n                                        {this.renderVendor(this.state.vendorData)}\r\n                                    </datalist>\r\n                                    \r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>\r\n                                        {this.rendercheckinDate(this.state.invoiceDate)}\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\" name=\"invoiceNum\" require placeholder=\"Invoice Number\">{this.state.invoiceNum}</p>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <textarea rows=\"2\" className=\"form-control mb-3 formsize51\" name=\"remark\" require placeholder=\"Remark\" value={this.state.remark} onChange={this.handleChange}/>\r\n                                </div>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                               \r\n                                <div className=\"col-3\">\r\n                                    <label>Category</label>\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\">{this.state.categoryName}</p>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>Product ID</label>\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\">{this.state.productID}</p>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>Product Unit</label>\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\">{this.state.productUnit}</p>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>Product Value</label>\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\">{this.state.productValue}</p>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>Vendor ID</label>\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\">{this.state.vendorID}</p>\r\n                                </div>\r\n                                \r\n                                <div className=\"col-3\">\r\n                                    <label>Total In</label>\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\">{this.state.totalIn}</p>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>Total Out</label>\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\">{this.state.totalOut}</p>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>Balance</label>\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\">{this.state.totalProductBalance}</p>\r\n                                </div>\r\n                                </div>\r\n                                <br/><br/>\r\n                                <center>\r\n                                    <span>\r\n                                        <button disabled ={this.state.productName===''||this.state.productPrice===''||this.state.productUnit===''} className=\"btn btn-warning gap\" onClick={()=>this.deptUpdate()}>Save Update</button>\r\n                                        <button disabled ={this.state.productName===''||this.state.productPrice===''||this.state.productUnit===''} className=\"btn btn-warning gap\" onClick={()=>this.deletedept()}>Delete Product</button>\r\n                                        <button className=\"btn btn-danger gap\" onClick={ () => this.onCloseModaledit()}>Close</button>\r\n                                                \r\n                                    </span>\r\n                                            \r\n                                </center>\r\n                                <br/>\r\n                        \r\n                            </div>\r\n                            \r\n                        </div> \r\n                        \r\n                    </div>  \r\n\r\n                </Modal>\r\n               \r\n            </>\r\n                \r\n            \r\n            \r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\">>> Inside GrpDidMount\", this.state);\r\n        \r\n        fetch(`${allCategoryUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                categoryData:data,\r\n            \r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${getStoreTransUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                transactionsData:data,\r\n            \r\n            })\r\n \r\n            var opening=this.state.transactionsData\r\n            var grvCode = 3000000;\r\n\r\n            this.myTimer = setTimeout(() => {\r\n                if(this.state.transactionsData.length===0){\r\n                    \r\n                    var checkID = parseInt(grvCode);\r\n                    var computeID = Math.max(checkID);\r\n                    this.setState({\r\n                        grvNum:computeID\r\n                        \r\n                    })\r\n                        \r\n                    \r\n                }\r\n                else{\r\n                    opening.map((item)=>{\r\n                        var checkID = parseInt(item.grvNum);\r\n                        var computeID = Math.max(checkID) +1;\r\n                        this.setState({\r\n                            grvNum:computeID,\r\n                            \r\n                        })\r\n                        return 'ok'\r\n                    })\r\n                }\r\n                \r\n            },1000);\r\n            \r\n        })\r\n\r\n        fetch(`${getvendorUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                vendorData:data,\r\n            \r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        \r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n        \r\n\r\n       \r\n       \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default stockIn;","import React, { Component } from 'react';\r\nimport Storelogin from '../Storelogin';\r\nimport '../Reception/Reception.css';\r\nimport 'react-responsive-modal/styles.css';\r\nimport DatePicker from 'react-datepicker';\r\nimport addDays from 'date-fns/addDays';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst stockInCategoryUrl= \"https://zarvichdemo.localto.net/storeTran\";\r\nconst stockOutCategoryUrl= \"https://zarvichdemo.localto.net/stockOutNow\";\r\n\r\nconst storeCategoriesUrl= \"https://zarvichdemo.localto.net/storeTypes\";\r\nconst allRegProds= \"https://zarvichdemo.localto.net/products\"\r\nconst deptUrl= \"https://zarvichdemo.localto.net/issueDepts\";\r\n\r\nconst userName = \"https://zarvichdemo.localto.net/storeUserInfo\";\r\n\r\n\r\n\r\nclass StoreReport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>> inside GrpCobtructor\", props)\r\n\r\n        this.state = {\r\n            AllOpeningstock:'',\r\n            AllClosingstock:'',\r\n\r\n            CategoryOpeningstock:'',\r\n            CategoryClosingstock:'',\r\n            CatStInQty:'',\r\n            CatStOutQty:'',\r\n            CategoryStockIn:'',\r\n            CategoryStockOut:'',\r\n            categoryName:'',\r\n            categoryData:'',\r\n            \r\n            prodctName:'',\r\n            productStockInData:'',\r\n            productStockOutData:'',\r\n            ProdStInQty:'',\r\n            ProdStOutQty:'',\r\n            productNamesData:'',\r\n\r\n            deptName:'',\r\n            deptStockInData:0,\r\n            deptStockOutData:'',\r\n            // deptStInQty:0,\r\n            deptStOutQty:0,\r\n            deptNamesData:'',\r\n\r\n            startdate:'',\r\n            endDate:'',\r\n            \r\n\r\n            show:'hidden',\r\n            prodshow:'hidden',\r\n            showcategory:'hidden',\r\n            showproductName:'hidden',\r\n            showdeptName:'hidden',\r\n            showdept:'hidden',\r\n\r\n\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n\r\n\r\n           \r\n            \r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n      \r\n\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    cleanupfirst(){\r\n        this.setState({ \r\n            CategoryStockIn:'',\r\n            CatStInQty:'',\r\n            CategoryStockOut:'',\r\n            CatStOutQty:''\r\n            \r\n        })\r\n    }\r\n\r\n    cleanupNow(){\r\n        this.setState({ \r\n            productStockInData:'',\r\n            productStockOutData:'',\r\n            ProdStInQty:'',\r\n            ProdStOutQty:''\r\n           \r\n        })\r\n    }\r\n\r\n    cleanupDept(){\r\n        this.setState({ \r\n            deptStockInData:'',\r\n            deptStockOutData:'',\r\n            // deptStInQty:'',\r\n            deptStOutQty:''\r\n           \r\n        })\r\n    }\r\n\r\n    cleanupAllDept(){\r\n        this.setState({ \r\n            deptStockInData:'',\r\n            deptStockOutData:'',\r\n            // deptStInQty:'',\r\n            deptStOutQty:'',\r\n            showdept:'hidden'\r\n\r\n        })\r\n    }\r\n\r\n    cleanupAll(){\r\n        this.setState({ \r\n            CategoryStockIn:'',\r\n            CatStInQty:'',\r\n            CategoryStockOut:'',\r\n            CatStOutQty:'',\r\n            show:'hidden'\r\n\r\n        })\r\n    }\r\n    \r\n    cleanupAllNow(){\r\n        this.setState({ \r\n            productStockInData:'',\r\n            productStockOutData:'',\r\n            ProdStInQty:'',\r\n            ProdStOutQty:'',\r\n            prodshow:'hidden'\r\n\r\n        })\r\n    }\r\n\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            startdate: date\r\n            \r\n        });\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            endDate: date\r\n        });\r\n    }\r\n\r\n    renderDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.startdate}\r\n                    onChange={this.checkinhandleChange}\r\n                    maxDate={addDays(new Date(),0)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize51 alignText112\"\r\n                    placeholderText='Search Start Date'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderendDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.endDate}\r\n                    onChange={this.endhandleChange}\r\n                    maxDate={(new Date())}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize51\"\r\n                    placeholderText=\"Search End Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleChange=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    findCategory(){\r\n\r\n        var Catstart = moment(this.state.startdate).format('MMM DD YYYY');\r\n        var Catend = moment(this.state.endDate).format('MMM DD YYYY');\r\n        \r\n        var findCatStockIn = `${stockInCategoryUrl}?categoryIn=${this.state.categoryName}&&startDateIn=${Catstart}&&endDateIn=${Catend}`\r\n        var findCatStockOut = `${stockOutCategoryUrl}?category=${this.state.categoryName}&&startDateCat=${Catstart}&&endDateCat=${Catend}`\r\n\r\n        fetch(`${findCatStockIn}`, {method: 'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n\r\n            this.setState({CategoryStockIn:data});\r\n\r\n            var CatStockInQty = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.productValue)\r\n            }, 0);\r\n            this.setState({CatStInQty:CatStockInQty});\r\n        })\r\n\r\n        fetch(`${findCatStockOut}`, {method: 'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n\r\n            this.setState({CategoryStockOut:data});\r\n\r\n            var CatStockOutQty = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.productIssueValue)\r\n            }, 0);\r\n            this.setState({CatStOutQty:CatStockOutQty});\r\n        })\r\n        this.setState({show:'visible'})\r\n\r\n    }\r\n\r\n    findProduct(){\r\n\r\n        var Prodstart = moment(this.state.startdate).format('MMM DD YYYY');\r\n        var Prodend = moment(this.state.endDate).format('MMM DD YYYY');\r\n        \r\n        var findProdStockIn = `${stockInCategoryUrl}?prodName=${this.state.prodctName}&&startDateInProd=${Prodstart}&&endDateInProd=${Prodend}`\r\n        var findProdStockOut = `${stockOutCategoryUrl}?prodOutName=${this.state.prodctName}&&startDateProd=${Prodstart}&&endDateProd=${Prodend}`\r\n\r\n        fetch(`${findProdStockIn}`, {method: 'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n\r\n            this.setState({productStockInData:data});\r\n\r\n            var ProdStockInQty = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.productValue)\r\n            }, 0);\r\n            this.setState({ProdStInQty:ProdStockInQty});\r\n        })\r\n\r\n        fetch(`${findProdStockOut}`, {method: 'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n\r\n            this.setState({productStockOutData:data});\r\n\r\n            var prodStockOut = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.productIssueValue)\r\n            }, 0);\r\n            this.setState({ProdStOutQty:prodStockOut});\r\n        })\r\n        this.setState({prodshow:'visible'})\r\n\r\n    }\r\n\r\n    findDept(){\r\n\r\n        var start = moment(this.state.startdate).format('MMM DD YYYY');\r\n        var end = moment(this.state.endDate).format('MMM DD YYYY');\r\n        \r\n        var findDeptStockOut = `${stockOutCategoryUrl}?deptOutName=${this.state.deptName}&&startDateDept=${start}&&endDateDept=${end}`\r\n\r\n        \r\n        fetch(`${findDeptStockOut}`, {method: 'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n\r\n            this.setState({deptStockOutData:data});\r\n\r\n            var deptStockOut = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.productIssueValue)\r\n            }, 0);\r\n            this.setState({deptStOutQty:deptStockOut});\r\n        })\r\n        this.setState({showdept:'visible'})\r\n\r\n    }\r\n\r\n    showCat(){\r\n        \r\n        this.setState({\r\n            showproductName:'hidden',\r\n            showdeptName:'hidden',\r\n            showcategory:'visible',\r\n            deptStockInData:'',\r\n            deptStockOutData:'',\r\n            // deptStInQty:'',\r\n            deptStOutQty:'',\r\n            showdept:'hidden',\r\n            productStockInData:'',\r\n            productStockOutData:'',\r\n            ProdStInQty:'',\r\n            ProdStOutQty:'',\r\n            categoryName:'',\r\n            prodctName:'',\r\n            deptName:'',\r\n            prodshow:'hidden',\r\n            startdate:'',\r\n            endDate:''\r\n            \r\n\r\n        })\r\n       \r\n        \r\n    }\r\n\r\n    showProd(){\r\n        \r\n        this.setState({\r\n            showcategory:'hidden',\r\n            showdeptName:'hidden',\r\n            showproductName:'visible',\r\n            CategoryStockIn:'',\r\n            CatStInQty:'',\r\n            CategoryStockOut:'',\r\n            CatStOutQty:'',\r\n            show:'hidden',\r\n            deptStockInData:'',\r\n            deptStockOutData:'',\r\n            // deptStInQty:'',\r\n            deptStOutQty:'',\r\n            categoryName:'',\r\n            prodctName:'',\r\n            deptName:'',\r\n            showdept:'hidden',\r\n            startdate:'',\r\n            endDate:''\r\n           \r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    showdept(){\r\n        this.setState({\r\n            showcategory:'hidden',\r\n            showproductName:'hidden',\r\n            showdeptName:'visible',\r\n            CategoryStockIn:'',\r\n            CatStInQty:'',\r\n            CategoryStockOut:'',\r\n            CatStOutQty:'',\r\n            show:'hidden',\r\n            productStockInData:'',\r\n            productStockOutData:'',\r\n            ProdStInQty:'',\r\n            ProdStOutQty:'',\r\n            categoryName:'',\r\n            prodctName:'',\r\n            deptName:'',\r\n            prodshow:'hidden',\r\n            startdate:'',\r\n            endDate:''\r\n        })\r\n    }\r\n\r\n    showNone(){\r\n        this.setState({\r\n            showcategory:'hidden',\r\n            showproductName:'hidden',\r\n            showdeptName:'hidden',\r\n            show:'hidden',\r\n            prodshow:'hidden',\r\n            showdept:'hidden',\r\n            categoryName:'',\r\n            prodctName:'',\r\n            deptName:'',\r\n            startdate:'',\r\n            endDate:''\r\n            \r\n            \r\n           \r\n        })\r\n    }\r\n\r\n\r\n\r\n    renderCategory(data){\r\n        if(data){\r\n            return data.map((item) =>{\r\n                data.sort((a,b)=>a.categoryName - b.categoryName);\r\n                return(\r\n                    <>\r\n                        <option key={item._id} value={item.categoryName}>\r\n                            {item.categoryName} \r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderProductNames(data){\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a,b)=>a.productName - b.productName);\r\n                return(\r\n                    <>\r\n                        <option key={item._id} value={item.productName}>\r\n                            {item.productName} \r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderdeptNames(data){\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a,b)=>a.departmentID - b.departmentID);\r\n                return(\r\n                    <>\r\n                        <option key={item._id} value={item.departmentName}>\r\n                            {item.departmentName} \r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderStockInData=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n                data.sort((a,b)=>a.supplyDate - b.supplyDate);\r\n                var supplyDate = moment(item.supplyDate).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{supplyDate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.productName}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.productUnit}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.qtyIn}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.productPrice}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.productValue}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.vendorName}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.invoiceNum}</td>\r\n                            \r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    renderStockOutData=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n                data.sort((a,b)=>a.transDate - b.transDate);\r\n                var TDate = moment(item.transDate).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{TDate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.productName}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.productUnit}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.qtyOut}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.productCostPrice}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.productIssueValue}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.issueDept}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.productType}</td>\r\n                            \r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log (\">>> Inside Grpdetails\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Storelogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div  className=\"background990ib212\">\r\n                    <br/><br/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-50px'}}>Stock Movement</h4>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h6 style = {{color:'purple',marginLeft:'480px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                        </div>\r\n                    </div>\r\n                    <h4 style = {{color:'rgb(23, 23, 71)',marginLeft:'50px', marginBottom:'-40px'}}> </h4>\r\n\r\n                    <div className=\"formdesign510b\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className='col-4'>\r\n                                    <label>Total Opening Stock</label>\r\n                                    <p className=\"form-control mb-3 formsize51 ikem\" style={{fontSize:'18px'}}><NumberFormat value={parseInt(this.state.AllOpeningstock)}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                </div>\r\n\r\n                                <div className='col-4'>\r\n                                    <label>Total Closing Stock</label>\r\n                                    <p className=\"form-control mb-3 formsize51 ikem\" style={{fontSize:'18px'}}><NumberFormat value={parseInt(this.state.AllOpeningstock) - parseInt(this.state.AllClosingstock)}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                </div>\r\n\r\n                                <div className='col-4'>\r\n                                    <label>Total Cost of Sales</label>\r\n                                    <p className=\"form-control mb-3 formsize51 ikem\" style={{fontSize:'18px'}}><NumberFormat value={parseInt(this.state.AllClosingstock)}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            \r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <center className='mt-3'>\r\n                        <button className=\"btn btn-primary\" onClick={ () => this.showCat()}>Search By Store</button>\r\n                        <button className=\"btn btn-primary space\" onClick={ () => this.showProd()}>Search By Product</button>\r\n                        <button className=\"btn btn-primary space\" onClick={ () => this.showdept()}>Search By Department</button>\r\n                        <button className=\"btn btn-danger space\" onClick={ () => this.showNone()}>Reset</button>\r\n                        <button className=\"btn btn-warning space\" onClick={() => this.props.history.push('/storeMenu')}>Store Menu</button>\r\n                        <button className=\"btn btn-warning space\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>\r\n                    </center>\r\n\r\n\r\n                    <div className={this.state.showcategory}>\r\n                    <div className='searchOptions'>\r\n                        <div className=\"formdesign510b212\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className='col-4'>\r\n                                        <label>Select Store</label>\r\n                                        <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"categoryName\" value={this.state.categoryName} list=\"category\" onChange={this.handleChange}/>\r\n                                        <datalist id=\"category\">\r\n                                            {this.renderCategory(this.state.categoryData)}\r\n                                        </datalist>\r\n                                    </div>\r\n                                    \r\n                                    <div className='col-4'>\r\n                                        <label><label>Search Start Date</label></label>\r\n                                            {this.renderDate(this.state.startdate)}\r\n                                        \r\n                                    \r\n                                        \r\n                                    </div>\r\n                                    <div className='col-4'>\r\n                                        <label>Search End Date</label>\r\n                                        {this.renderendDate(this.state.endDate)}\r\n                                        \r\n                                    </div>\r\n                                    \r\n                                    \r\n                                </div>\r\n                                \r\n                            </div>\r\n                            <center>\r\n                                <button className=\"btn btn-primary\" onClick={ () => {this.cleanupfirst();this.findCategory()}}>Search</button>\r\n                                <button className=\"btn btn-danger space\" onClick={ () => {this.cleanupAll()}}>Reset</button>\r\n                            </center>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className={this.state.showproductName}>\r\n                    <div className='searchPlacement'>\r\n                        <div className=\"formdesign510b212\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className='col-4'>\r\n                                        <label>Select Product</label>\r\n                                        <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"prodctName\" value={this.state.prodctName} list=\"product\" onChange={this.handleChange}/>\r\n                                        <datalist id=\"product\">\r\n                                            {this.renderProductNames(this.state.productNamesData)}\r\n                                        </datalist>\r\n                                    </div>\r\n                                    \r\n                                    <div className='col-4'>\r\n                                        <label><label>Search Start Date</label></label>\r\n                                            {this.renderDate(this.state.startdate)}\r\n                                        \r\n                                    \r\n                                        \r\n                                    </div>\r\n                                    <div className='col-4'>\r\n                                        <label>Search End Date</label>\r\n                                        {this.renderendDate(this.state.endDate)}\r\n                                        \r\n                                    </div>\r\n                                    \r\n                                    \r\n                                </div>\r\n                                \r\n                            </div>\r\n                            <center>\r\n                                <button className=\"btn btn-primary\" onClick={ () => {this.cleanupNow();this.findProduct()}}>Search</button>\r\n                                <button className=\"btn btn-danger space\" onClick={ () => {this.cleanupAllNow()}}>Reset</button>\r\n                            </center>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className={this.state.showdeptName}>\r\n                    <div className='searchPlacement'>\r\n                        <div className=\"formdesign510b212\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className='col-4'>\r\n                                        <label>Select Department</label>\r\n                                        <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"deptName\" value={this.state.deptName} list=\"departments\" onChange={this.handleChange}/>\r\n                                        <datalist id=\"departments\">\r\n                                            {this.renderdeptNames(this.state.deptNamesData)}\r\n                                        </datalist>\r\n                                    </div>\r\n                                    \r\n                                    <div className='col-4'>\r\n                                        <label><label>Search Start Date</label></label>\r\n                                            {this.renderDate(this.state.startdate)}\r\n                                        \r\n                                    \r\n                                        \r\n                                    </div>\r\n                                    <div className='col-4'>\r\n                                        <label>Search End Date</label>\r\n                                        {this.renderendDate(this.state.endDate)}\r\n                                        \r\n                                    </div>\r\n                                    \r\n                                    \r\n                                </div>\r\n                                \r\n                            </div>\r\n                            <center>\r\n                                <button className=\"btn btn-primary\" onClick={ () => {this.cleanupDept();this.findDept()}}>Search</button>\r\n                                <button className=\"btn btn-danger space\" onClick={ () => {this.cleanupAllDept()}}>Reset</button>\r\n                            </center>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className={this.state.show}>\r\n                    <div className=\"formdesign510b212 detailoption\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className='col-4'>\r\n                                    <label>{this.state.categoryName} Opening Stock</label>\r\n                                    <p className=\"form-control mb-3 formsize51 ikem\" style={{fontSize:'18px'}}><NumberFormat value={parseInt(this.state.CatStInQty)}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                </div>\r\n\r\n                                <div className='col-4'>\r\n                                    <label>{this.state.categoryName} Closing Stock</label>\r\n                                    <p className=\"form-control mb-3 formsize51 ikem\" style={{fontSize:'18px'}}><NumberFormat value={parseInt(this.state.CatStInQty) - parseInt(this.state.CatStOutQty)}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                </div>\r\n\r\n                                <div className='col-4'>\r\n                                    <label>{this.state.categoryName} Cost of Sales</label>\r\n                                    <p className=\"form-control mb-3 formsize51 ikem\" style={{fontSize:'18px'}}><NumberFormat value={parseInt(this.state.CatStOutQty)}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            \r\n                        </div>\r\n                        \r\n                        <hr/>\r\n                        <h6>{this.state.categoryName} Supply</h6>\r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust50\">Supply Date</th>\r\n                                <th className=\"adjust50\">Product Name</th>\r\n                                <th className=\"adjust50\">Product Unit</th>\r\n                                <th className=\"adjust50\">Qty Supplied</th>\r\n                                <th className=\"adjust50\">Cost Price</th>\r\n                                <th className=\"adjust50\">Value</th>\r\n                                <th className=\"adjust50\">Vendor</th>\r\n                                <th className=\"adjust50\">Inv No.</th>\r\n                                \r\n                                \r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.renderStockInData(this.state.CategoryStockIn)}\r\n                                \r\n                            </tbody>\r\n                        </table>\r\n                        <b><p style={{textAlign:'center'}}>Total: <NumberFormat value={this.state.CatStInQty}thousandSeparator={true}displayType={\"text\"}/></p></b>\r\n                        <hr/>\r\n                        <h6>{this.state.categoryName} Issue</h6>\r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust50\">Issue Date</th>\r\n                                <th className=\"adjust50\">Product Name</th>\r\n                                <th className=\"adjust50\">Product Unit</th>\r\n                                <th className=\"adjust50\">Qty Issued</th>\r\n                                <th className=\"adjust50\">Cost Price</th>\r\n                                <th className=\"adjust50\">Value</th>\r\n                                <th className=\"adjust50\">Issue Dept</th>\r\n                                <th className=\"adjust50\">Product Type</th>\r\n                              \r\n                                \r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.renderStockOutData(this.state.CategoryStockOut)}\r\n                            </tbody>\r\n                        </table>\r\n                        <b><p style={{textAlign:'center'}}>Total: <NumberFormat value={this.state.CatStOutQty}thousandSeparator={true}displayType={\"text\"}/></p></b>\r\n\r\n\r\n                        \r\n                    </div>\r\n                    </div>\r\n\r\n                   \r\n                    <div className={this.state.prodshow}>\r\n                    <div className=\"formdesign510b212 detailplacement\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className='col-4'>\r\n                                    <label>{this.state.prodctName} Opening Stock</label>\r\n                                    <p className=\"form-control mb-3 formsize51 ikem\" style={{fontSize:'18px'}}><NumberFormat value={parseInt(this.state.ProdStInQty)}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                </div>\r\n\r\n                                <div className='col-4'>\r\n                                    <label>{this.state.prodctName} Closing Stock</label>\r\n                                    <p className=\"form-control mb-3 formsize51 ikem\" style={{fontSize:'18px'}}><NumberFormat value={parseInt(this.state.ProdStInQty) - parseInt(this.state.ProdStOutQty)}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                </div>\r\n\r\n                                <div className='col-4'>\r\n                                    <label>{this.state.prodctName} Cost of Sales</label>\r\n                                    <p className=\"form-control mb-3 formsize51 ikem\" style={{fontSize:'18px'}}><NumberFormat value={parseInt(this.state.ProdStOutQty)}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            \r\n                        </div>\r\n                        \r\n                        <hr/>\r\n                        <h6>{this.state.prodctName} Supply</h6>\r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust50\">Supply Date</th>\r\n                                <th className=\"adjust50\">Product Name</th>\r\n                                <th className=\"adjust50\">Product Unit</th>\r\n                                <th className=\"adjust50\">Qty Supplied</th>\r\n                                <th className=\"adjust50\">Cost Price</th>\r\n                                <th className=\"adjust50\">Value</th>\r\n                                <th className=\"adjust50\">Vendor</th>\r\n                                <th className=\"adjust50\">Inv No.</th>\r\n                                \r\n                                \r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.renderStockInData(this.state.productStockInData)}\r\n                                \r\n                            </tbody>\r\n                        </table>\r\n                        <b><p style={{textAlign:'center'}}>Total: <NumberFormat value={this.state.ProdStInQty}thousandSeparator={true}displayType={\"text\"}/></p></b>\r\n                        <hr/>\r\n                        <h6>{this.state.prodctName} Issue</h6>\r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust50\">Issue Date</th>\r\n                                <th className=\"adjust50\">Product Name</th>\r\n                                <th className=\"adjust50\">Product Unit</th>\r\n                                <th className=\"adjust50\">Qty Issued</th>\r\n                                <th className=\"adjust50\">Cost Price</th>\r\n                                <th className=\"adjust50\">Value</th>\r\n                                <th className=\"adjust50\">Issue Dept</th>\r\n                                <th className=\"adjust50\">Product Type</th>\r\n                              \r\n                                \r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.renderStockOutData(this.state.productStockOutData)}\r\n                            </tbody>\r\n                        </table>\r\n                        <b><p style={{textAlign:'center'}}>Total: <NumberFormat value={this.state.ProdStOutQty}thousandSeparator={true}displayType={\"text\"}/></p></b>\r\n\r\n\r\n                        \r\n                    </div>\r\n                    </div>\r\n\r\n\r\n                    <div className={this.state.showdept}>\r\n                    <div className=\"formdesign510b212 detailplacement\">\r\n                        <div className=\"container\">\r\n                           \r\n                            <div className=\"row\">\r\n                                {/* <div className='col-4'>\r\n                                    <label>Department Opening Stock</label>\r\n                                    <p className=\"form-control mb-3 formsize51 ikem\" style={{fontSize:'18px'}}><NumberFormat value={parseInt(this.state.deptStInQty)}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                </div>\r\n\r\n                                <div className='col-4'>\r\n                                    <label>Department Closing Stock</label>\r\n                                    <p className=\"form-control mb-3 formsize51 ikem\" style={{fontSize:'18px'}}><NumberFormat value={parseInt(this.state.deptStInQty) - parseInt(this.state.deptStOutQty)}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                </div> */}\r\n                                \r\n                                <center>\r\n                                <div className='col-4'>\r\n                                    <label>{this.state.deptName} Cost of Sales</label>\r\n                                    <p className=\"form-control mb-3 formsize51 ikem\" style={{fontSize:'18px'}}><NumberFormat value={parseInt(this.state.deptStOutQty)}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                </div>\r\n                                </center>\r\n                                \r\n                            </div>\r\n                            \r\n                        </div>\r\n                       \r\n                        \r\n                        {/* <hr/>\r\n                        <h6>Products Supply</h6>\r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust50\">Supply Date</th>\r\n                                <th className=\"adjust50\">Product Name</th>\r\n                                <th className=\"adjust50\">Product Unit</th>\r\n                                <th className=\"adjust50\">Qty Supplied</th>\r\n                                <th className=\"adjust50\">Cost Price</th>\r\n                                <th className=\"adjust50\">Value</th>\r\n                                <th className=\"adjust50\">Vendor</th>\r\n                                <th className=\"adjust50\">Remark</th>\r\n                                \r\n                                \r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.renderStockInData(this.state.deptStockInData)}\r\n                                \r\n                            </tbody>\r\n                        </table>\r\n                        <b><p style={{textAlign:'center'}}>Total: <NumberFormat value={this.state.deptStOutQty}thousandSeparator={true}displayType={\"text\"}/></p></b> */}\r\n                        <hr/>\r\n                        <h6>{this.state.deptName}  Issue</h6>\r\n                        <table className=\"table table-hover\">\r\n                            <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust50\">Issue Date</th>\r\n                                <th className=\"adjust50\">Product Name</th>\r\n                                <th className=\"adjust50\">Product Unit</th>\r\n                                <th className=\"adjust50\">Qty Issued</th>\r\n                                <th className=\"adjust50\">Cost Price</th>\r\n                                <th className=\"adjust50\">Value</th>\r\n                                <th className=\"adjust50\">Issue Dept</th>\r\n                                <th className=\"adjust50\">Product Type</th>\r\n                              \r\n                                \r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.renderStockOutData(this.state.deptStockOutData)}\r\n                            </tbody>\r\n                        </table>\r\n                        <b><p style={{textAlign:'center'}}>Total: <NumberFormat value={this.state.deptStOutQty}thousandSeparator={true}displayType={\"text\"}/></p></b>\r\n\r\n\r\n                        \r\n                    </div>\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n                \r\n               \r\n            </>\r\n                \r\n            \r\n            \r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\">>> Inside GrpDidMount\", this.state);\r\n        \r\n        fetch(`${stockInCategoryUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            \r\n            var AllStockinValue = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.productValue)\r\n            }, 0);\r\n            \r\n            this.setState({AllOpeningstock:AllStockinValue});\r\n                \r\n        })\r\n\r\n        fetch(`${stockOutCategoryUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n\r\n            var AllStockOutValue = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.productIssueValue)\r\n            }, 0);\r\n            this.setState({AllClosingstock:AllStockOutValue});\r\n \r\n        })\r\n\r\n        fetch(`${storeCategoriesUrl}`, {method: 'GET'})\r\n        .then((res)=> res.json())\r\n        .then((data) => {\r\n            this.setState({categoryData:data})\r\n            \r\n        })\r\n\r\n        fetch(`${allRegProds}`, {method: 'GET'})\r\n        .then((res)=> res.json())\r\n        .then((data) => {\r\n            this.setState({productNamesData:data})\r\n            \r\n        })\r\n\r\n        fetch(`${deptUrl}`, {method: 'GET'})\r\n        .then((res)=> res.json())\r\n        .then((data) => {\r\n            this.setState({deptNamesData:data})\r\n            \r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default StoreReport;","import React, { Component } from 'react';\r\nimport 'react-responsive-modal/styles.css';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport './Bar/BarReport.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst userLogin = \"https://zarvichdemo.localto.net/adminUserInfo?admincode=\";\r\nconst userName = \"https://zarvichdemo.localto.net/adminUserInfo\";\r\n\r\n\r\n\r\nclass AdLogin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\">>> inside loginConstructor\", props)\r\n       \r\n        this.state = {\r\n            login: false,\r\n            userInfo:'',\r\n            userPassword:'',\r\n            authPassword:'',\r\n            selectUserName:'',\r\n            shift:'',\r\n            \r\n        };\r\n        \r\n    }\r\n\r\n    login(){\r\n        fetch(`${userLogin}${this.state.userPassword}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({userInfo:data})\r\n           \r\n            this.myTimer = setTimeout(() => {\r\n                if(this.state.userInfo.length>0){\r\n                    this.setState({\r\n                        login: false\r\n                        \r\n                    })\r\n                    window.location.reload();\r\n                    data.map((item) =>{\r\n                        localStorage.setItem('userInfo',item.name);\r\n                        localStorage.setItem('shift',this.state.shift);\r\n                        return 'ok'\r\n                    })\r\n                }\r\n            },1000)\r\n           \r\n        })\r\n\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseModallogin(){\r\n        this.setState({\r\n            login: true\r\n        })\r\n        \r\n    }\r\n\r\n    render() {\r\n        console.log (\">>> Inside logindetails\", this.state)\r\n        return (\r\n            <>\r\n                <Modal open={this.state.login} onClose={()=>this.onCloseModallogin()} center>\r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Login First</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <input type=\"password\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"userPassword\" require placeholder=\"Enter password\" value={this.state.userPassword} onChange={this.handleChange}/>\r\n                                    <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"shift\" require placeholder=\"Select Shift\" value={this.state.shift} list=\"shift\"  onChange={this.handleChange}/>\r\n                                    <datalist id=\"shift\">\r\n                                        <option value = \"Morning Shift\"></option>\r\n                                        <option value = \"Night Shift\"></option>\r\n                                        <option value = \"All Day\"></option>\r\n                                    </datalist>\r\n                                    <button disabled = {this.state.userPassword===''||this.state.shift===''} className=\"btn btn-warning formsize91\" onClick={()=>this.login()}>Login</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n        \r\n    componentDidMount() {\r\n        console.log(\">>> Inside loginDidMount\", this.state)\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                selectUserName:data,\r\n                login: true\r\n            \r\n            });\r\n            \r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default AdLogin;","import React,{Component} from 'react';\r\nimport '../HouseKeeping/Housekeeping.css';\r\nimport Adlogin from '../Adlogin';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst userName = \"https://zarvichdemo.localto.net/fofUserInfo\";\r\n\r\n\r\nclass Modules extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n        }\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n    render() {\r\n        \r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Adlogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        return(\r\n            <>\r\n                <div className=\"background15kmenu\">\r\n                                      \r\n                    <center>\r\n                        <div className=\"formdesign15kmenu\">\r\n                            <h4 className=\"mb-3\">App Menu</h4>\r\n                            \r\n                            <div className=\"grow\">\r\n                            \r\n                                <center>\r\n                                    \r\n                                    <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/roomchart')}}>Reception</button>\r\n                                    <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/BillingMenu')}}>Billing</button>\r\n                                    <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/RestPortal')}}>Restaurant</button>\r\n                                    <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/BarPortal')}}>Bar</button>\r\n                                    <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/PoolBarPortal')}}>Pool Bar</button>\r\n                                    <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/MobilePoolBar')}}>Mobile PoolBar</button>\r\n                                    <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/ClubPortal')}}>Club</button>\r\n                                    <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/hskPortal')}}>HouseKeeping</button>\r\n                                    <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/FandBMenu')}}>F and B</button>\r\n                                    <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/storeMenu')}}>Central Store</button>\r\n                                    <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Sales Manager</button>\r\n                                    <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/Settings')}}>Settings</button>\r\n                                    <button className=\"btn btn-warning btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>\r\n                                    <button className=\"btn btn-danger btnwidth15 mb-3\" onClick={ ()=> this.logout()}>\r\n                                        Log Out {localStorage.getItem('userInfo').split(' ')[0]}\r\n                                    </button>\r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                         \r\n\r\n                     </center>\r\n                   \r\n                </div>\r\n            </>\r\n           \r\n\r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n       \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n        this.myTimer = setTimeout(() => {\r\n            fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n            \r\n        },1000);\r\n\r\n\r\n       \r\n            \r\n       \r\n\r\n        \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Modules;\r\n","import React, { Component } from 'react';\r\nimport Storelogin from '../Storelogin';\r\nimport '../Reception/Reception.css';\r\nimport DatePicker from 'react-datepicker';\r\nimport addDays from 'date-fns/addDays';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst allStoreCategories= \"https://zarvichdemo.localto.net/storeTypes\";\r\nconst allRegProds= \"https://zarvichdemo.localto.net/products?getcategoryName=\";\r\nconst allRegProdNames= \"https://zarvichdemo.localto.net/products?getproductName=\";\r\nconst getProductDetails= \"https://zarvichdemo.localto.net/storeTran?tranProdName=\";\r\nconst getLatestPrice= \"https://zarvichdemo.localto.net/storeTran?grvNumber=\";\r\nconst getAllStockOut= \"https://zarvichdemo.localto.net/stockOutNow?sivProdName=\";\r\nconst getAllDepts= \"https://zarvichdemo.localto.net/issueDepts\";\r\nconst postStockIssue= \"https://zarvichdemo.localto.net/postStockOut\";\r\nconst postToInnerBar= \"https://zarvichdemo.localto.net/InnerBarSend\";\r\nconst postToPoolBar= \"https://zarvichdemo.localto.net/PoolBarSend\";\r\nconst postToClub= \"https://zarvichdemo.localto.net/ClubSend\";\r\nconst postToRestBar= \"https://zarvichdemo.localto.net/RestBarSend\";\r\nconst postToOpenBar= \"https://zarvichdemo.localto.net/OpenBarSend\";\r\nconst getDrinkCategory = \"https://zarvichdemo.localto.net/drinkCategories?drinkType=\";\r\n\r\n\r\nconst userName = \"https://zarvichdemo.localto.net/storeUserInfo\";\r\n\r\nclass stockOut extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>> inside GrpCobtructor\", props)\r\n\r\n        this.state = {\r\n            _id:Math.floor(Math.random()*10000000),\r\n            categoryName:'',\r\n            productName:'',\r\n            productUnit:'',\r\n            productType:'',\r\n            productTypeData:'',\r\n            productTypeID:'',\r\n            pieces:'',\r\n            productPrice:'',\r\n            productSellingPrice:'',\r\n            totalIn:0,\r\n            totalOut:0,\r\n            totalProductBalance:0,\r\n            \r\n            sivNum:'',\r\n            issueDept:'',\r\n            qtyOut:'',\r\n            productIssueValue:0,\r\n            transDate:new Date(),\r\n                        \r\n            categoryData:'',\r\n            productNamesData:'',\r\n            productDetailsData:'',\r\n            stockOutData:'',\r\n            issueDeptsData:'',\r\n            \r\n            edit: false,\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            piecesData:[{_id:'1001', quantity:1},{_id:'1002', quantity:2},{_id:'1003', quantity:4},{_id:'1004', quantity:6},{_id:'1005', quantity:12},{_id:'1006', quantity:24},{_id:'1007', quantity:48}],\r\n            piecesCalculated:0,\r\n\r\n            issueProduct:'Issue Product'\r\n            \r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n\r\n    }\r\n\r\n\r\n    onOpenModaledit(){\r\n        this.setState({\r\n            edit:true\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseModaledit(){\r\n        this.setState({\r\n            edit:false\r\n            \r\n        })\r\n        \r\n    }\r\n\r\n\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            invoiceDate: date\r\n        });\r\n    }\r\n\r\n    rendercheckinDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.invoiceDate}\r\n                    onChange={this.checkinhandleChange}\r\n                    maxDate={addDays(new Date(),1)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    placeholderText=\"Invoice Date\"\r\n                    className=\"form-control mb-3 formsize51\"\r\n                    \r\n                    \r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n    \r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    handleChangeA = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        var calcu = event.target.value * this.state.qtyOut;\r\n        this.setState({piecesCalculated:calcu});\r\n    \r\n        \r\n    }\r\n\r\n\r\n    handleChange2 = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n        fetch(`${allRegProds}${event.target.value}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n           this.setState({productNamesData:data})\r\n           \r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleChange12 = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n        fetch(`${getDrinkCategory}${event.target.value}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({productTypeID:item.mealTypeID})\r\n                return 'ok'\r\n            })\r\n           \r\n           \r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n    handleChange4= (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n        var issueProdVal = 0;\r\n        var totProdVal = issueProdVal + parseInt(this.state.productPrice) * parseInt(event.target.value) * parseInt(this.state.pieces);\r\n        this.setState({productIssueValue:totProdVal})\r\n\r\n        var calcu = event.target.value * this.state.pieces;\r\n        this.setState({piecesCalculated:calcu});\r\n    }\r\n    \r\n    handleChange3 = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n        fetch(`${getProductDetails}${event.target.value}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n           this.setState({productDetailsData:data})\r\n\r\n           var totalQtyIn = data.map(item => item).reduce((totals, item) =>{\r\n            return totals + parseInt(item.qtyIn)\r\n            }, 0);\r\n            this.setState({totalIn:totalQtyIn})\r\n\r\n        })\r\n       \r\n\r\n        this.myTimer = setTimeout(() => {\r\n            var ProdData = this.state.productDetailsData;\r\n            ProdData.map((item)=>{\r\n                \r\n                var grvCode = item.grvNum;\r\n                var checkID = parseInt(grvCode);\r\n                var computeID = Math.max(checkID);\r\n                \r\n                fetch(`${getLatestPrice}${computeID}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    data.map((item)=>{\r\n                        this.setState({\r\n                            productPrice:item.productPrice,\r\n                            productUnit:item.productUnit,\r\n                            \r\n                        })\r\n                        return 'ok'\r\n                    })\r\n                   \r\n                   \r\n                })\r\n                return 'ok'\r\n            })\r\n           \r\n\r\n        },1000)\r\n\r\n        fetch(`${getAllStockOut}${event.target.value}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n\r\n            var totalQtyOut = data.map(item => item).reduce((totals, item) =>{\r\n            return totals + parseInt(item.qtyOut)\r\n            }, 0);\r\n            this.setState({totalOut:totalQtyOut})\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n            var allQty = 0;\r\n            var totalBalance = allQty + parseInt(this.state.totalIn) - parseInt(this.state.totalOut);\r\n            this.setState({totalProductBalance:totalBalance})\r\n\r\n            if(this.state.totalProductBalance===0){\r\n                this.setState({issueProduct:'Out of Stock'})\r\n            }\r\n            else{\r\n                this.setState({issueProduct:'Issue Product'})\r\n            }\r\n\r\n\r\n        },1000)\r\n\r\n        fetch(`${allRegProdNames}${event.target.value}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    productType:item.productType,\r\n                    productSellingPrice:item.productSellingPrice,\r\n                    productTypeID:item.productTypeID,\r\n                    pieces:item.pieces\r\n    \r\n                })\r\n                return 'ok'\r\n            })\r\n        })\r\n       \r\n\r\n    }\r\n   \r\n\r\n    renderCategory(data){\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a,b)=>a.categoryName - b.categoryName);\r\n                return(\r\n                    <>\r\n                         <option key={item._id} value={item.categoryName}>\r\n                            {item.categoryName} \r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderProductType(data){\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a,b)=>a.mealType - b.mealType);\r\n                return(\r\n                    <>\r\n                         <option key={item._id} value={item.mealType}>\r\n                            {item.mealType} \r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    renderPieces(data){\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a,b)=>a.quantity - b.quantity);\r\n                return(\r\n                    <>\r\n                         <option key={item._id} value={item.quantity}>\r\n                            {item.quantity}\r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderProductNames(data){\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a,b)=>a.productName - b.productName);\r\n                return(\r\n                    <>\r\n                         <option key={item._id} value={item.productName}>\r\n                            {item.productName} \r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    renderIssueDepts(data){\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a,b)=>a.departmentName - b.departmentName);\r\n                return(\r\n                    <>\r\n                         <option key={item._id} value={item.departmentName}>\r\n                            {item.departmentName} \r\n                        </option>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    async handleSubmit() {\r\n       \r\n        try {\r\n            \r\n            var finddeptID = this.state.stockOutData;\r\n            var founddeptID = this.state.sivNum\r\n\r\n            var deptDatapost = {\r\n                _id:`${this.state._id}`,\r\n                categoryName:`${this.state.categoryName}`,\r\n                productName:`${this.state.productName}`,\r\n                productUnit:`${this.state.productUnit}`,\r\n                productType:`${this.state.productType}`,\r\n                productTypeID:`${this.state.productTypeID}`,\r\n                productCostPrice:`${this.state.productPrice}`,\r\n                productSellingPrice:`${this.state.productSellingPrice}`,\r\n                sivNum:`${this.state.sivNum}`,\r\n                issueDept:`${this.state.issueDept}`,\r\n                qtyOut:`${this.state.qtyOut}`,\r\n                piecesOut:`${this.state.piecesCalculated}`,\r\n                productIssueValue:`${this.state.productIssueValue}`,\r\n                transDate:moment(`${this.state.transDate}`).format('MMM DD YYYY'),\r\n                pieces:`${this.state.pieces}`,\r\n                name:localStorage.getItem('userInfo')\r\n               \r\n            }\r\n\r\n            var POSStore = {\r\n                _id:`${this.state._id}`,\r\n                categoryName:`${this.state.categoryName}`,\r\n                productName:`${this.state.productName}`,\r\n                productUnit:`${this.state.productUnit}`,\r\n                productType:`${this.state.productType}`,\r\n                productTypeID:parseInt(`${this.state.productTypeID}`),\r\n                productIssueValue:`${this.state.productIssueValue}`,\r\n                productSellingPrice:`${this.state.productSellingPrice}`,\r\n                sivNum:`${this.state.sivNum}`,\r\n                qtyOut:`${this.state.qtyOut}`,\r\n                piecesOut:`${this.state.piecesCalculated}`,\r\n                pieces:`${this.state.pieces}`,\r\n                transDate:moment(`${this.state.transDate}`).format('MMM DD YYYY'),\r\n                name:localStorage.getItem('userInfo')\r\n               \r\n            }\r\n\r\n            if(finddeptID.some(item => item.sivNum===founddeptID)){\r\n                alert(this.state.productName+ \" already Issued\");\r\n\r\n                fetch(`${getDrinkCategory}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        productTypeData:data,\r\n                    \r\n                    })\r\n                    \r\n                })\r\n\r\n                fetch(`${getAllStockOut}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        stockOutData:data,\r\n                    \r\n                    })\r\n        \r\n                    var opening=this.state.stockOutData;\r\n                    var sivCode = 5000000;\r\n        \r\n                    this.myTimer = setTimeout(() => {\r\n                        if(this.state.stockOutData.length===0){\r\n                            \r\n                            var checkID = parseInt(sivCode);\r\n                            var computeID = Math.max(checkID);\r\n                            this.setState({\r\n                                sivNum:computeID\r\n                                \r\n                            })\r\n                                \r\n                            \r\n                        }\r\n                        else{\r\n                            opening.map((item)=>{\r\n                                var checkID = parseInt(item.sivNum);\r\n                                var computeID = Math.max(checkID) +1;\r\n                                this.setState({\r\n                                    sivNum:computeID,\r\n                                    \r\n                                })\r\n                                return 'ok'\r\n                            })\r\n                        }\r\n                        \r\n                    },1000);\r\n                    \r\n                })\r\n                \r\n                this.myTimer = setTimeout(() => {\r\n                    \r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000000),\r\n                       \r\n                        \r\n                    })\r\n                },1000)\r\n               \r\n            }\r\n\r\n            else{\r\n                let result = await fetch(`${postStockIssue}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        deptDatapost\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                if(this.state.issueDept==='Bar'){\r\n                    let resultI = await fetch(`${postToInnerBar}`, {\r\n                        method: 'post',\r\n            \r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type': 'application/json',\r\n                        },\r\n            \r\n                        body: JSON.stringify(\r\n                            \r\n                            POSStore\r\n                                \r\n                        )\r\n                            \r\n                    });\r\n                    console.log('resultI>  ' + resultI)\r\n                }\r\n\r\n                else if(this.state.issueDept==='Open Bar'){\r\n                    let resultO = await fetch(`${postToOpenBar}`, {\r\n                        method: 'post',\r\n            \r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type': 'application/json',\r\n                        },\r\n            \r\n                        body: JSON.stringify(\r\n                            \r\n                            POSStore\r\n                                \r\n                        )\r\n                            \r\n                    });\r\n                    console.log('resultO>  ' + resultO)\r\n                }\r\n\r\n                else if(this.state.issueDept==='Restaurant Drinks'){\r\n                    let resultRe = await fetch(`${postToRestBar}`, {\r\n                        method: 'post',\r\n            \r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type': 'application/json',\r\n                        },\r\n            \r\n                        body: JSON.stringify(\r\n                            \r\n                            POSStore\r\n                                \r\n                        )\r\n                            \r\n                    });\r\n                    console.log('resultRe>  ' + resultRe)\r\n                }\r\n\r\n\r\n                else if(this.state.issueDept==='PoolBar'){\r\n                    let resultP = await fetch(`${postToPoolBar}`, {\r\n                        method: 'post',\r\n            \r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type': 'application/json',\r\n                        },\r\n            \r\n                        body: JSON.stringify(\r\n                            \r\n                            POSStore\r\n                                \r\n                        )\r\n                            \r\n                    });\r\n                    console.log('resultP>  ' + resultP)\r\n                }\r\n\r\n                else if(this.state.issueDept==='Club'){\r\n                    let resultP = await fetch(`${postToClub}`, {\r\n                        method: 'post',\r\n            \r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-type': 'application/json',\r\n                        },\r\n            \r\n                        body: JSON.stringify(\r\n                            \r\n                            POSStore\r\n                                \r\n                        )\r\n                            \r\n                    });\r\n                    console.log('resultP>  ' + resultP)\r\n                }\r\n                alert(this.state.productName+\" Issued to \"+this.state.issueDept);\r\n                this.setState({\r\n                    categoryName:'',\r\n                    productName:'',\r\n                    productUnit:'',\r\n                    productPrice:'',\r\n                    productType:'',\r\n                    productTypeID:'',\r\n                    totalIn:0,\r\n                    totalOut:0,\r\n                    totalProductBalance:0,\r\n                    sivNum:'',\r\n                    issueDept:'',\r\n                    qtyOut:'',\r\n                    productIssueValue:0,\r\n                    categoryData:'',\r\n                    productNamesData:'',\r\n                    productDetailsData:'',\r\n                    productTypeData:'',\r\n                    stockOutData:'',\r\n                    issueDeptsData:'',\r\n                    pieces:'',\r\n                    productSellingPrice:''\r\n                })\r\n\r\n                fetch(`${allStoreCategories}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        categoryData:data,\r\n                    \r\n                    })\r\n                    \r\n                })\r\n\r\n                fetch(`${getDrinkCategory}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        productTypeData:data,\r\n                    \r\n                    })\r\n                    \r\n                })\r\n\r\n                fetch(`${getAllDepts}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        issueDeptsData:data,\r\n                    \r\n                    })\r\n                    \r\n                })\r\n                \r\n                this.myTimer = setTimeout(() => {\r\n                    \r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000000),\r\n                       \r\n                        \r\n                    })\r\n                },1000)\r\n\r\n                fetch(`${getAllStockOut}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        stockOutData:data,\r\n                    \r\n                    })\r\n        \r\n                    var opening=this.state.stockOutData;\r\n                    var sivCode = 5000000;\r\n        \r\n                    this.myTimer = setTimeout(() => {\r\n                        if(this.state.stockOutData.length===0){\r\n                            \r\n                            var checkID = parseInt(sivCode);\r\n                            var computeID = Math.max(checkID);\r\n                            this.setState({\r\n                                sivNum:computeID\r\n                                \r\n                            })\r\n                                \r\n                            \r\n                        }\r\n                        else{\r\n                            opening.map((item)=>{\r\n                                var checkID = parseInt(item.sivNum);\r\n                                var computeID = Math.max(checkID) +1;\r\n                                this.setState({\r\n                                    sivNum:computeID,\r\n                                    \r\n                                })\r\n                                return 'ok'\r\n                            })\r\n                        }\r\n                        \r\n                    },1000);\r\n                    \r\n                })\r\n\r\n            }\r\n\r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log (\">>> Inside Grpdetails\", this.state)\r\n        \r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Storelogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div  className=\"background990ib\">\r\n                    <br/><br/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-50px'}}>Stock Issue</h4>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h6 style = {{color:'purple',marginLeft:'480px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                        </div>\r\n                    </div>\r\n                    <h4 style = {{color:'rgb(23, 23, 71)',marginLeft:'50px', marginBottom:'-40px'}}> </h4>\r\n\r\n                    <div className=\"formdesign510b\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>Category</label>\r\n                                    <select className=\"form-select  mb-3 formsize51\" name=\"categoryName\" onChange={this.handleChange2}>\r\n                                        <option defaultValue=''>Select Category</option>\r\n                                        {this.renderCategory(this.state.categoryData)}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>Product</label>\r\n                                    <select className=\"form-select  mb-3 formsize51\" name=\"productName\" onChange={this.handleChange3}>\r\n                                        <option defaultValue=''>Select Product</option>\r\n                                        {this.renderProductNames(this.state.productNamesData)}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>Last Supply Price</label>\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\"><NumberFormat value={this.state.productPrice}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>Product Unit</label>\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\">{this.state.productUnit}</p>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>Product Type</label>\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\">{this.state.productType}</p>\r\n                                    \r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>Product ID</label>\r\n                                   <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\">{this.state.productTypeID}</p>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>Selling Price</label>\r\n                                   <p type=\"text\" className=\"form-control mb-3 formsize51 ikem\">{this.state.productSellingPrice}</p>\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    \r\n                                    <label>Pieces per {this.state.productUnit}</label>\r\n                                    <p className=\"form-control mb-3 formsize51 ikem\">{this.state.pieces}</p>\r\n                                       \r\n                                </div>\r\n                               \r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>Total In</label>\r\n                                    <p className=\"form-control mb-3 formsize51 ikem\">{this.state.totalIn}</p>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>SIV Num</label>\r\n                                    <p className=\"form-control mb-3 formsize51 ikem\">{this.state.sivNum}</p>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <label>Departments</label>\r\n                                    <select className=\"form-select  mb-3 formsize51\" name=\"issueDept\" onChange={this.handleChange}>\r\n                                        <option defaultValue=''>Issue Dept.</option>\r\n                                        {this.renderIssueDepts(this.state.issueDeptsData)}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    \r\n                                    <label>Issue Qty</label>\r\n                                    <input type=\"number\" className=\"form-control mb-3 formsize51\" name=\"qtyOut\" require placeholder=\"Issue Qty\" value={this.state.qtyOut} onChange={this.handleChange4}/>\r\n                                \r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-4\">\r\n                                    <label>Product Value</label>\r\n                                    <p className=\"form-control mb-3 formsize51 ikem\"><NumberFormat value={this.state.productIssueValue}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                </div>\r\n\r\n                                <div className=\"col-4\">\r\n                                <label>Total Out</label>\r\n                                <p className=\"form-control mb-3 formsize51 ikem\">{this.state.totalOut}</p>\r\n                                </div>\r\n\r\n                                <div className=\"col-4\">\r\n                                    <label>Total Product Balance</label>\r\n                                    <p className=\"form-control mb-3 formsize51 ikem\">{this.state.totalProductBalance}</p>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <center>\r\n                            <br/>\r\n                                <span>\r\n                                    <button disabled={this.state.productName===''||this.state.productPrice===''||this.state.qtyOut===''|| this.state.issueDept===''||this.state.pieces===''||this.state.totalProductBalance===0} className=\"btn btn-warning\" onClick={ () => this.handleSubmit () } >{this.state.issueProduct}</button>\r\n                                    <button className=\"btn btn-danger gap\" onClick={ () => this.props.history.push('/storeMenu')}>Close</button>\r\n                                    \r\n                                </span>\r\n                            </center>\r\n                           \r\n                            \r\n                        </div>\r\n                        <br/>\r\n                       \r\n                    </div>\r\n                </div>\r\n               \r\n            </>\r\n                \r\n            \r\n            \r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\">>> Inside GrpDidMount\", this.state);\r\n\r\n        fetch(`${getDrinkCategory}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                productTypeData:data,\r\n            \r\n            })\r\n                    \r\n        })\r\n\r\n        fetch(`${allStoreCategories}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                categoryData:data,\r\n            \r\n            })\r\n            \r\n        })\r\n        \r\n\r\n        fetch(`${getAllStockOut}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                stockOutData:data,\r\n            \r\n            })\r\n\r\n            var opening=this.state.stockOutData;\r\n            var sivCode = 5000000;\r\n\r\n            this.myTimer = setTimeout(() => {\r\n                if(this.state.stockOutData.length===0){\r\n                    \r\n                    var checkID = parseInt(sivCode);\r\n                    var computeID = Math.max(checkID);\r\n                    this.setState({\r\n                        sivNum:computeID\r\n                        \r\n                    })\r\n                        \r\n                    \r\n                }\r\n                else{\r\n                    opening.map((item)=>{\r\n                        var checkID = parseInt(item.sivNum);\r\n                        var computeID = Math.max(checkID) +1;\r\n                        this.setState({\r\n                            sivNum:computeID,\r\n                            \r\n                        })\r\n                        return 'ok'\r\n                    })\r\n                }\r\n                \r\n            },1000);\r\n            \r\n        })\r\n\r\n        fetch(`${getAllDepts}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                issueDeptsData:data,\r\n            \r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n       \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default stockOut;","import React,{Component} from 'react';\r\nimport './Dashboard.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport NumberFormat from 'react-number-format';\r\nimport {Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip,} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport CloseButton from 'react-bootstrap/CloseButton';\r\nimport moment from 'moment';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Adlogin from '../Adlogin';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip\r\n    \r\n);\r\n\r\n\r\n// Rooms Transactions Url //\r\nconst occupancyChart = \"https://zarvichdemo.localto.net/getrmstatus\";\r\nconst userName = \"https://zarvichdemo.localto.net/adminUserInfo\";\r\nconst otherSales = \"https://zarvichdemo.localto.net/otherSalesPoints\";\r\nconst guestDeposits = \"https://zarvichdemo.localto.net/GetTmpRmDep\";\r\n\r\n// Restaurant Transactions Url //\r\nconst getRestaurantSales = \"https://zarvichdemo.localto.net/restaurantSales\"; \r\n\r\n// Bar Transactions Url //\r\nconst getBarNow = \"https://zarvichdemo.localto.net/barSales\"; \r\n\r\n// PoolBar Transactions Url //\r\nconst getPoolBarSales = \"https://zarvichdemo.localto.net/poolbarSales\"; \r\n\r\n// Club Transactions Url //\r\nconst getclubSales = \"https://zarvichdemo.localto.net/clubSales\"; \r\n\r\n// Refund Approvals Url \r\n// const getRefundApprovals = \"/getHallReservation\";\r\n\r\n//restaurant tables//\r\nconst getTable = \"https://zarvichdemo.localto.net/restTable\";\r\nconst getTableID = \"https://zarvichdemo.localto.net/restTable?resttableID=\";\r\n\r\n//Active work date//\r\nconst getWorkDate = \"https://zarvichdemo.localto.net/getActive\";\r\n\r\n//bar table //\r\nconst getbarTable = \"https://zarvichdemo.localto.net/barTable\";\r\nconst getbarTableID = \"https://zarvichdemo.localto.net/barTable?tableID=\";\r\n\r\n//PoolBar table //\r\nconst getPoolbarTable = \"https://zarvichdemo.localto.net/poolbarTable\";\r\nconst getPoolbarTableID = \"https://zarvichdemo.localto.net/poolbarTable?tableID=\";\r\n\r\n//Club table //\r\nconst getClubTable = \"https://zarvichdemo.localto.net/getLaundryTables\";\r\nconst getClubTableID = \"https://zarvichdemo.localto.net/getclubTables?tableID=\";\r\n\r\n//delete bar table\r\nconst putToBarTable = \"https://zarvichdemo.localto.net/barTablePost\";\r\n\r\n//delete restaurant table\r\nconst postToTable = \"https://zarvichdemo.localto.net/restaurantTablePost\";\r\n\r\n//delete Poolbar table\r\nconst putToPoolTable = \"https://zarvichdemo.localto.net/poolbarTablePost\";\r\n\r\n//delete Club table\r\nconst putToClubTable = \"https://zarvichdemo.localto.net/laundryTablePost\";\r\nconst roomstatusUrl = \"https://zarvichdemo.localto.net/rmstatus2\";\r\nconst roomsdataUrl = \"https://zarvichdemo.localto.net/rooms?details=\";\r\n\r\nclass NewDashboard extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        console.log(\">>>Inside Constructor\")\r\n\r\n        this.state = {\r\n           \r\n            allOccupied:'',\r\n            allVacant:'',\r\n            allCorporate:'',\r\n            allIndividual:'',\r\n            allStaff:'',\r\n            allComplimentary:'',\r\n            allCheckout:'',\r\n\r\n            \r\n            TotalSales:0,\r\n            POS:0,\r\n            Cash:0,\r\n            Transfer:0,\r\n            Complimentary:0,\r\n            Room:0,\r\n\r\n\r\n            OtherTotalSales:0,\r\n            OtherRoom:0,\r\n            OtherComplimentary:0,\r\n            OtherTransfer:0,\r\n            OtherCash:0,\r\n            OtherPOS:0,\r\n\r\n            ReceptionSales:0,\r\n           \r\n            date:'',\r\n\r\n            RestTotalSales:0,\r\n            RestRoom:0,\r\n            RestComplimentary:0,\r\n            RestTransfer:0,\r\n            RestCash:0,\r\n            RestPOS:0,\r\n           \r\n\r\n            BarTotalSales:0,\r\n            BarRoom:0,\r\n            BarComplimentary:0,\r\n            BarTransfer:0,\r\n            BarCash:0,\r\n            BarPOS:0,\r\n\r\n            PoolTotalSales:0,\r\n            PoolRoom:0,\r\n            PoolComplimentary:0,\r\n            PoolTransfer:0,\r\n            PoolCash:0,\r\n            PoolPOS:0,\r\n\r\n            ClubTotalSales:0,\r\n            ClubRoom:0,\r\n            ClubComplimentary:0,\r\n            ClubTransfer:0,\r\n            ClubCash:0,\r\n            ClubPOS:0,\r\n\r\n            Gtotal:0,\r\n\r\n            \r\n\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n\r\n            labels:['Rooms','Others','Restaurant','PoolBar','Inner Bar', 'Reservation'],\r\n\r\n            showRooms:false,\r\n            showOthers:false,\r\n            showRest:false,\r\n            showPool:false,\r\n            showClub:false,\r\n            showInnerBar:false,\r\n\r\n            resttables:'',\r\n            selected:'',\r\n            cost:'',\r\n            bartables:'',\r\n            poolbartables:'',\r\n            Clubtables:'',\r\n\r\n            roomNum:'',\r\n            roomtypeName:''\r\n\r\n            \r\n\r\n        };\r\n\r\n    }\r\n\r\n    handleRoomShow(){\r\n        this.setState({showRooms:true})\r\n    }\r\n\r\n    handleRoomClose(){\r\n        this.setState({showRooms:false})\r\n    }\r\n\r\n    handleOthersShow(){\r\n        this.setState({showOthers:true})\r\n    }\r\n\r\n    handleOthersClose(){\r\n        this.setState({showOthers:false})\r\n    }\r\n\r\n    handleRestShow(){\r\n        this.setState({showRest:true})\r\n    }\r\n\r\n    handleRestClose(){\r\n        this.setState({showRest:false})\r\n    }\r\n\r\n    handlePoolClose(){\r\n        this.setState({showPool:false})\r\n    }\r\n\r\n    handleClubClose(){\r\n        this.setState({showClub:false})\r\n    }\r\n\r\n    handlePoolShow(){\r\n        this.setState({showPool:true})\r\n    }\r\n\r\n    handleClubShow(){\r\n        this.setState({showClub:true})\r\n    }\r\n\r\n    handleInnerBarClose(){\r\n        this.setState({showInnerBar:false})\r\n    }\r\n\r\n    handleInnerBarShow(){\r\n        this.setState({showInnerBar:true})\r\n    }\r\n\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n                       \r\n        })\r\n\r\n        fetch(`${roomsdataUrl}${event.target.value}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    roomtypeName:item.roomtypeName\r\n                })\r\n                return 'ok'\r\n            });\r\n                        \r\n        })\r\n\r\n    }\r\n\r\n    async RoomReset(){\r\n        try{\r\n\r\n            var roomStatus = {\r\n\r\n                _id:`${this.state.roomNum}`,\r\n                roomNumbers:`${this.state.roomNum}`,\r\n                roomStatus: 'black',\r\n                roomtypeName:`${this.state.roomtypeName}`,\r\n                fname:'',\r\n                lname:'',\r\n                status:'',\r\n                refID:'',\r\n                BillStatus:0,\r\n\r\n            }\r\n\r\n            let result2 = fetch(`${roomstatusUrl}/${this.state.roomNum}`, {\r\n                method:'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                 \r\n                },\r\n                body: JSON.stringify(\r\n                    roomStatus\r\n                )\r\n        \r\n            });\r\n\r\n            console.log('result2> '+ result2)\r\n            alert(\"Room \" +this.state.roomNum +\" Has Been Reset\")\r\n\r\n            this.setState({\r\n                roomNum:'',\r\n                roomtypeName:''\r\n            })\r\n\r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    \r\n    async getTableR() {\r\n          \r\n        try {\r\n            \r\n            var tableID2 = sessionStorage.getItem('tableNumber2');\r\n           \r\n            fetch(`${getTableID}${tableID2}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({\r\n                        selected:item.selected,\r\n                        cost:item.billCost\r\n                       \r\n                       \r\n                    })\r\n                    return 'ok'\r\n                   \r\n                })\r\n                \r\n            })\r\n\r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async getTableB() {\r\n          \r\n        try {\r\n            \r\n            var tableID2 = sessionStorage.getItem('tableNumber3');\r\n           \r\n            fetch(`${getbarTableID}${tableID2}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({\r\n                        selected:item.selected,\r\n                        cost:item.billCost\r\n                       \r\n                       \r\n                    })\r\n                    return 'ok'\r\n                   \r\n                })\r\n                \r\n            })\r\n\r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async getTableP() {\r\n          \r\n        try {\r\n            \r\n            var tableID2 = sessionStorage.getItem('tableNumber3');\r\n           \r\n            fetch(`${getPoolbarTableID}${tableID2}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({\r\n                        selected:item.selected,\r\n                        cost:item.billCost\r\n                       \r\n                       \r\n                    })\r\n                    return 'ok'\r\n                   \r\n                })\r\n                \r\n            })\r\n\r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async getTableC() {\r\n          \r\n        try {\r\n            \r\n            var tableID2 = sessionStorage.getItem('tableNumber3');\r\n           \r\n            fetch(`${getClubTableID}${tableID2}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({\r\n                        selected:item.selected,\r\n                        cost:item.billCost\r\n                       \r\n                       \r\n                    })\r\n                    return 'ok'\r\n                   \r\n                })\r\n                \r\n            })\r\n\r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    \r\n       \r\n    renderOders(data){\r\n        \r\n        if(data) {\r\n            return data.map((item) =>{\r\n               \r\n                return(\r\n                    <>\r\n                        <tr key= {item.id}>\r\n                            {/* <td className=\"table-light table-striped adjust texted8Nw\">{item.id}</td> */}\r\n                            <td className=\"table-light table-striped adjust texted8Nw\">{item.meal}</td>\r\n                            <td className=\"table-light table-striped adjust texted8Nw\">{item.qty}</td>\r\n                            <td className=\"table-light table-striped adjust texted8Nw\"><NumberFormat value={item.mealPrice} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust texted8Nw\"><NumberFormat value={item.mealPrice*item.qty} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    async deleteRest() {\r\n          \r\n        \r\n        try {\r\n            var tableID = sessionStorage.getItem('tableNumber2');\r\n            \r\n            var data = {\r\n                selected:[],\r\n                billCost:\"\",\r\n                tableNum:sessionStorage.getItem('tableNumber2')\r\n            }\r\n\r\n            let result12 = await fetch(`${postToTable}/${tableID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result12>  ' + result12)\r\n\r\n            alert(\"Table Deleted Successfully\")\r\n            this.setState({selected:[]});\r\n            this.setState({cost:0})\r\n            \r\n            sessionStorage.removeItem('tableNumber2')\r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({resttables:data})\r\n            })\r\n           \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async deleteBar() {\r\n          \r\n        \r\n        try {\r\n            var tableID = sessionStorage.getItem('tableNumber3');\r\n            \r\n            var data = {\r\n                selected:[],\r\n                billCost:\"\",\r\n                tableNum:sessionStorage.getItem('tableNumber3')\r\n            }\r\n\r\n            let result12 = await fetch(`${putToBarTable}/${tableID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result12>  ' + result12)\r\n\r\n            alert(\"Table Deleted Successfully\")\r\n            this.setState({selected:[]});\r\n            this.setState({cost:0})\r\n            \r\n            sessionStorage.removeItem('tableNumber3')\r\n\r\n            fetch(`${getbarTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({bartables:data})\r\n            })\r\n           \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async deletePoolBar() {\r\n          \r\n        \r\n        try {\r\n            var tableID = sessionStorage.getItem('tableNumber3');\r\n            \r\n            var data = {\r\n                selected:[],\r\n                billCost:\"\",\r\n                tableNum:sessionStorage.getItem('tableNumber3')\r\n            }\r\n\r\n            let result12 = await fetch(`${putToPoolTable}/${tableID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result12>  ' + result12)\r\n\r\n            alert(\"Table Deleted Successfully\")\r\n            this.setState({selected:[]});\r\n            this.setState({cost:0})\r\n            \r\n            sessionStorage.removeItem('tableNumber3')\r\n\r\n            fetch(`${getPoolbarTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({poolbartables:data})\r\n            })\r\n           \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async deleteClub() {\r\n          \r\n        \r\n        try {\r\n            var tableID = sessionStorage.getItem('tableNumber3');\r\n            \r\n            var data = {\r\n                selected:[],\r\n                billCost:\"\",\r\n                tableNum:sessionStorage.getItem('tableNumber3')\r\n            }\r\n\r\n            let result12 = await fetch(`${putToClubTable}/${tableID}`, {\r\n                method: 'put',\r\n\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n\r\n                body: JSON.stringify(\r\n                    data\r\n                    \r\n                )\r\n                \r\n            });\r\n            console.log('result12>  ' + result12)\r\n\r\n            alert(\"Table Deleted Successfully\")\r\n            this.setState({selected:[]});\r\n            this.setState({cost:0})\r\n            \r\n            sessionStorage.removeItem('tableNumber3')\r\n\r\n            fetch(`${getClubTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({Clubtables:data})\r\n            })\r\n           \r\n                   \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    renderRestTables(data){\r\n        if(data) {\r\n            data.sort((a, b) => a.tableNum - b.tableNum);\r\n           \r\n            return data.map((item) => {\r\n                if(item.billCost>0){\r\n                    return(\r\n                        <div key={item._id}>\r\n                            <button className=\"btn btn-warning cartBtn3 alignroomsgreen2\" onClick={() => {sessionStorage.setItem('tableNumber2', item.tableNum); this.getTableR()}}>\r\n                                {item.tableNum}\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return null\r\n                }\r\n               \r\n            })\r\n        }\r\n    }\r\n\r\n    renderBarTables(data){\r\n        if(data) {\r\n            data.sort((a, b) => a.tableNum - b.tableNum);\r\n           \r\n            return data.map((item) => {\r\n                if(item.billCost>0){\r\n                    return(\r\n                        <div key={item._id}>\r\n                            <button className=\"btn btn-warning cartBtn3 alignroomsgreen2\" onClick={() => {sessionStorage.setItem('tableNumber3', item.tableNum); this.getTableB()}}>\r\n                                {item.tableNum}\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return null\r\n                }\r\n               \r\n            })\r\n        }\r\n    }\r\n\r\n    renderPoolBarTables(data){\r\n        if(data) {\r\n            data.sort((a, b) => a.tableNum - b.tableNum);\r\n           \r\n            return data.map((item) => {\r\n                if(item.billCost>0){\r\n                    return(\r\n                        <div key={item._id}>\r\n                            <button className=\"btn btn-warning cartBtn3 alignroomsgreen2\" onClick={() => {sessionStorage.setItem('tableNumber3', item.tableNum); this.getTableP()}}>\r\n                                {item.tableNum}\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return null\r\n                }\r\n               \r\n            })\r\n        }\r\n    }\r\n\r\n    renderClubTables(data){\r\n        if(data) {\r\n            data.sort((a, b) => a.tableNum - b.tableNum);\r\n           \r\n            return data.map((item) => {\r\n                if(item.billCost>0){\r\n                    return(\r\n                        <div key={item._id}>\r\n                            <button className=\"btn btn-warning cartBtn3 alignroomsgreen2\" onClick={() => {sessionStorage.setItem('tableNumber3', item.tableNum); this.getTableC()}}>\r\n                                {item.tableNum}\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return null\r\n                }\r\n               \r\n            })\r\n        }\r\n    }\r\n\r\n    resetRooms(){\r\n        return (\r\n            <>\r\n                <center>\r\n\r\n                    <div className=\"mt-4\">\r\n                        <center>\r\n                            <input type=\"number\" className=\"form-control mb-3 formsize\" require placeholder = \"Enter Room Num\"name=\"roomNum\" value={this.state.roomNum} onChange={this.handleChange}/>\r\n                        </center>\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"btn btn-primary mb-3\" onClick={ ()=> {this.RoomReset()}}>Reset</button>\r\n                    </div>\r\n                </center>\r\n                \r\n\r\n            </>\r\n            \r\n        )\r\n        \r\n        \r\n    }\r\n\r\n\r\n    render(){\r\n        console.log (\">>> Inside Render\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Adlogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        var count=this.state.allOccupied;\r\n        if (count!=='green'){\r\n            var result = count.length;\r\n        }\r\n\r\n        var labels=this.state.labels;\r\n\r\n        const data = {\r\n            labels:labels,\r\n            datasets: [\r\n              {\r\n                \r\n                data: [this.state.TotalSales, this.state.OtherTotalSales, this.state.RestTotalSales, this.state.PoolTotalSales, this.state.BarTotalSales, this.state.ClubTotalSales,],\r\n                backgroundColor: ['chartreuse', 'cornflowerblue', 'cyan', 'hotpink','lightseagreen', 'chartreuse']\r\n              }\r\n            \r\n            ]\r\n        };\r\n    \r\n        const options = {\r\n            responsive: true,\r\n            plugins: {\r\n           \r\n              title: {\r\n                display: true,\r\n                text: 'Income Chart',\r\n              },\r\n              \r\n            },\r\n            \r\n        };\r\n\r\n        var transDate = moment(this.state.date).format('YYYY-DD-MMM');\r\n\r\n       \r\n        return(\r\n            <>\r\n                \r\n                <div className=\"Dashbackground\">\r\n                    \r\n                    <div className=\"heading\">\r\n                        \r\n                        <h5 type=\"button\" onClick={()=>this.props.history.push('/AppMenu')}>Dashboard</h5>\r\n                        \r\n                        \r\n                        \r\n                    </div>\r\n                    \r\n                    <div className=\"miniDash\">\r\n                        <Button variant=\"Danger\" className=\"DashSheet1\" type=\"button\" onClick={()=>this.handleRoomShow()}>\r\n                            \r\n                            <p className=\"mobileText\">Rooms <span className='placeTxt'>Occupied: {result}</span>: <NumberFormat value={this.state.TotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                           \r\n                            \r\n                        </Button>\r\n\r\n                        <Button variant=\"Danger\" className=\"DashSheet2\" type=\"button\" onClick={()=>this.handleOthersShow()}> \r\n                           \r\n                            <p className=\"mobileText\">Other Sales: <NumberFormat value={this.state.OtherTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                            \r\n                            \r\n                        </Button>\r\n\r\n                        <Button variant=\"Danger\" className=\"DashSheet3\" type=\"button\" onClick={()=>this.handleRestShow()}> \r\n                            \r\n                            <p className=\"mobileText\">Restaurant: <NumberFormat value={this.state.RestTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                            \r\n                        \r\n                        </Button>\r\n\r\n                        <Button variant=\"Danger\" className=\"DashSheet4\" type=\"button\" onClick={()=>this.handleInnerBarShow()}>\r\n                           \r\n                            <p className=\"mobileText\">Bar: <NumberFormat value={this.state.BarTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                           \r\n                            \r\n                        </Button>\r\n                        <Button variant=\"Danger\" className=\"DashSheet5\" type=\"button\" onClick={()=>this.handlePoolShow()}> \r\n                           \r\n                            <p className=\"mobileText\">Pool Bar: <NumberFormat value={this.state.PoolTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                           \r\n                            \r\n                        </Button>\r\n\r\n                        <Button variant=\"Danger\" className=\"DashSheet6\" type=\"button\" onClick={()=>this.handleClubShow()}> \r\n                           \r\n                            <p className=\"mobileText\">Reservation: <NumberFormat value={this.state.ClubTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                           \r\n                            \r\n                        </Button>\r\n\r\n                        <Button variant=\"Danger\" className=\"DashSheet7\"> \r\n                            <Card.Title>\r\n                                <p className=\"mobileText\">Total: <NumberFormat value={parseInt(this.state.PoolTotalSales) + parseInt(this.state.ClubTotalSales) + parseInt(this.state.BarTotalSales) + parseInt(this.state.RestTotalSales) + parseInt(this.state.OtherTotalSales) + parseInt(this.state.TotalSales)}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                            </Card.Title>\r\n                            \r\n                        </Button>\r\n                    </div>\r\n                    \r\n\r\n                    <div className=\"chart\">\r\n                        <Bar \r\n                            options={options} \r\n                            data={data} \r\n                        />\r\n                        \r\n                    </div>\r\n\r\n                    <div className='restTab'>\r\n\r\n                       <div>\r\n                            <h5 style={{color:'silver'}}>Table Manager</h5>\r\n                            <table className=\"table table-hover\">\r\n                                <thead className=\"table-warning\">\r\n                                    <tr>\r\n                                        {/* <th className=\"adjust2\">ID</th> */}\r\n                                        <th className=\"adjust2\">Menu</th>\r\n                                        <th className=\"adjust2\">Qty</th>\r\n                                        <th className=\"adjust2\">Price(=N)</th>\r\n                                        <th className=\"adjust2\">Amount(=N)</th>\r\n                                    \r\n                                        \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className=\"table table-hover tableheight\">\r\n                                    {this.renderOders(this.state.selected)}\r\n                                    \r\n                                </tbody>\r\n                                \r\n                                \r\n                            \r\n                            </table>\r\n                        \r\n                        </div>\r\n                        <div className=\"butncontrl\">\r\n                                    \r\n                            <button className=\"btn btn-primary cartBtn4new\" onClick={() => {this.setState({selected:'',cost:''})}}>\r\n                                Close\r\n                            </button>\r\n                        \r\n                            <button className=\"btn btn-danger cartBtn4new\" onClick={() => this.deleteRest()}>\r\n                                <i className=\"fa fa-trash-o\" aria-hidden=\"true\">  Rest Table</i>\r\n                            </button>\r\n                        \r\n                            <button className=\"btn btn-danger cartBtn4new\" onClick={() => this.deleteBar()}>\r\n                                <i className=\"fa fa-trash-o\" aria-hidden=\"true\">  Bar Table</i>\r\n                            </button>\r\n\r\n                            <button className=\"btn btn-danger cartBtn4new\" onClick={() => this.deletePoolBar()}>\r\n                                <i className=\"fa fa-trash-o\" aria-hidden=\"true\">  Pool Table</i>\r\n                            </button>\r\n\r\n                            <button className=\"btn btn-danger cartBtn4new\" onClick={() => this.deleteClub()}>\r\n                                <i className=\"fa fa-trash-o\" aria-hidden=\"true\">  Laundry</i>\r\n                            </button>\r\n                            \r\n                        </div>\r\n                        <br/>\r\n\r\n                        <Accordion defaultActiveKey=\"\">\r\n                            <Accordion.Item eventKey=\"0\">\r\n                                <Accordion.Header>Active Restaurant Tables</Accordion.Header>\r\n                                <Accordion.Body style={{backgroundColor:'rgb(23, 23, 71)'}}>\r\n                                    <div className='setHeight'>\r\n                                        {this.renderRestTables(this.state.resttables)}\r\n                                    </div>\r\n                                    \r\n                                </Accordion.Body>\r\n                            </Accordion.Item>\r\n\r\n                            <Accordion.Item eventKey=\"1\">\r\n                                <Accordion.Header>Active Bar Tables</Accordion.Header>\r\n                                <Accordion.Body style={{backgroundColor:'rgb(23, 23, 71)'}}>\r\n                                    <div className='setHeight'>\r\n                                        {this.renderBarTables(this.state.bartables)}\r\n                                    </div>\r\n                                </Accordion.Body>\r\n                            </Accordion.Item>\r\n\r\n                            <Accordion.Item eventKey=\"2\">\r\n                                <Accordion.Header>Active PoolBar Tables</Accordion.Header>\r\n                                <Accordion.Body style={{backgroundColor:'rgb(23, 23, 71)'}}>\r\n                                    <div className='setHeight'>\r\n                                        {this.renderPoolBarTables(this.state.poolbartables)}\r\n                                    </div>\r\n                                    </Accordion.Body>\r\n                            </Accordion.Item>\r\n\r\n                            <Accordion.Item eventKey=\"3\">\r\n                                <Accordion.Header>Active Laundry Tables</Accordion.Header>\r\n                                <Accordion.Body style={{backgroundColor:'rgb(23, 23, 71)'}}>\r\n                                    <div className='setHeight'>\r\n                                        {this.renderPoolBarTables(this.state.Clubtables)}\r\n                                    </div>\r\n                                </Accordion.Body>\r\n                            </Accordion.Item>\r\n\r\n                            <Accordion.Item eventKey=\"4\">\r\n                                <Accordion.Header>Force Reset Rooms</Accordion.Header>\r\n                                <Accordion.Body style={{backgroundColor:'rgb(23, 23, 71)'}}>\r\n                                    <div className='setHeight'>\r\n                                        {this.resetRooms()}\r\n                                    </div>\r\n                                    \r\n                                </Accordion.Body>\r\n                            </Accordion.Item>\r\n\r\n                        </Accordion>\r\n                        <br/>\r\n\r\n                        {/* <div className='mb-5 setHeight'>\r\n                            <h5 className=\"texted2\" style={{color:'silver'}}>Active Restaurant Tables</h5>\r\n                            {this.renderRestTables(this.state.resttables)}\r\n                        </div> */}\r\n                        \r\n                        {/* <div className='mb-5 setHeight'>\r\n                            <h5 className=\"texted2\" style={{color:'silver'}}>Active Bar Tables</h5>\r\n                            {this.renderBarTables(this.state.bartables)}\r\n                        </div> */}\r\n                        <div className='row'>\r\n                            <center>\r\n                                <button className=\"btn btn-warning mb-3 setbutton col-3\" onClick={ ()=> {this.props.history.push('/AppMenu')}}>App Menu</button>\r\n                                <button className=\"btn btn-warning mb-3 space setbutton col-3\" onClick={ ()=> {this.props.history.push('/EndOfDay')}}>All Reports</button>\r\n                                <button className=\"btn btn-warning mb-3 space setbutton col-3\" onClick={ ()=> {this.props.history.push('/StoreReport')}}>Stock Movement</button>\r\n                                \r\n                            </center>\r\n                            \r\n                        </div>\r\n                        <div className='row'>\r\n                            <center>\r\n                                <button className=\"btn btn-warning mb-3 space setbutton col-4\" onClick={ ()=> {this.props.history.push('/CashCollection')}}>Sales Summary</button>\r\n                                <button className=\"btn btn-warning mb-3 space setbutton col-4\" onClick={ ()=> {this.props.history.push('/PoolBarDailySales')}}>PoolBar Report</button>\r\n                                <button className=\"btn btn-warning mb-3 space setbutton col-4\" onClick={ ()=> {this.props.history.push('/ClubDailySales')}}>Reservation Report</button>\r\n                                <button className=\"btn btn-danger mb-3 space setbutton col-4\" onClick={ ()=> {this.props.history.push('/BillingMenu')}}>Work Date</button>\r\n                                <button className=\"btn btn-danger mb-3 space setbutton col-4\" onClick={ ()=> this.logout()}> Log Out</button>\r\n                            </center>\r\n                            \r\n                        </div>\r\n                        \r\n                        \r\n\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n                    \r\n                    \r\n                <Offcanvas show={this.state.showRooms}>\r\n                    \r\n                    <div className=\"missionvission\">\r\n                        <Offcanvas.Body>\r\n                            <div className=\"size13\">\r\n                                <CloseButton onClick={()=>this.handleRoomClose()}/>\r\n                            </div>\r\n                            <div className=\"missionStatement\">\r\n                                    \r\n                                <Card.Title className=\"mb-3\">\r\n                                    Rooms Payment Analysis\r\n                                </Card.Title>\r\n                                <hr/>\r\n                                <Card.Subtitle className=\"mb-3 text-muted editsub2\">\r\n                                   {transDate}\r\n                                </Card.Subtitle>\r\n                                <Card.Text className=\"mb-3 editsub\">\r\n                                    <div className=\"tableBody\">\r\n                                            \r\n                                        <p className=\"adjust5\">Cash: <NumberFormat value={this.state.Cash}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">POS: <NumberFormat value={this.state.POS}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Transfer: <NumberFormat value={this.state.Transfer}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Room: <NumberFormat value= {this.state.Room}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Reservation Deposit.: <NumberFormat value= {this.state.Complimentary}thousandSeparator={true}displayType={\"text\"}/></p> \r\n                                        <p className=\"adjust5\">Total: <NumberFormat value= {this.state.TotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        \r\n                                    </div>\r\n                                </Card.Text>\r\n                                    \r\n                                <br/><br/>\r\n                                \r\n                                        \r\n                            </div>\r\n                            \r\n                            \r\n                        </Offcanvas.Body>\r\n                    </div>\r\n                    \r\n                </Offcanvas>\r\n\r\n                <Offcanvas show={this.state.showOthers}>\r\n                    \r\n                    <div className=\"missionvission\">\r\n                        <Offcanvas.Body>\r\n                            <div className=\"size13\">\r\n                                <CloseButton onClick={()=>this.handleOthersClose()}/>\r\n                            </div>\r\n                            <div className=\"missionStatement\">\r\n                                    \r\n                                <Card.Title className=\"mb-3\">\r\n                                    Others Payment Analysis\r\n                                </Card.Title>\r\n                                <hr/>\r\n                                <Card.Subtitle className=\"mb-3 text-muted editsub\">\r\n                                   {transDate}\r\n                                </Card.Subtitle>\r\n                                <Card.Text className=\"mb-3 editsub\">\r\n                                    <div className=\"tableBody\">\r\n                                                \r\n                                        <p className=\"adjust5\">Cash: <NumberFormat value={this.state.OtherCash}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">POS: <NumberFormat value={this.state.OtherPOS}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Transfer: <NumberFormat value={this.state.OtherTransfer}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Room: <NumberFormat value= {this.state.OtherRoom}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Comp.: <NumberFormat value= {this.state.OtherComplimentary}thousandSeparator={true}displayType={\"text\"}/></p> \r\n                                        <p className=\"adjust5\">Total: <NumberFormat value= {this.state.OtherTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                                \r\n                                    </div>\r\n                                   \r\n                                </Card.Text>\r\n                                    \r\n                                <br/><br/>\r\n                                \r\n                                        \r\n                            </div>\r\n                            \r\n                        </Offcanvas.Body>\r\n                    </div>\r\n                    \r\n                </Offcanvas>\r\n\r\n                <Offcanvas show={this.state.showRest}>\r\n                    \r\n                    <div className=\"missionvission\">\r\n                        <Offcanvas.Body>\r\n                            <div className=\"size13\">\r\n                                <CloseButton onClick={()=>this.handleRestClose()}/>\r\n                            </div>\r\n                            <div className=\"missionStatement\">\r\n                                    \r\n                                <Card.Title className=\"mb-3\">\r\n                                    Restaurant Payment Analysis\r\n                                </Card.Title>\r\n                                <hr/>\r\n                                <Card.Subtitle className=\"mb-3 text-muted editsub\">\r\n                                   {transDate}\r\n                                </Card.Subtitle>\r\n                                <Card.Text className=\"mb-3 editsub\">\r\n                                    <div className=\"tableBody\">\r\n                                                    \r\n                                        <p className=\"adjust5\">Cash: <NumberFormat value={this.state.RestCash}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">POS: <NumberFormat value={this.state.RestPOS}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Transfer: <NumberFormat value={this.state.RestTransfer}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Room: <NumberFormat value= {this.state.RestRoom}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Comp.: <NumberFormat value= {this.state.RestComplimentary}thousandSeparator={true}displayType={\"text\"}/></p> \r\n                                        <p className=\"adjust5\">Total: <NumberFormat value= {this.state.RestTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                                \r\n                                    </div>\r\n                                </Card.Text>\r\n                                    \r\n                              \r\n                                <br/><br/>\r\n                                \r\n                                        \r\n                            </div>\r\n                            \r\n                        </Offcanvas.Body>\r\n                    </div>\r\n                    \r\n                </Offcanvas>\r\n\r\n                <Offcanvas show={this.state.showInnerBar}>\r\n                    \r\n                    <div className=\"missionvission\">\r\n                        <Offcanvas.Body>\r\n                            <div className=\"size13\">\r\n                                <CloseButton onClick={()=>this.handleInnerBarClose()}/>\r\n                            </div>\r\n                            <div className=\"missionStatement\">\r\n                                    \r\n                                <Card.Title className=\"mb-3\">\r\n                                    Bar Payment Analysis\r\n                                </Card.Title>\r\n                                <hr/>\r\n                                <Card.Subtitle className=\"mb-3 text-muted editsub\">\r\n                                   {transDate}\r\n                                </Card.Subtitle>\r\n                                <Card.Text className=\"mb-3 editsub\">\r\n                                    <div className=\"tableBody\">\r\n                                                        \r\n                                        <p className=\"adjust5\">Cash: <NumberFormat value={this.state.BarCash}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">POS: <NumberFormat value={this.state.BarPOS}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Transfer: <NumberFormat value={this.state.BarTransfer}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Room: <NumberFormat value= {this.state.BarRoom}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Comp.: <NumberFormat value= {this.state.BarComplimentary}thousandSeparator={true}displayType={\"text\"}/></p> \r\n                                        <p className=\"adjust5\">Total: <NumberFormat value= {this.state.BarTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                                \r\n                                    </div>\r\n                                </Card.Text>\r\n                                    \r\n                              \r\n                                <br/><br/>\r\n                                \r\n                                        \r\n                            </div>\r\n                            \r\n                        </Offcanvas.Body>\r\n                    </div>\r\n                    \r\n                </Offcanvas>\r\n\r\n                <Offcanvas show={this.state.showPool}>\r\n                    \r\n                    <div className=\"missionvission\">\r\n                        <Offcanvas.Body>\r\n                            <div className=\"size13\">\r\n                                <CloseButton onClick={()=>this.handlePoolClose()}/>\r\n                            </div>\r\n                            <div className=\"missionStatement\">\r\n                                    \r\n                                <Card.Title className=\"mb-3\">\r\n                                    Pool Bar Payment Analysis\r\n                                </Card.Title>\r\n                                <hr/>\r\n                                <Card.Subtitle className=\"mb-3 text-muted editsub\">\r\n                                   {transDate}\r\n                                </Card.Subtitle>\r\n                                <Card.Text className=\"mb-3 editsub\">\r\n                                    <div className=\"tableBody\">\r\n                                                        \r\n                                        <p className=\"adjust5\">Cash: <NumberFormat value={this.state.PoolCash}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">POS: <NumberFormat value={this.state.PoolPOS}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Transfer: <NumberFormat value={this.state.PoolTransfer}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Room: <NumberFormat value= {this.state.PoolRoom}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Comp.: <NumberFormat value= {this.state.PoolComplimentary}thousandSeparator={true}displayType={\"text\"}/></p> \r\n                                        <p className=\"adjust5\">Total: <NumberFormat value= {this.state.PoolTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                                \r\n                                    </div>\r\n                                </Card.Text>\r\n                                    \r\n                              \r\n                                <br/><br/>\r\n                                \r\n                                        \r\n                            </div>\r\n                            \r\n                        </Offcanvas.Body>\r\n                    </div>\r\n                    \r\n                </Offcanvas>\r\n\r\n                <Offcanvas show={this.state.showClub}>\r\n                    \r\n                    <div className=\"missionvission\">\r\n                        <Offcanvas.Body>\r\n                            <div className=\"size13\">\r\n                                <CloseButton onClick={()=>this.handleClubClose()}/>\r\n                            </div>\r\n                            <div className=\"missionStatement\">\r\n                                    \r\n                                <Card.Title className=\"mb-3\">\r\n                                    Reservation Payment Analysis\r\n                                </Card.Title>\r\n                                <hr/>\r\n                                <Card.Subtitle className=\"mb-3 text-muted editsub\">\r\n                                   {transDate}\r\n                                </Card.Subtitle>\r\n                                <Card.Text className=\"mb-3 editsub\">\r\n                                    <div className=\"tableBody\">\r\n                                                        \r\n                                        <p className=\"adjust5\">Cash: <NumberFormat value={this.state.ClubCash}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">POS: <NumberFormat value={this.state.ClubPOS}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Transfer: <NumberFormat value={this.state.ClubTransfer}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Room: <NumberFormat value= {this.state.ClubRoom}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Comp.: <NumberFormat value= {this.state.ClubComplimentary}thousandSeparator={true}displayType={\"text\"}/></p> \r\n                                        <p className=\"adjust5\">Total: <NumberFormat value= {this.state.ClubTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                                \r\n                                    </div>\r\n                                </Card.Text>\r\n                                    \r\n                              \r\n                                <br/><br/>\r\n                                \r\n                                        \r\n                            </div>\r\n                            \r\n                        </Offcanvas.Body>\r\n                    </div>\r\n                    \r\n                </Offcanvas>\r\n\r\n                \r\n            \r\n            </>\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        console.log (\">>> Inside DidMount\")\r\n        \r\n        fetch(`${occupancyChart}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                allOccupied:data.map(item => item.roomStatus).filter(item=> item !=='green'&& item !=='black'),\r\n                allVacant:data.map(item => item.roomStatus).filter(item=> item ==='green'),\r\n                allCorporate:data.map(item => item.roomStatus).filter(item=> item ==='blue'),\r\n                allIndividual:data.map(item => item.roomStatus).filter(item=> item ==='blueviolet'),\r\n                allStaff:data.map(item => item.roomStatus).filter(item=> item ==='deeppink'),\r\n                allComplimentary:data.map(item => item.roomStatus).filter(item=> item ==='orange'),\r\n                allCheckout:data.map(item => item.roomStatus).filter(item=> item ==='black')\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${guestDeposits}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            \r\n\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({POS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({Cash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({Transfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({Complimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({Room:allRoom})\r\n            \r\n            var Sales = 0;\r\n            var dailySales = Sales + this.state.Cash + this.state.POS + this.state.Transfer + this.state.Room\r\n            this.setState({TotalSales:dailySales})\r\n            \r\n        })\r\n\r\n        fetch(`${otherSales}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n           \r\n\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({OtherPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({OtherCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({OtherTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({OtherComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n             this.setState({OtherRoom:allRoom})\r\n            \r\n            var Sales2 = 0;\r\n            var dailySales2 = Sales2 + this.state.OtherCash + this.state.OtherPOS + this.state.OtherTransfer + this.state.OtherRoom \r\n            this.setState({OtherTotalSales:dailySales2})\r\n            \r\n        })\r\n\r\n        fetch(`${getRestaurantSales}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({RestPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({RestCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({RestTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({RestComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({RestRoom:allRoom})\r\n            \r\n            var Sales3 = 0;\r\n            var dailySales3 = Sales3 + this.state.RestCash + this.state.RestPOS + this.state.RestTransfer + this.state.RestRoom\r\n            this.setState({RestTotalSales:dailySales3})\r\n            \r\n        })\r\n\r\n        fetch(`${getBarNow}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({BarPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({BarCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({BarTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({BarComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({BarRoom:allRoom})\r\n            \r\n            var Sales4 = 0;\r\n            var dailySales4 = Sales4 + this.state.BarCash + this.state.BarPOS + this.state.BarTransfer + this.state.BarRoom\r\n            this.setState({BarTotalSales:dailySales4})\r\n            \r\n        })\r\n\r\n                \r\n        fetch(`${getPoolBarSales}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({PoolPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({PoolCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({PoolTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({PoolComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({PoolRoom:allRoom})\r\n            \r\n            var Sales5 = 0;\r\n            var dailySales5 = Sales5 + this.state.PoolCash + this.state.PoolPOS + this.state.PoolTransfer + this.state.PoolRoom\r\n            this.setState({PoolTotalSales:dailySales5})\r\n            \r\n        })\r\n\r\n        fetch(`${getclubSales}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({ClubPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({ClubCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({ClubTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({ClubComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({ClubRoom:allRoom})\r\n            \r\n            var Sales6 = 0;\r\n            var dailySales6 = Sales6 + this.state.ClubCash + this.state.ClubPOS + this.state.ClubTransfer + this.state.ClubRoom\r\n            this.setState({ClubTotalSales:dailySales6})\r\n            \r\n        })\r\n\r\n       \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n\r\n            var AllSales = parseInt(this.state.TotalSales)+parseInt(this.state.OtherTotalSales);\r\n            this.setState({ReceptionSales:AllSales})\r\n\r\n           \r\n        },1000);\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setInterval(() => {\r\n            fetch(`${occupancyChart}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    allOccupied:data.map(item => item.roomStatus).filter(item=> item !=='green'&& item !=='black'),\r\n                    allVacant:data.map(item => item.roomStatus).filter(item=> item ==='green'),\r\n                    allCorporate:data.map(item => item.roomStatus).filter(item=> item ==='blue'),\r\n                    allIndividual:data.map(item => item.roomStatus).filter(item=> item ==='blueviolet'),\r\n                    allStaff:data.map(item => item.roomStatus).filter(item=> item ==='deeppink'),\r\n                    allComplimentary:data.map(item => item.roomStatus).filter(item=> item ==='orange'),\r\n                    allCheckout:data.map(item => item.roomStatus).filter(item=> item ==='black')\r\n                })\r\n                \r\n            })\r\n\r\n            fetch(`${guestDeposits}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                \r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({POS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({Cash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({Transfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({Complimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({Room:allRoom})\r\n                \r\n                var Sales = 0;\r\n                var dailySales = Sales + this.state.Cash + this.state.POS + this.state.Transfer + this.state.Room\r\n                this.setState({TotalSales:dailySales})\r\n                \r\n                })\r\n\r\n            fetch(`${otherSales}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n            \r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({OtherPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({OtherCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({OtherTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({OtherComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({OtherRoom:allRoom})\r\n                \r\n                var Sales2 = 0;\r\n                var dailySales2 = Sales2 + this.state.OtherCash + this.state.OtherPOS + this.state.OtherTransfer + this.state.OtherRoom\r\n                this.setState({OtherTotalSales:dailySales2})\r\n                \r\n            })\r\n\r\n            fetch(`${getRestaurantSales}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({RestPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({RestCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({RestTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({RestComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({RestRoom:allRoom})\r\n                \r\n                var Sales3 = 0;\r\n                var dailySales3 = Sales3 + this.state.RestCash + this.state.RestPOS + this.state.RestTransfer + this.state.RestRoom\r\n                this.setState({RestTotalSales:dailySales3})\r\n                \r\n            })\r\n\r\n            fetch(`${getBarNow}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({BarPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({BarCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({BarTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({BarComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({BarRoom:allRoom})\r\n                \r\n                var Sales4 = 0;\r\n                var dailySales4 = Sales4 + this.state.BarCash + this.state.BarPOS + this.state.BarTransfer + this.state.BarRoom\r\n                this.setState({BarTotalSales:dailySales4})\r\n                \r\n            })\r\n\r\n                \r\n            fetch(`${getPoolBarSales}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({PoolPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({PoolCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({PoolTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({PoolComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({PoolRoom:allRoom})\r\n                \r\n                var Sales5 = 0;\r\n                var dailySales5 = Sales5 + this.state.PoolCash + this.state.PoolPOS + this.state.PoolTransfer + this.state.PoolRoom\r\n                this.setState({PoolTotalSales:dailySales5})\r\n                \r\n            })\r\n\r\n            fetch(`${getclubSales}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({ClubPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({ClubCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({ClubTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({ClubComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({ClubRoom:allRoom})\r\n                \r\n                var Sales6 = 0;\r\n                var dailySales6 = Sales6 + this.state.ClubCash + this.state.ClubPOS + this.state.ClubTransfer + this.state.ClubRoom\r\n                this.setState({ClubTotalSales:dailySales6})\r\n                \r\n            })\r\n        },20000);\r\n\r\n        \r\n\r\n        fetch(`${getWorkDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({date:item.date})\r\n                return 'ok'\r\n            })\r\n            \r\n           \r\n        })\r\n\r\n        fetch(`${getTable}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({resttables:data})\r\n        });\r\n\r\n        fetch(`${getbarTable}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({bartables:data})\r\n        });\r\n\r\n        fetch(`${getPoolbarTable}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({poolbartables:data})\r\n        });\r\n\r\n        fetch(`${getClubTable}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({Clubtables:data})\r\n        });\r\n\r\n        this.myTimer = setInterval(() => {\r\n             fetch(`${getWorkDate}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({date:item.date})\r\n                return 'ok'\r\n            })\r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({resttables:data})\r\n            });\r\n\r\n            fetch(`${getbarTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({bartables:data})\r\n            });\r\n\r\n            fetch(`${getPoolbarTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({poolbartables:data})\r\n            });\r\n\r\n            fetch(`${getClubTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({Clubtables:data})\r\n            });\r\n\r\n        })\r\n            \r\n        },1000);\r\n        \r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n            fetch(`${occupancyChart}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                allOccupied:data.map(item => item.roomStatus).filter(item=> item !=='green'&& item !=='black'),\r\n                allVacant:data.map(item => item.roomStatus).filter(item=> item ==='green'),\r\n                allCorporate:data.map(item => item.roomStatus).filter(item=> item ==='blue'),\r\n                allIndividual:data.map(item => item.roomStatus).filter(item=> item ==='blueviolet'),\r\n                allStaff:data.map(item => item.roomStatus).filter(item=> item ==='deeppink'),\r\n                allComplimentary:data.map(item => item.roomStatus).filter(item=> item ==='orange'),\r\n                allCheckout:data.map(item => item.roomStatus).filter(item=> item ==='black')\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${guestDeposits}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            \r\n\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({POS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({Cash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({Transfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({Complimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({Room:allRoom})\r\n            \r\n            var Sales = 0;\r\n            var dailySales = Sales + this.state.Cash + this.state.POS + this.state.Transfer + this.state.Room\r\n            this.setState({TotalSales:dailySales})\r\n            \r\n        })\r\n\r\n        fetch(`${otherSales}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n           \r\n\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({OtherPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({OtherCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({OtherTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({OtherComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n             this.setState({OtherRoom:allRoom})\r\n            \r\n            var Sales2 = 0;\r\n            var dailySales2 = Sales2 + this.state.OtherCash + this.state.OtherPOS + this.state.OtherTransfer + this.state.OtherRoom \r\n            this.setState({OtherTotalSales:dailySales2})\r\n            \r\n        })\r\n\r\n        fetch(`${getRestaurantSales}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({RestPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({RestCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({RestTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({RestComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({RestRoom:allRoom})\r\n            \r\n            var Sales3 = 0;\r\n            var dailySales3 = Sales3 + this.state.RestCash + this.state.RestPOS + this.state.RestTransfer + this.state.RestRoom\r\n            this.setState({RestTotalSales:dailySales3})\r\n            \r\n        })\r\n\r\n        fetch(`${getBarNow}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({BarPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({BarCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({BarTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({BarComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({BarRoom:allRoom})\r\n            \r\n            var Sales4 = 0;\r\n            var dailySales4 = Sales4 + this.state.BarCash + this.state.BarPOS + this.state.BarTransfer + this.state.BarRoom\r\n            this.setState({BarTotalSales:dailySales4})\r\n            \r\n        })\r\n\r\n                \r\n        fetch(`${getPoolBarSales}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({PoolPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({PoolCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({PoolTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({PoolComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({PoolRoom:allRoom})\r\n            \r\n            var Sales5 = 0;\r\n            var dailySales5 = Sales5 + this.state.PoolCash + this.state.PoolPOS + this.state.PoolTransfer + this.state.PoolRoom\r\n            this.setState({PoolTotalSales:dailySales5})\r\n            \r\n        })\r\n\r\n        fetch(`${getclubSales}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({ClubPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({ClubCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({ClubTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({ClubComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({ClubRoom:allRoom})\r\n            \r\n            var Sales6 = 0;\r\n            var dailySales6 = Sales6 + this.state.ClubCash + this.state.ClubPOS + this.state.ClubTransfer + this.state.ClubRoom\r\n            this.setState({ClubTotalSales:dailySales6})\r\n            \r\n        })\r\n\r\n       \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n\r\n            var AllSales = parseInt(this.state.TotalSales)+parseInt(this.state.OtherTotalSales);\r\n            this.setState({ReceptionSales:AllSales})\r\n\r\n           \r\n        },1000);\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setInterval(() => {\r\n            fetch(`${occupancyChart}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    allOccupied:data.map(item => item.roomStatus).filter(item=> item !=='green'&& item !=='black'),\r\n                    allVacant:data.map(item => item.roomStatus).filter(item=> item ==='green'),\r\n                    allCorporate:data.map(item => item.roomStatus).filter(item=> item ==='blue'),\r\n                    allIndividual:data.map(item => item.roomStatus).filter(item=> item ==='blueviolet'),\r\n                    allStaff:data.map(item => item.roomStatus).filter(item=> item ==='deeppink'),\r\n                    allComplimentary:data.map(item => item.roomStatus).filter(item=> item ==='orange'),\r\n                    allCheckout:data.map(item => item.roomStatus).filter(item=> item ==='black')\r\n                })\r\n                \r\n            })\r\n\r\n            fetch(`${guestDeposits}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                \r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({POS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({Cash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({Transfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({Complimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({Room:allRoom})\r\n                \r\n                var Sales = 0;\r\n                var dailySales = Sales + this.state.Cash + this.state.POS + this.state.Transfer + this.state.Room\r\n                this.setState({TotalSales:dailySales})\r\n                \r\n                })\r\n\r\n            fetch(`${otherSales}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n            \r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({OtherPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({OtherCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({OtherTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({OtherComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({OtherRoom:allRoom})\r\n                \r\n                var Sales2 = 0;\r\n                var dailySales2 = Sales2 + this.state.OtherCash + this.state.OtherPOS + this.state.OtherTransfer + this.state.OtherRoom\r\n                this.setState({OtherTotalSales:dailySales2})\r\n                \r\n            })\r\n\r\n            fetch(`${getRestaurantSales}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({RestPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({RestCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({RestTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({RestComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({RestRoom:allRoom})\r\n                \r\n                var Sales3 = 0;\r\n                var dailySales3 = Sales3 + this.state.RestCash + this.state.RestPOS + this.state.RestTransfer + this.state.RestRoom\r\n                this.setState({RestTotalSales:dailySales3})\r\n                \r\n            })\r\n\r\n            fetch(`${getBarNow}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({BarPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({BarCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({BarTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({BarComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({BarRoom:allRoom})\r\n                \r\n                var Sales4 = 0;\r\n                var dailySales4 = Sales4 + this.state.BarCash + this.state.BarPOS + this.state.BarTransfer + this.state.BarRoom\r\n                this.setState({BarTotalSales:dailySales4})\r\n                \r\n            })\r\n\r\n                \r\n            fetch(`${getPoolBarSales}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({PoolPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({PoolCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({PoolTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({PoolComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({PoolRoom:allRoom})\r\n                \r\n                var Sales5 = 0;\r\n                var dailySales5 = Sales5 + this.state.PoolCash + this.state.PoolPOS + this.state.PoolTransfer + this.state.PoolRoom\r\n                this.setState({PoolTotalSales:dailySales5})\r\n                \r\n            })\r\n\r\n            fetch(`${getclubSales}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({ClubPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({ClubCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({ClubTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({ClubComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({ClubRoom:allRoom})\r\n                \r\n                var Sales6 = 0;\r\n                var dailySales6 = Sales6 + this.state.ClubCash + this.state.ClubPOS + this.state.ClubTransfer + this.state.ClubRoom\r\n                this.setState({ClubTotalSales:dailySales6})\r\n                \r\n            })\r\n        },20000);\r\n\r\n        \r\n\r\n        fetch(`${getWorkDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({date:item.date})\r\n                return 'ok'\r\n            })\r\n            \r\n           \r\n        })\r\n\r\n        fetch(`${getTable}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({resttables:data})\r\n        });\r\n\r\n        fetch(`${getbarTable}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({bartables:data})\r\n        });\r\n\r\n        fetch(`${getPoolbarTable}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({poolbartables:data})\r\n        });\r\n\r\n        fetch(`${getClubTable}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({Clubtables:data})\r\n        });\r\n\r\n        this.myTimer = setInterval(() => {\r\n             fetch(`${getWorkDate}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({date:item.date})\r\n                return 'ok'\r\n            })\r\n\r\n            fetch(`${getTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({resttables:data})\r\n            });\r\n\r\n            fetch(`${getbarTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({bartables:data})\r\n            });\r\n\r\n            fetch(`${getPoolbarTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({poolbartables:data})\r\n            });\r\n\r\n            fetch(`${getClubTable}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({Clubtables:data})\r\n            });\r\n\r\n        })\r\n            \r\n        },1000);\r\n        \r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n            \r\n        },1000);\r\n            \r\n        \r\n\r\n\r\n    }\r\n}\r\nexport default NewDashboard;\r\n\r\n","import React,{Component} from 'react';\r\nimport './Dashboard.css';\r\nimport FLogin from './FLogin';\r\nimport Card from 'react-bootstrap/Card';\r\nimport NumberFormat from 'react-number-format';\r\nimport {Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip,} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport CloseButton from 'react-bootstrap/CloseButton';\r\nimport moment from 'moment';\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip\r\n    \r\n);\r\n\r\n\r\n// Rooms Transactions Url //\r\nconst occupancyChart = \"https://zarvichdemo.localto.net/getrmstatus\";\r\nconst userName = \"https://zarvichdemo.localto.net/fofUserInfo\";\r\nconst otherSales = \"https://zarvichdemo.localto.net/otherSalesPoints\";\r\nconst guestDeposits = \"https://zarvichdemo.localto.net/getRmDeposits\";\r\n\r\n// Restaurant Transactions Url //\r\nconst getRestaurantSales = \"https://zarvichdemo.localto.net/restaurantSales\"; \r\n\r\n// Bar Transactions Url //\r\nconst getBarNow = \"https://zarvichdemo.localto.net/barSales\"; \r\n\r\n// PoolBar Transactions Url //\r\nconst getPoolBarSales = \"https://zarvichdemo.localto.net/poolbarSales\"; \r\n\r\n// Refund Approvals Url \r\n// const getRefundApprovals = \"/getHallReservation\";\r\n\r\n\r\nclass OldDashboard extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        console.log(\">>>Inside Constructor\")\r\n\r\n        this.state = {\r\n           \r\n            allOccupied:'',\r\n            allVacant:'',\r\n            allCorporate:'',\r\n            allIndividual:'',\r\n            allStaff:'',\r\n            allComplimentary:'',\r\n            allCheckout:'',\r\n\r\n            \r\n            TotalSales:0,\r\n            POS:0,\r\n            Cash:0,\r\n            Transfer:0,\r\n            Complimentary:0,\r\n            Room:0,\r\n\r\n\r\n            OtherTotalSales:0,\r\n            OtherRoom:0,\r\n            OtherComplimentary:0,\r\n            OtherTransfer:0,\r\n            OtherCash:0,\r\n            OtherPOS:0,\r\n\r\n            ReceptionSales:0,\r\n           \r\n            date:new Date(),\r\n\r\n            RestTotalSales:0,\r\n            RestRoom:0,\r\n            RestComplimentary:0,\r\n            RestTransfer:0,\r\n            RestCash:0,\r\n            RestPOS:0,\r\n           \r\n\r\n            BarTotalSales:0,\r\n            BarRoom:0,\r\n            BarComplimentary:0,\r\n            BarTransfer:0,\r\n            BarCash:0,\r\n            BarPOS:0,\r\n\r\n            PoolTotalSales:0,\r\n            PoolRoom:0,\r\n            PoolComplimentary:0,\r\n            PoolTransfer:0,\r\n            PoolCash:0,\r\n            PoolPOS:0,\r\n\r\n            Gtotal:0,\r\n\r\n            \r\n\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n\r\n            labels:['Rooms','Others','Restaurant','PoolBar','Inner Bar'],\r\n\r\n            showRooms:false,\r\n            showOthers:false,\r\n            showRest:false,\r\n            showPool:false,\r\n            showInnerBar:false\r\n            \r\n\r\n        };\r\n\r\n    }\r\n\r\n    handleRoomShow(){\r\n        this.setState({showRooms:true})\r\n    }\r\n\r\n    handleRoomClose(){\r\n        this.setState({showRooms:false})\r\n    }\r\n\r\n    handleOthersShow(){\r\n        this.setState({showOthers:true})\r\n    }\r\n\r\n    handleOthersClose(){\r\n        this.setState({showOthers:false})\r\n    }\r\n\r\n    handleRestShow(){\r\n        this.setState({showRest:true})\r\n    }\r\n\r\n    handleRestClose(){\r\n        this.setState({showRest:false})\r\n    }\r\n\r\n    handlePoolClose(){\r\n        this.setState({showPool:false})\r\n    }\r\n\r\n    handlePoolShow(){\r\n        this.setState({showPool:true})\r\n    }\r\n\r\n    handleInnerBarClose(){\r\n        this.setState({showInnerBar:false})\r\n    }\r\n\r\n    handleInnerBarShow(){\r\n        this.setState({showInnerBar:true})\r\n    }\r\n\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n   \r\n\r\n   \r\n\r\n    render(){\r\n        console.log (\">>> Inside Render\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <FLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        var count=this.state.allOccupied;\r\n        if (count!=='green'){\r\n            var result = count.length;\r\n        }\r\n\r\n        var labels=this.state.labels;\r\n\r\n        const data = {\r\n            labels:labels,\r\n            datasets: [\r\n              {\r\n                \r\n                data: [this.state.TotalSales, this.state.OtherTotalSales, this.state.RestTotalSales, this.state.PoolTotalSales, this.state.BarTotalSales,],\r\n                backgroundColor: ['chartreuse', 'cornflowerblue', 'cyan', 'hotpink','lightseagreen',]\r\n              }\r\n            \r\n            ]\r\n        };\r\n    \r\n        const options = {\r\n            responsive: true,\r\n            plugins: {\r\n           \r\n              title: {\r\n                display: true,\r\n                text: 'Income Chart',\r\n              },\r\n              \r\n            },\r\n            \r\n        };\r\n\r\n        var transDate = moment(this.state.date).format('YYYY-DD-MMM');\r\n\r\n       \r\n        return(\r\n            <>\r\n                \r\n                <div className=\"Dashbackground\">\r\n                    \r\n                    <div className=\"heading\">\r\n                        <h5>Dashboard</h5>\r\n                    </div>\r\n                    \r\n                    <div className=\"miniDash\">\r\n                        <Button variant=\"Danger\" className=\"DashSheet1\" type=\"button\" onClick={()=>this.handleRoomShow()}> \r\n                            \r\n                            <p className=\"mobileText\">Rooms <span className='placeTxt'>Occupied: {result}</span>: <NumberFormat value={this.state.TotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                           \r\n                            \r\n                        </Button>\r\n\r\n                        <Button variant=\"Danger\" className=\"DashSheet2\" type=\"button\" onClick={()=>this.handleOthersShow()}> \r\n                           \r\n                            <p className=\"mobileText\">Other Sales: <NumberFormat value={this.state.OtherTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                            \r\n                            \r\n                        </Button>\r\n\r\n                        <Button variant=\"Danger\" className=\"DashSheet3\" type=\"button\" onClick={()=>this.handleRestShow()}> \r\n                            \r\n                            <p className=\"mobileText\">Restaurant: <NumberFormat value={this.state.RestTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                            \r\n                        \r\n                        </Button>\r\n\r\n                        <Button variant=\"Danger\" className=\"DashSheet4\" type=\"button\" onClick={()=>this.handleInnerBarShow()}>\r\n                           \r\n                            <p className=\"mobileText\">Inner Bar: <NumberFormat value={this.state.BarTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                           \r\n                            \r\n                        </Button>\r\n                        <Button variant=\"Danger\" className=\"DashSheet5\" type=\"button\" onClick={()=>this.handlePoolShow()}> \r\n                           \r\n                            <p className=\"mobileText\">Pool Bar: <NumberFormat value={this.state.PoolTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                           \r\n                            \r\n                        </Button>\r\n\r\n                        <Button variant=\"Danger\" className=\"DashSheet6\"> \r\n                            <Card.Title>\r\n                                <p className=\"mobileText\">Total: <NumberFormat value={parseInt(this.state.PoolTotalSales) + parseInt(this.state.BarTotalSales) + parseInt(this.state.RestTotalSales) + parseInt(this.state.OtherTotalSales) + parseInt(this.state.TotalSales)}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                            </Card.Title>\r\n                            \r\n                        </Button>\r\n                    </div>\r\n                    \r\n\r\n                    <div className=\"chart\">\r\n                        <Bar \r\n                            options={options} \r\n                            data={data} \r\n                        />\r\n                        \r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                <Offcanvas show={this.state.showRooms}>\r\n                    \r\n                    <div className=\"missionvission\">\r\n                        <Offcanvas.Body>\r\n                            <div className=\"size13\">\r\n                                <CloseButton onClick={()=>this.handleRoomClose()}/>\r\n                            </div>\r\n                            <div className=\"missionStatement\">\r\n                                    \r\n                                <Card.Title className=\"mb-3\">\r\n                                    Rooms Payment Analysis\r\n                                </Card.Title>\r\n                                <hr/>\r\n                                <Card.Subtitle className=\"mb-3 text-muted editsub2\">\r\n                                   {transDate}\r\n                                </Card.Subtitle>\r\n                                <Card.Text className=\"mb-3 editsub\">\r\n                                    <div className=\"tableBody\">\r\n                                            \r\n                                        <p className=\"adjust5\">Cash: <NumberFormat value={this.state.Cash}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">POS: <NumberFormat value={this.state.POS}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Transfer: <NumberFormat value={this.state.Transfer}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Room: <NumberFormat value= {this.state.Room}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Comp.: <NumberFormat value= {this.state.Complimentary}thousandSeparator={true}displayType={\"text\"}/></p> \r\n                                        <p className=\"adjust5\">Total: <NumberFormat value= {this.state.TotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        \r\n                                    </div>\r\n                                </Card.Text>\r\n                                    \r\n                                <br/><br/>\r\n                                \r\n                                        \r\n                            </div>\r\n                            \r\n                            \r\n                        </Offcanvas.Body>\r\n                    </div>\r\n                    \r\n                </Offcanvas>\r\n\r\n                <Offcanvas show={this.state.showOthers}>\r\n                    \r\n                    <div className=\"missionvission\">\r\n                        <Offcanvas.Body>\r\n                            <div className=\"size13\">\r\n                                <CloseButton onClick={()=>this.handleOthersClose()}/>\r\n                            </div>\r\n                            <div className=\"missionStatement\">\r\n                                    \r\n                                <Card.Title className=\"mb-3\">\r\n                                    Others Payment Analysis\r\n                                </Card.Title>\r\n                                <hr/>\r\n                                <Card.Subtitle className=\"mb-3 text-muted editsub\">\r\n                                   {transDate}\r\n                                </Card.Subtitle>\r\n                                <Card.Text className=\"mb-3 editsub\">\r\n                                    <div className=\"tableBody\">\r\n                                                \r\n                                        <p className=\"adjust5\">Cash: <NumberFormat value={this.state.OtherCash}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">POS: <NumberFormat value={this.state.OtherPOS}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Transfer: <NumberFormat value={this.state.OtherTransfer}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Room: <NumberFormat value= {this.state.OtherRoom}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Comp.: <NumberFormat value= {this.state.OtherComplimentary}thousandSeparator={true}displayType={\"text\"}/></p> \r\n                                        <p className=\"adjust5\">Total: <NumberFormat value= {this.state.OtherTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                                \r\n                                    </div>\r\n                                   \r\n                                </Card.Text>\r\n                                    \r\n                                <br/><br/>\r\n                                <hr/>\r\n                                        \r\n                            </div>\r\n                            \r\n                        </Offcanvas.Body>\r\n                    </div>\r\n                    \r\n                </Offcanvas>\r\n\r\n                <Offcanvas show={this.state.showRest}>\r\n                    \r\n                    <div className=\"missionvission\">\r\n                        <Offcanvas.Body>\r\n                            <div className=\"size13\">\r\n                                <CloseButton onClick={()=>this.handleRestClose()}/>\r\n                            </div>\r\n                            <div className=\"missionStatement\">\r\n                                    \r\n                                <Card.Title className=\"mb-3\">\r\n                                    Restaurant Payment Analysis\r\n                                </Card.Title>\r\n                                <hr/>\r\n                                <Card.Subtitle className=\"mb-3 text-muted editsub\">\r\n                                   {transDate}\r\n                                </Card.Subtitle>\r\n                                <Card.Text className=\"mb-3 editsub\">\r\n                                    <div className=\"tableBody\">\r\n                                                    \r\n                                        <p className=\"adjust5\">Cash: <NumberFormat value={this.state.RestCash}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">POS: <NumberFormat value={this.state.RestPOS}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Transfer: <NumberFormat value={this.state.RestTransfer}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Room: <NumberFormat value= {this.state.RestRoom}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Comp.: <NumberFormat value= {this.state.RestComplimentary}thousandSeparator={true}displayType={\"text\"}/></p> \r\n                                        <p className=\"adjust5\">Total: <NumberFormat value= {this.state.RestTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                                \r\n                                    </div>\r\n                                </Card.Text>\r\n                                    \r\n                              \r\n                                <br/><br/>\r\n                                <hr/>\r\n                                        \r\n                            </div>\r\n                            \r\n                        </Offcanvas.Body>\r\n                    </div>\r\n                    \r\n                </Offcanvas>\r\n\r\n                <Offcanvas show={this.state.showInnerBar}>\r\n                    \r\n                    <div className=\"missionvission\">\r\n                        <Offcanvas.Body>\r\n                            <div className=\"size13\">\r\n                                <CloseButton onClick={()=>this.handleInnerBarClose()}/>\r\n                            </div>\r\n                            <div className=\"missionStatement\">\r\n                                    \r\n                                <Card.Title className=\"mb-3\">\r\n                                    Inner Bar Payment Analysis\r\n                                </Card.Title>\r\n                                <hr/>\r\n                                <Card.Subtitle className=\"mb-3 text-muted editsub\">\r\n                                   {transDate}\r\n                                </Card.Subtitle>\r\n                                <Card.Text className=\"mb-3 editsub\">\r\n                                    <div className=\"tableBody\">\r\n                                                        \r\n                                        <p className=\"adjust5\">Cash: <NumberFormat value={this.state.BarCash}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">POS: <NumberFormat value={this.state.BarPOS}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Transfer: <NumberFormat value={this.state.BarTransfer}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Room: <NumberFormat value= {this.state.BarRoom}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Comp.: <NumberFormat value= {this.state.BarComplimentary}thousandSeparator={true}displayType={\"text\"}/></p> \r\n                                        <p className=\"adjust5\">Total: <NumberFormat value= {this.state.BarTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                                \r\n                                    </div>\r\n                                </Card.Text>\r\n                                    \r\n                              \r\n                                <br/><br/>\r\n                                <hr/>\r\n                                        \r\n                            </div>\r\n                            \r\n                        </Offcanvas.Body>\r\n                    </div>\r\n                    \r\n                </Offcanvas>\r\n\r\n                <Offcanvas show={this.state.showPool}>\r\n                    \r\n                    <div className=\"missionvission\">\r\n                        <Offcanvas.Body>\r\n                            <div className=\"size13\">\r\n                                <CloseButton onClick={()=>this.handlePoolClose()}/>\r\n                            </div>\r\n                            <div className=\"missionStatement\">\r\n                                    \r\n                                <Card.Title className=\"mb-3\">\r\n                                    Pool Bar Payment Analysis\r\n                                </Card.Title>\r\n                                <hr/>\r\n                                <Card.Subtitle className=\"mb-3 text-muted editsub\">\r\n                                   {transDate}\r\n                                </Card.Subtitle>\r\n                                <Card.Text className=\"mb-3 editsub\">\r\n                                <div className=\"tableBody\">\r\n                                                        \r\n                                    <p className=\"adjust5\">Cash: <NumberFormat value={this.state.PoolCash}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                    <p className=\"adjust5\">POS: <NumberFormat value={this.state.PoolPOS}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                    <p className=\"adjust5\">Transfer: <NumberFormat value={this.state.PoolTransfer}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                    <p className=\"adjust5\">Room: <NumberFormat value= {this.state.PoolRoom}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                    <p className=\"adjust5\">Comp.: <NumberFormat value= {this.state.PoolComplimentary}thousandSeparator={true}displayType={\"text\"}/></p> \r\n                                    <p className=\"adjust5\">Total: <NumberFormat value= {this.state.PoolTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                            \r\n                                </div>\r\n                                </Card.Text>\r\n                                    \r\n                              \r\n                                <br/><br/>\r\n                                <hr/>\r\n                                        \r\n                            </div>\r\n                            \r\n                        </Offcanvas.Body>\r\n                    </div>\r\n                    \r\n                </Offcanvas>\r\n\r\n                \r\n            \r\n            </>\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        console.log (\">>> Inside DidMount\")\r\n        fetch(`${occupancyChart}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                allOccupied:data.map(item => item.roomStatus).filter(item=> item !=='green'&& item !=='black'),\r\n                allVacant:data.map(item => item.roomStatus).filter(item=> item ==='green'),\r\n                allCorporate:data.map(item => item.roomStatus).filter(item=> item ==='blue'),\r\n                allIndividual:data.map(item => item.roomStatus).filter(item=> item ==='blueviolet'),\r\n                allStaff:data.map(item => item.roomStatus).filter(item=> item ==='deeppink'),\r\n                allComplimentary:data.map(item => item.roomStatus).filter(item=> item ==='orange'),\r\n                allCheckout:data.map(item => item.roomStatus).filter(item=> item ==='black')\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${guestDeposits}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            \r\n\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({POS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({Cash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({Transfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({Complimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({Room:allRoom})\r\n            \r\n            var Sales = 0;\r\n            var dailySales = Sales + this.state.Cash + this.state.POS + this.state.Transfer + this.state.Room + this.state.Complimentary\r\n            this.setState({TotalSales:dailySales})\r\n            \r\n        })\r\n\r\n        fetch(`${otherSales}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n           \r\n\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({OtherPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({OtherCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({OtherTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({OtherComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n             this.setState({OtherRoom:allRoom})\r\n            \r\n            var Sales2 = 0;\r\n            var dailySales2 = Sales2 + this.state.OtherCash + this.state.OtherPOS + this.state.OtherTransfer + this.state.OtherRoom + this.state.OtherComplimentary\r\n            this.setState({OtherTotalSales:dailySales2})\r\n            \r\n        })\r\n\r\n        fetch(`${getRestaurantSales}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({RestPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({RestCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({RestTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({RestComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({RestRoom:allRoom})\r\n            \r\n            var Sales3 = 0;\r\n            var dailySales3 = Sales3 + this.state.RestCash + this.state.RestPOS + this.state.RestTransfer + this.state.RestRoom + this.state.RestComplimentary\r\n            this.setState({RestTotalSales:dailySales3})\r\n            \r\n        })\r\n\r\n        fetch(`${getBarNow}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({BarPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({BarCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({BarTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({BarComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({BarRoom:allRoom})\r\n            \r\n            var Sales4 = 0;\r\n            var dailySales4 = Sales4 + this.state.BarCash + this.state.BarPOS + this.state.BarTransfer + this.state.BarRoom + this.state.BarComplimentary\r\n            this.setState({BarTotalSales:dailySales4})\r\n            \r\n        })\r\n\r\n                \r\n        fetch(`${getPoolBarSales}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({PoolPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({PoolCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({PoolTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({PoolComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({PoolRoom:allRoom})\r\n            \r\n            var Sales5 = 0;\r\n            var dailySales5 = Sales5 + this.state.PoolCash + this.state.PoolPOS + this.state.PoolTransfer + this.state.PoolRoom + this.state.PoolComplimentary\r\n            this.setState({PoolTotalSales:dailySales5})\r\n            \r\n        })\r\n\r\n       \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n\r\n            var AllSales = parseInt(this.state.TotalSales)+parseInt(this.state.OtherTotalSales);\r\n            this.setState({ReceptionSales:AllSales})\r\n\r\n           \r\n        },1000);\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setInterval(() => {\r\n            fetch(`${occupancyChart}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    allOccupied:data.map(item => item.roomStatus).filter(item=> item !=='green'&& item !=='black'),\r\n                    allVacant:data.map(item => item.roomStatus).filter(item=> item ==='green'),\r\n                    allCorporate:data.map(item => item.roomStatus).filter(item=> item ==='blue'),\r\n                    allIndividual:data.map(item => item.roomStatus).filter(item=> item ==='blueviolet'),\r\n                    allStaff:data.map(item => item.roomStatus).filter(item=> item ==='deeppink'),\r\n                    allComplimentary:data.map(item => item.roomStatus).filter(item=> item ==='orange'),\r\n                    allCheckout:data.map(item => item.roomStatus).filter(item=> item ==='black')\r\n                })\r\n                \r\n            })\r\n\r\n            fetch(`${guestDeposits}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                \r\n\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({POS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({Cash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({Transfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({Complimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({Room:allRoom})\r\n            \r\n            var Sales = 0;\r\n            var dailySales = Sales + this.state.Cash + this.state.POS + this.state.Transfer + this.state.Room + this.state.Complimentary\r\n            this.setState({TotalSales:dailySales})\r\n            \r\n        })\r\n\r\n        fetch(`${otherSales}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n           \r\n\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({OtherPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({OtherCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({OtherTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({OtherComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n             this.setState({OtherRoom:allRoom})\r\n            \r\n            var Sales2 = 0;\r\n            var dailySales2 = Sales2 + this.state.OtherCash + this.state.OtherPOS + this.state.OtherTransfer + this.state.OtherRoom + this.state.OtherComplimentary\r\n            this.setState({OtherTotalSales:dailySales2})\r\n            \r\n        })\r\n\r\n        fetch(`${getRestaurantSales}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({RestPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({RestCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({RestTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({RestComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({RestRoom:allRoom})\r\n            \r\n            var Sales3 = 0;\r\n            var dailySales3 = Sales3 + this.state.RestCash + this.state.RestPOS + this.state.RestTransfer + this.state.RestRoom + this.state.RestComplimentary\r\n            this.setState({RestTotalSales:dailySales3})\r\n            \r\n        })\r\n\r\n        fetch(`${getBarNow}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({BarPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({BarCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({BarTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({BarComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({BarRoom:allRoom})\r\n            \r\n            var Sales4 = 0;\r\n            var dailySales4 = Sales4 + this.state.BarCash + this.state.BarPOS + this.state.BarTransfer + this.state.BarRoom + this.state.BarComplimentary\r\n            this.setState({BarTotalSales:dailySales4})\r\n            \r\n        })\r\n\r\n               \r\n        fetch(`${getPoolBarSales}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({PoolPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({PoolCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({PoolTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({PoolComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({PoolRoom:allRoom})\r\n            \r\n            var Sales5 = 0;\r\n            var dailySales5 = Sales5 + this.state.PoolCash + this.state.PoolPOS + this.state.PoolTransfer + this.state.PoolRoom + this.state.PoolComplimentary\r\n            this.setState({PoolTotalSales:dailySales5})\r\n            \r\n        })\r\n\r\n       \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n            \r\n        },30000);\r\n\r\n\r\n    }\r\n}\r\nexport default OldDashboard;\r\n\r\n","import React, { Component } from 'react';\r\nimport Adlogin from '../Adlogin';\r\nimport '../Reception/Reception.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst deptUrl= \"https://zarvichdemo.localto.net/feesAndCharges\";\r\nconst getdeptID= \"https://zarvichdemo.localto.net/feesAndCharges?fID=\";\r\nconst postdept= \"https://zarvichdemo.localto.net/postFees\";\r\nconst putdept= \"https://zarvichdemo.localto.net/editfees\";\r\nconst deldept= \"https://zarvichdemo.localto.net/delFee\";\r\nconst userName = \"https://zarvichdemo.localto.net/adminUserInfo\";\r\n\r\n\r\nclass RegFormSettings extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>> inside GrpCobtructor\", props)\r\n\r\n        this.state = {\r\n            _id:Math.floor(Math.random()*10000),\r\n            feesData:'',\r\n            feesName:'',\r\n            feeAmount: 0,\r\n            feesRate:0,\r\n            feesID:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            getfeesID:''\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n\r\n    deletedept(){\r\n       \r\n        fetch(`${deldept}/${sessionStorage.getItem('getfeesdelID')}`, {method:'delete'})\r\n        alert(\"Levy Deleted\")\r\n            this.setState({\r\n            feesName:'',\r\n            feesID:'',\r\n            feesRate:0,\r\n            feesData:'',\r\n            _id:''\r\n        })\r\n        this.myTimer = setTimeout(() => {\r\n            fetch(`${deptUrl}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    feesData:data\r\n                })\r\n                data.map((item)=>{\r\n                    var checkID = parseInt(item.feesID);\r\n                    var computeID = Math.max(checkID) +1;\r\n                    this.setState({\r\n                    \r\n                        feesID:computeID\r\n                    \r\n                    })\r\n                    \r\n                    return 'ok'\r\n                })\r\n                \r\n            })\r\n           \r\n        },1000)\r\n        this.myTimer = setTimeout(() => {\r\n                    \r\n            this.setState({\r\n                _id:Math.floor(Math.random()*10000),\r\n               \r\n                \r\n            })\r\n        },1000)\r\n       \r\n    }\r\n    \r\n\r\n    editDept(){\r\n        var toNum = parseInt(sessionStorage.getItem('feesID'))\r\n        fetch(`${getdeptID}${toNum}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    feesID:item.feesID,\r\n                    feesName:item.feesName,\r\n                    feesRate:item.feesRate\r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        })\r\n    }\r\n\r\n    \r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n   \r\n    async handleSubmit() {\r\n       \r\n        try {\r\n            \r\n            var finddeptID = this.state.feesData;\r\n            var founddeptID = this.state.feesID\r\n\r\n            var feesDatapost = {\r\n                \r\n                feesID:`${this.state.feesID}`,\r\n                feesName:`${this.state.feesName}`,\r\n                feesRate:`${this.state.feesRate}`,\r\n                _id:`${this.state._id}`\r\n                \r\n            }\r\n\r\n            if(finddeptID.some(item => item.feesID===founddeptID)){\r\n                alert(this.state.feesName+ \" already exist\");\r\n\r\n                fetch(`${deptUrl}`, {method:'GET'})\r\n                .then((resp) => resp.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        feesData:data\r\n                        \r\n                    })\r\n                    data.map((item)=>{\r\n                        var checkID = parseInt(item.feesID);\r\n                        var computeID = Math.max(checkID) +1;\r\n                        this.setState({\r\n                        \r\n                            feesID:computeID,\r\n                            feesName:'',\r\n                            feesRate:0\r\n        \r\n                        \r\n                        })\r\n                        \r\n                        return 'ok'\r\n                    })\r\n    \r\n                })\r\n                this.myTimer = setTimeout(() => {\r\n                    \r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000),\r\n                       \r\n                        \r\n                    })\r\n                },1000)\r\n               \r\n            }\r\n\r\n            else{\r\n                let result = await fetch(`${postdept}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        feesDatapost\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                alert(this.state.feesName+ \" Added\");\r\n                this.setState({\r\n                    feesName:'',\r\n                    feesIDs:'',\r\n                    feesRate:0,\r\n                    feesData: '',\r\n                    _id:''\r\n                })\r\n                fetch(`${deptUrl}`, {method:'GET'})\r\n                .then((resp) => resp.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        feesData:data\r\n                        \r\n                    })\r\n                    data.map((item)=>{\r\n                        var checkID = parseInt(item.feesID);\r\n                        var computeID = Math.max(checkID) +1;\r\n                        this.setState({\r\n                        \r\n                            feesID:computeID\r\n                        \r\n                        })\r\n                        \r\n                        return 'ok'\r\n                    })\r\n    \r\n                })\r\n                this.myTimer = setTimeout(() => {\r\n                    \r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000),\r\n                       \r\n                        \r\n                    })\r\n                },1000)\r\n            }\r\n\r\n           \r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    async feesUpdate() {\r\n       \r\n        try {\r\n            var id = this.state.feesID;\r\n           \r\n            var levyUpdated = {\r\n\r\n                _id:`${this.state._id}`,\r\n                feesName:`${this.state.feesName}`,\r\n                feesRate:`${this.state.feesRate}`,\r\n                feesID:`${this.state.feesID}`\r\n               \r\n                \r\n            }\r\n            let result = await fetch(`${putdept}/${id}`, {\r\n                method: 'put',\r\n    \r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-type': 'application/json',\r\n                },\r\n    \r\n                body: JSON.stringify(\r\n                    \r\n                    levyUpdated\r\n                        \r\n                )\r\n                    \r\n            });\r\n            console.log('result>  ' + result)\r\n            alert(this.state.feesName+ \" Updated\");\r\n            this.setState({\r\n                feesName:'',\r\n                feesID:'',\r\n                feesData: '',\r\n                feesRate:0,\r\n                _id:''\r\n            })\r\n\r\n            fetch(`${deptUrl}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    feesData:data\r\n                    \r\n                })\r\n                data.map((item)=>{\r\n                    var checkID = parseInt(item.feesID);\r\n                    var computeID = Math.max(checkID) +1;\r\n                    this.setState({\r\n                    \r\n                        feesID:computeID\r\n                    \r\n                    })\r\n                    return 'ok'\r\n                })\r\n\r\n            })\r\n            this.myTimer = setTimeout(() => {\r\n                \r\n                this.setState({\r\n                    _id:Math.floor(Math.random()*10000),\r\n                    \r\n                    \r\n                })\r\n            },1000)\r\n\r\n            \r\n        } catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    renderfeesData(data){\r\n        if(data){\r\n            \r\n            return data.map((item)=>{\r\n                data.sort((a, b) => a.feesID - b.feesID);\r\n                return(\r\n                    <>\r\n                    \r\n                        <tr key= {item._id}>\r\n                                \r\n                            <td className=\"table-light table-striped adjust2\">{item.feesID}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.feesName}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.feesRate}</td>\r\n                            <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-primary textcolor\" onMouseOver={()=>sessionStorage.setItem('feesID',item.feesID)} onClick={()=>{this.editDept()}}>Edit</button></td>\r\n                            <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-danger textcolor\" onMouseOver={()=>sessionStorage.setItem('getfeesdelID', item.feesID)} onClick={()=>{this.deletedept()}}>Delete</button></td>\r\n                                \r\n                        </tr>\r\n                    </>\r\n                )\r\n                \r\n            })\r\n            \r\n        }\r\n\r\n\r\n    }\r\n  \r\n\r\n    render() {\r\n        console.log (\">>> Inside Grpdetails\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Adlogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div  className=\"background990i2\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-50px'}}>Hospitality Levies</h4>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h6 style = {{color:'purple',marginLeft:'480px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                        </div>\r\n                    </div>\r\n                    <h4 style = {{color:'rgb(23, 23, 71)',marginLeft:'50px', marginBottom:'-40px'}}> </h4>\r\n\r\n                    <div className=\"formdesign510b\">\r\n                        <div className=\"row container\">\r\n                            \r\n                            <div className=\"col-4\">\r\n                                <p type=\"text\" className=\"form-control mb-3 formsize51\" name=\"feesID\" >{this.state.feesID} </p>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                               <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"feesName\" require placeholder=\"Enter Levy Name\" value={this.state.feesName} onChange={this.handleChange}/>\r\n                            </div>\r\n\r\n                            <div className=\"col-4\">\r\n                               <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"feesRate\" require placeholder=\"Enter Levy Name\" value={this.state.feesRate} onChange={this.handleChange}/>\r\n                            </div>\r\n\r\n                            <center>\r\n                                <br/>\r\n                                <span>\r\n                                    <button disabled={this.state.feesName===''||this.state.feesRate===0} className=\"btn btn-warning\" onClick={ () => this.handleSubmit()}>Add New Levy</button>\r\n                                    <button disabled ={this.state.feesName===''} className=\"btn btn-warning gap\" onClick={()=>this.feesUpdate()}>Save Update</button>\r\n                                    <button className=\"btn btn-danger gap\" onClick={ () => this.props.history.push('/settings')}>Close</button>\r\n                                    \r\n                                </span>\r\n                            </center>\r\n                           \r\n                            \r\n                        </div>\r\n                        <br/>\r\n                        <div className=\"container\">\r\n                            <table className=\"table table-hover\">\r\n                            \r\n                                <thead className=\"table-warning\">\r\n                                    <tr>\r\n                                        <th className=\"adjust5\">Levy ID</th>\r\n                                        <th className=\"adjust5\">Levy Name</th>\r\n                                        <th className=\"adjust5\">Levy Rate</th>\r\n                                        <th className=\"adjust5\">Action</th>\r\n                                        <th className=\"adjust5\"> </th>\r\n                                                \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className=\"table table-hover\">\r\n                                    {this.renderfeesData(this.state.feesData)}\r\n                                \r\n                                </tbody>\r\n                            </table>\r\n                            <center>\r\n                                <button className=\"btn btn-danger gap mb-3\" onClick={ () => this.props.history.push('/Settings')}>Close</button>\r\n                                <button className=\"btn btn-success mb-3 gap \" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>\r\n                            </center>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </>\r\n            \r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\">>> Inside GrpDidMount\", this.state);\r\n\r\n        fetch(`${deptUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                feesData:data,\r\n            \r\n\r\n            })\r\n            data.map((item)=>{\r\n                var checkID = parseInt(item.feesID);\r\n                var computeID = Math.max(checkID) +1;\r\n                this.setState({\r\n                \r\n                    feesID:computeID\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n           \r\n            \r\n        })\r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n       \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default RegFormSettings;","import React, { Component } from 'react';\r\nimport Adlogin from '../Adlogin';\r\nimport '../Reception/Reception.css';\r\nimport {Modal} from 'react-responsive-modal';\r\nimport NumberFormat from 'react-number-format';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst deptUrl= \"https://zarvichdemo.localto.net/rooms\";\r\nconst getdeptID= \"https://zarvichdemo.localto.net/rooms?details=\";\r\nconst postdept= \"https://zarvichdemo.localto.net/createRoom\";\r\n// const putdept= \"/editRoom\";\r\nconst deldept= \"https://zarvichdemo.localto.net/delRoom\";\r\n\r\nconst deptUrlType= \"https://zarvichdemo.localto.net/roomTypes\";\r\nconst postdeptType= \"https://zarvichdemo.localto.net/newRoom\";\r\nconst deldeptType= \"https://zarvichdemo.localto.net/delRoomType\";\r\n\r\n// const getRmStatus= \"/getRoomStatus\";\r\nconst postNewRmStatus= \"https://zarvichdemo.localto.net/createRoomStatus\";\r\n// const getRmStatuswrtRmNum= \"/getRoomStatus?roomSt\";\r\n// const editRoomStatus= \"/editRoomStatus\";\r\nconst delRmStatus= \"https://zarvichdemo.localto.net/delRoomSt\";\r\n\r\nconst userName = \"https://zarvichdemo.localto.net/adminUserInfo\";\r\n\r\n\r\nclass RoomSettings extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>> inside GrpCobtructor\", props)\r\n\r\n        this.state = {\r\n            _id:Math.floor(Math.random()*10000), //this will be same as roomNumbers in room creation and diff in room status change//\r\n            roomsData:'',\r\n            roomNumbers:'',\r\n            roomStatus:'green',\r\n            roomtypeName:'',\r\n            fname:'',\r\n            lname:'',\r\n            status:'',\r\n            BillStatus:'',\r\n\r\n            roomTypeID:0,\r\n            roomRate: '',\r\n            floorNumber:'',\r\n            \r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n\r\n            feesData:'',\r\n            roomType:'',\r\n            typeID:'',\r\n            edit: false\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    onOpenModaledit(){\r\n        this.setState({\r\n            edit: true\r\n        })\r\n\r\n        fetch(`${deptUrlType}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                feesData:data\r\n            })\r\n        })\r\n    }\r\n\r\n    onCloseModaledit(){\r\n        this.setState({\r\n            edit: false,\r\n            \r\n        })\r\n        fetch(`${deptUrlType}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                feesData:data\r\n            })\r\n            data.map((item)=>{\r\n                var checkIDType = parseInt(item.typeID);\r\n                var computeIDType = Math.max(checkIDType) +1;\r\n                this.setState({\r\n                \r\n                    typeID:computeIDType\r\n                \r\n                })\r\n                \r\n                return 'ok'\r\n            })\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    deletedeptType(){\r\n       \r\n        fetch(`${deldeptType}/${sessionStorage.getItem('getRmTypID')}`, {method:'delete'})\r\n        alert(\"Room Type Deleted\")\r\n            this.setState({\r\n            roomType:'',\r\n            typeID:'',\r\n            feesData:'',\r\n            _id:''\r\n        })\r\n        this.myTimer = setTimeout(() => {\r\n            fetch(`${deptUrlType}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    feesData:data\r\n                })\r\n                data.map((item)=>{\r\n                    var checkIDType = parseInt(item.typeID);\r\n                    var computeIDType = Math.max(checkIDType) +1;\r\n                    this.setState({\r\n                    \r\n                        typeID:computeIDType\r\n                    \r\n                    })\r\n                    \r\n                    return 'ok'\r\n                })\r\n                \r\n            })\r\n           \r\n        },1000)\r\n        this.myTimer = setTimeout(() => {\r\n                    \r\n            this.setState({\r\n                _id:Math.floor(Math.random()*10000),\r\n               \r\n                \r\n            })\r\n        },1000)\r\n       \r\n    }\r\n   \r\n\r\n    \r\n\r\n    deleteRoom(){\r\n       \r\n        fetch(`${deldept}/${sessionStorage.getItem('getRoomsdelID')}`, {method:'delete'})\r\n        fetch(`${delRmStatus}/${sessionStorage.getItem('getRoomsdelID')}`, {method:'delete'})\r\n        alert(\"Room Deleted\")\r\n            this.setState({\r\n            roomtypeName:'',\r\n            roomStatus:'',\r\n            floorNumber:'',\r\n            roomRate:'',\r\n            roomsData:'',\r\n            _id:''\r\n        })\r\n        this.myTimer = setTimeout(() => {\r\n            fetch(`${deptUrl}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    roomsData:data\r\n                })\r\n                \r\n                \r\n            })\r\n           \r\n        },1000)\r\n        this.myTimer = setTimeout(() => {\r\n                    \r\n            this.setState({\r\n                _id:Math.floor(Math.random()*10000),\r\n            })\r\n        },1000)\r\n       \r\n    }\r\n\r\n    editRoomz(){\r\n        fetch(`${getdeptID}${sessionStorage.getItem('roomsIden')}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    roomID:item.roomID,\r\n                    roomtypeName:item.roomtypeName,\r\n                    roomRate:item.roomRate,\r\n                    roomNumbers:item.roomNumbers,\r\n                    floorNumber:item.floorNumber\r\n\r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        })\r\n    }\r\n\r\n    \r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    handleChange3 = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        fetch(`${deptUrlType}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                feesData:data,\r\n                \r\n            })\r\n            \r\n        })\r\n        \r\n    }\r\n\r\n    handleChange2 = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n        if(event.target.value==='Add New'){\r\n            this.setState({\r\n                edit:true\r\n            })\r\n\r\n            fetch(`${deptUrlType}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    feesData:data\r\n                })\r\n\r\n                data.map((item)=>{\r\n                    var checkIDType = parseInt(item.typeID);\r\n                    var computeIDType = Math.max(checkIDType) +1;\r\n                    this.setState({\r\n                    \r\n                        typeID:computeIDType,\r\n                        roomType:'',\r\n                       \r\n                    })\r\n                    \r\n                    return 'ok'\r\n                })\r\n            })\r\n\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    async handleSubmitType() {\r\n       \r\n        try {\r\n            \r\n            var finddeptID = this.state.feesData;\r\n            var founddeptID = this.state.typeID\r\n\r\n            var feesDatapost = {\r\n                \r\n                typeID:`${this.state.typeID}`,\r\n                roomType:`${this.state.roomType}`,\r\n                _id:`${this.state._id}`\r\n                \r\n            }\r\n\r\n            if(finddeptID.some(item => item.typeID===founddeptID)){\r\n                alert(this.state.roomType+ \" already exist\");\r\n\r\n                fetch(`${deptUrlType}`, {method:'GET'})\r\n                .then((resp) => resp.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        feesData:data\r\n                        \r\n                    })\r\n                    data.map((item)=>{\r\n                        var checkIDType = parseInt(item.typeID);\r\n                        var computeIDType = Math.max(checkIDType) +1;\r\n                        this.setState({\r\n                        \r\n                            typeID:computeIDType,\r\n                            roomType:'',\r\n                           \r\n                        })\r\n                        \r\n                        return 'ok'\r\n                    })\r\n    \r\n                })\r\n                this.myTimer = setTimeout(() => {\r\n                    \r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000),\r\n                       \r\n                        \r\n                    })\r\n                },1000)\r\n               \r\n            }\r\n\r\n            else{\r\n                let result = await fetch(`${postdeptType}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        feesDatapost\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                alert(this.state.roomType+ \" Added\");\r\n                this.setState({\r\n                    roomType:'',\r\n                    typeID:'',\r\n                    feesData: '',\r\n                    _id:''\r\n                })\r\n                fetch(`${deptUrlType}`, {method:'GET'})\r\n                .then((resp) => resp.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        feesData:data\r\n                        \r\n                    })\r\n                    data.map((item)=>{\r\n                        var checkIDType = parseInt(item.typeID);\r\n                        var computeIDType = Math.max(checkIDType) +1;\r\n                        this.setState({\r\n                        \r\n                            typeID:computeIDType\r\n                        \r\n                        })\r\n                        \r\n                        return 'ok'\r\n                    })\r\n    \r\n                })\r\n                this.myTimer = setTimeout(() => {\r\n                    \r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000),\r\n                       \r\n                        \r\n                    })\r\n                },1000)\r\n            }\r\n\r\n           \r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async handleSubmit() {\r\n       \r\n        try {\r\n            \r\n            var finddeptID = this.state.roomsData;\r\n            var founddeptID = this.state.roomNumbers\r\n\r\n            var NewroomDatapost = {\r\n                roomtypeID:parseInt(`${this.state.floorNumber}`),\r\n                roomtypeName:`${this.state.roomtypeName}`,\r\n                roomNumbers: `${this.state.roomNumbers}`,\r\n                roomRate:`${this.state.roomRate}`,\r\n                floorNumber:`${this.state.floorNumber}`\r\n                \r\n            }\r\n\r\n            var NewRoomStatusPost = {\r\n                \r\n                _id:`${this.state.roomNumbers}`,\r\n                roomNumbers: `${this.state.roomNumbers}`,\r\n                roomStatus:`${this.state.roomStatus}`,\r\n                roomtypeName:`${this.state.roomtypeName}`,\r\n                fname:`${this.state.fname}`,\r\n                lname:`${this.state.lname}`,\r\n                status:`${this.state.status}`,\r\n                BillStatus:`${this.state.BillStatus}`\r\n                \r\n            }\r\n\r\n            if(finddeptID.some(item => item.roomNumbers===founddeptID)){\r\n                alert(this.state.roomNumbers+ \" already exist\");\r\n\r\n                fetch(`${deptUrl}`, {method:'GET'})\r\n                .then((resp) => resp.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        roomsData:data\r\n                        \r\n                    })\r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000),\r\n                        roomtypeName:'',\r\n                        roomRate:'',\r\n                        roomNumbers:'',\r\n                        roomStatus:'green',\r\n                        floorNumber:'',\r\n                        feesData: ''\r\n                    })\r\n                    \r\n    \r\n                })\r\n               \r\n            }\r\n            else if(finddeptID.some(item => item.roomNumbers===founddeptID)){\r\n                alert(this.state.roomNumbers+ \" already exist\");\r\n\r\n                fetch(`${deptUrl}`, {method:'GET'})\r\n                .then((resp) => resp.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        roomsData:data\r\n                        \r\n                    })\r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000),\r\n                        roomtypeName:'',\r\n                        roomRate:'',\r\n                        roomNumbers:'',\r\n                        roomStatus:'green',\r\n                        floorNumber:'',\r\n                        feesData: ''\r\n                    })\r\n                        \r\n                       \r\n                    \r\n    \r\n                })\r\n               \r\n            }\r\n\r\n\r\n            else{\r\n                let result = await fetch(`${postdept}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        NewroomDatapost\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n\r\n                let result2 = await fetch(`${postNewRmStatus}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        NewRoomStatusPost\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result2>  ' + result2)\r\n                alert(this.state.roomNumbers+ \" Added\");\r\n                this.setState({\r\n                    _id:Math.floor(Math.random()*10000),\r\n                    roomtypeName:'',\r\n                    roomRate:'',\r\n                    roomNumbers:'',\r\n                    roomStatus:'green',\r\n                    floorNumber:'',\r\n                    feesData: '',\r\n                })\r\n                fetch(`${deptUrl}`, {method:'GET'})\r\n                .then((resp) => resp.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        roomsData:data\r\n                        \r\n                    })\r\n                    this.setState({\r\n                        _id:Math.floor(Math.random()*10000)\r\n                    })\r\n                })\r\n               \r\n            }\r\n\r\n           \r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    renderTypeData(data){\r\n        if(data){\r\n            \r\n            return data.map((item)=>{\r\n                data.sort((a, b) => a.typeID - b.typeID);\r\n                if(item.roomType!=='Add New'){\r\n                    return(\r\n                        <>\r\n                        \r\n                            <tr key={item.typeID}>\r\n                                    \r\n                                <td className=\"table-light table-striped adjust2\">{item.typeID}</td>\r\n                                <td className=\"table-light table-striped adjust2\">{item.roomType}</td>\r\n                                <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-danger textcolor\" onMouseOver={()=>sessionStorage.setItem('getRmTypID', item.typeID)} onClick={()=>{this.deletedeptType()}}>Delete</button></td>\r\n                                    \r\n                            </tr>\r\n                        </>\r\n                    )\r\n                    \r\n                    \r\n                }\r\n                else{\r\n                    return(\r\n                        <>\r\n                        \r\n                            <tr key={item.typeID}>\r\n                                    \r\n                                <td> </td>\r\n                                \r\n                                    \r\n                            </tr>\r\n                        </>\r\n                    )\r\n                }\r\n               \r\n                \r\n                \r\n            })\r\n            \r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderRoomTypesData(data){\r\n        if(data) {\r\n           data.sort((a, b) => a.feesName - b.feesName);\r\n            return data.map((item, index) => {\r\n                \r\n                return(\r\n                    <>\r\n                        <option key={index} value={item.roomType}>\r\n                            {item.roomType}\r\n                        </option>\r\n                    </>\r\n                )\r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    renderRoomsData(data){\r\n        if(data){\r\n            \r\n            return data.map((item)=>{\r\n                data.sort((a, b) => a.roomNumbers - b.roomNumbers);\r\n                return(\r\n                    <>\r\n                    \r\n                        <tr key={item._id}>\r\n                                \r\n                            {/* <td key= {item._id} className=\"table-light table-striped adjust2\">{item.roomID}</td> */}\r\n                            <td className=\"table-light table-striped adjust2\">{item.roomtypeName}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.roomNumbers}</td>\r\n                            <td className=\"table-light table-striped adjust2\"><NumberFormat value={item.roomRate} thousandSeparator={true} displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.floorNumber}</td>\r\n                            {/* <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-primary textcolor\" onMouseOver={()=>sessionStorage.setItem('roomsIden',item.roomNumbers)} onClick={()=>{this.editRoomz()}}>Edit</button></td> */}\r\n                            <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-danger textcolor\" onMouseOver={()=>sessionStorage.setItem('getRoomsdelID', item.roomNumbers)} onClick={()=>{this.deleteRoom()}}>Delete</button></td>\r\n                                \r\n                        </tr>\r\n                    </>\r\n                )\r\n                \r\n            })\r\n            \r\n        }\r\n\r\n\r\n    }\r\n  \r\n\r\n    render() {\r\n        console.log (\">>> Inside Grpdetails\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Adlogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div  className=\"background990i2\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-50px'}}>Rooms Management</h4>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h6 style = {{color:'purple',marginLeft:'480px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                        </div>\r\n                    </div>\r\n                    <h4 style = {{color:'rgb(23, 23, 71)',marginLeft:'50px', marginBottom:'-40px'}}> </h4>\r\n\r\n                    <div className=\"formdesign510b\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                {/* <div className=\"col-2\">\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51\" name=\"roomID\" >{this.state.roomID} </p>\r\n                                </div> */}\r\n                                \r\n                                <div className=\"col-3\">\r\n                                <input type=\"number\" className=\"form-control mb-3 formsize51\" name=\"roomNumbers\" require placeholder=\"Room Number\" value={this.state.roomNumbers} onChange={this.handleChange3}/>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <select className=\"form-select  mb-3 formsize51\" name=\"roomtypeName\" onChange={this.handleChange2}>\r\n                                        <option defaultValue=''>Room Types</option>\r\n                                        {this.renderRoomTypesData(this.state.feesData)}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                <input type=\"number\" className=\"form-control mb-3 formsize51\" name=\"roomRate\" require placeholder=\"Room Rate\" value={this.state.roomRate} onChange={this.handleChange}/>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                <input type=\"number\" className=\"form-control mb-3 formsize51\" name=\"floorNumber\" require placeholder=\"Floor Number\" value={this.state.floorNumber} onChange={this.handleChange}/>\r\n                                </div>\r\n                            </div>\r\n                           \r\n                            <center>\r\n                                <br/>\r\n                                <span>\r\n                                    <button disabled={this.state.roomtypeName===''||this.state.roomRate===''||this.state.roomNumbers===''||this.state.floorNumber===''} className=\"btn btn-warning\" onClick={ () => this.handleSubmit()}>Add New Room</button>\r\n                                    {/* <button disabled ={this.state.feesName===''} className=\"btn btn-warning gap\" onClick={()=>this.RoomUpdate()}>Save Update</button> */}\r\n                                    <button className=\"btn btn-danger gap\" onClick={ () => this.props.history.push('/settings')}>Close</button>\r\n                                    \r\n                                </span>\r\n                            </center>\r\n                           \r\n                            \r\n                        </div>\r\n                        <br/>\r\n                        <div className=\"container\">\r\n                            <table className=\"table table-hover\">\r\n                            \r\n                                <thead className=\"table-warning\">\r\n                                    <tr>\r\n                                        {/* <th className=\"adjust5\">ID</th> */}\r\n                                        <th className=\"adjust5\">Room Name</th>\r\n                                        <th className=\"adjust5\">Room Number</th>\r\n                                        <th className=\"adjust5\">Room Rate</th>\r\n                                        <th className=\"adjust5\">Floor Number</th>\r\n                                        <th className=\"adjust5\">Action</th>\r\n                                        <th className=\"adjust5\"> </th>\r\n                                                \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className=\"table table-hover\">\r\n                                    {this.renderRoomsData(this.state.roomsData)}\r\n                                \r\n                                </tbody>\r\n                            </table>\r\n                            <center>\r\n                                <button className=\"btn btn-danger gap mb-3\" onClick={ () => this.props.history.push('/Settings')}>Close</button>\r\n                                <button className=\"btn btn-danger gap mb-3\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>\r\n                            </center>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal open={this.state.edit} onClose={()=>this.onCloseModaledit()}>\r\n                    <div  className=\"background990i2b5\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\">\r\n                                <h6 style = {{color:'silver',marginLeft:'50px', marginBottom:'-50px'}}>Add Room Type</h6>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <h6 style = {{color:'purple',marginLeft:'480px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                            </div>\r\n                        </div>\r\n                        <h4 style = {{color:'rgb(23, 23, 71)',marginLeft:'50px', marginBottom:'-40px'}}> </h4>\r\n\r\n                        <center>\r\n                        <div className=\"formdesign510b21\">\r\n                            <center>\r\n                            <div className=\"row container\">\r\n                                \r\n                                <div className=\"col-6\">\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51\" name=\"typeID\" >{this.state.typeID} </p>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"roomType\" require placeholder=\"Enter Room Type\" value={this.state.roomType} onChange={this.handleChange}/>\r\n                                </div>\r\n\r\n                                <center>\r\n                                    <br/>\r\n                                    <span>\r\n                                        <button disabled={this.state.feesName===''||this.state.typeID===''} className=\"btn btn-warning\" onClick={ () => this.handleSubmitType()}>Add Room Type</button>\r\n                                        <button className=\"btn btn-danger gap\" onClick={ () => this.onCloseModaledit()}>Close</button>\r\n                                        \r\n                                    </span>\r\n                                </center>\r\n                            \r\n                                \r\n                            </div>\r\n                            </center>\r\n                            <br/>\r\n                            <div className=\"container\">\r\n                                <table className=\"table table-hover\">\r\n                                \r\n                                    <thead className=\"table-warning\">\r\n                                        <tr>\r\n                                            <th className=\"adjust5\">Type ID</th>\r\n                                            <th className=\"adjust5\">Room Name</th>\r\n                                            <th className=\"adjust5\">Action</th>\r\n                                            <th className=\"adjust5\"> </th>\r\n                                                    \r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody className=\"table table-hover\">\r\n                                        {this.renderTypeData(this.state.feesData)}\r\n                                    \r\n                                    </tbody>\r\n                                </table>\r\n                                <center>\r\n                                    <button className=\"btn btn-danger gap mb-3\" onClick={ () => this.onCloseModaledit()}>Close</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                        </center>\r\n                    </div>\r\n\r\n                </Modal>\r\n                \r\n            </>\r\n            \r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\">>> Inside GrpDidMount\", this.state);\r\n\r\n        fetch(`${deptUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                roomsData:data,\r\n                \r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${deptUrlType}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                feesData:data,\r\n                \r\n            })\r\n            \r\n        })\r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n       \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default RoomSettings;","import React, { Component } from 'react';\r\nimport Adlogin from '../Adlogin';\r\nimport '../Reception/Reception.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst getBarUsers= \"https://zarvichdemo.localto.net/barUserInfo?barrefcode=\";\r\nconst postBarUsers= \"https://zarvichdemo.localto.net/baruser\";\r\nconst delBarUsers= \"https://zarvichdemo.localto.net/delbarUser\";\r\nconst editBarUsers= \"https://zarvichdemo.localto.net/editBarUser\";\r\n\r\nconst getFrontUsers= \"https://zarvichdemo.localto.net/fofUserInfo?fofrefcode=\";\r\nconst postFrontUsers= \"https://zarvichdemo.localto.net/fofuser\";\r\nconst delFrontUsers= \"https://zarvichdemo.localto.net/delfrontUser\";\r\nconst editFrontUsers= \"https://zarvichdemo.localto.net/editFrontUser\";\r\n\r\nconst postPoolUsers= \"https://zarvichdemo.localto.net/pooluser\";\r\nconst delPoolUsers= \"https://zarvichdemo.localto.net/delpoolUser\";\r\nconst editPoolUsers= \"https://zarvichdemo.localto.net/editPoolUser\";\r\n\r\nconst getClubUsers= \"https://zarvichdemo.localto.net/clubUserInfo?clubcode=\";\r\nconst postClubUsers= \"https://zarvichdemo.localto.net/ClubUsers\";\r\nconst delClubUsers= \"https://zarvichdemo.localto.net/delclubUser\";\r\nconst editClubUsers= \"https://zarvichdemo.localto.net/editClubUser\";\r\n\r\nconst getAdminUsers= \"https://zarvichdemo.localto.net/adminUserInfo?refcode=\";\r\nconst postAdminUsers= \"https://zarvichdemo.localto.net/adminuser\";\r\nconst delAdminUsers= \"https://zarvichdemo.localto.net/deladminUser\";\r\nconst editAdminUsers= \"https://zarvichdemo.localto.net/editAdminUser\";\r\n\r\nconst getHousekpUsers= \"https://zarvichdemo.localto.net/housekpUserInfo?\";\r\nconst postHousekpUsers= \"https://zarvichdemo.localto.net/housekeepuser\";\r\nconst delHousekpUsers= \"https://zarvichdemo.localto.net/delhousekpUser\";\r\nconst editHousekpUsers= \"https://zarvichdemo.localto.net/edithousekpUser\";\r\n\r\nconst getRestUsers= \"https://zarvichdemo.localto.net/restUserInfo?restrefcode=\";\r\nconst postRestUsers= \"https://zarvichdemo.localto.net/restuser\";\r\nconst delRestUsers= \"https://zarvichdemo.localto.net/delrestUser\";\r\nconst editRestUsers= \"https://zarvichdemo.localto.net/editRestkpUser\";\r\n\r\nconst getBillingUsers= \"https://zarvichdemo.localto.net/billingUserInfo?billingrefcode=\";\r\nconst postBillingUsers= \"https://zarvichdemo.localto.net/billinguser\";\r\nconst delBillingUsers= \"https://zarvichdemo.localto.net/delbillingUser\";\r\nconst editBillingUsers= \"https://zarvichdemo.localto.net/editbillingUser\";\r\n\r\nconst getFandBUsers= \"https://zarvichdemo.localto.net/fandbUserInfo?fandbrefcode=\";\r\nconst postFandBUsers= \"https://zarvichdemo.localto.net/fandbuser\";\r\nconst delFandBUsers= \"https://zarvichdemo.localto.net/delfandbUser\";\r\nconst editFandBUsers= \"https://zarvichdemo.localto.net/billingUserInfo\";\r\n\r\nconst getstoreUsers= \"https://zarvichdemo.localto.net/storeUserInfo?storerefcode=\";\r\nconst poststoreUsers= \"https://zarvichdemo.localto.net/storeuser\";\r\nconst delStoreUsers= \"https://zarvichdemo.localto.net/delstoreUser\";\r\nconst editStoreUsers= \"https://zarvichdemo.localto.net/editstoreUser\";\r\n\r\n\r\nconst userName = \"https://zarvichdemo.localto.net/adminUserInfo\";\r\n\r\n\r\nclass Users extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>> inside GrpCobtructor\", props)\r\n\r\n        this.state = {\r\n            _id:Math.floor(Math.random()*1000000), //this will be same as roomNumbers in room creation and diff in room status change//\r\n            BarUsersData:'',\r\n            FrontOffcUsers:'',\r\n            BillingUsers:'',\r\n            PoolUsers:'',\r\n            ClubUsers:'',\r\n            AdminUsers:'',\r\n            HouseKpUsers:'',\r\n            RestUsers:'',\r\n            FandBUsers:'',\r\n            storeUsers:'',\r\n            staffData:'',\r\n\r\n            staffname:'',\r\n            username:'',\r\n            password:'',\r\n            department:'',\r\n\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n\r\n            show: 'form-select  mb-3 formsize51',\r\n            hide:'hidden'\r\n           \r\n            \r\n        }\r\n\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    deleteUser(){\r\n       if(sessionStorage.getItem('getUserDept')==='Admin'){\r\n            fetch(`${delAdminUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {method:'delete'})\r\n            fetch(`${delBillingUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {method:'delete'})\r\n            fetch(`${delBarUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {method:'delete'})\r\n            fetch(`${delPoolUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {method:'delete'})\r\n            fetch(`${delClubUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {method:'delete'})\r\n            fetch(`${delStoreUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {method:'delete'})\r\n            fetch(`${delFandBUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {method:'delete'})\r\n            fetch(`${delFrontUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {method:'delete'})\r\n            fetch(`${delHousekpUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {method:'delete'})\r\n            fetch(`${delRestUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {method:'delete'})\r\n            alert(\"Admin User Removed\")\r\n                this.setState({\r\n                staffname:'',\r\n                password:'',\r\n                username:'',\r\n                department:'Select Department',\r\n                _id:'',\r\n\r\n            })\r\n\r\n            this.myTimer = setTimeout(() => {\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    this.setState({\r\n\r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff,...clubStaff],\r\n                        _id:Math.floor(Math.random()*10000000)\r\n\r\n                    })\r\n    \r\n                },1000);\r\n               \r\n            },1000)\r\n\r\n        }\r\n\r\n        else if(sessionStorage.getItem('getUserDept')==='Billing'){\r\n            fetch(`${delBillingUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {method:'delete'})\r\n            alert(\"Billing User Removed\")\r\n                this.setState({\r\n                staffname:'',\r\n                password:'',\r\n                username:'',\r\n                department:'Select Department',\r\n                _id:'',\r\n\r\n                // BarUsersData:'',\r\n                // FrontOffcUsers:'',\r\n                // BillingUsers:'',\r\n                // PoolUsers:'',\r\n                // AdminUsers:'',\r\n                // HouseKpUsers:'',\r\n                // RestUsers:'',\r\n                // FandBUsers:'',\r\n                // storeUsers:'',\r\n                // staffData:''\r\n            })\r\n\r\n            this.myTimer = setTimeout(() => {\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n\r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.clubStaff;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    this.setState({\r\n                        \r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff,...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n\r\n                    })\r\n    \r\n                },2000);\r\n               \r\n            },1000)\r\n\r\n        }\r\n\r\n        else if(sessionStorage.getItem('getUserDept')==='Bar'){\r\n            fetch(`${delBarUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {method:'delete'})\r\n            alert(\"Bar User Removed\")\r\n                this.setState({\r\n                staffname:'',\r\n                password:'',\r\n                username:'',\r\n                department:'Select Department',\r\n                _id:'',\r\n\r\n                // BarUsersData:'',\r\n                // FrontOffcUsers:'',\r\n                // BillingUsers:'',\r\n                // PoolUsers:'',\r\n                // AdminUsers:'',\r\n                // HouseKpUsers:'',\r\n                // RestUsers:'',\r\n                // FandBUsers:'',\r\n                // storeUsers:'',\r\n                // staffData:''\r\n            })\r\n\r\n            this.myTimer = setTimeout(() => {\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.clubStaff;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    this.setState({\r\n                        \r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n\r\n                    })\r\n    \r\n                },2000);\r\n               \r\n            },1000)\r\n\r\n        }\r\n\r\n\r\n        else if(sessionStorage.getItem('getUserDept')==='PoolBar'){\r\n            fetch(`${delPoolUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {method:'delete'})\r\n            alert(\"PoolBar User Removed\")\r\n                this.setState({\r\n                staffname:'',\r\n                password:'',\r\n                username:'',\r\n                department:'Select Department',\r\n                _id:'',\r\n\r\n                // BarUsersData:'',\r\n                // FrontOffcUsers:'',\r\n                // BillingUsers:'',\r\n                // PoolUsers:'',\r\n                // AdminUsers:'',\r\n                // HouseKpUsers:'',\r\n                // RestUsers:'',\r\n                // FandBUsers:'',\r\n                // storeUsers:'',\r\n                // staffData:''\r\n            })\r\n\r\n            this.myTimer = setTimeout(() => {\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.clubStaff;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    this.setState({\r\n                        \r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n\r\n                    })\r\n    \r\n                },2000);\r\n               \r\n            },1000)\r\n\r\n        }\r\n\r\n        else if(sessionStorage.getItem('getUserDept')==='Club'){\r\n            fetch(`${delClubUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {method:'delete'})\r\n            alert(\"Club User Removed\")\r\n                this.setState({\r\n                staffname:'',\r\n                password:'',\r\n                username:'',\r\n                department:'Select Department',\r\n                _id:'',\r\n\r\n                // BarUsersData:'',\r\n                // FrontOffcUsers:'',\r\n                // BillingUsers:'',\r\n                // PoolUsers:'',\r\n                // AdminUsers:'',\r\n                // HouseKpUsers:'',\r\n                // RestUsers:'',\r\n                // FandBUsers:'',\r\n                // storeUsers:'',\r\n                // staffData:''\r\n            })\r\n\r\n            this.myTimer = setTimeout(() => {\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.clubStaff;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    this.setState({\r\n                        \r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n\r\n                    })\r\n    \r\n                },2000);\r\n               \r\n            },1000)\r\n\r\n        }\r\n\r\n        else if(sessionStorage.getItem('getUserDept')==='Store'){\r\n            fetch(`${delStoreUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {method:'delete'})\r\n            alert(\"Store User Removed\")\r\n                this.setState({\r\n                staffname:'',\r\n                password:'',\r\n                username:'',\r\n                department:'Select Department',\r\n                _id:'',\r\n\r\n                // BarUsersData:'',\r\n                // FrontOffcUsers:'',\r\n                // BillingUsers:'',\r\n                // PoolUsers:'',\r\n                // AdminUsers:'',\r\n                // HouseKpUsers:'',\r\n                // RestUsers:'',\r\n                // FandBUsers:'',\r\n                // storeUsers:'',\r\n                // staffData:''\r\n            })\r\n\r\n            this.myTimer = setTimeout(() => {\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    this.setState({\r\n                        \r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n\r\n                    })\r\n    \r\n                },2000);\r\n               \r\n            },1000)\r\n\r\n        }\r\n\r\n        else if(sessionStorage.getItem('getUserDept')==='FandB'){\r\n            fetch(`${delFandBUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {method:'delete'})\r\n            alert(\"F and B User Removed\")\r\n                this.setState({\r\n                staffname:'',\r\n                password:'',\r\n                username:'',\r\n                department:'Select Department',\r\n                _id:'',\r\n\r\n                // BarUsersData:'',\r\n                // FrontOffcUsers:'',\r\n                // BillingUsers:'',\r\n                // PoolUsers:'',\r\n                // AdminUsers:'',\r\n                // HouseKpUsers:'',\r\n                // RestUsers:'',\r\n                // FandBUsers:'',\r\n                // storeUsers:'',\r\n                // staffData:''\r\n            })\r\n\r\n            this.myTimer = setTimeout(() => {\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    this.setState({\r\n                        \r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n\r\n                    })\r\n    \r\n                },2000);\r\n               \r\n            },1000)\r\n\r\n            \r\n\r\n        }\r\n\r\n        else if(sessionStorage.getItem('getUserDept')==='Reception'){\r\n            fetch(`${delFrontUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {method:'delete'})\r\n            alert(\"Reception User Removed\")\r\n                this.setState({\r\n                    staffname:'',\r\n                    password:'',\r\n                    username:'',\r\n                    department:'Select Department',\r\n                    _id:'',\r\n    \r\n                    // BarUsersData:'',\r\n                    // FrontOffcUsers:'',\r\n                    // BillingUsers:'',\r\n                    // PoolUsers:'',\r\n                    // AdminUsers:'',\r\n                    // HouseKpUsers:'',\r\n                    // RestUsers:'',\r\n                    // FandBUsers:'',\r\n                    // storeUsers:'',\r\n                    // staffData:''\r\n            })\r\n\r\n            this.myTimer = setTimeout(() => {\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n\r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    this.setState({\r\n                        \r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n\r\n                    })\r\n    \r\n                },2000);\r\n               \r\n            },1000)\r\n\r\n            \r\n\r\n        }\r\n\r\n        else if(sessionStorage.getItem('getUserDept')==='HouseKeeping'){\r\n            fetch(`${delHousekpUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {method:'delete'})\r\n            alert(\"HouseKeeping User Removed\")\r\n                this.setState({\r\n                    staffname:'',\r\n                    password:'',\r\n                    username:'',\r\n                    department:'Select Department',\r\n                    _id:'',\r\n    \r\n                    // BarUsersData:'',\r\n                    // FrontOffcUsers:'',\r\n                    // BillingUsers:'',\r\n                    // PoolUsers:'',\r\n                    // AdminUsers:'',\r\n                    // HouseKpUsers:'',\r\n                    // RestUsers:'',\r\n                    // FandBUsers:'',\r\n                    // storeUsers:'',\r\n                    // staffData:''\r\n            })\r\n\r\n            this.myTimer = setTimeout(() => {\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n\r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        clubStaff:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    this.setState({\r\n                        \r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n\r\n                    })\r\n    \r\n                },2000);\r\n               \r\n            },1000)\r\n\r\n            \r\n\r\n        }\r\n\r\n        else if(sessionStorage.getItem('getUserDept')==='Restaurant'){\r\n            fetch(`${delRestUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {method:'delete'})\r\n            alert(\"Restaurant User Removed\")\r\n                this.setState({\r\n                    staffname:'',\r\n                    password:'',\r\n                    username:'',\r\n                    department:'Select Department',\r\n                    _id:'',\r\n    \r\n                    // BarUsersData:'',\r\n                    // FrontOffcUsers:'',\r\n                    // BillingUsers:'',\r\n                    // PoolUsers:'',\r\n                    // AdminUsers:'',\r\n                    // HouseKpUsers:'',\r\n                    // RestUsers:'',\r\n                    // FandBUsers:'',\r\n                    // storeUsers:'',\r\n                    // staffData:''\r\n            })\r\n\r\n            this.myTimer = setTimeout(() => {\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    var HousekpStaff=this.state.HouseKpUsers;\r\n                    this.setState({staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...HousekpStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n\r\n                    })\r\n    \r\n                },1000);\r\n               \r\n            },1000)\r\n\r\n            \r\n        }\r\n        \r\n        \r\n        \r\n       \r\n    }\r\n\r\n\r\n    editUser(){\r\n        if(sessionStorage.getItem('editUserDept')==='Admin'){\r\n            fetch(`${getAdminUsers}${parseInt(sessionStorage.getItem('editUserID'))}`, {method:'get'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({\r\n                        staffname:item.name,\r\n                        department:item.department,\r\n                        password:item.password,\r\n                        username:item.username,\r\n                    })\r\n                    return 'ok'\r\n                })\r\n                \r\n                \r\n            })\r\n             \r\n        }\r\n \r\n        else if(sessionStorage.getItem('editUserDept')==='Billing'){\r\n            fetch(`${getBillingUsers}${parseInt(sessionStorage.getItem('editUserID'))}`, {method:'get'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({\r\n                        staffname:item.name,\r\n                        department:item.department,\r\n                        password:item.password,\r\n                        username:item.username,\r\n                    })\r\n                    return 'ok'\r\n                })\r\n               \r\n                \r\n            })\r\n        }\r\n \r\n        else if(sessionStorage.getItem('editUserDept')==='Bar'){\r\n            fetch(`${getBarUsers}${parseInt(sessionStorage.getItem('editUserID'))}`, {method:'get'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({\r\n                        staffname:item.name,\r\n                        department:item.department,\r\n                        password:item.password,\r\n                        username:item.username,\r\n                    })\r\n                    return 'ok'\r\n                })\r\n                \r\n                \r\n            })\r\n \r\n        }\r\n \r\n\r\n        else if(sessionStorage.getItem('editUserDept')==='Club'){\r\n            fetch(`${getClubUsers}${parseInt(sessionStorage.getItem('editUserID'))}`, {method:'get'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({\r\n                        staffname:item.name,\r\n                        department:item.department,\r\n                        password:item.password,\r\n                        username:item.username\r\n                    })\r\n                    return 'ok'\r\n                })\r\n                \r\n                \r\n            })\r\n \r\n            \r\n \r\n        }\r\n \r\n        else if(sessionStorage.getItem('editUserDept')==='Store'){\r\n            fetch(`${getstoreUsers}${parseInt(sessionStorage.getItem('editUserID'))}`, {method:'get'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({\r\n                        staffname:item.name,\r\n                        department:item.department,\r\n                        password:item.password,\r\n                        username:item.username\r\n                    })\r\n                    return 'ok'\r\n                })\r\n                \r\n                \r\n            })\r\n \r\n        }\r\n \r\n        else if(sessionStorage.getItem('editUserDept')==='FandB'){\r\n            fetch(`${getFandBUsers}${parseInt(sessionStorage.getItem('editUserID'))}`, {method:'get'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({\r\n                        staffname:item.name,\r\n                        department:item.department,\r\n                        password:item.password,\r\n                        username:item.username\r\n                    })\r\n                    return 'ok'\r\n                })\r\n                \r\n                \r\n            })\r\n        }\r\n \r\n        else if(sessionStorage.getItem('editUserDept')==='Reception'){\r\n            fetch(`${getFrontUsers}${parseInt(sessionStorage.getItem('editUserID'))}`, {method:'get'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({\r\n                        staffname:item.name,\r\n                        department:item.department,\r\n                        password:item.password,\r\n                        username:item.username\r\n                    })\r\n                    return 'ok'\r\n                })\r\n                \r\n                \r\n            })\r\n \r\n            \r\n        }\r\n \r\n        else if(sessionStorage.getItem('editUserDept')==='HouseKeeping'){\r\n            fetch(`${getHousekpUsers}${parseInt(sessionStorage.getItem('editUserID'))}`, {method:'get'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({\r\n                        staffname:item.name,\r\n                        department:item.department,\r\n                        password:item.password,\r\n                        username:item.username\r\n                    })\r\n                    return 'ok'\r\n                })\r\n                \r\n                \r\n            })\r\n \r\n        }\r\n \r\n        else if(sessionStorage.getItem('editUserDept')==='Restaurant'){\r\n            fetch(`${getRestUsers}${parseInt(sessionStorage.getItem('editUserID'))}`, {method:'get'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({\r\n                        staffname:item.name,\r\n                        department:item.department,\r\n                        password:item.password,\r\n                        username:item.username\r\n                    })\r\n                    return 'ok'\r\n                })\r\n                \r\n                \r\n            })\r\n \r\n        }\r\n         \r\n    }\r\n\r\n    async handleUpdate() {\r\n       \r\n        try {\r\n            var UserUpdate = {\r\n                name:`${this.state.staffname}`,\r\n                username:`${this.state.username}`,\r\n                password:`${this.state.password}`,\r\n                department: `${this.state.department}`\r\n                \r\n            }\r\n\r\n            if(this.state.department==='Admin'){\r\n                let AdminEdit = await fetch(`${editAdminUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {\r\n                    method: 'put',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        UserUpdate\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('AdminEdit>  ' + AdminEdit)\r\n\r\n                let ReceptnEdit = await fetch(`${editFrontUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {\r\n                    method: 'put',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        UserUpdate\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('ReceptnEdit>  ' + ReceptnEdit)\r\n                let PoolEdit = await fetch(`${editPoolUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {\r\n                    method: 'put',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        UserUpdate\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('PoolEdit>  ' + PoolEdit)\r\n                let ClubEdit = await fetch(`${editClubUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {\r\n                    method: 'put',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        UserUpdate\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('ClubEdit>  ' + ClubEdit)\r\n                let StoreEdit = await fetch(`${editStoreUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {\r\n                    method: 'put',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        UserUpdate\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('StoreEdit>  ' + StoreEdit)\r\n                let BillingEdit = await fetch(`${editBillingUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {\r\n                    method: 'put',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        UserUpdate\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('BillingEdit>  ' + BillingEdit)\r\n                let HousekpEdit = await fetch(`${editHousekpUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {\r\n                    method: 'put',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        UserUpdate\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('HousekpEdit>  ' + HousekpEdit)\r\n                let RestEdit = await fetch(`${editRestUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {\r\n                    method: 'put',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        UserUpdate\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('RestEdit>  ' + RestEdit)\r\n                let FandBEdit = await fetch(`${editFandBUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {\r\n                    method: 'put',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        UserUpdate\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('FandBEdit>  ' + FandBEdit)\r\n\r\n\r\n\r\n                alert(this.state.department+ \" User Added\");\r\n                this.setState({\r\n                    staffname:'',\r\n                    username:'',\r\n                    department:'Select Department',\r\n                    password:'',\r\n                    \r\n                })\r\n\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    var HousekpStaff=this.state.HouseKpUsers;\r\n                    this.setState({\r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...HousekpStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n                    })\r\n    \r\n                },2000);\r\n\r\n            }\r\n\r\n            else if(this.state.department==='Reception'){\r\n                let ReceptnEdit = await fetch(`${editFrontUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {\r\n                    method: 'put',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        UserUpdate\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('ReceptnEdit>  ' + ReceptnEdit)\r\n                let BillingEdit = await fetch(`${editBillingUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {\r\n                    method: 'put',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        UserUpdate\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('BillingEdit>  ' + BillingEdit)\r\n                \r\n                alert(this.state.department+ \" User Added\");\r\n                this.setState({\r\n                    staffname:'',\r\n                    username:'',\r\n                    department:'Select Department',\r\n                    password:'',\r\n                    \r\n                })\r\n\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    var HousekpStaff=this.state.HouseKpUsers;\r\n                    this.setState({\r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...HousekpStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n                    })\r\n    \r\n                },1000);\r\n                \r\n            }\r\n\r\n            else if(this.state.department==='PoolBar'){\r\n                let PoolEdit = await fetch(`${editPoolUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {\r\n                    method: 'put',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        UserUpdate\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('PoolEdit>  ' + PoolEdit)\r\n                alert(this.state.department+ \" User Added\");\r\n                this.setState({\r\n                    staffname:'',\r\n                    username:'',\r\n                    department:'Select Department',\r\n                    password:'',\r\n                    \r\n                })\r\n\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    var HousekpStaff=this.state.HouseKpUsers;\r\n                    this.setState({\r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...HousekpStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n                    })\r\n    \r\n                },1000);\r\n                \r\n            }\r\n\r\n            else if(this.state.department==='Club'){\r\n                let ClubEdit = await fetch(`${editClubUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {\r\n                    method: 'put',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        UserUpdate\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('ClubEdit>  ' + ClubEdit)\r\n                alert(this.state.department+ \" User Added\");\r\n                this.setState({\r\n                    staffname:'',\r\n                    username:'',\r\n                    department:'Select Department',\r\n                    password:'',\r\n                    \r\n                })\r\n\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    var HousekpStaff=this.state.HouseKpUsers;\r\n                    this.setState({\r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...HousekpStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n                    })\r\n    \r\n                },1000);\r\n                \r\n            }\r\n\r\n            else if(this.state.department==='Store'){\r\n                let StoreEdit = await fetch(`${editStoreUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {\r\n                    method: 'put',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        UserUpdate\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('StoreEdit>  ' + StoreEdit)\r\n                alert(this.state.department+ \" User Added\");\r\n                this.setState({\r\n                    staffname:'',\r\n                    username:'',\r\n                    department:'Select Department',\r\n                    password:'',\r\n                    \r\n                })\r\n\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    var HousekpStaff=this.state.HouseKpUsers;\r\n                    this.setState({\r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...HousekpStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n                    })\r\n    \r\n                },1000);\r\n                \r\n            }\r\n\r\n            else if(this.state.department==='Billing'){\r\n                let BillingEdit = await fetch(`${editBillingUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {\r\n                    method: 'put',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        UserUpdate\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('BillingEdit>  ' + BillingEdit)\r\n                alert(this.state.department+ \" User Added\");\r\n                this.setState({\r\n                    staffname:'',\r\n                    username:'',\r\n                    department:'Select Department',\r\n                    password:'',\r\n                    \r\n                })\r\n\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    var HousekpStaff=this.state.HouseKpUsers;\r\n                    this.setState({\r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...HousekpStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n                    })\r\n    \r\n                },1000);\r\n                \r\n            }\r\n\r\n            else if(this.state.department==='Bar'){\r\n                let BarEdit = await fetch(`${editBarUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {\r\n                    method: 'put',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        UserUpdate\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('BarEdit>  ' + BarEdit)\r\n                alert(this.state.department+ \" User Added\");\r\n                this.setState({\r\n                    staffname:'',\r\n                    username:'',\r\n                    department:'Select Department',\r\n                    password:'',\r\n                    \r\n                })\r\n\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    var HousekpStaff=this.state.HouseKpUsers;\r\n                    this.setState({\r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...HousekpStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n                    })\r\n    \r\n                },1000);\r\n                \r\n            }\r\n\r\n            else if(this.state.department==='HouseKeeping'){\r\n                let HousekpEdit = await fetch(`${editHousekpUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {\r\n                    method: 'put',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        UserUpdate\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('HousekpEdit>  ' + HousekpEdit)\r\n                alert(this.state.department+ \" User Added\");\r\n                this.setState({\r\n                    staffname:'',\r\n                    username:'',\r\n                    department:'Select Department',\r\n                    password:'',\r\n                    \r\n                })\r\n\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    var HousekpStaff=this.state.HouseKpUsers;\r\n                    this.setState({\r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...HousekpStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n                    })\r\n    \r\n                },1000);\r\n                \r\n            }\r\n\r\n            else if(this.state.department==='Restaurant'){\r\n                let RestEdit = await fetch(`${editRestUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {\r\n                    method: 'put',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        UserUpdate\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('RestEdit>  ' + RestEdit)\r\n                alert(this.state.department+ \" User Added\");\r\n                this.setState({\r\n                    staffname:'',\r\n                    username:'',\r\n                    department:'Select Department',\r\n                    password:'',\r\n                    \r\n                })\r\n\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    var HousekpStaff=this.state.HouseKpUsers;\r\n                    this.setState({\r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...HousekpStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n                    })\r\n    \r\n                },1000);\r\n                \r\n            }\r\n\r\n            else if(this.state.department==='FandB'){\r\n                let FandBEdit = await fetch(`${editFandBUsers}/${parseInt(sessionStorage.getItem('getUserID'))}`, {\r\n                    method: 'put',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        UserUpdate\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('FandBEdit>  ' + FandBEdit)\r\n                alert(this.state.department+ \" User Added\");\r\n                this.setState({\r\n                    staffname:'',\r\n                    username:'',\r\n                    department:'Select Department',\r\n                    password:'',\r\n                    \r\n                })\r\n\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    var HousekpStaff=this.state.HouseKpUsers;\r\n                    this.setState({\r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...HousekpStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n                    })\r\n    \r\n                },1000);\r\n                \r\n            }\r\n\r\n            \r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n   \r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    async handleSubmit() {\r\n       \r\n        try {\r\n            var NewUserDatapost = {\r\n                refID:`${this.state._id}`,\r\n                name:`${this.state.staffname}`,\r\n                username:`${this.state.username}`,\r\n                password:`${this.state.password}`,\r\n                department: `${this.state.department}`\r\n                \r\n            }\r\n\r\n            var NewUserDatapostAdb = {\r\n                refID:`${this.state._id}`,\r\n                name:`${this.state.staffname}`,\r\n                username:`${this.state.username}`,\r\n                password:`${this.state.password}`,\r\n                department: 'Billing'\r\n                \r\n            }\r\n\r\n            var NewUserDatapostAdbr = {\r\n                refID:`${this.state._id}`,\r\n                name:`${this.state.staffname}`,\r\n                username:`${this.state.username}`,\r\n                password:`${this.state.password}`,\r\n                department: 'Bar'\r\n                \r\n            }\r\n            var NewUserDatapostAdrst = {\r\n                refID:`${this.state._id}`,\r\n                name:`${this.state.staffname}`,\r\n                username:`${this.state.username}`,\r\n                password:`${this.state.password}`,\r\n                department: 'Restaurant'\r\n                \r\n            }\r\n\r\n            var NewUserDatapostAdclb = {\r\n                refID:`${this.state._id}`,\r\n                name:`${this.state.staffname}`,\r\n                username:`${this.state.username}`,\r\n                password:`${this.state.password}`,\r\n                department: 'Club'\r\n                \r\n            }\r\n\r\n            var NewUserDatapostAdrcp = {\r\n                refID:`${this.state._id}`,\r\n                name:`${this.state.staffname}`,\r\n                username:`${this.state.username}`,\r\n                password:`${this.state.password}`,\r\n                department: 'Reception'\r\n                \r\n            }\r\n\r\n            var NewUserDatapostAdhsk = {\r\n                refID:`${this.state._id}`,\r\n                name:`${this.state.staffname}`,\r\n                username:`${this.state.username}`,\r\n                password:`${this.state.password}`,\r\n                department: 'HouseKeeping'\r\n                \r\n            }\r\n\r\n            var NewUserDatapostAdplb = {\r\n                refID:`${this.state._id}`,\r\n                name:`${this.state.staffname}`,\r\n                username:`${this.state.username}`,\r\n                password:`${this.state.password}`,\r\n                department: 'PoolBar'\r\n                \r\n            }\r\n\r\n            var NewUserDatapostAdstr = {\r\n                refID:`${this.state._id}`,\r\n                name:`${this.state.staffname}`,\r\n                username:`${this.state.username}`,\r\n                password:`${this.state.password}`,\r\n                department: 'Store'\r\n                \r\n            }\r\n\r\n            var NewUserDatapostAdfnb = {\r\n                refID:`${this.state._id}`,\r\n                name:`${this.state.staffname}`,\r\n                username:`${this.state.username}`,\r\n                password:`${this.state.password}`,\r\n                department: 'FandB'\r\n                \r\n            }\r\n\r\n            if(this.state.department==='Admin'){\r\n                let Adminresult = await fetch(`${postAdminUsers}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        NewUserDatapost\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('Adminresult>  ' + Adminresult)\r\n                let FrontOffcresult = await fetch(`${postFrontUsers}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        NewUserDatapostAdrcp\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('FrontOffcresult>  ' + FrontOffcresult)\r\n                let poolresult = await fetch(`${postPoolUsers}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        NewUserDatapostAdplb\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('poolresult>  ' + poolresult)\r\n                let clubresult = await fetch(`${postClubUsers}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        NewUserDatapostAdclb\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('clubresult>  ' + clubresult)\r\n                let storeresult = await fetch(`${poststoreUsers}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        NewUserDatapostAdstr\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('storeresult>  ' + storeresult)\r\n                let billingresult = await fetch(`${postBillingUsers}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        NewUserDatapostAdb\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('billingresult>  ' + billingresult)\r\n                let barresult = await fetch(`${postBarUsers}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        NewUserDatapostAdbr\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('barresult>  ' + barresult)\r\n                let hskresult = await fetch(`${postHousekpUsers}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        NewUserDatapostAdhsk\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('hskresult>  ' + hskresult)\r\n                let restresult = await fetch(`${postRestUsers}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        NewUserDatapostAdrst\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('restresult>  ' + restresult)\r\n                let fandbresult = await fetch(`${postFandBUsers}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        NewUserDatapostAdfnb\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('fandbresult>  ' + fandbresult)\r\n\r\n                alert(this.state.department+ \" User Added\");\r\n                this.setState({\r\n                    staffname:'',\r\n                    username:'',\r\n                    department:'Select Department',\r\n                    password:'',\r\n                    \r\n                })\r\n\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    var HousekpStaff=this.state.HouseKpUsers;\r\n                    this.setState({\r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...HousekpStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n                    })\r\n    \r\n                },2000);\r\n\r\n            }\r\n\r\n            else if(this.state.department==='Reception'){\r\n                let result = await fetch(`${postFrontUsers}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        NewUserDatapost\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                let Bresult = await fetch(`${postBillingUsers}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        NewUserDatapostAdb\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('Bresult>  ' + Bresult)\r\n                alert(this.state.department+ \" User Added\");\r\n                this.setState({\r\n                    staffname:'',\r\n                    username:'',\r\n                    department:'Select Department',\r\n                    password:'',\r\n                    \r\n                })\r\n\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n               \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    var HousekpStaff=this.state.HouseKpUsers;\r\n                    this.setState({\r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...HousekpStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n                    })\r\n    \r\n                },1000);\r\n                \r\n            }\r\n\r\n            else if(this.state.department==='PoolBar'){\r\n                let result = await fetch(`${postPoolUsers}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        NewUserDatapost\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                alert(this.state.department+ \" User Added\");\r\n                this.setState({\r\n                    staffname:'',\r\n                    username:'',\r\n                    department:'Select Department',\r\n                    password:'',\r\n                    \r\n                })\r\n\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    var HousekpStaff=this.state.HouseKpUsers;\r\n                    this.setState({\r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...HousekpStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n                    })\r\n    \r\n                },1000);\r\n                \r\n            }\r\n\r\n            else if(this.state.department==='Club'){\r\n                let result = await fetch(`${postClubUsers}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        NewUserDatapost\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                alert(this.state.department+ \" User Added\");\r\n                this.setState({\r\n                    staffname:'',\r\n                    username:'',\r\n                    department:'Select Department',\r\n                    password:'',\r\n                    \r\n                })\r\n\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    var HousekpStaff=this.state.HouseKpUsers;\r\n                    this.setState({\r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...HousekpStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n                    })\r\n    \r\n                },1000);\r\n                \r\n            }\r\n\r\n            else if(this.state.department==='Store'){\r\n                let result = await fetch(`${poststoreUsers}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        NewUserDatapost\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                alert(this.state.department+ \" User Added\");\r\n                this.setState({\r\n                    staffname:'',\r\n                    username:'',\r\n                    department:'Select Department',\r\n                    password:'',\r\n                    \r\n                })\r\n\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    var HousekpStaff=this.state.HouseKpUsers;\r\n                    this.setState({\r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...HousekpStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n                    })\r\n    \r\n                },1000);\r\n                \r\n            }\r\n\r\n            else if(this.state.department==='Billing'){\r\n                let result = await fetch(`${postBillingUsers}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        NewUserDatapost\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                alert(this.state.department+ \" User Added\");\r\n                this.setState({\r\n                    staffname:'',\r\n                    username:'',\r\n                    department:'Select Department',\r\n                    password:'',\r\n                    \r\n                })\r\n\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    var HousekpStaff=this.state.HouseKpUsers;\r\n                    this.setState({\r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...HousekpStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n                    })\r\n    \r\n                },1000);\r\n                \r\n            }\r\n\r\n            else if(this.state.department==='Bar'){\r\n                let result = await fetch(`${postBarUsers}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        NewUserDatapost\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                alert(this.state.department+ \" User Added\");\r\n                this.setState({\r\n                    staffname:'',\r\n                    username:'',\r\n                    department:'Select Department',\r\n                    password:'',\r\n                    \r\n                })\r\n\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    var HousekpStaff=this.state.HouseKpUsers;\r\n                    this.setState({\r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...HousekpStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n                    })\r\n    \r\n                },1000);\r\n                \r\n            }\r\n\r\n            else if(this.state.department==='HouseKeeping'){\r\n                let result = await fetch(`${postHousekpUsers}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        NewUserDatapost\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                alert(this.state.department+ \" User Added\");\r\n                this.setState({\r\n                    staffname:'',\r\n                    username:'',\r\n                    department:'Select Department',\r\n                    password:'',\r\n                    \r\n                })\r\n\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    var HousekpStaff=this.state.HouseKpUsers;\r\n                    this.setState({\r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...HousekpStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n                    })\r\n    \r\n                },1000);\r\n                \r\n            }\r\n\r\n            else if(this.state.department==='Restaurant'){\r\n                let result = await fetch(`${postRestUsers}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        NewUserDatapost\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                alert(this.state.department+ \" User Added\");\r\n                this.setState({\r\n                    staffname:'',\r\n                    username:'',\r\n                    department:'Select Department',\r\n                    password:'',\r\n                    \r\n                })\r\n\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    var HousekpStaff=this.state.HouseKpUsers;\r\n                    this.setState({\r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...HousekpStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n                    })\r\n    \r\n                },1000);\r\n                \r\n            }\r\n\r\n            else if(this.state.department==='FandB'){\r\n                let result = await fetch(`${postFandBUsers}`, {\r\n                    method: 'post',\r\n        \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-type': 'application/json',\r\n                    },\r\n        \r\n                    body: JSON.stringify(\r\n                        \r\n                        NewUserDatapost\r\n                            \r\n                    )\r\n                        \r\n                });\r\n                console.log('result>  ' + result)\r\n                alert(this.state.department+ \" User Added\");\r\n                this.setState({\r\n                    staffname:'',\r\n                    username:'',\r\n                    department:'Select Department',\r\n                    password:'',\r\n                    \r\n                })\r\n\r\n                fetch(`${getBarUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BarUsersData:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFrontUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FrontOffcUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                \r\n                fetch(`${getClubUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        ClubUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getAdminUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        AdminUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getHousekpUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        HouseKpUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getRestUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        RestUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getBillingUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        BillingUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getFandBUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        FandBUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                fetch(`${getstoreUsers}`, {method:'GET'})\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    this.setState({\r\n                        storeUsers:data,\r\n                        \r\n                    })\r\n                    \r\n                })\r\n    \r\n                this.myTimer = setTimeout(() => {\r\n                    var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    var HousekpStaff=this.state.HouseKpUsers;\r\n                    this.setState({\r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...HousekpStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n                    })\r\n    \r\n                },1000);\r\n                \r\n            }\r\n\r\n            \r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    renderStaffData(data){\r\n        if(data) {\r\n           data.sort((a, b) => b.department - a.department);\r\n            return data.map((item) => {\r\n                \r\n                return(\r\n                    <>\r\n                    \r\n                        <tr key={item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{item.name}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.department}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{item.username}</td>\r\n                            <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-danger textcolor\" onMouseOver={()=>{sessionStorage.setItem('getUserID', item.refID); sessionStorage.setItem('getUserDept', item.department)}} onClick={()=>{this.deleteUser()}}>Delete</button></td>\r\n                            <td className=\"table-light table-striped adjust10\"><button className=\"btn btn-danger textcolor\" onMouseOver={()=>{sessionStorage.setItem('editUserID', item.refID); sessionStorage.setItem('editUserDept', item.department)}} onClick={()=>{this.setState({staffname:'', username:'', password:'', department:'', show:'hidden'}); this.editUser()}}>Edit</button></td>\r\n                            \r\n                        </tr>\r\n                    </>\r\n                )\r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log (\">>> Inside Grpdetails\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Adlogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div  className=\"background990i2\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <h4 style = {{color:'silver',marginLeft:'50px', marginBottom:'-50px'}}>Users Management</h4>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h6 style = {{color:'purple',marginLeft:'480px', marginBottom:'-50px'}}>Welcome, {localStorage.getItem('userInfo').split(' ')[0]} </h6>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <h6  type=\"button\" style = {{color:'yellow',marginLeft:'180', textAlign:'left', marginBottom:'-50px'}} onClick={()=>this.logout()}>Logout </h6>\r\n                        </div>\r\n                    </div>\r\n                    <h4 style = {{color:'rgb(23, 23, 71)',marginLeft:'50px', marginBottom:'-40px'}}> </h4>\r\n\r\n                    <div className=\"formdesign510b\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                {/* <div className=\"col-2\">\r\n                                    <p type=\"text\" className=\"form-control mb-3 formsize51\" name=\"roomID\" >{this.state.roomID} </p>\r\n                                </div> */}\r\n                                \r\n                                <div className=\"col-3\">\r\n                                <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"staffname\" require placeholder=\"Enter Names\" autoComplete='off' value={this.state.staffname} onChange={this.handleChange}/>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                    <select className={this.state.show} name=\"department\" onChange={this.handleChange}>\r\n                                        <option selected value=''>Select Department</option>\r\n                                        <option value='Admin'>Admin</option>\r\n                                        <option value='Reception'>Reception</option>\r\n                                        <option value='Billing'>Billing</option>\r\n                                        <option value='Bar'>Bar</option>\r\n                                        <option value='PoolBar'>Pool Bar</option>\r\n                                        <option value='Club'>Club</option>\r\n                                        <option value='Store'>Store</option>\r\n                                        <option value='HouseKeeping'>Housekeeping</option>\r\n                                        <option value='Restaurant'>Restaurant</option>\r\n                                        <option value='FandB'>F and B</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                <input type=\"text\" className=\"form-control mb-3 formsize51\" name=\"username\" autoComplete='off' require placeholder=\"Enter User Name\" value={this.state.username} onChange={this.handleChange}/>\r\n                                </div>\r\n\r\n                                <div className=\"col-3\">\r\n                                <input type=\"password\" className=\"form-control mb-3 formsize51\" name=\"password\" autoComplete='off' require placeholder=\"Enter Password\" value={this.state.password} onChange={this.handleChange}/>\r\n                                </div>\r\n                            </div>\r\n                           \r\n                            <center>\r\n                                <br/>\r\n                                <span>\r\n                                    <button disabled={this.state.name===''||this.state.password===''||this.state.username===''||this.state.department===''} className=\"btn btn-warning\" onClick={ () => this.handleSubmit()}>Add New User</button>\r\n                                    <button disabled={this.state.name===''||this.state.password===''||this.state.username===''||this.state.department===''} className=\"btn btn-warning gap\" onClick={ () => {this.handleUpdate(); this.setState({show:'form-select  mb-3 formsize51'})}}>Update User</button>\r\n                                    <button className=\"btn btn-danger gap\" onClick={ () => this.props.history.push('/settings')}>Close</button>\r\n                                    <button className=\"btn btn-danger gap\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>\r\n                                    \r\n                                </span>\r\n                            </center>\r\n                           \r\n                            \r\n                        </div>\r\n                        <br/>\r\n                        <div className=\"container\">\r\n                            <table className=\"table table-hover\">\r\n                            \r\n                                <thead className=\"table-warning\">\r\n                                    <tr>\r\n                                        {/* <th className=\"adjust5\">ID</th> */}\r\n                                        <th className=\"adjust5\">Names</th>\r\n                                        <th className=\"adjust5\">Department</th>\r\n                                        <th className=\"adjust5\">userName</th>\r\n                                        <th className=\"adjust5\">Action</th>\r\n                                        <th className=\"adjust5\"> </th>\r\n                                                \r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className=\"table table-hover\">\r\n                                    {this.renderStaffData(this.state.staffData)}\r\n                                \r\n                                </tbody>\r\n                            </table>\r\n                            <center><button className=\"btn btn-danger gap mb-3\" onClick={ () => this.props.history.push('/Settings')}>Close</button></center>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </>\r\n            \r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\">>> Inside GrpDidMount\", this.state);\r\n\r\n        fetch(`${getBarUsers}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                BarUsersData:data,\r\n                \r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${getFrontUsers}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                FrontOffcUsers:data,\r\n                \r\n            })\r\n            \r\n        })\r\n\r\n        \r\n        fetch(`${getClubUsers}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                ClubUsers:data,\r\n                \r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${getAdminUsers}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                AdminUsers:data,\r\n                \r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${getHousekpUsers}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                HouseKpUsers:data,\r\n                \r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${getRestUsers}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                RestUsers:data,\r\n                \r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${getBillingUsers}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                BillingUsers:data,\r\n                \r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${getFandBUsers}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                FandBUsers:data,\r\n                \r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${getstoreUsers}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                storeUsers:data,\r\n                \r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n            var barstaff=this.state.BarUsersData;\r\n                    var receptionStaff=this.state.FrontOffcUsers;\r\n                    var poolbarStaff=this.state.PoolUsers;\r\n                    var clubStaff=this.state.ClubUsers;\r\n                    var restaurantStaff=this.state.RestUsers;\r\n                    var billingStaff=this.state.BillingUsers;\r\n                    var fandbstaff=this.state.FandBUsers;\r\n                    var StoreStaff=this.state.storeUsers;\r\n                    var AdminStaff=this.state.AdminUsers;\r\n                    var HousekpStaff=this.state.HouseKpUsers;\r\n                    this.setState({\r\n                        staffData:[...barstaff, ...receptionStaff, ...poolbarStaff, ...restaurantStaff, ...billingStaff, ...fandbstaff, ...StoreStaff, ...AdminStaff, ...HousekpStaff, ...clubStaff],\r\n                        _id:Math.floor(Math.random()*1000000)\r\n                    })\r\n\r\n        },1000);\r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n       \r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Users;","import React,{Component} from 'react';\r\nimport '../HouseKeeping/Housekeeping.css';\r\nimport Adlogin from '../Adlogin';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst userName = \"https://zarvichdemo.localto.net/adminUserInfo\";\r\n\r\n\r\nclass Settings extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:''\r\n        }\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    \r\n    render() {\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Adlogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        return(\r\n            <>\r\n                <div className=\"background15kmenu\">\r\n                                      \r\n                    <center>\r\n                        <div className=\"formdesign15kmenu\">\r\n                            <h4 className=\"mb-3\">Settings Menu</h4>\r\n                            \r\n                            <div className=\"grow\">\r\n                            \r\n                                <center>\r\n                                    \r\n                                    <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Dashboard</button>\r\n                                    <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/Levy')}}>VAT & Charges</button>\r\n                                    <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/RoomSettings')}}>Room Settings</button>\r\n                                    <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/Users')}}>Users</button>\r\n                                    {/* <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/BillingMenu2')}}>Billing</button>\r\n                                    <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/RestaurantApp2')}}>Restaurant</button>\r\n                                    <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/BarApp2')}}>Bar</button>\r\n                                    <button className=\"btn btn-primary btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/RoomChart2')}}>RoomChart</button> */}\r\n                                    <button className=\"btn btn-warning btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/AppMenu')}}>App Menu</button>\r\n                                    <button className=\"btn btn-danger btnwidth15 mb-3\" onClick={ ()=> this.logout()}>\r\n                                        Log Out {localStorage.getItem('userInfo').split(' ')[0]}\r\n                                    </button>\r\n                                </center>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                         \r\n\r\n                     </center>\r\n                   \r\n                </div>\r\n            </>\r\n           \r\n\r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Settings;\r\n","import React,{Component} from 'react';\r\nimport './BarReport.css';\r\nimport ClubLogin from '../ClubLogin';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst userName = \"https://zarvichdemo.localto.net/clubUserInfo\";\r\n\r\nclass ClubPortal extends Component {\r\n    constructor(props) {\r\n        super (props);\r\n        console.log(\">>>Inside RESConstructor\",props)\r\n\r\n        this.state = {\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            Blogin:'',\r\n            login:''\r\n        }\r\n    }\r\n    \r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n          \r\n            login:true\r\n        })\r\n    }\r\n   \r\n    render() {\r\n        console.log (\">>> Inside logindetails\", this.state)\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <ClubLogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        return(\r\n            <>\r\n              \r\n                 <div className=\"background15\">\r\n                     <center>\r\n                         <div className=\"formdesign152\">\r\n                             <h4 className=\"mb-3\">Club Portal</h4>\r\n                            <div>\r\n                                \r\n                                <center>\r\n                                    <button className=\"btn btn-primary btnwidth15 mb-3\" onClick={ ()=> {this.props.history.push('./Club')}}>Club</button>\r\n                                    <button className=\"btn btn-warning btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/AppMenu')}}>App Menu</button>\r\n                                    <button className=\"btn btn-warning btnwidth15k mb-3\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>\r\n                                    <button className=\"btn btn-danger btnwidth15 mb-3\" onClick={ ()=> this.logout()}>\r\n                                    Log Out {localStorage.getItem('userInfo').split(' ')[0]}\r\n                                    </button>\r\n                                    \r\n                                </center>\r\n                                \r\n                            </div>\r\n                         </div>\r\n\r\n                     </center>\r\n                   \r\n                </div>\r\n                <div className=\"pagebody3\">\r\n                    <input hidden/>\r\n                </div>\r\n            </>\r\n           \r\n\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n    }\r\n\r\n   \r\n\r\n}\r\n\r\n\r\nexport default ClubPortal;\r\n","import React, { Component } from 'react';\r\nimport Billinglogin from '../../Billinglogin';\r\nimport '../Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport DatePicker from 'react-datepicker';\r\nimport moment from 'moment';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\nconst getRoomSales = \"https://zarvichdemo.localto.net/findClubSalesNow?clubNowDep84=Reservation\";\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\n// const getAllRoomSales = \"/findPoolSalesNow?poolNowDep83=Pool%20Bar%20Sales\";\r\nconst levyUrl= \"https://zarvichdemo.localto.net/feesAndCharges\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\n\r\nclass ClubDailySales extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside CashConstructor\",props)\r\n        this.state = {\r\n            RoomSales:'',\r\n            RoomTotal:'',\r\n            depPOS:'',\r\n            depCash:'',\r\n            depTransfer:'',\r\n            depComp:'',\r\n            TotalSales:'',\r\n            date:'',\r\n            deproom:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            shift:'',\r\n            startdate:'',\r\n            endDate:'',\r\n            levyData:'',\r\n            ServiceChrg:'',\r\n            TourismLevy:'',\r\n            VAT:'',\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n            \r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n\r\n    }\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            date: date,\r\n            startdate: date\r\n        });\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            endDate: date\r\n        });\r\n    }\r\n\r\n    \r\n    renderDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.date}\r\n                    onChange={this.checkinhandleChange}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText='Select Start Date'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderendDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.endDate}\r\n                    onChange={this.endhandleChange}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112 mvrght\"\r\n                    placeholderText=\"Search End Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleChange=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n    }\r\n    \r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        localStorage.removeItem('shift')\r\n    }\r\n\r\n    cleanup(){\r\n        this.setState({\r\n            RoomSales:'',\r\n            RoomTotal:'',\r\n            depPOS:'',\r\n            depCash:'',\r\n            depTransfer:'',\r\n            depComp:'',\r\n            TotalSales:'',\r\n            deproom:'',\r\n            \r\n        })\r\n    }\r\n\r\n    findRoomReport(){\r\n        var start = moment(this.state.date).format('MMM DD YYYY');\r\n        var end = moment(this.state.endDate).format('MMM DD YYYY');\r\n\r\n        \r\n        var findAllPool = `${getRoomSales}&&clubstartdate84=${start}&&clubendDate84=${end}`\r\n        \r\n        \r\n        this.setState({RoomSales:''})\r\n        fetch(`${findAllPool}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({RoomSales:data});\r\n            data.map((item) => {\r\n\r\n                var RmSales = 0;\r\n                var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)\r\n                this.setState({RoomTotal:roomSales});\r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({depPOS:allPOS});\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({depCash:allCash});\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({depTransfer:allTransfer});\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({depComp:allComp});\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({deproom:allRoom});\r\n                \r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n        \r\n            var AllSalesPoint = 0;\r\n            var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n            this.setState({TotalSales:TotalSalesPoints})\r\n\r\n        },1000)\r\n        \r\n\r\n    }\r\n\r\n    renderRoomSales=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n               \r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                \r\n                \r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{defaultdate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POSAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CashAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.TransferAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CompDebit}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.roomDebit}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POSAmount) + parseInt(item.CashAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)}thousandSeparator={true}displayType={\"text\"}/></b></td> \r\n                            \r\n                           \r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log (\">>> Inside Cashdetails\", this.state)\r\n        // var defaultdate = moment(this.state.date).format('MMM DD YYYY');\r\n        var totalSales = this.state.depPOS + this.state.depCash + this.state.depTransfer + this.state.deproom;\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Billinglogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <div className =\"container\">\r\n                <div>\r\n                    <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                </div>\r\n                <div>\r\n                    <center>\r\n                    <h6>{this.state.Hotelname}</h6>\r\n                    <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                    <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n                       \r\n                    </center>\r\n                </div>\r\n                <center>\r\n                    <h5>Reservations Sales Report ({this.state.shift})</h5><br/>\r\n                    <div>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderDate(this.state.startdate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderendDate(this.state.endDate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            <select type =\"button\" className=\"form-select mb-2 btn btn-primary mt-3 btnwidthp printing space selectadjuster\" name=\"shift\" value ={this.state.shift} onChange={this.handleChange}>\r\n                                <option selected value=''>Select Shift</option>\r\n                                <option value='Morning Shift'>Morning Shift</option>\r\n                                <option value='Night Shift'>Night Shift</option>\r\n                                <option value='All Day'>All Day</option>\r\n                                <option value='All Shifts'>All Shifts</option>\r\n                                \r\n                            </select>\r\n                            <button className=\"btn btn-primary space btnadjuster printing\" onClick={ () => {this.cleanup();this.findRoomReport()}}>Find</button>\r\n                        </span>\r\n                    </div>                        \r\n                                   \r\n                </center>\r\n                \r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust50\">Date</th>\r\n                            <th className=\"adjust50\">Description</th>\r\n                            <th className=\"adjust50\">POS (NGN)</th>\r\n                            <th className=\"adjust50\">Cash(NGN)</th>\r\n                            <th className=\"adjust50\">Transfer(NGN)</th>\r\n                            <th className=\"adjust50\">Compl(NGN)</th>\r\n                            <th className=\"adjust50\">Room(NGN)</th>\r\n                            <th className=\"adjust50\">Total(NGN)</th>\r\n                            \r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderRoomSales(this.state.RoomSales)}\r\n                        <tr>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2 alignTet\"><b>Total Collection</b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depPOS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depCash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depTransfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depComp)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.deproom)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"> </td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b> <NumberFormat value={totalSales} thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr>\r\n                        \r\n                    </tbody>\r\n                </table>\r\n                \r\n                \r\n                <h6>Total Collection:         <NumberFormat value={totalSales}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                <hr/>\r\n                <center>\r\n                \r\n                    <button className=\"btn btn-danger movebtn printing\" onClick={ () => this.props.history.push('/EndOfDay') }>Close</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ () => window.print() }>Print</button>\r\n                    <button className=\"btn btn-warning movebtn printing\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>    \r\n                        \r\n                </center>       \r\n            </div>\r\n            \r\n        );\r\n    }\r\n  \r\n    componentDidMount() {\r\n        console.log(\">>> Inside CashDidMount\", this.state)\r\n       \r\n        fetch(`${levyUrl}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({levyData:data})\r\n               \r\n        })\r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n        \r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n    }\r\n\r\n       \r\n}\r\n\r\n\r\nexport default ClubDailySales;","import React, { Component } from 'react';\r\nimport Billinglogin from '../../Billinglogin';\r\nimport '../Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport DatePicker from 'react-datepicker';\r\nimport moment from 'moment';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport addDays from 'date-fns/addDays';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\nconst getRoomSales = \"https://zarvichdemo.localto.net/findLaundrySales?laundry12=Laundry%20Sales\";\r\n// const getRoomSales2 = \"/findRmDeposits?roomDep13=Room%20Deposit\";\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\nconst levyUrl= \"https://zarvichdemo.localto.net/feesAndCharges\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\n\r\n\r\n\r\nclass LaundryReport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside CashConstructor\",props)\r\n        this.state = {\r\n            RoomSales:'',\r\n            RoomTotal:'',\r\n            depPOS:'',\r\n            depCash:'',\r\n            depTransfer:'',\r\n            depComp:'',\r\n            TotalSales:'',\r\n            date:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            shift:'',\r\n            startdate:'',\r\n            endDate:'',\r\n            levyData:'',\r\n            ServiceChrg:'',\r\n            TourismLevy:'',\r\n            VAT:'',\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n            \r\n            \r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n\r\n    }\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            date: date,\r\n            startdate: date\r\n\r\n        });\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            endDate: date\r\n        });\r\n    }\r\n    \r\n    renderDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.date}\r\n                    onChange={this.checkinhandleChange}\r\n                    maxDate={addDays(new Date(),0)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText='Select Start Date'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderendDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.endDate}\r\n                    onChange={this.endhandleChange}\r\n                    maxDate={(new Date())}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112 mvrght\"\r\n                    placeholderText=\"Search End Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    handleChange=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n    }\r\n    handleChange10=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value,\r\n            roomSales:''\r\n        })\r\n\r\n    }\r\n    \r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    cleanup(){\r\n        this.setState({\r\n            RoomSales:0,\r\n            RoomTotal:0,\r\n            depPOS:0,\r\n            depCash:0,\r\n            depTransfer:0,\r\n            depComp:0,\r\n            TotalSales:0\r\n            \r\n        })\r\n    }\r\n\r\n    findRoomReport(){\r\n        var start = moment(this.state.date).format('MMM DD YYYY');\r\n        var end = moment(this.state.endDate).format('MMM DD YYYY');\r\n\r\n       var findAllBar = `${getRoomSales}&&Laundrystartdate12=${start}&&LaundryendDate12=${end}`\r\n        // var findBarwrtshift = `${getRoomSales2}&&startdate13=${start}&&endDate13=${end}&&shiftNow2='All Day'`\r\n\r\n        \r\n            this.setState({RoomSales:''})\r\n            fetch(`${findAllBar}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({RoomSales:data});\r\n                data.map((item) => {\r\n    \r\n                    var RmSales = 0;\r\n                    var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)\r\n                    this.setState({RoomTotal:roomSales});\r\n    \r\n                    var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.POSAmount)\r\n                    }, 0);\r\n                    this.setState({depPOS:allPOS});\r\n    \r\n                    var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.CashAmount)\r\n                    }, 0);\r\n                    this.setState({depCash:allCash});\r\n    \r\n                    var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.TransferAmount)\r\n                    }, 0);\r\n                    this.setState({depTransfer:allTransfer});\r\n    \r\n                    var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.CompDebit)\r\n                    }, 0);\r\n                    this.setState({depComp:allComp});\r\n    \r\n                    var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.roomDebit)\r\n                    }, 0);\r\n                    this.setState({deproom:allRoom});\r\n                    \r\n                    return 'ok'\r\n                })\r\n                \r\n                \r\n            });\r\n            this.myTimer = setTimeout(() => {\r\n            \r\n                var AllSalesPoint = 0;\r\n                var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n                this.setState({TotalSales:TotalSalesPoints})\r\n    \r\n            },1000)\r\n        \r\n\r\n        \r\n            // this.setState({RoomSales:''})\r\n            // fetch(`${findBarwrtshift}`, {method:'GET'})\r\n            // .then((res) => res.json())\r\n            // .then((data) => {\r\n            //     this.setState({RoomSales:data});\r\n            //     data.map((item) => {\r\n\r\n            //         var RmSales = 0;\r\n            //         var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.CompDebit) + parseInt(item.roomDebit)\r\n            //         this.setState({RoomTotal:roomSales});\r\n    \r\n            //         var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.POSAmount)\r\n            //         }, 0);\r\n            //         this.setState({depPOS:allPOS});\r\n    \r\n            //         var allCash = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.CashAmount)\r\n            //         }, 0);\r\n            //         this.setState({depCash:allCash});\r\n    \r\n            //         var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.TransferAmount)\r\n            //         }, 0);\r\n            //         this.setState({depTransfer:allTransfer});\r\n    \r\n            //         var allComp = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.CompDebit)\r\n            //         }, 0);\r\n            //         this.setState({depComp:allComp});\r\n    \r\n            //         var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.roomDebit)\r\n            //         }, 0);\r\n            //         this.setState({deproom:allRoom});\r\n                    \r\n            //         return 'ok'\r\n            //     })\r\n                \r\n                \r\n            // });\r\n            \r\n            this.myTimer = setTimeout(() => {\r\n            \r\n                var AllSalesPoint = 0;\r\n                var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n                this.setState({TotalSales:TotalSalesPoints})\r\n    \r\n            },1000)\r\n            \r\n        \r\n       \r\n    }\r\n        \r\n    \r\n\r\n    renderRoomSales=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a, b) => a.date - b.date);\r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust222\">{defaultdate}</td>\r\n                            {/* <td className=\"table-light table-striped adjust2\">{item.roomNumbers}</td> */}\r\n                            <td className=\"table-light table-striped adjust223 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POSAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CashAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.TransferAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CompDebit}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POSAmount) + parseInt(item.CashAmount) + parseInt(item.TransferAmount)}thousandSeparator={true}displayType={\"text\"}/></b></td> \r\n                            \r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log (\">>> Inside Cashdetails\", this.state)\r\n        // var defaultdate = moment(this.state.date).format('MMM DD YYYY');\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Billinglogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <div className =\"container\">\r\n                <div>\r\n                    <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                </div>\r\n                <div>\r\n                    <center>\r\n                        <h6>{this.state.Hotelname}</h6>\r\n                        <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                        <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n                       \r\n                    </center>\r\n                </div>\r\n                <center>\r\n                    <h5>Laundry Sales Report</h5><br/>\r\n                    <div>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderDate(this.state.startdate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderendDate(this.state.endDate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            {/* <select type =\"button\" className=\"form-select mb-2 btn btn-primary mt-3 btnwidthp printing space selectadjuster\" name=\"shift\" value ={this.state.shift} onChange={this.handleChange10}>\r\n                                <option selected value=''>Select Shift</option>\r\n                                <option value='Morning Shift'>Morning Shift</option>\r\n                                <option value='Night Shift'>Night Shift</option>\r\n                                <option value='All Day'>All Day</option>\r\n                                <option value='All Shifts'>All Shifts</option>\r\n                                \r\n                            </select> */}\r\n                            <button className=\"btn btn-primary space btnadjuster printing\" onClick={ () => {this.cleanup();this.findRoomReport()}}>Find</button>\r\n                        </span>\r\n                    </div>\r\n                                   \r\n                </center>\r\n                \r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust50\">Date</th>\r\n                            {/* <th className=\"adjust50\">Room Number</th> */}\r\n                            <th className=\"adjust50b\">Description</th>\r\n                            <th className=\"adjust50\">POS (NGN)</th>\r\n                            <th className=\"adjust50\">Cash(NGN)</th>\r\n                            <th className=\"adjust50\">Transfer(NGN)</th>\r\n                            <th className=\"adjust50\">Complimentary(NGN)</th>\r\n                            <th className=\"adjust50\">Total(NGN)</th>\r\n                            \r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderRoomSales(this.state.RoomSales)}\r\n                        <tr>\r\n                            {/* <td className=\"table-light table-striped adjust2\"> </td> */}\r\n                            <td className=\"table-light table-striped adjust2\"><b>Total</b></td>\r\n                            <td className=\"table-light table-striped adjust2\"><b> </b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depPOS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depCash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depTransfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depComp)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b> <NumberFormat value={this.state.depPOS + this.state.depCash + this.state.depTransfer}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                        </tr>\r\n\r\n                        \r\n                        \r\n                        \r\n                    </tbody>\r\n                </table>\r\n                \r\n                \r\n                <h6>Gross Collection:         <NumberFormat value={this.state.depPOS + this.state.depCash + this.state.depTransfer}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                \r\n                <hr/>\r\n                <center>\r\n                \r\n                    <button className=\"btn btn-danger movebtn printing\" onClick={ () => this.props.history.push('/EndOfDay') }>Close</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ () => window.print() }>Print</button>\r\n                        \r\n                </center>       \r\n            </div>\r\n            \r\n        );\r\n    }\r\n  \r\n    componentDidMount() {\r\n        console.log(\">>> Inside CashDidMount\", this.state)\r\n\r\n        fetch(`${levyUrl}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({levyData:data})\r\n               \r\n        })\r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n    \r\n        var start = moment(new Date()).format('MMM DD YYYY');\r\n        var end = moment(new Date()).format('MMM DD YYYY');\r\n\r\n        var findAllBar = `${getRoomSales}&&Laundrystartdate12=${start}&&LaundryendDate12=${end}`\r\n\r\n        this.setState({RoomSales:''})\r\n        fetch(`${findAllBar}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({RoomSales:data});\r\n            data.map((item) => {\r\n\r\n                var RmSales = 0;\r\n                var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)\r\n                this.setState({RoomTotal:roomSales});\r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({depPOS:allPOS});\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({depCash:allCash});\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({depTransfer:allTransfer});\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({depComp:allComp});\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({deproom:allRoom});\r\n                \r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n        \r\n            var AllSalesPoint = 0;\r\n            var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n            this.setState({TotalSales:TotalSalesPoints})\r\n\r\n        },1000)\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n            \r\n    \r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default LaundryReport;","import React, { Component } from 'react';\r\nimport Billinglogin from '../../Billinglogin';\r\nimport '../Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport DatePicker from 'react-datepicker';\r\nimport moment from 'moment';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport addDays from 'date-fns/addDays';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\nconst getRoomSales = \"https://zarvichdemo.localto.net/findGymSales?gym12=Gymnasium%20Sales\";\r\n// const getRoomSales2 = \"/findRmDeposits?roomDep13=Room%20Deposit\";\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\nconst levyUrl= \"https://zarvichdemo.localto.net/feesAndCharges\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\n\r\n\r\n\r\nclass GymnasiumReport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside CashConstructor\",props)\r\n        this.state = {\r\n            RoomSales:'',\r\n            RoomTotal:'',\r\n            depPOS:'',\r\n            depCash:'',\r\n            depTransfer:'',\r\n            depComp:'',\r\n            TotalSales:'',\r\n            date:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            shift:'',\r\n            startdate:'',\r\n            endDate:'',\r\n            levyData:'',\r\n            ServiceChrg:'',\r\n            TourismLevy:'',\r\n            VAT:'',\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n            \r\n            \r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n\r\n    }\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            date: date,\r\n            startdate: date\r\n\r\n        });\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            endDate: date\r\n        });\r\n    }\r\n    \r\n    renderDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.date}\r\n                    onChange={this.checkinhandleChange}\r\n                    maxDate={addDays(new Date(),0)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText='Select Start Date'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderendDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.endDate}\r\n                    onChange={this.endhandleChange}\r\n                    maxDate={(new Date())}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112 mvrght\"\r\n                    placeholderText=\"Search End Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    handleChange=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n    }\r\n    handleChange10=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value,\r\n            roomSales:''\r\n        })\r\n\r\n    }\r\n    \r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    cleanup(){\r\n        this.setState({\r\n            RoomSales:0,\r\n            RoomTotal:0,\r\n            depPOS:0,\r\n            depCash:0,\r\n            depTransfer:0,\r\n            depComp:0,\r\n            TotalSales:0\r\n            \r\n        })\r\n    }\r\n\r\n    findRoomReport(){\r\n        var start = moment(this.state.date).format('MMM DD YYYY');\r\n        var end = moment(this.state.endDate).format('MMM DD YYYY');\r\n\r\n       var findAllBar = `${getRoomSales}&&gymstartdate12=${start}&&gymendDate12=${end}`\r\n        // var findBarwrtshift = `${getRoomSales2}&&startdate13=${start}&&endDate13=${end}&&shiftNow2='All Day'`\r\n\r\n        \r\n            this.setState({RoomSales:''})\r\n            fetch(`${findAllBar}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({RoomSales:data});\r\n                data.map((item) => {\r\n    \r\n                    var RmSales = 0;\r\n                    var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)\r\n                    this.setState({RoomTotal:roomSales});\r\n    \r\n                    var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.POSAmount)\r\n                    }, 0);\r\n                    this.setState({depPOS:allPOS});\r\n    \r\n                    var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.CashAmount)\r\n                    }, 0);\r\n                    this.setState({depCash:allCash});\r\n    \r\n                    var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.TransferAmount)\r\n                    }, 0);\r\n                    this.setState({depTransfer:allTransfer});\r\n    \r\n                    var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.CompDebit)\r\n                    }, 0);\r\n                    this.setState({depComp:allComp});\r\n    \r\n                    var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.roomDebit)\r\n                    }, 0);\r\n                    this.setState({deproom:allRoom});\r\n                    \r\n                    return 'ok'\r\n                })\r\n                \r\n                \r\n            });\r\n            this.myTimer = setTimeout(() => {\r\n            \r\n                var AllSalesPoint = 0;\r\n                var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n                this.setState({TotalSales:TotalSalesPoints})\r\n    \r\n            },1000)\r\n        \r\n\r\n        \r\n            // this.setState({RoomSales:''})\r\n            // fetch(`${findBarwrtshift}`, {method:'GET'})\r\n            // .then((res) => res.json())\r\n            // .then((data) => {\r\n            //     this.setState({RoomSales:data});\r\n            //     data.map((item) => {\r\n\r\n            //         var RmSales = 0;\r\n            //         var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.CompDebit) + parseInt(item.roomDebit)\r\n            //         this.setState({RoomTotal:roomSales});\r\n    \r\n            //         var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.POSAmount)\r\n            //         }, 0);\r\n            //         this.setState({depPOS:allPOS});\r\n    \r\n            //         var allCash = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.CashAmount)\r\n            //         }, 0);\r\n            //         this.setState({depCash:allCash});\r\n    \r\n            //         var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.TransferAmount)\r\n            //         }, 0);\r\n            //         this.setState({depTransfer:allTransfer});\r\n    \r\n            //         var allComp = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.CompDebit)\r\n            //         }, 0);\r\n            //         this.setState({depComp:allComp});\r\n    \r\n            //         var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.roomDebit)\r\n            //         }, 0);\r\n            //         this.setState({deproom:allRoom});\r\n                    \r\n            //         return 'ok'\r\n            //     })\r\n                \r\n                \r\n            // });\r\n            \r\n            this.myTimer = setTimeout(() => {\r\n            \r\n                var AllSalesPoint = 0;\r\n                var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n                this.setState({TotalSales:TotalSalesPoints})\r\n    \r\n            },1000)\r\n            \r\n        \r\n       \r\n    }\r\n        \r\n    \r\n\r\n    renderRoomSales=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a, b) => a.date - b.date);\r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust222\">{defaultdate}</td>\r\n                            {/* <td className=\"table-light table-striped adjust2\">{item.roomNumbers}</td> */}\r\n                            <td className=\"table-light table-striped adjust223 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POSAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CashAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.TransferAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CompDebit}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POSAmount) + parseInt(item.CashAmount) + parseInt(item.TransferAmount)}thousandSeparator={true}displayType={\"text\"}/></b></td> \r\n                            \r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log (\">>> Inside Cashdetails\", this.state)\r\n        // var defaultdate = moment(this.state.date).format('MMM DD YYYY');\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Billinglogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <div className =\"container\">\r\n                <div>\r\n                    <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                </div>\r\n                <div>\r\n                    <center>\r\n                        <h6>{this.state.Hotelname}</h6>\r\n                        <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                        <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n                       \r\n                    </center>\r\n                </div>\r\n                <center>\r\n                    <h5>Gymnasium Sales Report</h5><br/>\r\n                    <div>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderDate(this.state.startdate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderendDate(this.state.endDate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            {/* <select type =\"button\" className=\"form-select mb-2 btn btn-primary mt-3 btnwidthp printing space selectadjuster\" name=\"shift\" value ={this.state.shift} onChange={this.handleChange10}>\r\n                                <option selected value=''>Select Shift</option>\r\n                                <option value='Morning Shift'>Morning Shift</option>\r\n                                <option value='Night Shift'>Night Shift</option>\r\n                                <option value='All Day'>All Day</option>\r\n                                <option value='All Shifts'>All Shifts</option>\r\n                                \r\n                            </select> */}\r\n                            <button className=\"btn btn-primary space btnadjuster printing\" onClick={ () => {this.cleanup();this.findRoomReport()}}>Find</button>\r\n                        </span>\r\n                    </div>\r\n                                   \r\n                </center>\r\n                \r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust50\">Date</th>\r\n                            {/* <th className=\"adjust50\">Room Number</th> */}\r\n                            <th className=\"adjust50b\">Description</th>\r\n                            <th className=\"adjust50\">POS (NGN)</th>\r\n                            <th className=\"adjust50\">Cash(NGN)</th>\r\n                            <th className=\"adjust50\">Transfer(NGN)</th>\r\n                            <th className=\"adjust50\">Complimentary(NGN)</th>\r\n                            <th className=\"adjust50\">Total(NGN)</th>\r\n                            \r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderRoomSales(this.state.RoomSales)}\r\n                        <tr>\r\n                            {/* <td className=\"table-light table-striped adjust2\"> </td> */}\r\n                            <td className=\"table-light table-striped adjust2\"><b>Total</b></td>\r\n                            <td className=\"table-light table-striped adjust2\"><b> </b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depPOS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depCash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depTransfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depComp)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b> <NumberFormat value={this.state.depPOS + this.state.depCash + this.state.depTransfer}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                        </tr>\r\n\r\n                        \r\n                        \r\n                        \r\n                    </tbody>\r\n                </table>\r\n                \r\n                \r\n                <h6>Gross Collection:         <NumberFormat value={this.state.depPOS + this.state.depCash + this.state.depTransfer}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                \r\n                <hr/>\r\n                <center>\r\n                \r\n                    <button className=\"btn btn-danger movebtn printing\" onClick={ () => this.props.history.push('/EndOfDay') }>Close</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ () => window.print() }>Print</button>\r\n                        \r\n                </center>       \r\n            </div>\r\n            \r\n        );\r\n    }\r\n  \r\n    componentDidMount() {\r\n        console.log(\">>> Inside CashDidMount\", this.state)\r\n\r\n        fetch(`${levyUrl}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({levyData:data})\r\n               \r\n        })\r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n    \r\n        var start = moment(new Date()).format('MMM DD YYYY');\r\n        var end = moment(new Date()).format('MMM DD YYYY');\r\n\r\n        var findAllBar = `${getRoomSales}&&gymstartdate12=${start}&&gymendDate12=${end}`\r\n\r\n        this.setState({RoomSales:''})\r\n        fetch(`${findAllBar}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({RoomSales:data});\r\n            data.map((item) => {\r\n\r\n                var RmSales = 0;\r\n                var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)\r\n                this.setState({RoomTotal:roomSales});\r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({depPOS:allPOS});\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({depCash:allCash});\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({depTransfer:allTransfer});\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({depComp:allComp});\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({deproom:allRoom});\r\n                \r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n        \r\n            var AllSalesPoint = 0;\r\n            var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n            this.setState({TotalSales:TotalSalesPoints})\r\n\r\n        },1000)\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n            \r\n    \r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default GymnasiumReport;","import React, { Component } from 'react';\r\nimport Billinglogin from '../../Billinglogin';\r\nimport '../Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport DatePicker from 'react-datepicker';\r\nimport moment from 'moment';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport addDays from 'date-fns/addDays';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst getRoomSales = \"https://zarvichdemo.localto.net/findSmoothieSales?smoot12=Suya%20Sales\";\r\n// const getRoomSales2 = \"/findRmDeposits?roomDep13=Room%20Deposit\";\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\nconst levyUrl= \"https://zarvichdemo.localto.net/feesAndCharges\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\n\r\n\r\n\r\nclass SmoothieReport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside CashConstructor\",props)\r\n        this.state = {\r\n            RoomSales:'',\r\n            RoomTotal:'',\r\n            depPOS:'',\r\n            depCash:'',\r\n            depTransfer:'',\r\n            depComp:'',\r\n            TotalSales:'',\r\n            date:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            shift:'',\r\n            startdate:'',\r\n            endDate:'',\r\n            levyData:'',\r\n            ServiceChrg:'',\r\n            TourismLevy:'',\r\n            VAT:'',\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n            \r\n            \r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n\r\n    }\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            date: date,\r\n            startdate: date\r\n\r\n        });\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            endDate: date\r\n        });\r\n    }\r\n    \r\n    renderDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.date}\r\n                    onChange={this.checkinhandleChange}\r\n                    maxDate={addDays(new Date(),0)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText='Select Start Date'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderendDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.endDate}\r\n                    onChange={this.endhandleChange}\r\n                    maxDate={(new Date())}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112 mvrght\"\r\n                    placeholderText=\"Search End Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    handleChange=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n    }\r\n    handleChange10=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value,\r\n            roomSales:''\r\n        })\r\n\r\n    }\r\n    \r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    cleanup(){\r\n        this.setState({\r\n            RoomSales:0,\r\n            RoomTotal:0,\r\n            depPOS:0,\r\n            depCash:0,\r\n            depTransfer:0,\r\n            depComp:0,\r\n            TotalSales:0\r\n            \r\n        })\r\n    }\r\n\r\n    findRoomReport(){\r\n        var start = moment(this.state.date).format('MMM DD YYYY');\r\n        var end = moment(this.state.endDate).format('MMM DD YYYY');\r\n\r\n       var findAllBar = `${getRoomSales}&&smoostartdate12=${start}&&smooendDate12=${end}`\r\n        // var findBarwrtshift = `${getRoomSales2}&&startdate13=${start}&&endDate13=${end}&&shiftNow2='All Day'`\r\n\r\n        \r\n            this.setState({RoomSales:''})\r\n            fetch(`${findAllBar}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({RoomSales:data});\r\n                data.map((item) => {\r\n    \r\n                    var RmSales = 0;\r\n                    var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)\r\n                    this.setState({RoomTotal:roomSales});\r\n    \r\n                    var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.POSAmount)\r\n                    }, 0);\r\n                    this.setState({depPOS:allPOS});\r\n    \r\n                    var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.CashAmount)\r\n                    }, 0);\r\n                    this.setState({depCash:allCash});\r\n    \r\n                    var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.TransferAmount)\r\n                    }, 0);\r\n                    this.setState({depTransfer:allTransfer});\r\n    \r\n                    var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.CompDebit)\r\n                    }, 0);\r\n                    this.setState({depComp:allComp});\r\n    \r\n                    var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.roomDebit)\r\n                    }, 0);\r\n                    this.setState({deproom:allRoom});\r\n                    \r\n                    return 'ok'\r\n                })\r\n                \r\n                \r\n            });\r\n            this.myTimer = setTimeout(() => {\r\n            \r\n                var AllSalesPoint = 0;\r\n                var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n                this.setState({TotalSales:TotalSalesPoints})\r\n    \r\n            },1000)\r\n        \r\n\r\n        \r\n            // this.setState({RoomSales:''})\r\n            // fetch(`${findBarwrtshift}`, {method:'GET'})\r\n            // .then((res) => res.json())\r\n            // .then((data) => {\r\n            //     this.setState({RoomSales:data});\r\n            //     data.map((item) => {\r\n\r\n            //         var RmSales = 0;\r\n            //         var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.CompDebit) + parseInt(item.roomDebit)\r\n            //         this.setState({RoomTotal:roomSales});\r\n    \r\n            //         var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.POSAmount)\r\n            //         }, 0);\r\n            //         this.setState({depPOS:allPOS});\r\n    \r\n            //         var allCash = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.CashAmount)\r\n            //         }, 0);\r\n            //         this.setState({depCash:allCash});\r\n    \r\n            //         var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.TransferAmount)\r\n            //         }, 0);\r\n            //         this.setState({depTransfer:allTransfer});\r\n    \r\n            //         var allComp = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.CompDebit)\r\n            //         }, 0);\r\n            //         this.setState({depComp:allComp});\r\n    \r\n            //         var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.roomDebit)\r\n            //         }, 0);\r\n            //         this.setState({deproom:allRoom});\r\n                    \r\n            //         return 'ok'\r\n            //     })\r\n                \r\n                \r\n            // });\r\n            \r\n            this.myTimer = setTimeout(() => {\r\n            \r\n                var AllSalesPoint = 0;\r\n                var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n                this.setState({TotalSales:TotalSalesPoints})\r\n    \r\n            },1000)\r\n            \r\n        \r\n       \r\n    }\r\n        \r\n    \r\n\r\n    renderRoomSales=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a, b) => a.date - b.date);\r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust222\">{defaultdate}</td>\r\n                            {/* <td className=\"table-light table-striped adjust2\">{item.roomNumbers}</td> */}\r\n                            <td className=\"table-light table-striped adjust223 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POSAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CashAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.TransferAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CompDebit}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POSAmount) + parseInt(item.CashAmount) + parseInt(item.TransferAmount)}thousandSeparator={true}displayType={\"text\"}/></b></td> \r\n                            \r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log (\">>> Inside Cashdetails\", this.state)\r\n        // var defaultdate = moment(this.state.date).format('MMM DD YYYY');\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Billinglogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <div className =\"container\">\r\n                <div>\r\n                    <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                </div>\r\n                <div>\r\n                    <center>\r\n                        <h6>{this.state.Hotelname}</h6>\r\n                        <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                        <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n                       \r\n                    </center>\r\n                </div>\r\n                <center>\r\n                    <h5>Suya Sales Report</h5><br/>\r\n                    <div>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderDate(this.state.startdate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderendDate(this.state.endDate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            {/* <select type =\"button\" className=\"form-select mb-2 btn btn-primary mt-3 btnwidthp printing space selectadjuster\" name=\"shift\" value ={this.state.shift} onChange={this.handleChange10}>\r\n                                <option selected value=''>Select Shift</option>\r\n                                <option value='Morning Shift'>Morning Shift</option>\r\n                                <option value='Night Shift'>Night Shift</option>\r\n                                <option value='All Day'>All Day</option>\r\n                                <option value='All Shifts'>All Shifts</option>\r\n                                \r\n                            </select> */}\r\n                            <button className=\"btn btn-primary space btnadjuster printing\" onClick={ () => {this.cleanup();this.findRoomReport()}}>Find</button>\r\n                        </span>\r\n                    </div>\r\n                                   \r\n                </center>\r\n                \r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust50\">Date</th>\r\n                            {/* <th className=\"adjust50\">Room Number</th> */}\r\n                            <th className=\"adjust50b\">Description</th>\r\n                            <th className=\"adjust50\">POS (NGN)</th>\r\n                            <th className=\"adjust50\">Cash(NGN)</th>\r\n                            <th className=\"adjust50\">Transfer(NGN)</th>\r\n                            <th className=\"adjust50\">Complimentary(NGN)</th>\r\n                            <th className=\"adjust50\">Total(NGN)</th>\r\n                            \r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderRoomSales(this.state.RoomSales)}\r\n                        <tr>\r\n                            {/* <td className=\"table-light table-striped adjust2\"> </td> */}\r\n                            <td className=\"table-light table-striped adjust2\"><b>Total</b></td>\r\n                            <td className=\"table-light table-striped adjust2\"><b> </b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depPOS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depCash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depTransfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depComp)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b> <NumberFormat value={this.state.depPOS + this.state.depCash + this.state.depTransfer}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                        </tr>\r\n\r\n                        \r\n                        \r\n                        \r\n                    </tbody>\r\n                </table>\r\n                \r\n                \r\n                <h6>Gross Collection:         <NumberFormat value={this.state.depPOS + this.state.depCash + this.state.depTransfer}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                \r\n                <hr/>\r\n                <center>\r\n                \r\n                    <button className=\"btn btn-danger movebtn printing\" onClick={ () => this.props.history.push('/EndOfDay') }>Close</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ () => window.print() }>Print</button>\r\n                    <button className=\"btn btn-warning movebtn printing\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>    \r\n                        \r\n                </center>       \r\n            </div>\r\n            \r\n        );\r\n    }\r\n  \r\n    componentDidMount() {\r\n        console.log(\">>> Inside CashDidMount\", this.state)\r\n\r\n        fetch(`${levyUrl}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({levyData:data})\r\n               \r\n        })\r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n    \r\n        var start = moment(new Date()).format('MMM DD YYYY');\r\n        var end = moment(new Date()).format('MMM DD YYYY');\r\n\r\n        var findAllBar = `${getRoomSales}&&smoostartdate12=${start}&&smooendDate12=${end}`\r\n\r\n        this.setState({RoomSales:''})\r\n        fetch(`${findAllBar}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({RoomSales:data});\r\n            data.map((item) => {\r\n\r\n                var RmSales = 0;\r\n                var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)\r\n                this.setState({RoomTotal:roomSales});\r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({depPOS:allPOS});\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({depCash:allCash});\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({depTransfer:allTransfer});\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({depComp:allComp});\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({deproom:allRoom});\r\n                \r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n        \r\n            var AllSalesPoint = 0;\r\n            var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n            this.setState({TotalSales:TotalSalesPoints})\r\n\r\n        },1000)\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n            \r\n    \r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default SmoothieReport;","import React, { Component } from 'react';\r\nimport Billinglogin from '../../Billinglogin';\r\nimport '../Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport DatePicker from 'react-datepicker';\r\nimport moment from 'moment';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport addDays from 'date-fns/addDays';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst getRoomSales = \"/findMiniMartSales?mart12=Mart%20Sales\";\r\n// const getRoomSales2 = \"/findRmDeposits?roomDep13=Room%20Deposit\";\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\nconst levyUrl= \"https://zarvichdemo.localto.net/feesAndCharges\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\n\r\n\r\n\r\nclass MinimartReport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside CashConstructor\",props)\r\n        this.state = {\r\n            RoomSales:'',\r\n            RoomTotal:'',\r\n            depPOS:'',\r\n            depCash:'',\r\n            depTransfer:'',\r\n            depComp:'',\r\n            TotalSales:'',\r\n            date:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            shift:'',\r\n            startdate:'',\r\n            endDate:'',\r\n            levyData:'',\r\n            ServiceChrg:'',\r\n            TourismLevy:'',\r\n            VAT:'',\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n            \r\n            \r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n\r\n    }\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            date: date,\r\n            startdate: date\r\n\r\n        });\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            endDate: date\r\n        });\r\n    }\r\n    \r\n    renderDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.date}\r\n                    onChange={this.checkinhandleChange}\r\n                    maxDate={addDays(new Date(),0)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText='Select Start Date'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderendDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.endDate}\r\n                    onChange={this.endhandleChange}\r\n                    maxDate={(new Date())}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112 mvrght\"\r\n                    placeholderText=\"Search End Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    handleChange=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n    }\r\n    handleChange10=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value,\r\n            roomSales:''\r\n        })\r\n\r\n    }\r\n    \r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    cleanup(){\r\n        this.setState({\r\n            RoomSales:0,\r\n            RoomTotal:0,\r\n            depPOS:0,\r\n            depCash:0,\r\n            depTransfer:0,\r\n            depComp:0,\r\n            TotalSales:0\r\n            \r\n        })\r\n    }\r\n\r\n    findRoomReport(){\r\n        var start = moment(this.state.date).format('MMM DD YYYY');\r\n        var end = moment(this.state.endDate).format('MMM DD YYYY');\r\n\r\n       var findAllBar = `${getRoomSales}&&martstartdate12=${start}&&martendDate12=${end}`\r\n        // var findBarwrtshift = `${getRoomSales2}&&startdate13=${start}&&endDate13=${end}&&shiftNow2='All Day'`\r\n\r\n        \r\n            this.setState({RoomSales:''})\r\n            fetch(`${findAllBar}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({RoomSales:data});\r\n                data.map((item) => {\r\n    \r\n                    var RmSales = 0;\r\n                    var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)\r\n                    this.setState({RoomTotal:roomSales});\r\n    \r\n                    var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.POSAmount)\r\n                    }, 0);\r\n                    this.setState({depPOS:allPOS});\r\n    \r\n                    var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.CashAmount)\r\n                    }, 0);\r\n                    this.setState({depCash:allCash});\r\n    \r\n                    var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.TransferAmount)\r\n                    }, 0);\r\n                    this.setState({depTransfer:allTransfer});\r\n    \r\n                    var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.CompDebit)\r\n                    }, 0);\r\n                    this.setState({depComp:allComp});\r\n    \r\n                    var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.roomDebit)\r\n                    }, 0);\r\n                    this.setState({deproom:allRoom});\r\n                    \r\n                    return 'ok'\r\n                })\r\n                \r\n                \r\n            });\r\n            this.myTimer = setTimeout(() => {\r\n            \r\n                var AllSalesPoint = 0;\r\n                var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n                this.setState({TotalSales:TotalSalesPoints})\r\n    \r\n            },1000)\r\n        \r\n\r\n        \r\n            // this.setState({RoomSales:''})\r\n            // fetch(`${findBarwrtshift}`, {method:'GET'})\r\n            // .then((res) => res.json())\r\n            // .then((data) => {\r\n            //     this.setState({RoomSales:data});\r\n            //     data.map((item) => {\r\n\r\n            //         var RmSales = 0;\r\n            //         var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.CompDebit) + parseInt(item.roomDebit)\r\n            //         this.setState({RoomTotal:roomSales});\r\n    \r\n            //         var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.POSAmount)\r\n            //         }, 0);\r\n            //         this.setState({depPOS:allPOS});\r\n    \r\n            //         var allCash = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.CashAmount)\r\n            //         }, 0);\r\n            //         this.setState({depCash:allCash});\r\n    \r\n            //         var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.TransferAmount)\r\n            //         }, 0);\r\n            //         this.setState({depTransfer:allTransfer});\r\n    \r\n            //         var allComp = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.CompDebit)\r\n            //         }, 0);\r\n            //         this.setState({depComp:allComp});\r\n    \r\n            //         var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.roomDebit)\r\n            //         }, 0);\r\n            //         this.setState({deproom:allRoom});\r\n                    \r\n            //         return 'ok'\r\n            //     })\r\n                \r\n                \r\n            // });\r\n            \r\n            this.myTimer = setTimeout(() => {\r\n            \r\n                var AllSalesPoint = 0;\r\n                var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n                this.setState({TotalSales:TotalSalesPoints})\r\n    \r\n            },1000)\r\n            \r\n        \r\n       \r\n    }\r\n        \r\n    \r\n\r\n    renderRoomSales=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a, b) => a.date - b.date);\r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust222\">{defaultdate}</td>\r\n                            {/* <td className=\"table-light table-striped adjust2\">{item.roomNumbers}</td> */}\r\n                            <td className=\"table-light table-striped adjust223 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POSAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CashAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.TransferAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CompDebit}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POSAmount) + parseInt(item.CashAmount) + parseInt(item.TransferAmount)}thousandSeparator={true}displayType={\"text\"}/></b></td> \r\n                            \r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log (\">>> Inside Cashdetails\", this.state)\r\n        // var defaultdate = moment(this.state.date).format('MMM DD YYYY');\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Billinglogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <div className =\"container\">\r\n                <div>\r\n                    <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                </div>\r\n                <div>\r\n                    <center>\r\n                        <h6>{this.state.Hotelname}</h6>\r\n                        <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                        <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n                       \r\n                    </center>\r\n                </div>\r\n                <center>\r\n                    <h5>Mini Mart Sales Report</h5><br/>\r\n                    <div>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderDate(this.state.startdate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderendDate(this.state.endDate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            {/* <select type =\"button\" className=\"form-select mb-2 btn btn-primary mt-3 btnwidthp printing space selectadjuster\" name=\"shift\" value ={this.state.shift} onChange={this.handleChange10}>\r\n                                <option selected value=''>Select Shift</option>\r\n                                <option value='Morning Shift'>Morning Shift</option>\r\n                                <option value='Night Shift'>Night Shift</option>\r\n                                <option value='All Day'>All Day</option>\r\n                                <option value='All Shifts'>All Shifts</option>\r\n                                \r\n                            </select> */}\r\n                            <button className=\"btn btn-primary space btnadjuster printing\" onClick={ () => {this.cleanup();this.findRoomReport()}}>Find</button>\r\n                        </span>\r\n                    </div>\r\n                                   \r\n                </center>\r\n                \r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust50\">Date</th>\r\n                            {/* <th className=\"adjust50\">Room Number</th> */}\r\n                            <th className=\"adjust50b\">Description</th>\r\n                            <th className=\"adjust50\">POS (NGN)</th>\r\n                            <th className=\"adjust50\">Cash(NGN)</th>\r\n                            <th className=\"adjust50\">Transfer(NGN)</th>\r\n                            <th className=\"adjust50\">Complimentary(NGN)</th>\r\n                            <th className=\"adjust50\">Total(NGN)</th>\r\n                            \r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderRoomSales(this.state.RoomSales)}\r\n                        <tr>\r\n                            {/* <td className=\"table-light table-striped adjust2\"> </td> */}\r\n                            <td className=\"table-light table-striped adjust2\"><b>Total</b></td>\r\n                            <td className=\"table-light table-striped adjust2\"><b> </b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depPOS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depCash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depTransfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depComp)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b> <NumberFormat value={this.state.depPOS + this.state.depCash + this.state.depTransfer}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                        </tr>\r\n\r\n                        \r\n                        \r\n                        \r\n                    </tbody>\r\n                </table>\r\n                \r\n                \r\n                <h6>Gross Collection:         <NumberFormat value={this.state.depPOS + this.state.depCash + this.state.depTransfer}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                \r\n                <hr/>\r\n                <center>\r\n                \r\n                    <button className=\"btn btn-danger movebtn printing\" onClick={ () => this.props.history.push('/EndOfDay') }>Close</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ () => window.print() }>Print</button>\r\n                        \r\n                </center>       \r\n            </div>\r\n            \r\n        );\r\n    }\r\n  \r\n    componentDidMount() {\r\n        console.log(\">>> Inside CashDidMount\", this.state)\r\n\r\n        fetch(`${levyUrl}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({levyData:data})\r\n               \r\n        })\r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n    \r\n        var start = moment(new Date()).format('MMM DD YYYY');\r\n        var end = moment(new Date()).format('MMM DD YYYY');\r\n\r\n        var findAllBar = `${getRoomSales}&&martstartdate12=${start}&&martendDate12=${end}`\r\n\r\n        this.setState({RoomSales:''})\r\n        fetch(`${findAllBar}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({RoomSales:data});\r\n            data.map((item) => {\r\n\r\n                var RmSales = 0;\r\n                var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)\r\n                this.setState({RoomTotal:roomSales});\r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({depPOS:allPOS});\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({depCash:allCash});\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({depTransfer:allTransfer});\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({depComp:allComp});\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({deproom:allRoom});\r\n                \r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n        \r\n            var AllSalesPoint = 0;\r\n            var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n            this.setState({TotalSales:TotalSalesPoints})\r\n\r\n        },1000)\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n            \r\n    \r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default MinimartReport;","import React, { Component } from 'react';\r\nimport Billinglogin from '../../Billinglogin';\r\nimport '../Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport DatePicker from 'react-datepicker';\r\nimport moment from 'moment';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport addDays from 'date-fns/addDays';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst getRoomSales = \"https://zarvichdemo.localto.net/findBbqSales?bbq12=Barbeque%20Sales\";\r\n// const getRoomSales2 = \"/findRmDeposits?roomDep13=Room%20Deposit\";\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\nconst levyUrl= \"https://zarvichdemo.localto.net/feesAndCharges\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\n\r\n\r\n\r\nclass BarbequeReport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside CashConstructor\",props)\r\n        this.state = {\r\n            RoomSales:'',\r\n            RoomTotal:'',\r\n            depPOS:'',\r\n            depCash:'',\r\n            depTransfer:'',\r\n            depComp:'',\r\n            TotalSales:'',\r\n            date:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            shift:'',\r\n            startdate:'',\r\n            endDate:'',\r\n            levyData:'',\r\n            ServiceChrg:'',\r\n            TourismLevy:'',\r\n            VAT:'',\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n            \r\n            \r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n\r\n    }\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            date: date,\r\n            startdate: date\r\n\r\n        });\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            endDate: date\r\n        });\r\n    }\r\n    \r\n    renderDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.date}\r\n                    onChange={this.checkinhandleChange}\r\n                    maxDate={addDays(new Date(),0)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText='Select Start Date'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderendDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.endDate}\r\n                    onChange={this.endhandleChange}\r\n                    maxDate={(new Date())}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112 mvrght\"\r\n                    placeholderText=\"Search End Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    handleChange=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n    }\r\n    handleChange10=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value,\r\n            roomSales:''\r\n        })\r\n\r\n    }\r\n    \r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    cleanup(){\r\n        this.setState({\r\n            RoomSales:0,\r\n            RoomTotal:0,\r\n            depPOS:0,\r\n            depCash:0,\r\n            depTransfer:0,\r\n            depComp:0,\r\n            TotalSales:0\r\n            \r\n        })\r\n    }\r\n\r\n    findRoomReport(){\r\n        var start = moment(this.state.date).format('MMM DD YYYY');\r\n        var end = moment(this.state.endDate).format('MMM DD YYYY');\r\n\r\n       var findAllBar = `${getRoomSales}&&bbqstartdate12=${start}&&bbqendDate12=${end}`\r\n        // var findBarwrtshift = `${getRoomSales2}&&startdate13=${start}&&endDate13=${end}&&shiftNow2='All Day'`\r\n\r\n        \r\n            this.setState({RoomSales:''})\r\n            fetch(`${findAllBar}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({RoomSales:data});\r\n                data.map((item) => {\r\n    \r\n                    var RmSales = 0;\r\n                    var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)\r\n                    this.setState({RoomTotal:roomSales});\r\n    \r\n                    var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.POSAmount)\r\n                    }, 0);\r\n                    this.setState({depPOS:allPOS});\r\n    \r\n                    var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.CashAmount)\r\n                    }, 0);\r\n                    this.setState({depCash:allCash});\r\n    \r\n                    var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.TransferAmount)\r\n                    }, 0);\r\n                    this.setState({depTransfer:allTransfer});\r\n    \r\n                    var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.CompDebit)\r\n                    }, 0);\r\n                    this.setState({depComp:allComp});\r\n    \r\n                    var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.roomDebit)\r\n                    }, 0);\r\n                    this.setState({deproom:allRoom});\r\n                    \r\n                    return 'ok'\r\n                })\r\n                \r\n                \r\n            });\r\n            this.myTimer = setTimeout(() => {\r\n            \r\n                var AllSalesPoint = 0;\r\n                var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n                this.setState({TotalSales:TotalSalesPoints})\r\n    \r\n            },1000)\r\n        \r\n\r\n        \r\n            // this.setState({RoomSales:''})\r\n            // fetch(`${findBarwrtshift}`, {method:'GET'})\r\n            // .then((res) => res.json())\r\n            // .then((data) => {\r\n            //     this.setState({RoomSales:data});\r\n            //     data.map((item) => {\r\n\r\n            //         var RmSales = 0;\r\n            //         var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.CompDebit) + parseInt(item.roomDebit)\r\n            //         this.setState({RoomTotal:roomSales});\r\n    \r\n            //         var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.POSAmount)\r\n            //         }, 0);\r\n            //         this.setState({depPOS:allPOS});\r\n    \r\n            //         var allCash = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.CashAmount)\r\n            //         }, 0);\r\n            //         this.setState({depCash:allCash});\r\n    \r\n            //         var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.TransferAmount)\r\n            //         }, 0);\r\n            //         this.setState({depTransfer:allTransfer});\r\n    \r\n            //         var allComp = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.CompDebit)\r\n            //         }, 0);\r\n            //         this.setState({depComp:allComp});\r\n    \r\n            //         var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.roomDebit)\r\n            //         }, 0);\r\n            //         this.setState({deproom:allRoom});\r\n                    \r\n            //         return 'ok'\r\n            //     })\r\n                \r\n                \r\n            // });\r\n            \r\n            this.myTimer = setTimeout(() => {\r\n            \r\n                var AllSalesPoint = 0;\r\n                var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n                this.setState({TotalSales:TotalSalesPoints})\r\n    \r\n            },1000)\r\n            \r\n        \r\n       \r\n    }\r\n        \r\n    \r\n\r\n    renderRoomSales=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a, b) => a.date - b.date);\r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust222\">{defaultdate}</td>\r\n                            {/* <td className=\"table-light table-striped adjust2\">{item.roomNumbers}</td> */}\r\n                            <td className=\"table-light table-striped adjust223 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POSAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CashAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.TransferAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CompDebit}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POSAmount) + parseInt(item.CashAmount) + parseInt(item.TransferAmount)}thousandSeparator={true}displayType={\"text\"}/></b></td> \r\n                            \r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log (\">>> Inside Cashdetails\", this.state)\r\n        // var defaultdate = moment(this.state.date).format('MMM DD YYYY');\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Billinglogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <div className =\"container\">\r\n                <div>\r\n                    <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                </div>\r\n                <div>\r\n                    <center>\r\n                        <h6>{this.state.Hotelname}</h6>\r\n                        <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                        <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n                       \r\n                    </center>\r\n                </div>\r\n                <center>\r\n                    <h5>Barbeque Sales Report</h5><br/>\r\n                    <div>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderDate(this.state.startdate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderendDate(this.state.endDate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            {/* <select type =\"button\" className=\"form-select mb-2 btn btn-primary mt-3 btnwidthp printing space selectadjuster\" name=\"shift\" value ={this.state.shift} onChange={this.handleChange10}>\r\n                                <option selected value=''>Select Shift</option>\r\n                                <option value='Morning Shift'>Morning Shift</option>\r\n                                <option value='Night Shift'>Night Shift</option>\r\n                                <option value='All Day'>All Day</option>\r\n                                <option value='All Shifts'>All Shifts</option>\r\n                                \r\n                            </select> */}\r\n                            <button className=\"btn btn-primary space btnadjuster printing\" onClick={ () => {this.cleanup();this.findRoomReport()}}>Find</button>\r\n                        </span>\r\n                    </div>\r\n                                   \r\n                </center>\r\n                \r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust50\">Date</th>\r\n                            {/* <th className=\"adjust50\">Room Number</th> */}\r\n                            <th className=\"adjust50b\">Description</th>\r\n                            <th className=\"adjust50\">POS (NGN)</th>\r\n                            <th className=\"adjust50\">Cash(NGN)</th>\r\n                            <th className=\"adjust50\">Transfer(NGN)</th>\r\n                            <th className=\"adjust50\">Complimentary(NGN)</th>\r\n                            <th className=\"adjust50\">Total(NGN)</th>\r\n                            \r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderRoomSales(this.state.RoomSales)}\r\n                        <tr>\r\n                            {/* <td className=\"table-light table-striped adjust2\"> </td> */}\r\n                            <td className=\"table-light table-striped adjust2\"><b>Total</b></td>\r\n                            <td className=\"table-light table-striped adjust2\"><b> </b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depPOS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depCash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depTransfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depComp)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b> <NumberFormat value={this.state.depPOS + this.state.depCash + this.state.depTransfer}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                        </tr>\r\n\r\n                        \r\n                        \r\n                        \r\n                    </tbody>\r\n                </table>\r\n                \r\n                \r\n                <h6>Gross Collection:         <NumberFormat value={this.state.depPOS + this.state.depCash + this.state.depTransfer}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                \r\n                <hr/>\r\n                <center>\r\n                \r\n                    <button className=\"btn btn-danger movebtn printing\" onClick={ () => this.props.history.push('/EndOfDay') }>Close</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ () => window.print() }>Print</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>\r\n                        \r\n                </center>       \r\n            </div>\r\n            \r\n        );\r\n    }\r\n  \r\n    componentDidMount() {\r\n        console.log(\">>> Inside CashDidMount\", this.state)\r\n\r\n        fetch(`${levyUrl}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({levyData:data})\r\n               \r\n        })\r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n    \r\n        var start = moment(new Date()).format('MMM DD YYYY');\r\n        var end = moment(new Date()).format('MMM DD YYYY');\r\n\r\n        var findAllBar = `${getRoomSales}&&bbqstartdate12=${start}&&bbqendDate12=${end}`\r\n\r\n        this.setState({RoomSales:''})\r\n        fetch(`${findAllBar}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({RoomSales:data});\r\n            data.map((item) => {\r\n\r\n                var RmSales = 0;\r\n                var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)\r\n                this.setState({RoomTotal:roomSales});\r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({depPOS:allPOS});\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({depCash:allCash});\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({depTransfer:allTransfer});\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({depComp:allComp});\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({deproom:allRoom});\r\n                \r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n        \r\n            var AllSalesPoint = 0;\r\n            var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n            this.setState({TotalSales:TotalSalesPoints})\r\n\r\n        },1000)\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n            \r\n    \r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default BarbequeReport;","import React, { Component } from 'react';\r\nimport Billinglogin from '../../Billinglogin';\r\nimport '../Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport DatePicker from 'react-datepicker';\r\nimport moment from 'moment';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport addDays from 'date-fns/addDays';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst getRoomSales = \"/findShiSales?shi12=Games%20Sales\";\r\n// const getRoomSales2 = \"/findRmDeposits?roomDep13=Room%20Deposit\";\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\nconst levyUrl= \"https://zarvichdemo.localto.net/feesAndCharges\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\n\r\n\r\n\r\nclass ShishReport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside CashConstructor\",props)\r\n        this.state = {\r\n            RoomSales:'',\r\n            RoomTotal:'',\r\n            depPOS:'',\r\n            depCash:'',\r\n            depTransfer:'',\r\n            depComp:'',\r\n            TotalSales:'',\r\n            date:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            shift:'',\r\n            startdate:'',\r\n            endDate:'',\r\n            levyData:'',\r\n            ServiceChrg:'',\r\n            TourismLevy:'',\r\n            VAT:'',\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n            \r\n            \r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n\r\n    }\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            date: date,\r\n            startdate: date\r\n\r\n        });\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            endDate: date\r\n        });\r\n    }\r\n    \r\n    renderDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.date}\r\n                    onChange={this.checkinhandleChange}\r\n                    maxDate={addDays(new Date(),0)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText='Select Start Date'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderendDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.endDate}\r\n                    onChange={this.endhandleChange}\r\n                    maxDate={(new Date())}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112 mvrght\"\r\n                    placeholderText=\"Search End Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    handleChange=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n    }\r\n    handleChange10=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value,\r\n            roomSales:''\r\n        })\r\n\r\n    }\r\n    \r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    cleanup(){\r\n        this.setState({\r\n            RoomSales:0,\r\n            RoomTotal:0,\r\n            depPOS:0,\r\n            depCash:0,\r\n            depTransfer:0,\r\n            depComp:0,\r\n            TotalSales:0\r\n            \r\n        })\r\n    }\r\n\r\n    findRoomReport(){\r\n        var start = moment(this.state.date).format('MMM DD YYYY');\r\n        var end = moment(this.state.endDate).format('MMM DD YYYY');\r\n\r\n       var findAllBar = `${getRoomSales}&&shistartdate12=${start}&&shiendDate12=${end}`\r\n        // var findBarwrtshift = `${getRoomSales2}&&startdate13=${start}&&endDate13=${end}&&shiftNow2='All Day'`\r\n\r\n        \r\n            this.setState({RoomSales:''})\r\n            fetch(`${findAllBar}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({RoomSales:data});\r\n                data.map((item) => {\r\n    \r\n                    var RmSales = 0;\r\n                    var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)\r\n                    this.setState({RoomTotal:roomSales});\r\n    \r\n                    var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.POSAmount)\r\n                    }, 0);\r\n                    this.setState({depPOS:allPOS});\r\n    \r\n                    var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.CashAmount)\r\n                    }, 0);\r\n                    this.setState({depCash:allCash});\r\n    \r\n                    var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.TransferAmount)\r\n                    }, 0);\r\n                    this.setState({depTransfer:allTransfer});\r\n    \r\n                    var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.CompDebit)\r\n                    }, 0);\r\n                    this.setState({depComp:allComp});\r\n    \r\n                    var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.roomDebit)\r\n                    }, 0);\r\n                    this.setState({deproom:allRoom});\r\n                    \r\n                    return 'ok'\r\n                })\r\n                \r\n                \r\n            });\r\n            this.myTimer = setTimeout(() => {\r\n            \r\n                var AllSalesPoint = 0;\r\n                var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n                this.setState({TotalSales:TotalSalesPoints})\r\n    \r\n            },1000)\r\n        \r\n\r\n        \r\n            // this.setState({RoomSales:''})\r\n            // fetch(`${findBarwrtshift}`, {method:'GET'})\r\n            // .then((res) => res.json())\r\n            // .then((data) => {\r\n            //     this.setState({RoomSales:data});\r\n            //     data.map((item) => {\r\n\r\n            //         var RmSales = 0;\r\n            //         var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.CompDebit) + parseInt(item.roomDebit)\r\n            //         this.setState({RoomTotal:roomSales});\r\n    \r\n            //         var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.POSAmount)\r\n            //         }, 0);\r\n            //         this.setState({depPOS:allPOS});\r\n    \r\n            //         var allCash = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.CashAmount)\r\n            //         }, 0);\r\n            //         this.setState({depCash:allCash});\r\n    \r\n            //         var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.TransferAmount)\r\n            //         }, 0);\r\n            //         this.setState({depTransfer:allTransfer});\r\n    \r\n            //         var allComp = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.CompDebit)\r\n            //         }, 0);\r\n            //         this.setState({depComp:allComp});\r\n    \r\n            //         var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.roomDebit)\r\n            //         }, 0);\r\n            //         this.setState({deproom:allRoom});\r\n                    \r\n            //         return 'ok'\r\n            //     })\r\n                \r\n                \r\n            // });\r\n            \r\n            this.myTimer = setTimeout(() => {\r\n            \r\n                var AllSalesPoint = 0;\r\n                var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n                this.setState({TotalSales:TotalSalesPoints})\r\n    \r\n            },1000)\r\n            \r\n        \r\n       \r\n    }\r\n        \r\n    \r\n\r\n    renderRoomSales=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a, b) => a.date - b.date);\r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust222\">{defaultdate}</td>\r\n                            {/* <td className=\"table-light table-striped adjust2\">{item.roomNumbers}</td> */}\r\n                            <td className=\"table-light table-striped adjust223 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POSAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CashAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.TransferAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CompDebit}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POSAmount) + parseInt(item.CashAmount) + parseInt(item.TransferAmount)}thousandSeparator={true}displayType={\"text\"}/></b></td> \r\n                            \r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log (\">>> Inside Cashdetails\", this.state)\r\n        // var defaultdate = moment(this.state.date).format('MMM DD YYYY');\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Billinglogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <div className =\"container\">\r\n                <div>\r\n                    <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                </div>\r\n                <div>\r\n                    <center>\r\n                        <h6>{this.state.Hotelname}</h6>\r\n                        <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                        <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n                       \r\n                    </center>\r\n                </div>\r\n                <center>\r\n                    <h5>Games Sales Report</h5><br/>\r\n                    <div>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderDate(this.state.startdate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderendDate(this.state.endDate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            {/* <select type =\"button\" className=\"form-select mb-2 btn btn-primary mt-3 btnwidthp printing space selectadjuster\" name=\"shift\" value ={this.state.shift} onChange={this.handleChange10}>\r\n                                <option selected value=''>Select Shift</option>\r\n                                <option value='Morning Shift'>Morning Shift</option>\r\n                                <option value='Night Shift'>Night Shift</option>\r\n                                <option value='All Day'>All Day</option>\r\n                                <option value='All Shifts'>All Shifts</option>\r\n                                \r\n                            </select> */}\r\n                            <button className=\"btn btn-primary space btnadjuster printing\" onClick={ () => {this.cleanup();this.findRoomReport()}}>Find</button>\r\n                        </span>\r\n                    </div>\r\n                                   \r\n                </center>\r\n                \r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust50\">Date</th>\r\n                            {/* <th className=\"adjust50\">Room Number</th> */}\r\n                            <th className=\"adjust50b\">Description</th>\r\n                            <th className=\"adjust50\">POS (NGN)</th>\r\n                            <th className=\"adjust50\">Cash(NGN)</th>\r\n                            <th className=\"adjust50\">Transfer(NGN)</th>\r\n                            <th className=\"adjust50\">Complimentary(NGN)</th>\r\n                            <th className=\"adjust50\">Total(NGN)</th>\r\n                            \r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderRoomSales(this.state.RoomSales)}\r\n                        <tr>\r\n                            {/* <td className=\"table-light table-striped adjust2\"> </td> */}\r\n                            <td className=\"table-light table-striped adjust2\"><b>Total</b></td>\r\n                            <td className=\"table-light table-striped adjust2\"><b> </b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depPOS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depCash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depTransfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depComp)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b> <NumberFormat value={this.state.depPOS + this.state.depCash + this.state.depTransfer}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                        </tr>\r\n\r\n                        \r\n                        \r\n                        \r\n                    </tbody>\r\n                </table>\r\n                \r\n                \r\n                <h6>Gross Collection:         <NumberFormat value={this.state.depPOS + this.state.depCash + this.state.depTransfer}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                \r\n                <hr/>\r\n                <center>\r\n                \r\n                    <button className=\"btn btn-danger movebtn printing\" onClick={ () => this.props.history.push('/EndOfDay') }>Close</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ () => window.print() }>Print</button>\r\n                    <button className=\"btn btn-warning movebtn printing\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>    \r\n                        \r\n                </center>       \r\n            </div>\r\n            \r\n        );\r\n    }\r\n  \r\n    componentDidMount() {\r\n        console.log(\">>> Inside CashDidMount\", this.state)\r\n\r\n        fetch(`${levyUrl}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({levyData:data})\r\n               \r\n        })\r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n    \r\n        var start = moment(new Date()).format('MMM DD YYYY');\r\n        var end = moment(new Date()).format('MMM DD YYYY');\r\n\r\n        var findAllBar = `${getRoomSales}&&shistartdate12=${start}&&shiendDate12=${end}`\r\n\r\n        this.setState({RoomSales:''})\r\n        fetch(`${findAllBar}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({RoomSales:data});\r\n            data.map((item) => {\r\n\r\n                var RmSales = 0;\r\n                var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)\r\n                this.setState({RoomTotal:roomSales});\r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({depPOS:allPOS});\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({depCash:allCash});\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({depTransfer:allTransfer});\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({depComp:allComp});\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({deproom:allRoom});\r\n                \r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n        \r\n            var AllSalesPoint = 0;\r\n            var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n            this.setState({TotalSales:TotalSalesPoints})\r\n\r\n        },1000)\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n            \r\n    \r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default ShishReport;","import React, { Component } from 'react';\r\nimport Billinglogin from '../../Billinglogin';\r\nimport '../Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport DatePicker from 'react-datepicker';\r\nimport moment from 'moment';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport addDays from 'date-fns/addDays';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst getRoomSales = \"https://zarvichdemo.localto.net/findHallSales?hall12=Hall%20Hire\";\r\n// const getRoomSales2 = \"/findRmDeposits?roomDep13=Room%20Deposit\";\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\nconst levyUrl= \"https://zarvichdemo.localto.net/feesAndCharges\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\n\r\n\r\n\r\nclass HallHireReport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside CashConstructor\",props)\r\n        this.state = {\r\n            RoomSales:'',\r\n            RoomTotal:'',\r\n            depPOS:'',\r\n            depCash:'',\r\n            depTransfer:'',\r\n            depComp:'',\r\n            TotalSales:'',\r\n            date:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            shift:'',\r\n            startdate:'',\r\n            endDate:'',\r\n            levyData:'',\r\n            ServiceChrg:'',\r\n            TourismLevy:'',\r\n            VAT:'',\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n            \r\n            \r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n\r\n    }\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            date: date,\r\n            startdate: date\r\n\r\n        });\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            endDate: date\r\n        });\r\n    }\r\n    \r\n    renderDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.date}\r\n                    onChange={this.checkinhandleChange}\r\n                    maxDate={addDays(new Date(),0)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText='Select Start Date'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderendDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.endDate}\r\n                    onChange={this.endhandleChange}\r\n                    maxDate={(new Date())}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112 mvrght\"\r\n                    placeholderText=\"Search End Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    handleChange=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n    }\r\n    handleChange10=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value,\r\n            roomSales:''\r\n        })\r\n\r\n    }\r\n    \r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    cleanup(){\r\n        this.setState({\r\n            RoomSales:0,\r\n            RoomTotal:0,\r\n            depPOS:0,\r\n            depCash:0,\r\n            depTransfer:0,\r\n            depComp:0,\r\n            TotalSales:0\r\n            \r\n        })\r\n    }\r\n\r\n    findRoomReport(){\r\n        var start = moment(this.state.date).format('MMM DD YYYY');\r\n        var end = moment(this.state.endDate).format('MMM DD YYYY');\r\n\r\n       var findAllBar = `${getRoomSales}&&hallstartdate12=${start}&&hallendDate12=${end}`\r\n        // var findBarwrtshift = `${getRoomSales2}&&startdate13=${start}&&endDate13=${end}&&shiftNow2='All Day'`\r\n\r\n        \r\n            this.setState({RoomSales:''})\r\n            fetch(`${findAllBar}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({RoomSales:data});\r\n                data.map((item) => {\r\n    \r\n                    var RmSales = 0;\r\n                    var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)\r\n                    this.setState({RoomTotal:roomSales});\r\n    \r\n                    var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.POSAmount)\r\n                    }, 0);\r\n                    this.setState({depPOS:allPOS});\r\n    \r\n                    var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.CashAmount)\r\n                    }, 0);\r\n                    this.setState({depCash:allCash});\r\n    \r\n                    var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.TransferAmount)\r\n                    }, 0);\r\n                    this.setState({depTransfer:allTransfer});\r\n    \r\n                    var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.CompDebit)\r\n                    }, 0);\r\n                    this.setState({depComp:allComp});\r\n    \r\n                    var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.roomDebit)\r\n                    }, 0);\r\n                    this.setState({deproom:allRoom});\r\n                    \r\n                    return 'ok'\r\n                })\r\n                \r\n                \r\n            });\r\n            this.myTimer = setTimeout(() => {\r\n            \r\n                var AllSalesPoint = 0;\r\n                var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n                this.setState({TotalSales:TotalSalesPoints})\r\n    \r\n            },1000)\r\n        \r\n\r\n        \r\n            // this.setState({RoomSales:''})\r\n            // fetch(`${findBarwrtshift}`, {method:'GET'})\r\n            // .then((res) => res.json())\r\n            // .then((data) => {\r\n            //     this.setState({RoomSales:data});\r\n            //     data.map((item) => {\r\n\r\n            //         var RmSales = 0;\r\n            //         var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.CompDebit) + parseInt(item.roomDebit)\r\n            //         this.setState({RoomTotal:roomSales});\r\n    \r\n            //         var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.POSAmount)\r\n            //         }, 0);\r\n            //         this.setState({depPOS:allPOS});\r\n    \r\n            //         var allCash = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.CashAmount)\r\n            //         }, 0);\r\n            //         this.setState({depCash:allCash});\r\n    \r\n            //         var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.TransferAmount)\r\n            //         }, 0);\r\n            //         this.setState({depTransfer:allTransfer});\r\n    \r\n            //         var allComp = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.CompDebit)\r\n            //         }, 0);\r\n            //         this.setState({depComp:allComp});\r\n    \r\n            //         var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.roomDebit)\r\n            //         }, 0);\r\n            //         this.setState({deproom:allRoom});\r\n                    \r\n            //         return 'ok'\r\n            //     })\r\n                \r\n                \r\n            // });\r\n            \r\n            this.myTimer = setTimeout(() => {\r\n            \r\n                var AllSalesPoint = 0;\r\n                var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n                this.setState({TotalSales:TotalSalesPoints})\r\n    \r\n            },1000)\r\n            \r\n        \r\n       \r\n    }\r\n        \r\n    \r\n\r\n    renderRoomSales=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a, b) => a.date - b.date);\r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust222\">{defaultdate}</td>\r\n                            {/* <td className=\"table-light table-striped adjust2\">{item.roomNumbers}</td> */}\r\n                            <td className=\"table-light table-striped adjust223 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POSAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CashAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.TransferAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CompDebit}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POSAmount) + parseInt(item.CashAmount) + parseInt(item.TransferAmount)}thousandSeparator={true}displayType={\"text\"}/></b></td> \r\n                            \r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log (\">>> Inside Cashdetails\", this.state)\r\n        // var defaultdate = moment(this.state.date).format('MMM DD YYYY');\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Billinglogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <div className =\"container\">\r\n                <div>\r\n                    <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                </div>\r\n                <div>\r\n                    <center>\r\n                        <h6>{this.state.Hotelname}</h6>\r\n                        <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                        <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n                       \r\n                    </center>\r\n                </div>\r\n                <center>\r\n                    <h5>Hall Hire Report</h5><br/>\r\n                    <div>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderDate(this.state.startdate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderendDate(this.state.endDate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            {/* <select type =\"button\" className=\"form-select mb-2 btn btn-primary mt-3 btnwidthp printing space selectadjuster\" name=\"shift\" value ={this.state.shift} onChange={this.handleChange10}>\r\n                                <option selected value=''>Select Shift</option>\r\n                                <option value='Morning Shift'>Morning Shift</option>\r\n                                <option value='Night Shift'>Night Shift</option>\r\n                                <option value='All Day'>All Day</option>\r\n                                <option value='All Shifts'>All Shifts</option>\r\n                                \r\n                            </select> */}\r\n                            <button className=\"btn btn-primary space btnadjuster printing\" onClick={ () => {this.cleanup();this.findRoomReport()}}>Find</button>\r\n                        </span>\r\n                    </div>\r\n                                   \r\n                </center>\r\n                \r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust50\">Date</th>\r\n                            {/* <th className=\"adjust50\">Room Number</th> */}\r\n                            <th className=\"adjust50b\">Description</th>\r\n                            <th className=\"adjust50\">POS (NGN)</th>\r\n                            <th className=\"adjust50\">Cash(NGN)</th>\r\n                            <th className=\"adjust50\">Transfer(NGN)</th>\r\n                            <th className=\"adjust50\">Complimentary(NGN)</th>\r\n                            <th className=\"adjust50\">Total(NGN)</th>\r\n                            \r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderRoomSales(this.state.RoomSales)}\r\n                        <tr>\r\n                            {/* <td className=\"table-light table-striped adjust2\"> </td> */}\r\n                            <td className=\"table-light table-striped adjust2\"><b>Total</b></td>\r\n                            <td className=\"table-light table-striped adjust2\"><b> </b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depPOS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depCash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depTransfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depComp)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b> <NumberFormat value={this.state.depPOS + this.state.depCash + this.state.depTransfer}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                        </tr>\r\n\r\n                        \r\n                        \r\n                        \r\n                    </tbody>\r\n                </table>\r\n                \r\n                \r\n                <h6>Gross Collection:         <NumberFormat value={this.state.depPOS + this.state.depCash + this.state.depTransfer}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                \r\n                <hr/>\r\n                <center>\r\n                \r\n                    <button className=\"btn btn-danger movebtn printing\" onClick={ () => this.props.history.push('/EndOfDay') }>Close</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ () => window.print() }>Print</button>\r\n                        \r\n                </center>       \r\n            </div>\r\n            \r\n        );\r\n    }\r\n  \r\n    componentDidMount() {\r\n        console.log(\">>> Inside CashDidMount\", this.state)\r\n\r\n        fetch(`${levyUrl}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({levyData:data})\r\n               \r\n        })\r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n    \r\n        var start = moment(new Date()).format('MMM DD YYYY');\r\n        var end = moment(new Date()).format('MMM DD YYYY');\r\n\r\n        var findAllBar = `${getRoomSales}&&hallstartdate12=${start}&&hallendDate12=${end}`\r\n\r\n        this.setState({RoomSales:''})\r\n        fetch(`${findAllBar}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({RoomSales:data});\r\n            data.map((item) => {\r\n\r\n                var RmSales = 0;\r\n                var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)\r\n                this.setState({RoomTotal:roomSales});\r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({depPOS:allPOS});\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({depCash:allCash});\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({depTransfer:allTransfer});\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({depComp:allComp});\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({deproom:allRoom});\r\n                \r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n        \r\n            var AllSalesPoint = 0;\r\n            var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n            this.setState({TotalSales:TotalSalesPoints})\r\n\r\n        },1000)\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n            \r\n    \r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default HallHireReport;","import React, { Component } from 'react';\r\nimport Billinglogin from '../../Billinglogin';\r\nimport '../Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport DatePicker from 'react-datepicker';\r\nimport moment from 'moment';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport addDays from 'date-fns/addDays';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst getRoomSales = \"https://zarvichdemo.localto.net/findSwimmingSales?swim12=Swimming%20Sales\";\r\n// const getRoomSales2 = \"/findRmDeposits?roomDep13=Room%20Deposit\";\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\nconst levyUrl= \"https://zarvichdemo.localto.net/feesAndCharges\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\n\r\n\r\n\r\nclass SwimmingReport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside CashConstructor\",props)\r\n        this.state = {\r\n            RoomSales:'',\r\n            RoomTotal:'',\r\n            depPOS:'',\r\n            depCash:'',\r\n            depTransfer:'',\r\n            depComp:'',\r\n            TotalSales:'',\r\n            date:'',\r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n            shift:'',\r\n            startdate:'',\r\n            endDate:'',\r\n            levyData:'',\r\n            ServiceChrg:'',\r\n            TourismLevy:'',\r\n            VAT:'',\r\n\r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:''\r\n            \r\n            \r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n\r\n    }\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            date: date,\r\n            startdate: date\r\n\r\n        });\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            endDate: date\r\n        });\r\n    }\r\n    \r\n    renderDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.date}\r\n                    onChange={this.checkinhandleChange}\r\n                    maxDate={addDays(new Date(),0)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText='Select Start Date'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderendDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.endDate}\r\n                    onChange={this.endhandleChange}\r\n                    maxDate={(new Date())}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112 mvrght\"\r\n                    placeholderText=\"Search End Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    handleChange=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n    }\r\n    handleChange10=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value,\r\n            roomSales:''\r\n        })\r\n\r\n    }\r\n    \r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        \r\n    }\r\n\r\n    cleanup(){\r\n        this.setState({\r\n            RoomSales:0,\r\n            RoomTotal:0,\r\n            depPOS:0,\r\n            depCash:0,\r\n            depTransfer:0,\r\n            depComp:0,\r\n            TotalSales:0\r\n            \r\n        })\r\n    }\r\n\r\n    findRoomReport(){\r\n        var start = moment(this.state.date).format('MMM DD YYYY');\r\n        var end = moment(this.state.endDate).format('MMM DD YYYY');\r\n\r\n       var findAllBar = `${getRoomSales}&&swimstartdate12=${start}&&swimendDate12=${end}`\r\n        // var findBarwrtshift = `${getRoomSales2}&&startdate13=${start}&&endDate13=${end}&&shiftNow2='All Day'`\r\n\r\n        \r\n            this.setState({RoomSales:''})\r\n            fetch(`${findAllBar}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({RoomSales:data});\r\n                data.map((item) => {\r\n    \r\n                    var RmSales = 0;\r\n                    var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)\r\n                    this.setState({RoomTotal:roomSales});\r\n    \r\n                    var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.POSAmount)\r\n                    }, 0);\r\n                    this.setState({depPOS:allPOS});\r\n    \r\n                    var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.CashAmount)\r\n                    }, 0);\r\n                    this.setState({depCash:allCash});\r\n    \r\n                    var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.TransferAmount)\r\n                    }, 0);\r\n                    this.setState({depTransfer:allTransfer});\r\n    \r\n                    var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.CompDebit)\r\n                    }, 0);\r\n                    this.setState({depComp:allComp});\r\n    \r\n                    var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.roomDebit)\r\n                    }, 0);\r\n                    this.setState({deproom:allRoom});\r\n                    \r\n                    return 'ok'\r\n                })\r\n                \r\n                \r\n            });\r\n            this.myTimer = setTimeout(() => {\r\n            \r\n                var AllSalesPoint = 0;\r\n                var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n                this.setState({TotalSales:TotalSalesPoints})\r\n    \r\n            },1000)\r\n        \r\n\r\n        \r\n            // this.setState({RoomSales:''})\r\n            // fetch(`${findBarwrtshift}`, {method:'GET'})\r\n            // .then((res) => res.json())\r\n            // .then((data) => {\r\n            //     this.setState({RoomSales:data});\r\n            //     data.map((item) => {\r\n\r\n            //         var RmSales = 0;\r\n            //         var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.CompDebit) + parseInt(item.roomDebit)\r\n            //         this.setState({RoomTotal:roomSales});\r\n    \r\n            //         var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.POSAmount)\r\n            //         }, 0);\r\n            //         this.setState({depPOS:allPOS});\r\n    \r\n            //         var allCash = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.CashAmount)\r\n            //         }, 0);\r\n            //         this.setState({depCash:allCash});\r\n    \r\n            //         var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.TransferAmount)\r\n            //         }, 0);\r\n            //         this.setState({depTransfer:allTransfer});\r\n    \r\n            //         var allComp = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.CompDebit)\r\n            //         }, 0);\r\n            //         this.setState({depComp:allComp});\r\n    \r\n            //         var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n            //             return totals + parseInt(item.roomDebit)\r\n            //         }, 0);\r\n            //         this.setState({deproom:allRoom});\r\n                    \r\n            //         return 'ok'\r\n            //     })\r\n                \r\n                \r\n            // });\r\n            \r\n            this.myTimer = setTimeout(() => {\r\n            \r\n                var AllSalesPoint = 0;\r\n                var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n                this.setState({TotalSales:TotalSalesPoints})\r\n    \r\n            },1000)\r\n            \r\n        \r\n       \r\n    }\r\n        \r\n    \r\n\r\n    renderRoomSales=(data)=>{\r\n        if(data){\r\n            return data.map((item)=>{\r\n                data.sort((a, b) => a.date - b.date);\r\n                var defaultdate = moment(item.date).format('MMM DD YYYY');\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust222\">{defaultdate}</td>\r\n                            {/* <td className=\"table-light table-striped adjust2\">{item.roomNumbers}</td> */}\r\n                            <td className=\"table-light table-striped adjust223 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POSAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CashAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.TransferAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.CompDebit}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POSAmount) + parseInt(item.CashAmount) + parseInt(item.TransferAmount)}thousandSeparator={true}displayType={\"text\"}/></b></td> \r\n                            \r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n           \r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log (\">>> Inside Cashdetails\", this.state)\r\n        // var defaultdate = moment(this.state.date).format('MMM DD YYYY');\r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Billinglogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <div className =\"container\">\r\n                <div>\r\n                    <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                </div>\r\n                <div>\r\n                    <center>\r\n                        <h6>{this.state.Hotelname}</h6>\r\n                        <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                        <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n                       \r\n                    </center>\r\n                </div>\r\n                <center>\r\n                    <h5>Swimming Sales Report</h5><br/>\r\n                    <div>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderDate(this.state.startdate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            <label>\r\n                                {this.renderendDate(this.state.endDate)}\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            {/* <select type =\"button\" className=\"form-select mb-2 btn btn-primary mt-3 btnwidthp printing space selectadjuster\" name=\"shift\" value ={this.state.shift} onChange={this.handleChange10}>\r\n                                <option selected value=''>Select Shift</option>\r\n                                <option value='Morning Shift'>Morning Shift</option>\r\n                                <option value='Night Shift'>Night Shift</option>\r\n                                <option value='All Day'>All Day</option>\r\n                                <option value='All Shifts'>All Shifts</option>\r\n                                \r\n                            </select> */}\r\n                            <button className=\"btn btn-primary space btnadjuster printing\" onClick={ () => {this.cleanup();this.findRoomReport()}}>Find</button>\r\n                        </span>\r\n                    </div>\r\n                                   \r\n                </center>\r\n                \r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust50\">Date</th>\r\n                            {/* <th className=\"adjust50\">Room Number</th> */}\r\n                            <th className=\"adjust50b\">Description</th>\r\n                            <th className=\"adjust50\">POS (NGN)</th>\r\n                            <th className=\"adjust50\">Cash(NGN)</th>\r\n                            <th className=\"adjust50\">Transfer(NGN)</th>\r\n                            <th className=\"adjust50\">Complimentary(NGN)</th>\r\n                            <th className=\"adjust50\">Total(NGN)</th>\r\n                            \r\n                                    \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderRoomSales(this.state.RoomSales)}\r\n                        <tr>\r\n                            {/* <td className=\"table-light table-striped adjust2\"> </td> */}\r\n                            <td className=\"table-light table-striped adjust2\"><b>Total</b></td>\r\n                            <td className=\"table-light table-striped adjust2\"><b> </b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depPOS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depCash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depTransfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depComp)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b> <NumberFormat value={this.state.depPOS + this.state.depCash + this.state.depTransfer}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                        </tr>\r\n\r\n                        \r\n                        \r\n                        \r\n                    </tbody>\r\n                </table>\r\n                \r\n                \r\n                <h6>Gross Collection:         <NumberFormat value={this.state.depPOS + this.state.depCash + this.state.depTransfer}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                \r\n                <hr/>\r\n                <center>\r\n                \r\n                    <button className=\"btn btn-danger movebtn printing\" onClick={ () => this.props.history.push('/EndOfDay') }>Close</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ () => window.print() }>Print</button>\r\n                    <button className=\"btn btn-warning movebtn printing\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>    \r\n                        \r\n                </center>       \r\n            </div>\r\n            \r\n        );\r\n    }\r\n  \r\n    componentDidMount() {\r\n        console.log(\">>> Inside CashDidMount\", this.state)\r\n\r\n        fetch(`${levyUrl}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({levyData:data})\r\n               \r\n        })\r\n        \r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n\r\n    \r\n        var start = moment(new Date()).format('MMM DD YYYY');\r\n        var end = moment(new Date()).format('MMM DD YYYY');\r\n\r\n        var findAllBar = `${getRoomSales}&&swimstartdate12=${start}&&swimendDate12=${end}`\r\n\r\n        this.setState({RoomSales:''})\r\n        fetch(`${findAllBar}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({RoomSales:data});\r\n            data.map((item) => {\r\n\r\n                var RmSales = 0;\r\n                var roomSales = RmSales + parseInt(item.CashAmount) + parseInt(item.POSAmount) + parseInt(item.TransferAmount) + parseInt(item.roomDebit)\r\n                this.setState({RoomTotal:roomSales});\r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({depPOS:allPOS});\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({depCash:allCash});\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({depTransfer:allTransfer});\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({depComp:allComp});\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({deproom:allRoom});\r\n                \r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        });\r\n        this.myTimer = setTimeout(() => {\r\n        \r\n            var AllSalesPoint = 0;\r\n            var TotalSalesPoints = AllSalesPoint + this.state.RoomTotal;\r\n            this.setState({TotalSales:TotalSalesPoints})\r\n\r\n        },1000)\r\n\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n            \r\n    \r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name === nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n        },1000);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default SwimmingReport;","import React, { Component } from 'react';\r\nimport Billinglogin from '../../Billinglogin';\r\nimport '../Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst getGuestBalances = \"https://zarvichdemo.localto.net/owingGuests\";\r\nconst userName = \"https://zarvichdemo.localto.net/billingUserInfo\";\r\nconst getHotelAddress = \"https://zarvichdemo.localto.net/hoteladdress\";\r\nconst getWorkDate = \"https://zarvichdemo.localto.net/getActive\";\r\n\r\n\r\nclass GuestBalances extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside CashConstructor\",props)\r\n        this.state = {\r\n            \r\n            loginDetails:'',\r\n            name:localStorage.getItem('userInfo'),\r\n            login:'',\r\n            Blogin:'',\r\n\r\n            shift:'',\r\n            date:'',\r\n                       \r\n            Hotelname:'',\r\n            Hoteladdress:'',\r\n            Hotelphone:'',\r\n            guestBal:''\r\n\r\n            \r\n            \r\n        }\r\n    }\r\n        \r\n\r\n    logout(){\r\n        localStorage.removeItem('userInfo');\r\n        this.setState({\r\n            login:true\r\n        })\r\n        localStorage.removeItem('shift')\r\n        \r\n    }\r\n    \r\n    \r\n    renderGuestBalances=(data)=>{\r\n        if(data){\r\n            \r\n            return data.map((item)=>{\r\n                \r\n               \r\n                \r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            <td className=\"table-light table-striped adjust2\">{item.transactionDate}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.roomNumbers}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.fname} {item.lname}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.totalDeposit}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.totalPosting}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.totalRoomRate}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.guestBalance}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            \r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    \r\n\r\n   \r\n\r\n    render() {\r\n        console.log (\">>> Inside Cashdetails\", this.state)\r\n        \r\n        if(localStorage.getItem('userInfo')==null||this.state.Blogin===false){\r\n            return(\r\n                <>\r\n                    <Billinglogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <div className =\"container\">\r\n                <div>\r\n                    <img src= \"https://i.ibb.co/pP1xN03/Orange-Groove2.png\" className=\"alignImg2\" style={{width:\"100px\", height:\"70px\"}} alt=\"companylogo\"/>\r\n                </div>\r\n                <div>\r\n                    <center>\r\n                        <h6>{this.state.Hotelname}</h6>\r\n                        <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                        <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n                       \r\n\r\n                    </center>\r\n                </div>\r\n                <center>\r\n                    <h5>Guest Balances Report  ({this.state.date})</h5><br/>\r\n                    \r\n                </center>\r\n                \r\n                <table className=\"table table-hover\">\r\n                    \r\n                    <thead className=\"table-warning\">\r\n                        <tr>\r\n                            <th className=\"adjust50\">Arrival Date</th>\r\n                            <th className=\"adjust50\">Room Number</th>\r\n                            <th className=\"adjust50\">Names</th>\r\n                            <th className=\"adjust50\">Total Deposits (NGN)</th>\r\n                            <th className=\"adjust50\">Total Dockets(NGN)</th>\r\n                            <th className=\"adjust50\">Room Charges(NGN)</th>\r\n                            <th className=\"adjust50\">Guest Balance(NGN)</th>\r\n                            \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table table-hover\">\r\n                        {this.renderGuestBalances(this.state.guestBal)}\r\n                                               \r\n                    </tbody>\r\n                </table>\r\n                                \r\n                \r\n                <hr/>\r\n                <center>\r\n                \r\n                    <button className=\"btn btn-danger movebtn printing\" onClick={ () => this.props.history.push('/EndOfDay') }>Close</button>\r\n                    <button className=\"btn btn-primary movebtn printing\" onClick={ () => window.print() }>Print</button>\r\n                    <button className=\"btn btn-warning movebtn printing\" onClick={ ()=> {this.props.history.push('/Dashboard')}}>Goto Dashboard</button>    \r\n                        \r\n                </center>       \r\n            </div>\r\n            \r\n        );\r\n    }\r\n  \r\n    componentDidMount() {\r\n        console.log(\">>> Inside CashDidMount\", this.state)\r\n        \r\n        fetch(`${getGuestBalances}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                guestBal:data\r\n            })\r\n            \r\n        })\r\n        \r\n\r\n        fetch(`${userName}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                loginDetails:data\r\n            })\r\n            \r\n        })\r\n        fetch(`${getHotelAddress}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({\r\n                    Hotelname:item.HotelName,\r\n                    Hoteladdress:item.Address,\r\n                    Hotelphone:item.Phone\r\n                \r\n                })\r\n                return 'ok'\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${getWorkDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({date:moment(item.date).format('MMM DD YYYY')})\r\n                return 'ok'\r\n            })\r\n            \r\n           \r\n        })\r\n\r\n        \r\n        this.myTimer = setTimeout(() => {\r\n\r\n            var loginInfo = this.state.loginDetails;\r\n            var nameDetails = this.state.name;\r\n            if(loginInfo.some(item => item.name===nameDetails)){\r\n                this.setState({Blogin:true})\r\n            }\r\n            else{\r\n                this.setState({Blogin:false})\r\n            }\r\n\r\n\r\n            fetch(`${getWorkDate}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                data.map((item)=>{\r\n                    this.setState({date:moment(item.date).format('MMM DD YYYY')})\r\n                    return 'ok'\r\n                })\r\n            \r\n           \r\n        })\r\n        },1000);\r\n\r\n       \r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default GuestBalances;","import React from 'react';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport RegForm from './Reception/RegForm';\r\nimport guestForm from './Reception/guestForm';\r\nimport RoomChart from './Reception/RoomChart';\r\nimport Extenddays from './Reception/Extenddays';\r\nimport RoomChange from './Reception/RoomChange';\r\nimport RestaurantApp from './Restaurant/RestaurantApp';\r\nimport LaundryApp from './Restaurant/LaundryApp';\r\nimport SalesReport from './Restaurant/SalesReport';\r\nimport RestReports from './Restaurant/RestReports';\r\nimport BarApp from './Bar/BarApp';\r\nimport GuestBarOrder from './Bar/GuestBarOrder';\r\nimport PoolBarSalesReport from './Bar/PoolBarSalesReport';\r\nimport BarReports from './Bar/BarReports';\r\nimport OtherSalesReport from './Reception/Billing/OtherSalesReport';\r\nimport PoolBarReports from './Bar/PoolBarReports';\r\nimport housekeeping from './HouseKeeping/housekeeping';\r\nimport HousekeepingMenu from './HouseKeeping/HousekeepingMenu';\r\nimport OtherPosts from './Reception/Billing/OtherPosts';\r\nimport GuestBill from './Reception/Billing/Guestbill';\r\nimport BillingMenu from './Reception/Billing/BillingMenu';\r\nimport Reservation from './Reception/Reservation';\r\nimport EditReservation from './Reception/EditReservation';\r\nimport RoomOccupancy from './Reception/ReceptionReports/RoomOccupancy';\r\nimport HouseKeepingPrint from './Reception/ReceptionReports/HouseKeepingPrint';\r\nimport RoomChangeReport from './Reception/ReceptionReports/RoomChangeReport';\r\nimport PoliceReport from './Reception/ReceptionReports/PoliceReport';\r\nimport CheckOutReport from './Reception/ReceptionReports/CheckOutReport';\r\nimport AddGroup from './Reception/AddGroup';\r\nimport CheckInReport from './Reception/ReceptionReports/CheckInReport';\r\nimport RetireBar from './Reception/Billing/RetireBar';\r\nimport PoolBar from './Bar/PoolBar';\r\nimport MobilePoolBar from './Bar/MobilePoolBar';\r\nimport Club from './Bar/Club';\r\nimport CashCollection from './Reception/Billing/CashCollection';\r\nimport DailyRoomSales from './Reception/Billing/DailyRoomSales';\r\nimport OwingGuests from './Reception/Billing/OwingGuests';\r\nimport RestaurantReport from './Reception/Billing/RestaurantReport';\r\nimport PoolBarDailySales from './Reception/Billing/PoolBarDailySales';\r\nimport ClubSalesReport from './Bar/ClubSalesReport';\r\nimport EndOfDay from './Reception/Billing/EndOfDay';\r\nimport DiscountedRoomsReport from './Reception/Billing/DiscountedRoomsReport';\r\nimport GroupBill from './Reception/Billing/GroupBill';\r\nimport ReceptionMenu from './Reception/ReceptionMenu';\r\nimport HallHire from './Reception/Billing/HallHire';\r\nimport EditHallReservation from './Reception/Billing/EditHallReservation';\r\nimport FandB from './Reception/Billing/FandB';\r\nimport FandBMenu from './Reception/Billing/FandBMenu';\r\nimport FandBRestMenu from './Reception/Billing/FandBRestMenu';\r\nimport FandBReport from './Reception/Billing/FandBReport';\r\nimport ReceptionFunctnAcc from './Reception/ReceptionFunctnAcc';\r\nimport BarSalesReport from './Reception/Billing/BarSalesReport';\r\nimport departments from './Store/departments';\r\nimport productCategories from './Store/productCategories';\r\nimport storeMenu from './Store/storeMenu';\r\nimport productVendor from './Store/productVendors';\r\nimport stockPriceManager from './Store/stockPriceManager';\r\nimport stockUnitsManager from './Store/stockUnitsManager';\r\nimport productReg from './Store/productReg';\r\nimport stockIn from './Store/stockIn';\r\nimport StoreReport from './Store/StoreReport';\r\nimport Modules from './Store/Modules';\r\nimport stockOut from './Store/stockOut';\r\nimport NewDashboard from './Admin/NewDashboard';\r\nimport OldDashboard from './OldDashboard';\r\n// import Backup from './Reception/Billing/Backup';\r\nimport RegFormSettings from './Admin/RegFormSettings';\r\nimport RoomSettings from './Admin/RoomSettings';\r\nimport Users from './Admin/Users';\r\nimport Settings from './Admin/Settings';\r\nimport ClubPortal from './Bar/ClubPortal';\r\nimport ClubDailySales from './Reception/Billing/ClubDailySales';\r\nimport LaundryReport from './Reception/Billing/LaundryReport';\r\nimport GymnasiumReport from './Reception/Billing/GymnasiumReport';\r\nimport SmoothieReport from './Reception/Billing/SmoothieReport';\r\nimport MinimartReport from './Reception/Billing/MinimartReport';\r\nimport BarbequeReport from './Reception/Billing/BarbequeReport';\r\nimport ShishReport from './Reception/Billing/ShishaReport';\r\nimport HallHireReport from './Reception/Billing/HallHireReport';\r\nimport SwimmingReport from './Reception/Billing/SwimmingReport';\r\nimport GuestBalances from './Reception/Billing/GuestBalances';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Routing = () => {\r\n    return(\r\n        <BrowserRouter>\r\n            \r\n           \r\n            <Route exact path=\"/roomchart\" component={RoomChart}/>\r\n            <Route exact path=\"/form/:reID\" component={RegForm}/>\r\n            <Route exact path=\"/guestForm/:rmID\" component={guestForm}/>\r\n            <Route exact path=\"/stay/:stID\" component={Extenddays}/>\r\n            <Route exact path=\"/change/:rcID\" component={RoomChange}/>\r\n            <Route exact path=\"/restaurant\" component={RestaurantApp}/>\r\n            <Route exact path=\"/Laundry\" component={LaundryApp}/>\r\n            <Route exact path=\"/LaundryApp\" component={LaundryApp}/>\r\n            <Route exact path=\"/RestPortal\" component={RestReports}/>\r\n            <Route exact path=\"/sales\" component={SalesReport}/>\r\n            <Route exact path=\"/OtherSalesReport\" component={OtherSalesReport}/>\r\n            <Route exact path=\"/bar\" component={BarApp}/>\r\n            <Route exact path=\"/GuestBarOrder\" component={GuestBarOrder}/>\r\n            <Route exact path=\"/PoolBar\" component={PoolBar}/>\r\n            <Route exact path=\"/MobilePoolBar\" component={MobilePoolBar}/>\r\n            <Route exact path=\"/Club\" component={Club}/>\r\n            <Route exact path=\"/BarPortal\" component={BarReports}/>\r\n            <Route exact path=\"/PoolBarPortal\" component={PoolBarReports}/>\r\n            <Route exact path=\"/PoolBarsales\" component={PoolBarSalesReport}/>\r\n            <Route exact path=\"/housekeeping\" component={housekeeping}/>\r\n            <Route exact path=\"/hskPortal\" component={HousekeepingMenu}/>\r\n            <Route exact path=\"/otherSales\" component={OtherPosts}/>\r\n            <Route exact path=\"/LaundryReport\" component={LaundryReport}/>\r\n            <Route exact path=\"/GymnasiumReport\" component={GymnasiumReport}/>\r\n            <Route exact path=\"/SmoothieReport\" component={SmoothieReport}/>\r\n            <Route exact path=\"/SwimmingReport\" component={SwimmingReport}/>\r\n            <Route exact path=\"/MinimartReport\" component={MinimartReport}/>\r\n            <Route exact path=\"/BarbequeReport\" component={BarbequeReport}/>\r\n            <Route exact path=\"/ShishaReport\" component={ShishReport}/>\r\n            <Route exact path=\"/HallHireReport\" component={HallHireReport}/>\r\n            <Route exact path=\"/guestBill/:refID\" component={GuestBill}/>\r\n            <Route exact path=\"/GroupBill\" component={GroupBill}/>\r\n            <Route exact path=\"/BillingMenu\" component={BillingMenu}/>\r\n            <Route exact path=\"/Reservation\" component={Reservation}/>\r\n            <Route exact path=\"/EditReservation\" component={EditReservation}/>\r\n            <Route exact path=\"/Occuppancy\" component={RoomOccupancy}/>\r\n            <Route exact path=\"/HouseKeepingPrint\" component={HouseKeepingPrint}/>\r\n            <Route exact path=\"/roomChangeReport\" component={RoomChangeReport}/>\r\n            <Route exact path=\"/policeReport\" component={PoliceReport}/>\r\n            <Route exact path=\"/checkOut\" component={CheckOutReport}/>\r\n            <Route exact path=\"/Group\" component={AddGroup}/>\r\n            <Route exact path=\"/DailyCheckIn\" component={CheckInReport}/>\r\n            <Route exact path=\"/RetireBar\" component={RetireBar}/>\r\n            <Route exact path=\"/CashCollection\" component={CashCollection}/>\r\n            <Route exact path=\"/EndOfDay\" component={EndOfDay}/>\r\n            <Route exact path=\"/DailyRoomSales\" component={DailyRoomSales}/>\r\n            <Route exact path=\"/OwingGuests\" component={OwingGuests}/>\r\n            <Route exact path=\"/RestaurantReport\" component={RestaurantReport}/>\r\n            <Route exact path=\"/BarSalesReport\" component={BarSalesReport}/>\r\n            <Route exact path=\"/PoolBarDailySales\" component={PoolBarDailySales}/>\r\n            <Route exact path=\"/ReservationReports\" component={ClubDailySales}/>\r\n            <Route exact path=\"/ClubSalesReport\" component={ClubSalesReport}/>\r\n            <Route exact path=\"/ClubPortal\" component={ClubPortal}/>\r\n            <Route exact path=\"/DailyDiscountList\" component={DiscountedRoomsReport}/>\r\n            <Route exact path=\"/ReceptionMenu\" component={ReceptionMenu}/>\r\n            <Route exact path=\"/HallHire\" component={HallHire}/>\r\n            <Route exact path=\"/EditHallHire\" component={EditHallReservation}/>\r\n            <Route exact path=\"/FandB\" component={FandB}/>\r\n            <Route exact path=\"/FandBMenu\" component={FandBMenu}/>\r\n            <Route exact path=\"/FandBReport\" component={FandBReport}/>\r\n            <Route exact path=\"/ReceptionFunctnAcc\" component={ReceptionFunctnAcc}/>\r\n            <Route exact path=\"/departments\" component={departments}/>\r\n            <Route exact path=\"/categories\" component={productCategories}/>\r\n            <Route exact path=\"/storeMenu\" component={storeMenu}/>\r\n            <Route exact path=\"/vendor\" component={productVendor}/>\r\n            <Route exact path=\"/priceReview\" component={stockPriceManager}/>\r\n            <Route exact path=\"/Units\" component={stockUnitsManager}/>\r\n            <Route exact path=\"/Products\" component={productReg}/>\r\n            <Route exact path=\"/Products\" component={productReg}/>\r\n            <Route exact path=\"/stockIn\" component={stockIn}/>\r\n            <Route exact path=\"/StoreReport\" component={StoreReport}/>\r\n            <Route exact path=\"/stockOut\" component={stockOut}/>\r\n            <Route exact path=\"/\" component={Modules}/>\r\n            <Route exact path=\"/Dashboard\" component={NewDashboard}/>\r\n            <Route exact path=\"/AppMenu\" component={Modules}/>\r\n            <Route exact path=\"/OldDashboard\" component={OldDashboard}/>\r\n            {/* <Route exact path=\"/Backup\" component={Backup}/> */}\r\n            <Route exact path=\"/Levy\" component={RegFormSettings}/>\r\n            <Route exact path=\"/RoomSettings\" component={RoomSettings}/>\r\n            <Route exact path=\"/Users\" component={Users}/>\r\n            <Route exact path=\"/Settings\" component={Settings}/>\r\n            <Route exact path=\"/AddMenu\" component={FandBRestMenu}/>\r\n            <Route exact path=\"/GuestBal\" component={GuestBalances}/>\r\n            \r\n            \r\n            \r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routing;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Routing from './Component/Routing';\r\nReactDOM.render(<Routing/>,document.getElementById('root'))"],"sourceRoot":""}